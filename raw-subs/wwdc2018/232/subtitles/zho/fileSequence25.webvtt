WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.433 --> 00:25:03.070 align:middle line:-2
他们的用户点击即可登录
接着出现一个表单

00:25:03.670 --> 00:25:08.475 align:middle line:-2
该表单包含一个链接
实际上就是

00:25:09.176 --> 00:25:14.181 align:middle line:-2
直接在验证插件中显示
该企业的OAuth验证网页

00:25:15.082 --> 00:25:17.284 align:middle line:-2
然后用户点击进入
其中一个字段

00:25:17.351 --> 00:25:19.386 align:middle line:-2
他们可以输入
用户名和密码

00:25:19.453 --> 00:25:25.526 align:middle line:-2
如果他们设置记住的话
可以点击密码锁图标

00:25:25.592 --> 00:25:28.962 align:middle line:-2
就会调出一个表单
包含钥匙串中

00:25:29.029 --> 00:25:30.664 align:middle line:-1
保存的所有密码

00:25:31.398 --> 00:25:34.835 align:middle line:-2
和提供的域名
相匹配的那个

00:25:34.902 --> 00:25:37.404 align:middle line:-2
将会出现在顶部
然后你就可以选择这个

00:25:38.539 --> 00:25:39.873 align:middle line:-1
我们填入的字段

00:25:40.607 --> 00:25:47.347 align:middle line:-2
一旦登录进去
你就会得到该业务的回应

00:25:47.414 --> 00:25:48.749 align:middle line:-1
证明已经登录进去了

00:25:49.883 --> 00:25:52.286 align:middle line:-2
这很强大
但其工作原理是怎样的呢？

00:25:52.953 --> 00:25:56.156 align:middle line:-2
那么现在我来介绍
正如我之前所说

00:25:56.223 --> 00:25:58.992 align:middle line:-2
起初是由CSP代理
发送验证请求

