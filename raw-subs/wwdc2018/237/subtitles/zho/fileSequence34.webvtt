WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.296 --> 00:34:00.866 A:middle
QLThumbnailProvider 子类中

00:34:00.866 --> 00:34:02.316 A:middle
重写 provideThumbnail(for request:

00:34:02.536 --> 00:34:04.326 A:middle
_ handler: )方法

00:34:05.546 --> 00:34:07.816 A:middle
我们在 2017 年的 WWDC 中的

00:34:07.816 --> 00:34:09.795 A:middle
“在 iOS 11 中打造优秀的基于文稿的 App”

00:34:09.826 --> 00:34:14.376 A:middle
讨论会中 对 Quick Look API 中的

00:34:14.376 --> 00:34:16.556 A:middle
这一部分进行了广泛的讨论

00:34:17.076 --> 00:34:18.166 A:middle
如果你想

00:34:18.166 --> 00:34:19.485 A:middle
为你的自定义文件类型

00:34:19.485 --> 00:34:21.966 A:middle
提供缩略图

00:34:21.966 --> 00:34:23.666 A:middle
我强烈建议你去看看

00:34:23.936 --> 00:34:25.485 A:middle
简而言之

00:34:25.485 --> 00:34:26.936 A:middle
你将需要利用

00:34:26.936 --> 00:34:28.166 A:middle
在 QLFileThumbnailRequest 方法中

00:34:28.275 --> 00:34:30.286 A:middle
包含的参数

00:34:31.856 --> 00:34:34.126 A:middle
文件的 URL 

00:34:34.126 --> 00:34:35.176 A:middle
缩略图的最大和最小尺寸

00:34:35.176 --> 00:34:37.295 A:middle
以及它的大小

00:34:39.596 --> 00:34:41.565 A:middle
对于每个缩略图请求

00:34:41.565 --> 00:34:43.646 A:middle
API 期望你创建一个

00:34:43.646 --> 00:34:45.315 A:middle
QLThumbnailReply 对象

00:34:45.916 --> 00:34:48.025 A:middle
这个对象必须

00:34:48.025 --> 00:34:49.886 A:middle
负责生成缩略图

00:34:50.826 --> 00:34:51.886 A:middle
你需要通过该方法的

00:34:51.886 --> 00:34:53.116 A:middle
完成处理程序

00:34:53.116 --> 00:34:57.636 A:middle
把它提供给 Quick Look

00:34:57.766 --> 00:34:59.166 A:middle
好吧 让我们来具体看看

00:34:59.166 --> 00:35:00.306 A:middle
现在是演示时间

