WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.119 --> 00:17:01.288 align:middle line:-1
因为用户当时

00:17:01.421 --> 00:17:04.358 align:middle line:-1
最能理解为何app要访问硬件

00:17:05.893 --> 00:17:08.795 align:middle line:-1
而有时app想更多控制

00:17:08.862 --> 00:17:11.131 align:middle line:-1
授权提示的时间

00:17:11.464 --> 00:17:13.901 align:middle line:-1
例如 app打开一个窗口

00:17:13.967 --> 00:17:17.069 align:middle line:-1
窗口中显示相机画面

00:17:17.137 --> 00:17:20.741 align:middle line:-1
或者相机的可视化音频

00:17:21.241 --> 00:17:23.343 align:middle line:-1
你想在用户拒绝授权时

00:17:23.410 --> 00:17:25.311 align:middle line:-1
避免显示空白窗口

00:17:26.113 --> 00:17:29.149 align:middle line:-1
这时最好在窗口打开前就提示

00:17:29.883 --> 00:17:32.953 align:middle line:-2
所以AVFoundation
提供该API

00:17:33.253 --> 00:17:35.822 align:middle line:-1
你能提前获取授权

00:17:38.058 --> 00:17:41.228 align:middle line:-1
我想强调的是 该API是异步的

00:17:41.361 --> 00:17:42.696 align:middle line:-1
它用一个回调函数

00:17:43.263 --> 00:17:48.235 align:middle line:-2
返回一个app
是否有权访问的布尔值

00:17:48.302 --> 00:17:50.938 align:middle line:-1
因此和刚才所见的枚举值有些许不同

00:17:52.139 --> 00:17:55.075 align:middle line:-1
当app访问接口时

00:17:55.142 --> 00:17:56.376 align:middle line:-1
该回调函数能立即调用

00:17:56.577 --> 00:18:00.981 align:middle line:-1
例如 如果用户之前授权或拒绝访问

