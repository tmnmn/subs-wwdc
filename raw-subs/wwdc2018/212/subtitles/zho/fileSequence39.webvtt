WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:05.612 --> 00:39:08.882 align:middle line:-2
MapKit JS
为你提供三种服务

00:39:09.149 --> 00:39:11.752 align:middle line:-1
地理编码 搜索和路线

00:39:12.619 --> 00:39:14.755 align:middle line:-1
我将逐步介绍每一个例子

00:39:14.821 --> 00:39:17.257 align:middle line:-2
但在此之前
我会告诉你他们有什么共同之处

00:39:18.759 --> 00:39:20.627 align:middle line:-1
你可以以类似的方式使用这些服务

00:39:20.861 --> 00:39:22.029 align:middle line:-1
它包括四个简单的步骤

00:39:22.462 --> 00:39:24.498 align:middle line:-1
首先创建服务对象

00:39:25.065 --> 00:39:27.901 align:middle line:-1
然后指定请求参数和选项

00:39:28.368 --> 00:39:29.670 align:middle line:-1
然后你发出请求

00:39:30.137 --> 00:39:32.372 align:middle line:-1
最后通过回调函数

00:39:32.439 --> 00:39:33.807 align:middle line:-1
处理异步响应

00:39:34.608 --> 00:39:36.577 align:middle line:-1
首先我们来谈谈地理编码器

00:39:36.977 --> 00:39:38.478 align:middle line:-1
（地理编码）

00:39:38.545 --> 00:39:40.480 align:middle line:-2
下面是一个如何使用
地理编码器的例子

00:39:40.547 --> 00:39:42.316 align:middle line:-1
它包含两个方法

00:39:42.716 --> 00:39:44.251 align:middle line:-2
lookup和
reverseLookup

00:39:44.585 --> 00:39:47.120 align:middle line:-1
如果你有一个地址或位置

00:39:47.187 --> 00:39:48.889 align:middle line:-1
而你想找到坐标

00:39:48.956 --> 00:39:49.990 align:middle line:-1
或者反过来

00:39:50.057 --> 00:39:52.459 align:middle line:-2
你有一个坐标
并且你想要找到该地址

00:39:53.994 --> 00:39:56.263 align:middle line:-1
第一步是创建你的对象

00:39:57.664 --> 00:40:01.301 align:middle line:-2
你可以向其提供一个可选的
getsUserLocation参数

