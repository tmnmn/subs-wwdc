WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.393 --> 00:11:02.963 align:middle line:-1
在这里我们可以输入任何函数

00:11:03.030 --> 00:11:05.365 align:middle line:-2
或方法名称
如我们在这里用到的

00:11:06.333 --> 00:11:07.701 align:middle line:-1
UILabel setText

00:11:08.302 --> 00:11:10.404 align:middle line:-1
且我们用Objective-C格式输入

00:11:10.470 --> 00:11:12.806 align:middle line:-2
因为UIKit是一个
Objective-C框架

00:11:13.507 --> 00:11:17.277 align:middle line:-1
需要指出的是断点下面

00:11:17.344 --> 00:11:19.213 align:middle line:-1
有一个子行

00:11:19.346 --> 00:11:21.815 align:middle line:-2
这是来自调试器的反馈
它告诉我们

00:11:21.882 --> 00:11:23.617 align:middle line:-2
它能够在UIKit Core中的
一个位置

00:11:23.750 --> 00:11:25.552 align:middle line:-1
解析这个断点

00:11:26.086 --> 00:11:28.121 align:middle line:-1
某些符号可能会解析到多个位置

00:11:28.188 --> 00:11:29.489 align:middle line:-1
它们都会显示在这里

00:11:29.556 --> 00:11:31.258 align:middle line:-1
如果你没有看到子条目

00:11:31.425 --> 00:11:34.761 align:middle line:-1
这表明调试器无法解析你的断点

00:11:34.862 --> 00:11:36.129 align:middle line:-1
因此它永远不会命中

00:11:36.196 --> 00:11:37.431 align:middle line:-1
准备好这些以后

00:11:37.764 --> 00:11:39.666 align:middle line:-1
我再次点击宇航员

00:11:40.367 --> 00:11:43.570 align:middle line:-2
现在可以看到 我们在
UILabel setText中命中了该断点

00:11:43.804 --> 00:11:46.607 align:middle line:-1
然而我们没有UIKit的源代码

00:11:46.773 --> 00:11:48.208 align:middle line:-1
所以我们看到的是汇编代码

00:11:48.509 --> 00:11:50.010 align:middle line:-1
但没有必要留在黑暗中

00:11:50.077 --> 00:11:52.513 align:middle line:-1
即使你处于一个框架的汇编代码中

00:11:52.880 --> 00:11:54.281 align:middle line:-1
并且是系统中的的一个框架

00:11:54.348 --> 00:11:57.150 align:middle line:-1
我们可以检查传入函数的参数

00:11:57.684 --> 00:11:59.987 align:middle line:-1
你只需要知道该架构的调用约定

