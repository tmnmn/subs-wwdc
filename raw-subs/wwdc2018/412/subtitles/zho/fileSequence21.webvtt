WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.159 --> 00:21:00.928 align:middle line:-1
这里我们看到对这个

00:21:01.228 --> 00:21:02.529 align:middle line:-1
GamePlay对象的调试描述

00:21:02.963 --> 00:21:04.865 align:middle line:-1
这里有一个自定义的调试描述

00:21:05.232 --> 00:21:07.601 align:middle line:-2
所以值得指出的是
po命令能够获得

00:21:07.668 --> 00:21:09.536 align:middle line:-1
对象的编程调试描述

00:21:09.937 --> 00:21:11.171 align:middle line:-1
而且你可以自定义该描述

00:21:11.738 --> 00:21:13.240 align:middle line:-2
来看看我们对GamePlay
做了什么

00:21:13.307 --> 00:21:14.641 align:middle line:-1
如果我切换到源代码

00:21:14.975 --> 00:21:15.976 align:middle line:-1
并滚动到底部

00:21:16.476 --> 00:21:19.379 align:middle line:-2
你可以看到我们添加了一个扩展
以使GamePlay符合

00:21:19.446 --> 00:21:21.582 align:middle line:-1
CustomDebugStringConvertible约束

00:21:22.149 --> 00:21:24.751 align:middle line:-1
该约束要求你实现

00:21:24.885 --> 00:21:27.588 align:middle line:-2
一个名为debugDescription的属性
并返回一个字符串

00:21:27.855 --> 00:21:30.224 align:middle line:-2
你可以返回你喜欢的
任何用于调试的字符串

00:21:30.457 --> 00:21:33.327 align:middle line:-1
来表示这个对象

00:21:34.027 --> 00:21:36.864 align:middle line:-2
你也可以通过实现
debugDescription

00:21:36.930 --> 00:21:39.366 align:middle line:-2
来对Objective-C对象
执行相同的操作

00:21:39.733 --> 00:21:41.835 align:middle line:-2
将其与命令
p GamePlay对比

00:21:42.936 --> 00:21:44.137 align:middle line:-1
p是另一种…

00:21:44.705 --> 00:21:46.773 align:middle line:-1
或LLDB命令

00:21:47.107 --> 00:21:50.644 align:middle line:-2
它使用LLDB的内置格式化程序
来表示对象

00:21:50.878 --> 00:21:53.080 align:middle line:-2
因此这里我们看到了
同一个对象的两个表示

00:21:53.547 --> 00:21:56.683 align:middle line:-2
并且默认格式化程序向你显示
完整限定类型名称

00:21:56.750 --> 00:21:59.920 align:middle line:-2
内存地址
以及所有属性及其值的列表

