WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.680 --> 00:33:01.348 align:middle line:-1
非常感谢你们与我结对编程

00:33:01.415 --> 00:33:03.116 align:middle line:-2
希望你们喜欢它
并且可以在调试中

00:33:03.183 --> 00:33:04.518 align:middle line:-1
使用这些技巧

00:33:15.729 --> 00:33:17.264 align:middle line:-1
我想快速回顾一下

00:33:17.331 --> 00:33:19.867 align:middle line:-1
刚才谈到的所有的

00:33:20.767 --> 00:33:22.436 align:middle line:-1
功能和技巧

00:33:23.003 --> 00:33:25.739 align:middle line:-2
首先 我们看到了
如何使用Xcode行为

00:33:25.806 --> 00:33:27.407 align:middle line:-1
来调出一个专门调试选项卡

00:33:27.474 --> 00:33:30.410 align:middle line:-2
以及如何使用LLDB表达式
修改程序状态

00:33:31.011 --> 00:33:33.881 align:middle line:-2
我们可以在调试器命令中
使用自动继续断点

00:33:33.947 --> 00:33:35.182 align:middle line:-1
来实时注入代码

00:33:35.616 --> 00:33:38.418 align:middle line:-2
我们还可以使用命令
breakpoint set --one-shot

00:33:38.485 --> 00:33:40.087 align:middle line:-1
创建依赖断点配置

00:33:40.287 --> 00:33:42.623 align:middle line:-2
以作为设置另一个断点的
调试器命令行为

00:33:43.457 --> 00:33:45.025 align:middle line:-1
即使在汇编帧中

00:33:45.092 --> 00:33:47.494 align:middle line:-2
我们可以很容易使用
po $arg1 $arg2等

00:33:47.561 --> 00:33:49.863 align:middle line:-1
来检查函数的参数

00:33:50.230 --> 00:33:52.065 align:middle line:-1
我们也可以通过拖动指令指针

00:33:52.266 --> 00:33:55.469 align:middle line:-2
或使用命令thread jump
来跳过代码行

00:33:56.270 --> 00:33:57.938 align:middle line:-2
我们可以在使用观察点的变量
被修改时

00:33:58.005 --> 00:33:59.973 align:middle line:-1
请求调试器暂停

