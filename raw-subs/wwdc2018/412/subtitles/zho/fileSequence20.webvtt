WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.633 --> 00:20:01.568 align:middle line:-1
我们可以通过点击加号按钮来

00:20:01.969 --> 00:20:03.737 align:middle line:-1
添加另一个命令操作

00:20:04.838 --> 00:20:08.208 align:middle line:-2
expression
jumpAstronaut(animated:false)

00:20:08.876 --> 00:20:10.244 align:middle line:-1
然后将其设置为自动继续

00:20:10.644 --> 00:20:14.014 align:middle line:-1
我们这里有一个断点

00:20:14.081 --> 00:20:17.251 align:middle line:-1
当运行到此行 但在执行此行之前

00:20:17.317 --> 00:20:18.752 align:middle line:-1
断点将被触发

00:20:19.052 --> 00:20:21.688 align:middle line:-1
它将执行跳过该行的命令

00:20:21.889 --> 00:20:24.124 align:middle line:-1
然后使用表达式来调用

00:20:24.491 --> 00:20:26.560 align:middle line:-1
我们想要调用的函数

00:20:27.294 --> 00:20:29.329 align:middle line:-1
现在 如果我们点击宇航员

00:20:29.696 --> 00:20:31.832 align:middle line:-1
我们可以快速推进游戏进展

00:20:31.899 --> 00:20:34.501 align:middle line:-2
并跳过所有动画
从而轻松地重现我们的漏洞

00:20:35.302 --> 00:20:38.872 align:middle line:-2
所以正如我所说的那样
游戏本应该在10次尝试后结束

00:20:38.939 --> 00:20:40.307 align:middle line:-1
我们已经远远超过了它

00:20:40.641 --> 00:20:43.243 align:middle line:-1
让我们来看看游戏状态

00:20:44.144 --> 00:20:46.380 align:middle line:-1
它们都被保存在上面这个属性中

00:20:47.014 --> 00:20:47.981 align:middle line:-1
即gamePlay

00:20:48.048 --> 00:20:50.217 align:middle line:-1
所以我会在该属性上设置一个断点

00:20:50.684 --> 00:20:52.019 align:middle line:-1
并执行一次新的跳跃

00:20:52.252 --> 00:20:54.922 align:middle line:-2
现在我们在对该属性的
下一个引用处暂停

00:20:55.556 --> 00:20:58.759 align:middle line:-2
我将使用po命令来查看
该对象的当前状态

00:20:59.159 --> 00:21:00.928 align:middle line:-1
这里我们看到对这个

