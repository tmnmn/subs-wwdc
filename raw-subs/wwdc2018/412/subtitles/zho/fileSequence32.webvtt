WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:00.254 --> 00:32:01.889 align:middle line:-1
nudge提供的信息

00:32:01.955 --> 00:32:04.124 align:middle line:-1
例如应用于该视图的相对于

00:32:04.191 --> 00:32:05.759 align:middle line:-1
其原始中心点的总偏移量

00:32:06.093 --> 00:32:07.194 align:middle line:-1
然后是你的框架值

00:32:07.394 --> 00:32:11.198 align:middle line:-2
我可以回到代码并修改布局代码
或我的自动布局约束

00:32:11.398 --> 00:32:14.067 align:middle line:-2
我轻松地为自己的场景
构建了一种新的布局

00:32:15.969 --> 00:32:17.437 align:middle line:-1
最后要做的事情是

00:32:17.938 --> 00:32:21.175 align:middle line:-2
首先别忘了勾掉该漏洞
这非常重要

00:32:22.509 --> 00:32:25.379 align:middle line:-2
然后在重新启动或编译运行之前
要做的最后一件事

00:32:25.445 --> 00:32:29.116 align:middle line:-1
是禁用或删除任何

00:32:29.183 --> 00:32:30.217 align:middle line:-1
注入表达式的断点

00:32:30.284 --> 00:32:32.386 align:middle line:-1
因为你不希望这些代码被执行两次

00:32:32.986 --> 00:32:35.355 align:middle line:-2
选择它们或它们所在的组
并点击删除

00:32:35.455 --> 00:32:36.790 align:middle line:-1
是删除这些内容的快速方法

00:32:37.558 --> 00:32:39.726 align:middle line:-1
这些都是一些调试技巧

00:32:39.793 --> 00:32:42.196 align:middle line:-2
我喜欢用它们来增强
我的调试工作流程

00:32:43.197 --> 00:32:48.068 align:middle line:-2
请注意我们如何诊断和修复
所有四个错误

00:32:48.135 --> 00:32:50.604 align:middle line:-1
而无需重新编译或重新运行

00:32:51.271 --> 00:32:54.875 align:middle line:-2
这可以节省大量的时间
特别是对于复杂的项目

00:32:55.142 --> 00:32:59.246 align:middle line:-2
并且在尝试解决难以重现的漏洞时
可能至关重要

00:32:59.680 --> 00:33:01.348 align:middle line:-1
非常感谢你们与我结对编程

