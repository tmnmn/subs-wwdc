WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:55.949 --> 00:27:00.087 align:middle line:0
实现这点的方法是
使用expression命令和选项参数-l objc

00:27:00.721 --> 00:27:02.723 align:middle line:0
这表明你即将
给expression命令

00:27:02.789 --> 00:27:05.092 align:middle line:0
一段Objective-C代码
即使你处于Swift框架中

00:27:06.793 --> 00:27:08.061 align:middle line:0
我们再加上-O

00:27:08.128 --> 00:27:09.863 align:middle line:0
来告诉它我们也想要调试描述

00:27:09.930 --> 00:27:11.298 align:middle line:0
就像用po一样

00:27:11.598 --> 00:27:14.134 align:middle line:0
再加上--以表示没有更多选项

00:27:14.902 --> 00:27:17.004 align:middle line:0
该行的其余部分仅仅是
原始表达式输入

00:27:17.471 --> 00:27:20.841 align:middle line:0
所以我们应该能够给它
这个方法调用的

00:27:20.908 --> 00:27:22.042 align:middle line:0
Objective-C格式

00:27:22.809 --> 00:27:24.244 align:middle line:0
不幸的是 这并不奏效

00:27:24.311 --> 00:27:25.746 align:middle line:0
其原因是这个表达式

00:27:25.812 --> 00:27:29.650 align:middle line:-2
将为Objective-C
编译创建一个临时表达式上下文

00:27:29.883 --> 00:27:32.186 align:middle line:-2
并且它不会继承
Swift框架中的所有变量

00:27:32.519 --> 00:27:33.854 align:middle line:-1
尽管如此 还是有办法的

00:27:34.421 --> 00:27:36.089 align:middle line:0
如果我们把self.view
放到反引号中

00:27:36.390 --> 00:27:38.025 align:middle line:0
反引号就像预处理器一样

00:27:38.392 --> 00:27:41.228 align:middle line:0
它表示先评估其在当前帧中的内容

00:27:41.295 --> 00:27:43.397 align:middle line:0
并插入结果
然后我们可以评估其余部分

00:27:43.730 --> 00:27:45.299 align:middle line:0
现在我们可以得到递归描述了

00:27:52.005 --> 00:27:53.974 align:middle line:-1
现在我们就可以看到所有视图的

00:27:54.041 --> 00:27:54.942 align:middle line:0
调试描述

00:27:55.342 --> 00:27:57.077 align:middle line:0
我对ScoreboardView
很感兴趣

00:27:57.144 --> 00:27:58.378 align:middle line:0
它承载着这些标签

00:27:58.512 --> 00:28:00.347 align:middle line:0
我们可以找到其中之一的内存地址

