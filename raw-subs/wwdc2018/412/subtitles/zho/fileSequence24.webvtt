WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.940 --> 00:24:02.776 align:middle line:-2
在第十次我们看到它确实检测到
游戏结束状态

00:24:02.843 --> 00:24:04.378 align:middle line:-1
看起来这正是我们需要的修复

00:24:12.152 --> 00:24:14.254 align:middle line:-1
别忘了将更改应用于你的代码

00:24:14.321 --> 00:24:17.357 align:middle line:-2
我将代码复制出来
拖动断点以删除它

00:24:17.691 --> 00:24:19.593 align:middle line:-2
然后将代码粘贴进去
看起来不错

00:24:20.327 --> 00:24:21.461 align:middle line:-1
我们来勾掉这一项

00:24:21.528 --> 00:24:23.363 align:middle line:-1
这个部分我们只剩下一个漏洞了

00:24:23.897 --> 00:24:26.266 align:middle line:-2
即Attempts
和Score标签的布局

00:24:26.633 --> 00:24:30.137 align:middle line:-2
现在这个app的布局工作
被留给了工程师们

00:24:30.404 --> 00:24:31.805 align:middle line:-1
就像优秀的工程师一样

00:24:32.105 --> 00:24:35.108 align:middle line:-2
我们找到了一个好位置
将它们填到顶角

00:24:35.509 --> 00:24:38.579 align:middle line:-1
但是团队认为这不太合适

00:24:38.779 --> 00:24:40.447 align:middle line:-2
他们将app退回
并要求我们再试一次

00:24:40.848 --> 00:24:44.351 align:middle line:-2
所以我想模拟出
这些分数标签的新布局

00:24:44.651 --> 00:24:47.321 align:middle line:-2
现在我可以打开我的图形app
并开始建模了

00:24:47.387 --> 00:24:49.423 align:middle line:-2
但我是一名工程师
我喜欢用代码建模

00:24:49.656 --> 00:24:50.858 align:middle line:-1
我其实是调试工程师

00:24:50.924 --> 00:24:54.027 align:middle line:-2
所以我喜欢用实时app
和真实数据在调试器中建模

00:24:54.094 --> 00:24:55.262 align:middle line:-1
我们看看如何做到这点

00:24:58.732 --> 00:25:02.703 align:middle line:-2
让我们导航回去
并在jump函数中设置断点

