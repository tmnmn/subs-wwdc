WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:55.462 --> 00:20:00.167 align:start position:27% line:-2
変更を加えると
必要な部分だけ更新されます

00:20:01.401 --> 00:20:04.004 align:start position:23% line:-1
また コードにも影響を与えます

00:20:04.671 --> 00:20:06.607 align:start position:32% line:-1
時々 目にするのは―

00:20:06.707 --> 00:20:12.079 align:start position:27% line:-2
何とか制約を作らないように
苦心する人々です

00:20:12.179 --> 00:20:15.816 align:start position:34% line:-2
面倒な作業になる
印象があるからです

00:20:16.617 --> 00:20:18.318 align:start position:34% line:-1
確かにそうですが―

00:20:18.418 --> 00:20:23.223 align:start position:27% line:-2
それは 問題と密接に関わる
制約を作る時だけです

00:20:23.390 --> 00:20:27.928 align:start position:27% line:-2
それを避ければ
多くのメリットを得られます

00:20:28.028 --> 00:20:32.900 align:start position:27% line:-2
人は時々 複雑な測定をして
足し算をして―

00:20:33.000 --> 00:20:36.370 align:start position:34% line:-2
情報を抜き出したり
戻したりします

00:20:36.470 --> 00:20:38.272 align:start position:34% line:-1
それが大変なのです

00:20:38.372 --> 00:20:41.608 align:start position:36% line:-2
制約で表現すれば
よりシンプルです

00:20:42.509 --> 00:20:44.711 align:start position:34% line:-1
一方 逆もあります

00:20:45.078 --> 00:20:47.581 align:start position:29% line:-1
時々 このような階層を―

00:20:47.681 --> 00:20:50.417 align:start position:30% line:-1
目にすることがあります

00:20:50.517 --> 00:20:53.787 align:start position:27% line:-1
多くの制約と優先度があって

00:20:53.887 --> 00:20:55.556 align:start position:34% line:-1
全容が分かりません

00:20:55.656 --> 00:20:57.357 align:start position:43% line:-1
これは―

00:20:57.458 --> 00:21:00.994 align:start position:29% line:-1
まさにそういった事例です

