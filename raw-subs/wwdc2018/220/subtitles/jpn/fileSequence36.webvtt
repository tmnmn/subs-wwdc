WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.727 --> 00:36:04.131 align:start position:25% line:-2
UIViewのサブクラス内で
起こることと同様です

00:36:04.231 --> 00:36:09.570 align:start position:21% line:-2
通常 スピードや正確性向上のため
オーバーライドされますが

00:36:09.670 --> 00:36:11.438 align:start position:34% line:-1
この場合は違います

00:36:12.005 --> 00:36:14.308 align:start position:29% line:-1
しかし オーバーライドが

00:36:14.408 --> 00:36:16.944 align:start position:30% line:-2
パフォーマンス向上に
貢献する場合があります

00:36:18.112 --> 00:36:20.214 align:start position:32% line:-2
テキスト測定は
時々工数がかかります

00:36:21.081 --> 00:36:23.984 align:start position:23% line:-1
でも このアプリケーションでは

00:36:24.084 --> 00:36:27.688 align:start position:21% line:-1
それほど時間がかかりませんでした

00:36:27.788 --> 00:36:31.458 align:start position:30% line:-2
だから その部分を
いじる必要はありません

00:36:31.558 --> 00:36:33.460 align:start position:25% line:-1
しかし テキストが多い場合は

00:36:33.560 --> 00:36:37.164 align:start position:23% line:-2
UILabelのテキスト測定に
時間がかかります

00:36:37.331 --> 00:36:40.200 align:start position:23% line:-1
それは 他のツールでも同じです

00:36:40.300 --> 00:36:43.871 align:start position:30% line:-2
何か情報があれば
役に立つかもしれません

00:36:45.038 --> 00:36:49.376 align:start position:30% line:-2
もし 計測しなくても
必要なサイズが分かれば

00:36:49.476 --> 00:36:52.179 align:start position:32% line:-2
そのサイズと
固有の寸法を返せます

00:36:52.646 --> 00:36:56.483 align:start position:25% line:-2
あるいは
ビューを画面に置こうとする時

00:36:56.583 --> 00:37:00.754 align:start position:30% line:-2
そのテキストのサイズを
制約が完全に定義します

