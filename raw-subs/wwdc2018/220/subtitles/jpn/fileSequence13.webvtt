WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.579 --> 00:13:02.816 align:start position:25% line:-2
一番興味深いのは
テキストフィールドの間隔です

00:13:03.016 --> 00:13:08.222 align:start position:27% line:-2
２つの間隔は 制約の定義と
とても似ています

00:13:08.322 --> 00:13:12.025 align:start position:30% line:-2
でも 変数なので
制約よりローレベルです

00:13:13.293 --> 00:13:14.895 align:start position:39% line:-1
次に進みます

00:13:15.329 --> 00:13:18.699 align:start position:30% line:-2
それぞれの等式が
エンジンに加えられます

00:13:19.500 --> 00:13:22.069 align:start position:29% line:-1
プロセスに沿って進みます

00:13:22.169 --> 00:13:25.506 align:start position:27% line:-2
目的はもちろん
パフォーマンス向上ですが―

00:13:26.206 --> 00:13:29.243 align:start position:27% line:-1
それで何が起こるでしょうか

00:13:29.743 --> 00:13:32.813 align:start position:27% line:-2
エンジンは これらの変数を
解こうとしています

00:13:33.180 --> 00:13:36.483 align:start position:30% line:-1
代数でやっていたことと

00:13:36.583 --> 00:13:38.385 align:start position:39% line:-1
ほぼ同じです

00:13:38.619 --> 00:13:40.287 align:start position:34% line:-1
それに従いましょう

00:13:40.387 --> 00:13:45.025 align:start position:14% line:-2
最初のフィールドを
“text１.minX = ８”とします

00:13:45.993 --> 00:13:48.195 align:start position:12% line:-1
幅は“text１.width = 100”

00:13:48.362 --> 00:13:50.364 align:start position:34% line:-1
次のフィールドです

00:13:50.497 --> 00:13:54.902 align:start position:0% line:-2
“text２.minX =
text１.minX + text１.width + 20”

00:13:55.035 --> 00:14:00.073 align:start position:30% line:-2
これらの変数を
代数でどう解きますか？

