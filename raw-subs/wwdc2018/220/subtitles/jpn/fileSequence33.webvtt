WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.113 --> 00:33:01.115 align:start position:29% line:-1
常に制約の配列を扱います

00:33:01.782 --> 00:33:02.916 align:start position:39% line:-1
よい方法です

00:33:03.951 --> 00:33:06.086 align:start position:34% line:-1
メリットを教えます

00:33:06.186 --> 00:33:10.023 align:start position:25% line:-1
このように制約を分析していて

00:33:10.124 --> 00:33:14.261 align:start position:29% line:-2
ユーザの前に画像を
ライブで出したいとします

00:33:14.728 --> 00:33:18.432 align:start position:7% line:-2
その場合
“imageConstraints”を有効にして

00:33:18.532 --> 00:33:21.401 align:start position:27% line:-2
アニメーションブロック内に
Layoutを呼び出せます

00:33:21.502 --> 00:33:23.670 align:start position:23% line:-1
するとアニメーションが動きます

00:33:24.037 --> 00:33:27.508 align:start position:29% line:-2
制約をすべて無効にして
それを戻しながら試せば―

00:33:28.542 --> 00:33:31.078 align:start position:34% line:-1
とても面白そうです

00:33:31.778 --> 00:33:37.050 align:start position:23% line:-2
さて デバッグが終わり
制約のグループを改修しています

00:33:37.151 --> 00:33:41.021 align:start position:27% line:-1
これは 先ほど見た画面です

00:33:41.622 --> 00:33:42.790 align:start position:36% line:-1
スクロールします

00:33:43.590 --> 00:33:44.258 align:start position:41% line:-1
ダメですね

00:33:44.358 --> 00:33:47.361 align:start position:25% line:-1
これが デバッグ後の画面です

00:33:48.862 --> 00:33:50.464 align:start position:34% line:-1
とてもスムーズです

00:33:51.432 --> 00:33:52.099 align:start position:41% line:-1
ありがとう

00:33:52.399 --> 00:33:53.967 align:start position:43% line:-1
(拍手)

00:33:54.068 --> 00:33:55.302 align:start position:38% line:-1
他にもあります

00:33:56.136 --> 00:33:58.272 align:start position:23% line:-1
これは iOS 11の映像です

00:33:58.739 --> 00:34:03.377 align:start position:27% line:-2
iOS 12の改良の影響は
受けていません

