WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:57.458 --> 00:21:00.994 align:start position:29% line:-1
まさにそういった事例です

00:21:01.094 --> 00:21:05.165 align:start position:29% line:-2
２つの完全に切り離された
レイアウトです

00:21:05.265 --> 00:21:09.603 align:start position:21% line:-1
それらを１セットの制約にまとめて

00:21:09.703 --> 00:21:11.672 align:start position:29% line:-1
統合しようと考えています

00:21:11.772 --> 00:21:14.074 align:start position:34% line:-1
でも懸念があります

00:21:14.174 --> 00:21:16.043 align:start position:39% line:-1
２つの間に―

00:21:16.510 --> 00:21:21.348 align:start position:25% line:-2
関係性があるかのような
ニセの依存を作り出しています

00:21:21.448 --> 00:21:25.018 align:start position:32% line:-2
それに気付けなければ
デバッグも不可能です

00:21:26.153 --> 00:21:29.990 align:start position:27% line:-1
全体的なアドバイスとしては

00:21:30.124 --> 00:21:32.593 align:start position:27% line:-1
問題をモデル化することです

00:21:32.693 --> 00:21:37.798 align:start position:21% line:-2
後ほど カシアがレイアウトの
切り替えについて詳しく説明します

00:21:38.131 --> 00:21:41.969 align:start position:29% line:-2
問題のモデル化は
一般的なアドバイスとして

00:21:42.069 --> 00:21:45.505 align:start position:23% line:-1
パフォーマンス向上に役立ちます

00:21:47.207 --> 00:21:48.575 align:start position:45% line:-1
さて―

00:21:49.576 --> 00:21:51.011 align:start position:38% line:-1
以上が要点です

00:21:51.111 --> 00:21:55.516 align:start position:25% line:-2
でも 私たちはレイアウトの
メンタルモデルを作りたいので

00:21:55.616 --> 00:21:59.720 align:start position:29% line:-2
主要な特性について
すべて触れておきましょう

