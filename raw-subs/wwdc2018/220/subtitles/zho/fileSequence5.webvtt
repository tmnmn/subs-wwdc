WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.656 --> 00:05:01.436 A:middle
这个示例是我们即将探讨的

00:05:01.436 --> 00:05:04.516 A:middle
要产生这个布局 显然非常简单

00:05:05.106 --> 00:05:06.976 A:middle
我想你们应该经常

00:05:06.976 --> 00:05:08.046 A:middle
在 Interface Builder 中创建它

00:05:08.806 --> 00:05:09.756 A:middle
这个做法很聪明

00:05:09.876 --> 00:05:11.716 A:middle
因为这样就能够

00:05:11.716 --> 00:05:12.786 A:middle
完全避免

00:05:12.786 --> 00:05:13.896 A:middle
我们可能遇到的

00:05:13.896 --> 00:05:15.796 A:middle
性能问题

00:05:16.076 --> 00:05:18.976 A:middle
那么假设我们没有这么做

00:05:19.406 --> 00:05:21.886 A:middle
假设我们像这样创建布局

00:05:24.066 --> 00:05:25.216 A:middle
让我们先大致看一看

00:05:25.216 --> 00:05:26.406 A:middle
再进行分析

00:05:26.406 --> 00:05:27.796 A:middle
首先看一看 这些代码是做什么的

00:05:28.826 --> 00:05:31.316 A:middle
首先我们覆写

00:05:31.316 --> 00:05:33.226 A:middle
UIView 中的 updateConstraints 方法

00:05:33.866 --> 00:05:34.976 A:middle
不管它是做什么的

00:05:35.366 --> 00:05:37.426 A:middle
后面会谈到它

00:05:37.916 --> 00:05:42.476 A:middle
接着 我们有一个成员变量叫 myConstraints

00:05:42.716 --> 00:05:45.446 A:middle
我们提取这个

00:05:45.446 --> 00:05:46.436 A:middle
变量中的所有内容

00:05:46.436 --> 00:05:47.836 A:middle
并停用所有的约束

00:05:48.586 --> 00:05:49.516 A:middle
我们然后创建

00:05:49.516 --> 00:05:51.176 A:middle
约束 这些约束 

00:05:51.176 --> 00:05:52.416 A:middle
实现我们刚刚看到的布局

00:05:53.006 --> 00:05:54.106 A:middle
这非常直白

00:05:54.106 --> 00:05:55.546 A:middle
使用的是视觉格式语言

00:05:56.276 --> 00:05:57.276 A:middle
然后我们执行这些 

00:05:57.276 --> 00:05:58.776 A:middle
约束 安装它们

00:05:59.236 --> 00:06:00.296 A:middle
最后我们调用

