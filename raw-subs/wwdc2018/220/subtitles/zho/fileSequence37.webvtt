WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:00.046 --> 00:37:00.846 A:middle
尺寸如何

00:37:00.946 --> 00:37:02.306 A:middle
举个例子 约束

00:37:02.306 --> 00:37:03.156 A:middle
总是会让尺寸

00:37:03.156 --> 00:37:04.706 A:middle
略大于你的文本量

00:37:05.546 --> 00:37:06.586 A:middle
然后你就可以直接不返回

00:37:06.586 --> 00:37:07.996 A:middle
任何固有内容尺寸

00:37:07.996 --> 00:37:10.446 A:middle
中对于宽度和高度的度量

00:37:11.146 --> 00:37:12.206 A:middle
这样做就是告诉

00:37:12.206 --> 00:37:13.486 A:middle
上一层级 “嘿我已经知道了

00:37:13.486 --> 00:37:15.846 A:middle
我的尺寸 不需要再进行文本测量了”

00:37:16.826 --> 00:37:18.226 A:middle
很明显 这只在

00:37:18.226 --> 00:37:19.096 A:middle
你不需要自己进行

00:37:19.096 --> 00:37:21.826 A:middle
测量时才适用 但是它可以

00:37:21.826 --> 00:37:23.646 A:middle
帮助一些 App 提高性能

00:37:23.646 --> 00:37:24.886 A:middle
因此我希望你们了解

00:37:24.886 --> 00:37:26.016 A:middle
这个小技巧

00:37:26.766 --> 00:37:27.766 A:middle
我们不能只谈

00:37:27.766 --> 00:37:29.116 A:middle
固有内容尺寸而不谈

00:37:29.116 --> 00:37:30.566 A:middle
系统布局适应尺寸

00:37:30.566 --> 00:37:33.326 A:middle
因为人们

00:37:33.326 --> 00:37:35.666 A:middle
往往混淆这两个概念

00:37:35.666 --> 00:37:37.846 A:middle
尽管它们几乎是相反的

00:37:37.846 --> 00:37:41.456 A:middle
很可惜固有内容尺寸是

00:37:41.456 --> 00:37:42.446 A:middle
你向引擎传输

00:37:42.446 --> 00:37:44.226 A:middle
需要添加的尺寸信息的方式

00:37:45.206 --> 00:37:46.796 A:middle
系统布局配合尺寸是

00:37:47.156 --> 00:37:48.206 A:middle
你将尺寸

00:37:48.206 --> 00:37:49.826 A:middle
信息从引擎中提取出来的方式

00:37:50.356 --> 00:37:52.486 A:middle
事实上它们几乎是相反的

00:37:52.486 --> 00:37:54.696 A:middle
这用于一些混合布局

00:37:54.696 --> 00:37:56.086 A:middle
出于有一些原因

00:37:56.086 --> 00:37:57.136 A:middle
导致你需要

00:37:57.136 --> 00:37:58.816 A:middle
从一个使用 Auto Layout

00:37:58.816 --> 00:38:00.576 A:middle
管理其子视图的视图中提取帧信息

