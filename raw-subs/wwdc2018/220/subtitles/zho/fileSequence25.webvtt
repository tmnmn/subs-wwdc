WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:00.226 --> 00:25:01.766 A:middle
不要使你的约束流失

00:25:02.316 --> 00:25:03.036 A:middle
这在你完成

00:25:03.036 --> 00:25:04.826 A:middle
无意义工作时会发生

00:25:05.116 --> 00:25:05.686 A:middle
因此不要这么做

00:25:06.326 --> 00:25:09.876 A:middle
当你处理约束时 它实际上是基础代数

00:25:10.176 --> 00:25:11.566 A:middle
而这种代数也发生在

00:25:11.566 --> 00:25:12.706 A:middle
你添加约束

00:25:12.706 --> 00:25:14.586 A:middle
移除约束

00:25:14.586 --> 00:25:16.706 A:middle
以及调用设置常量功能时

00:25:16.706 --> 00:25:17.466 A:middle
以上是主要情况

00:25:17.956 --> 00:25:20.956 A:middle
还有 你知道 当我们

00:25:20.956 --> 00:25:22.866 A:middle
处于误差最小化阶段时 也是代数问题

00:25:23.436 --> 00:25:26.916 A:middle
理解 Auto Layout 的工作原理的方法是

00:25:26.916 --> 00:25:28.546 A:middle
把它想做是一个

00:25:28.546 --> 00:25:29.806 A:middle
布局缓存

00:25:29.806 --> 00:25:31.226 A:middle
可以看到引擎包含所有

00:25:31.226 --> 00:25:33.016 A:middle
已解出的值 并且它是一个

00:25:33.016 --> 00:25:34.766 A:middle
依赖关系追踪器 因此当

00:25:34.766 --> 00:25:36.916 A:middle
数据发生改变时我们可以

00:25:37.066 --> 00:25:39.296 A:middle
以一个非常有针对性的方法 更新那些值

00:25:39.896 --> 00:25:41.016 A:middle
这引出了我们最后一个点

00:25:41.186 --> 00:25:43.236 A:middle
那就是你只为

00:25:43.236 --> 00:25:44.216 A:middle
你在使用的功能消耗性能

00:25:45.266 --> 00:25:46.916 A:middle
这就是我们所谈到的内容

00:25:47.276 --> 00:25:48.566 A:middle
你知道 这就是你的直觉判断

00:25:48.956 --> 00:25:53.376 A:middle
接下来的部分我将会交给 Kasia

00:25:53.376 --> 00:25:54.556 A:middle
因为 再次强调 如果你

00:25:54.556 --> 00:25:56.586 A:middle
只是依赖于直觉判断 是无法完成布局的

00:25:56.866 --> 00:25:58.336 A:middle
所以她将会进行

00:25:58.336 --> 00:25:59.946 A:middle
一些分析

00:25:59.946 --> 00:26:01.286 A:middle
避免我们刚才讨论的问题 并把直觉判断

