WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.046 --> 00:17:00.046 A:middle
那么你就能够处于一个很好的状态

00:17:00.356 --> 00:17:02.046 A:middle
那么你就会

00:17:02.046 --> 00:17:03.036 A:middle
与接下来我们

00:17:03.036 --> 00:17:05.056 A:middle
要做的处于同一水准

00:17:05.056 --> 00:17:05.715 A:middle
并对此具备一个良好的把握

00:17:06.636 --> 00:17:08.935 A:middle
好的 我希望目前一切都好

00:17:08.935 --> 00:17:14.246 A:middle
我们还有另外一个大话题

00:17:14.246 --> 00:17:15.236 A:middle
希望探讨

00:17:15.236 --> 00:17:16.256 A:middle
如果想要获得一个

00:17:16.256 --> 00:17:18.356 A:middle
较好的性能模型 我们的想法是

00:17:18.356 --> 00:17:20.766 A:middle
你只为你使用的内容消耗性能

00:17:20.766 --> 00:17:21.965 A:middle
这在 Auto Layout 中可以做到

00:17:22.086 --> 00:17:23.056 A:middle
当看过这些以后我认为

00:17:23.056 --> 00:17:26.665 A:middle
我们已经能够理解其中的含义 对吗

00:17:26.665 --> 00:17:28.346 A:middle
为此 我们假设

00:17:28.346 --> 00:17:29.476 A:middle
目前的情况是之前的两倍

00:17:29.476 --> 00:17:31.346 A:middle
那么我们有四个文本框

00:17:31.346 --> 00:17:33.076 A:middle
分别在两个互相独立的层级中

00:17:34.496 --> 00:17:36.886 A:middle
现在你可以做的是

00:17:36.886 --> 00:17:38.426 A:middle
创建一个约束

00:17:38.426 --> 00:17:40.606 A:middle
令其像这样跨越层级

00:17:40.976 --> 00:17:42.866 A:middle
那么你可以说

00:17:42.866 --> 00:17:44.286 A:middle
1 号文本框应该与

00:17:44.286 --> 00:17:45.316 A:middle
3 号文本框对齐

00:17:45.316 --> 00:17:46.656 A:middle
尽管它们的上级视图并不相同

00:17:48.186 --> 00:17:50.956 A:middle
我认为 有时候人们会有

00:17:50.956 --> 00:17:52.486 A:middle
一个印象 就是因为这是

00:17:52.516 --> 00:17:54.526 A:middle
可能完成的 就意味着它会

00:17:54.526 --> 00:17:56.606 A:middle
运行的较为缓慢

00:17:56.606 --> 00:17:58.226 A:middle
因为各个部分可能

00:17:58.226 --> 00:17:59.646 A:middle
随时相互影响

00:17:59.646 --> 00:18:00.746 A:middle
就像一团浆糊

