WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:59.076 --> 00:35:00.096 A:middle
好的 这就是

00:35:00.096 --> 00:35:01.546 A:middle
Instruments 中的约束流失问题

00:35:01.626 --> 00:35:02.596 A:middle
Instruments 中还有一个

00:35:02.596 --> 00:35:04.326 A:middle
底部视图 叫做 UILabel 尺寸计算

00:35:05.236 --> 00:35:07.186 A:middle
UILabel 尺寸计算追踪的是

00:35:07.186 --> 00:35:08.246 A:middle
标签计算其尺寸

00:35:08.246 --> 00:35:09.926 A:middle
所需要的时间

00:35:10.226 --> 00:35:11.566 A:middle
我们来讨论一下固有

00:35:11.566 --> 00:35:12.236 A:middle
内容尺寸

00:35:12.566 --> 00:35:15.036 A:middle
让我走到这边来

00:35:15.886 --> 00:35:17.546 A:middle
好的 并不是所有的视图

00:35:17.896 --> 00:35:19.096 A:middle
都需要有固有内容尺寸

00:35:20.716 --> 00:35:21.426 A:middle
一些视图需要

00:35:21.836 --> 00:35:24.076 A:middle
具有非视图内容的视图

00:35:24.076 --> 00:35:25.276 A:middle
会返回一个它们的

00:35:25.276 --> 00:35:26.936 A:middle
固有内容尺寸的大小

00:35:26.936 --> 00:35:28.086 A:middle
尺寸是基于该非视图内容的

00:35:28.486 --> 00:35:30.126 A:middle
举两个例子

00:35:30.126 --> 00:35:32.156 A:middle
一个是 UIImageView 它利用其

00:35:32.156 --> 00:35:33.826 A:middle
图像的尺寸来计算其

00:35:33.826 --> 00:35:36.036 A:middle
固有内容尺寸

00:35:36.036 --> 00:35:38.116 A:middle
另一个是 UILabel 它测量其文本

00:35:38.576 --> 00:35:39.976 A:middle
并依据此来返回其

00:35:39.976 --> 00:35:41.056 A:middle
固有内容尺寸

00:35:41.636 --> 00:35:43.666 A:middle
固有内容尺寸

00:35:43.666 --> 00:35:45.076 A:middle
并没有什么神奇之处

00:35:45.486 --> 00:35:47.856 A:middle
它的用处是通过 UIView 创建约束

00:35:48.486 --> 00:35:49.886 A:middle
确定约束的尺寸

00:35:49.886 --> 00:35:50.886 A:middle
仅此而已

00:35:51.596 --> 00:35:52.476 A:middle
你可以在

00:35:52.476 --> 00:35:54.106 A:middle
约束中定义全部的尺寸

00:35:54.576 --> 00:35:55.576 A:middle
并跳过这些内容

00:35:56.436 --> 00:35:57.496 A:middle
有一些情况下

00:35:57.496 --> 00:35:58.646 A:middle
它需要被覆写

00:35:58.646 --> 00:36:00.026 A:middle
这也是它存在的原因

