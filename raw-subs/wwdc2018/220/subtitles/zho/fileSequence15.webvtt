WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:58.386 --> 00:15:00.716 A:middle
下面让我们完成这个过程

00:15:02.036 --> 00:15:03.106 A:middle
接下来的过程中

00:15:03.106 --> 00:15:06.506 A:middle
每当引擎将一个值赋给

00:15:06.506 --> 00:15:07.816 A:middle
其中一个变量

00:15:07.816 --> 00:15:09.746 A:middle
它都会告知视图

00:15:09.746 --> 00:15:11.246 A:middle
变量从何而来 并告知

00:15:11.246 --> 00:15:12.036 A:middle
它已发生变化

00:15:12.496 --> 00:15:15.406 A:middle
那么视图会做什么作为回应呢

00:15:16.526 --> 00:15:17.556 A:middle
如果你想一想

00:15:17.556 --> 00:15:20.956 A:middle
它会调用上级视图

00:15:20.956 --> 00:15:23.816 A:middle
并使用 setNeedsLayout 因为需要发生变动

00:15:25.226 --> 00:15:27.196 A:middle
好的 这就是

00:15:27.226 --> 00:15:30.216 A:middle
更新约束阶段的全部内容

00:15:31.136 --> 00:15:32.106 A:middle
现在我们已经收到了

00:15:32.106 --> 00:15:33.716 A:middle
setNeedsLayout 在某个时间点

00:15:33.716 --> 00:15:35.536 A:middle
就会进入布局阶段

00:15:36.696 --> 00:15:39.846 A:middle
好的 最后一块拼图

00:15:39.846 --> 00:15:40.846 A:middle
就是我们将会收到

00:15:40.846 --> 00:15:42.236 A:middle
UIView 将会收到

00:15:42.236 --> 00:15:45.776 A:middle
layoutSubViews 而它要做的就是

00:15:45.776 --> 00:15:47.816 A:middle
把这部分数据

00:15:47.816 --> 00:15:49.096 A:middle
从引擎中复制到帧

00:15:50.336 --> 00:15:52.356 A:middle
那么它会询问引擎

00:15:52.356 --> 00:15:53.956 A:middle
那些变量的值是多少

00:15:54.446 --> 00:15:56.676 A:middle
引擎将会告知它 该上级视图

00:15:56.676 --> 00:15:58.746 A:middle
就会在下级视图中

00:15:58.746 --> 00:16:02.076 A:middle
调用 setCenter 和 setBounds

