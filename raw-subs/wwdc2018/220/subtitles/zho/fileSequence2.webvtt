WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:02.546 --> 00:02:04.756 A:middle
最后 如果你只依赖于

00:02:04.756 --> 00:02:06.316 A:middle
对性能的直观判断

00:02:06.546 --> 00:02:07.896 A:middle
这远远不够

00:02:08.286 --> 00:02:10.776 A:middle
那么我们将有请 Kasia

00:02:10.776 --> 00:02:12.376 A:middle
上台来分析代码

00:02:12.506 --> 00:02:14.686 A:middle
我们将会展示如何

00:02:14.686 --> 00:02:16.696 A:middle
将你的直观判断与

00:02:16.916 --> 00:02:17.736 A:middle
实践结合起来

00:02:18.846 --> 00:02:20.126 A:middle
现在开始吧

00:02:20.436 --> 00:02:22.226 A:middle
首先 作为一个

00:02:22.226 --> 00:02:23.326 A:middle
Apple 展示的传统

00:02:23.326 --> 00:02:24.676 A:middle
我们先来看到一些数据和自夸

00:02:25.516 --> 00:02:28.796 A:middle
[ 笑声 ]

00:02:29.296 --> 00:02:31.116 A:middle
我们目前看到的是

00:02:31.116 --> 00:02:32.806 A:middle
一个基准测试

00:02:33.416 --> 00:02:35.456 A:middle
我们进行工作的方法是

00:02:35.456 --> 00:02:37.536 A:middle
去寻找并查看

00:02:37.536 --> 00:02:38.816 A:middle
一些第三方 App

00:02:38.816 --> 00:02:40.406 A:middle
也包括我们自己的 App

00:02:40.406 --> 00:02:41.906 A:middle
并试图将看到的内容提取

00:02:41.906 --> 00:02:44.646 A:middle
为测试案例

00:02:44.646 --> 00:02:45.476 A:middle
因此我们可以进行基准测试

00:02:45.996 --> 00:02:47.056 A:middle
那么我们看到的

00:02:47.056 --> 00:02:49.006 A:middle
就是 UICollectionView

00:02:49.006 --> 00:02:51.486 A:middle
它具有自动调节大小的单元格

00:02:51.706 --> 00:02:53.236 A:middle
看起来糟糕的那一边

00:02:53.436 --> 00:03:00.086 A:middle
就是 iOS 11 它看起来很差劲

