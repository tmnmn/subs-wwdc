WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:00.956 --> 00:14:02.836 A:middle
你会用已知的

00:14:02.836 --> 00:14:03.996 A:middle
数据来进行替换

00:14:04.146 --> 00:14:05.646 A:middle
这就是接下来即将发生的事情

00:14:06.636 --> 00:14:08.486 A:middle
如果你进行程序剖析

00:14:08.486 --> 00:14:10.356 A:middle
会看到 引擎中确实有一个方法

00:14:10.356 --> 00:14:12.186 A:middle
包含替换这个词

00:14:12.186 --> 00:14:13.986 A:middle
同时还包含了其他的

00:14:13.986 --> 00:14:16.956 A:middle
140 个字符 因为我们是

00:14:16.956 --> 00:14:18.776 A:middle
Cocoa 编程开发者

00:14:18.776 --> 00:14:21.716 A:middle
这就是引擎将要做的

00:14:22.266 --> 00:14:23.726 A:middle
然后 你知道 最后一个

00:14:23.726 --> 00:14:26.726 A:middle
等式进入后 看起来就完成了

00:14:27.126 --> 00:14:29.106 A:middle
看上去这就是全部的

00:14:29.106 --> 00:14:30.636 A:middle
工作 至少针对

00:14:30.636 --> 00:14:32.656 A:middle
这个案例 就可以解出

00:14:32.656 --> 00:14:34.466 A:middle
全部变量 确实如此

00:14:35.006 --> 00:14:36.646 A:middle
这就是我此时要了解的

00:14:36.646 --> 00:14:39.856 A:middle
那就是这些工作

00:14:39.856 --> 00:14:40.546 A:middle
并不复杂

00:14:41.046 --> 00:14:42.856 A:middle
它的过程

00:14:42.856 --> 00:14:43.956 A:middle
和手工计算

00:14:43.956 --> 00:14:46.566 A:middle
非常非常近似

00:14:46.566 --> 00:14:47.916 A:middle
同时 它也并不是高消耗

00:14:48.266 --> 00:14:50.296 A:middle
它只不过是完成替换 就像这样

00:14:50.536 --> 00:14:51.626 A:middle
这就是它所做的工作

00:14:52.626 --> 00:14:54.976 A:middle
好的 那么现在我们已经

00:14:55.326 --> 00:14:56.686 A:middle
在引擎中解出了这些变量

00:14:56.686 --> 00:14:57.936 A:middle
但是这并不是一个布局

00:14:58.386 --> 00:15:00.716 A:middle
下面让我们完成这个过程

