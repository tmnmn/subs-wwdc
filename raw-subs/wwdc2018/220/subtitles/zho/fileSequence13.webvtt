WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.676 --> 00:13:00.656 A:middle
我认为最有趣的是

00:13:00.656 --> 00:13:01.936 A:middle
两个文本框之间的空间

00:13:01.936 --> 00:13:03.896 A:middle
它看起来像是

00:13:03.896 --> 00:13:05.366 A:middle
看起来非常

00:13:05.366 --> 00:13:07.656 A:middle
近似于你写的

00:13:07.656 --> 00:13:08.896 A:middle
约束 但它相对是

00:13:08.896 --> 00:13:10.416 A:middle
更低层级的 因为它是

00:13:10.416 --> 00:13:11.756 A:middle
关于这些变量的

00:13:13.376 --> 00:13:16.806 A:middle
好的 然后每个等式

00:13:16.806 --> 00:13:18.336 A:middle
都需要被添加到引擎

00:13:18.336 --> 00:13:20.546 A:middle
事实上我们将会

00:13:20.546 --> 00:13:22.596 A:middle
再次研究这一过程

00:13:22.596 --> 00:13:24.006 A:middle
目标是对于

00:13:24.006 --> 00:13:27.386 A:middle
性能特点有一个更好的把握

00:13:27.746 --> 00:13:28.846 A:middle
那么 当我们这么写时发生了什么?

00:13:29.856 --> 00:13:31.856 A:middle
引擎试图解出

00:13:31.856 --> 00:13:33.806 A:middle
这些变量

00:13:33.806 --> 00:13:36.086 A:middle
这跟你在代数中学到的很像

00:13:36.086 --> 00:13:38.936 A:middle
看起来也完全相同

00:13:38.936 --> 00:13:40.106 A:middle
那么我们一起来看

00:13:40.386 --> 00:13:42.166 A:middle
首先是第一个等式

00:13:42.166 --> 00:13:44.146 A:middle
表明第一个区域的 X 轴坐标是 8

00:13:44.486 --> 00:13:47.846 A:middle
好的 它的宽度为 100 好

00:13:48.436 --> 00:13:50.696 A:middle
好的 这个等式中我们定义

00:13:50.696 --> 00:13:52.106 A:middle
定义第二个区域的 X 轴坐标

00:13:52.106 --> 00:13:53.556 A:middle
等于第一个 X 坐标加上

00:13:53.556 --> 00:13:54.406 A:middle
该宽度再加 20

00:13:54.406 --> 00:13:57.096 A:middle
在代数中你会怎么做

00:13:57.096 --> 00:13:59.666 A:middle
如果有人要求你解出这些变量

