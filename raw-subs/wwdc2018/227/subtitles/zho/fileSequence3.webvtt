WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:56.109 --> 00:03:00.214 align:middle line:-1
有两个缺点是你需要注意的

00:03:00.948 --> 00:03:04.585 align:middle line:-1
首先是伴随而来的

00:03:04.651 --> 00:03:05.786 align:middle line:-1
额外存储空间

00:03:06.954 --> 00:03:09.389 align:middle line:-1
传统的图像容器格式

00:03:10.190 --> 00:03:14.061 align:middle line:-2
会使用额外的空间
来存储元数据

00:03:14.795 --> 00:03:16.563 align:middle line:-1
还有跟图像对应的其他属性

00:03:17.698 --> 00:03:20.200 align:middle line:-1
如果你的app有很多的资源

00:03:20.567 --> 00:03:22.569 align:middle line:-1
而且它们有相似的元数据

00:03:23.203 --> 00:03:27.474 align:middle line:-2
那么相同的信息
就会无意义地在磁盘上反复复制

00:03:28.876 --> 00:03:32.513 align:middle line:-1
另外 如果你的绝大多数资源很小

00:03:33.280 --> 00:03:36.383 align:middle line:-2
你也不能最大程度
发挥图像压缩的优势

00:03:38.252 --> 00:03:42.289 align:middle line:-1
另一个缺点主要是你要花费的

00:03:42.356 --> 00:03:43.590 align:middle line:-1
组织上的开销

00:03:44.491 --> 00:03:47.561 align:middle line:-2
处理如此多零散的图像文件
是很困难的

00:03:48.629 --> 00:03:52.599 align:middle line:-1
而且将它们跟NSImage

00:03:52.666 --> 00:03:54.535 align:middle line:-2
和UIImage类的API
进行交互就更困难了

00:03:55.869 --> 00:03:57.104 align:middle line:-1
最后还有一点就是

00:03:57.171 --> 00:04:00.641 align:middle line:-1
你还需要处理图像格式的不一致性

