WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:59.620 --> 00:02:02.155 align:middle line:-1
来获取所给的图像或纹理

00:02:03.524 --> 00:02:05.759 align:middle line:-1
这可能对绝大多数的项目来说足够了

00:02:06.326 --> 00:02:10.130 align:middle line:-2
不过了解一下
其中一些选项还是有用处的

00:02:10.631 --> 00:02:13.834 align:middle line:-1
更重要的是 要了解它们的取舍

00:02:13.901 --> 00:02:16.336 align:middle line:-1
以及对你项目所做的实现

00:02:17.037 --> 00:02:18.038 align:middle line:-1
（图像压缩）

00:02:18.438 --> 00:02:19.439 align:middle line:-1
（自动图像打包）

00:02:19.506 --> 00:02:23.143 align:middle line:-1
在我深入介绍图像压缩的内容之前

00:02:23.744 --> 00:02:28.081 align:middle line:-2
我想介绍一些
资源目录中的其他优化内容

00:02:28.549 --> 00:02:31.552 align:middle line:-2
它对于我们所有要进行的
压缩有非常多的实现

00:02:32.352 --> 00:02:34.321 align:middle line:-1
它叫做自动化图像打包

00:02:38.025 --> 00:02:41.028 align:middle line:-1
通常在注入资源目录前

00:02:41.662 --> 00:02:44.364 align:middle line:-1
将资源部署到你app中的一种方法

00:02:44.431 --> 00:02:46.333 align:middle line:-1
将一些图像文件丢到

00:02:46.400 --> 00:02:48.268 align:middle line:-1
你项目的app捆绑里

00:02:49.469 --> 00:02:52.372 align:middle line:-2
你需要注意的是
这样做有很多的缺点

00:02:52.439 --> 00:02:55.309 align:middle line:-1
还有取舍

00:02:56.109 --> 00:03:00.214 align:middle line:-1
有两个缺点是你需要注意的

