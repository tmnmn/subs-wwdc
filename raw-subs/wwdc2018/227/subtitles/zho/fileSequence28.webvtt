WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.445 --> 00:28:00.948 align:middle line:-1
你不要担心需要支付任何开销

00:28:01.481 --> 00:28:02.449 align:middle line:-1
在运行时间的设备上

00:28:02.516 --> 00:28:06.954 align:middle line:-2
渲染一个可能挺复杂的
PDF矢量资源

00:28:08.322 --> 00:28:10.557 align:middle line:-1
这让你对使用矢量有了些概念

00:28:11.425 --> 00:28:14.161 align:middle line:-1
有时候你可能

00:28:14.228 --> 00:28:17.564 align:middle line:-1
想在某种情况下将你的资源

00:28:17.631 --> 00:28:21.935 align:middle line:-1
以对比其最常用的设计尺寸不同

00:28:22.002 --> 00:28:23.203 align:middle line:-1
的尺寸或范围来显示

00:28:23.704 --> 00:28:28.342 align:middle line:-2
从去年的iOS 11
和Xcode 9开始

00:28:28.408 --> 00:28:30.777 align:middle line:-1
我们现在可以让你保留矢量数据

00:28:31.245 --> 00:28:35.949 align:middle line:-1
以便在图像被放入比该资源的

00:28:36.016 --> 00:28:38.519 align:middle line:-1
实际尺寸大的图像视图时

00:28:38.585 --> 00:28:41.688 align:middle line:-1
它可以找到原始的PDF矢量数据

00:28:41.755 --> 00:28:45.726 align:middle line:-2
另外我们已经去除链接
并清除了无关的元数据

00:28:45.792 --> 00:28:47.461 align:middle line:-2
和配置文件
所以它很棒很紧凑

00:28:47.528 --> 00:28:49.429 align:middle line:-1
还是尽可能小的

00:28:50.497 --> 00:28:52.466 align:middle line:-1
让我们在运行时间重新栅格化

00:28:52.533 --> 00:28:54.501 align:middle line:-1
但是除非你超出了原始尺寸

00:28:54.568 --> 00:28:57.771 align:middle line:-1
否则我们就用优化过的预渲染位图

00:28:58.405 --> 00:29:00.207 align:middle line:-2
这样做很棒
因为这意味着你的app

