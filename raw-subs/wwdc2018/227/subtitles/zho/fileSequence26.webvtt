WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.726 --> 00:26:01.795 align:middle line:-2
且不用为了有效部署
而对它们进行预处理

00:26:01.862 --> 00:26:06.066 align:middle line:-1
以使其尽可能地小

00:26:06.133 --> 00:26:07.668 align:middle line:-1
这不应该是设计师所考虑的

00:26:07.734 --> 00:26:09.770 align:middle line:-2
长远来说
把一眼就能看出来是什么的内容

00:26:09.837 --> 00:26:12.739 align:middle line:-1
放到源代码中

00:26:12.806 --> 00:26:13.841 align:middle line:-1
更有意义

00:26:14.241 --> 00:26:16.944 align:middle line:-1
让工具来考虑部署的细节问题

00:26:17.010 --> 00:26:18.545 align:middle line:-1
（资源目录展示分割）

00:26:18.612 --> 00:26:20.514 align:middle line:-1
除了图形化的检查器

00:26:20.581 --> 00:26:22.816 align:middle line:-1
以及图形化识别可拉伸部分的方法

00:26:22.883 --> 00:26:25.285 align:middle line:-1
当然了还有展示分割检查器

00:26:25.352 --> 00:26:28.522 align:middle line:-1
你可以更好地控制边缘插图

00:26:28.589 --> 00:26:32.226 align:middle line:-1
还可以控制中心部分

00:26:32.292 --> 00:26:34.194 align:middle line:-1
拉伸或覆盖的行为

00:26:36.129 --> 00:26:37.264 align:middle line:-1
所有这些内容

00:26:37.331 --> 00:26:40.467 align:middle line:-2
结合起来就是为了
让拉伸元数据接近于插图

00:26:40.701 --> 00:26:43.537 align:middle line:-1
这会让后面产生很大的收益

00:26:43.604 --> 00:26:45.038 align:middle line:-1
设计师会不可避免地

00:26:45.105 --> 00:26:47.407 align:middle line:-1
更新你的设计

00:26:48.141 --> 00:26:50.277 align:middle line:-2
现在你就可以在一个地方
更新所有内容

00:26:50.344 --> 00:26:52.646 align:middle line:-1
而不用记住代码中的五六个地方

00:26:52.713 --> 00:26:55.349 align:middle line:-2
这些地方你可能
有之前边缘插图的放置代码

00:26:56.283 --> 00:26:58.552 align:middle line:-1
现在它都集中到一个地方了

