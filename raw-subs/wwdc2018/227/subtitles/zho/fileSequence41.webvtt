WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:58.792 --> 00:41:00.961 align:middle line:-2
某些仅在特定GPU上
可用的某些功能

00:41:01.028 --> 00:41:05.566 align:middle line:-2
或者你放置的资源需要
比其他处理更多的运算

00:41:06.433 --> 00:41:08.535 align:middle line:-1
我想举两个简单的例子

00:41:09.203 --> 00:41:11.271 align:middle line:-2
作为思考的重点
以及它如何起作用

00:41:11.338 --> 00:41:12.940 align:middle line:-1
（使用性能类）

00:41:13.006 --> 00:41:16.443 align:middle line:-2
我想举例介绍下
NSDataAsset

00:41:16.944 --> 00:41:19.880 align:middle line:-2
NSDataAsset是资产目录
中的一个简单部分

00:41:19.947 --> 00:41:21.181 align:middle line:-1
但是它非常强大

00:41:21.248 --> 00:41:23.851 align:middle line:-2
它主要是提供一个
灵活的容器的方法

00:41:23.917 --> 00:41:27.154 align:middle line:-1
你可以在资源目录中的任何文件中

00:41:27.221 --> 00:41:29.223 align:middle line:-1
放置内容变量

00:41:29.790 --> 00:41:30.891 align:middle line:-1
这不一定是一个图像

00:41:30.958 --> 00:41:32.125 align:middle line:-1
不一定是一个非常具体的格式

00:41:32.192 --> 00:41:33.193 align:middle line:-1
这可以是任何东西

00:41:33.527 --> 00:41:37.231 align:middle line:-2
但是你可以将其在app精简中
与资源目录一起使用

00:41:37.297 --> 00:41:40.934 align:middle line:-2
将任意的数据发送到
不同的性能类中

00:41:41.001 --> 00:41:44.605 align:middle line:-1
例如游戏中的剪切场景视频

00:41:45.873 --> 00:41:48.308 align:middle line:-1
你可能会提供一个很好的视频

00:41:48.375 --> 00:41:50.978 align:middle line:-2
你可以把它放在
性能范围的中间层级

00:41:51.945 --> 00:41:54.314 align:middle line:-2
然后你就有了一个
非常棒的高分辨率

00:41:54.381 --> 00:41:55.816 align:middle line:-1
它甚至可能是HDR 谁知道呢？

00:41:55.883 --> 00:41:59.219 align:middle line:-1
你可以将视频放在性能范围

00:41:59.286 --> 00:42:00.954 align:middle line:-1
的合适象限内

