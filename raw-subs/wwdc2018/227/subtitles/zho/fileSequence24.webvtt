WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:57.104 --> 00:24:01.008 align:middle line:-1
比方说 程序员可以使用

00:24:01.074 --> 00:24:03.944 align:middle line:-2
draw three或是nine-part API
将其重新组装成最终的设计尺寸

00:24:04.811 --> 00:24:06.380 align:middle line:-1
这样做是可以的

00:24:06.446 --> 00:24:08.849 align:middle line:-1
而且已经被实践和使用了多年

00:24:09.249 --> 00:24:10.684 align:middle line:-1
不过它有一个不足之处

00:24:11.118 --> 00:24:15.122 align:middle line:-2
将这些图像重组成最终尺寸
是一个CPU负载很高的任务

00:24:15.189 --> 00:24:17.691 align:middle line:-1
它可能会有点复杂而且低效

00:24:17.758 --> 00:24:23.197 align:middle line:-2
这对于像是
Core Animation这样的

00:24:23.263 --> 00:24:24.298 align:middle line:-1
现代GPU UI管道来说并不合适

00:24:25.866 --> 00:24:27.100 align:middle line:-1
更好的方法是什么呢？

00:24:27.601 --> 00:24:30.070 align:middle line:-1
更好的办法就是 对于单个图像

00:24:30.470 --> 00:24:33.340 align:middle line:-1
就提供表明其拉伸部分的

00:24:33.407 --> 00:24:35.876 align:middle line:-1
拉伸元数据

00:24:36.910 --> 00:24:39.947 align:middle line:-1
这会带来对于可变尺寸图像来说

00:24:40.013 --> 00:24:41.114 align:middle line:-1
最优的、流畅的GPU动画

00:24:42.783 --> 00:24:44.585 align:middle line:-1
而且我很高兴地告诉你们资源目录

00:24:44.651 --> 00:24:46.353 align:middle line:-1
可以轻松使其实现

00:24:47.621 --> 00:24:49.456 align:middle line:-1
它叫做展示分割编辑器

00:24:50.557 --> 00:24:54.194 align:middle line:-2
它真的很容易用
你只需要点击开始分割按钮

00:24:54.628 --> 00:24:58.031 align:middle line:-1
然后你就会开始分割行

00:24:58.098 --> 00:25:01.668 align:middle line:-1
这可以让你识别出图像的可拉伸部分

