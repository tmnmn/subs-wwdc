WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:57.644 --> 00:43:00.747 align:middle line:-2
这就是有关如何使用
性能类的方法

00:43:02.883 --> 00:43:05.452 align:middle line:-1
接下来我想介绍下精灵地图集

00:43:06.053 --> 00:43:09.823 align:middle line:-1
精灵地图集是在几年前推出的

00:43:10.324 --> 00:43:14.127 align:middle line:-2
用来支持SpriteKit
游戏中的SpriteKit

00:43:14.194 --> 00:43:15.195 align:middle line:-1
（精灵地图集）

00:43:15.262 --> 00:43:16.096 align:middle line:-1
那么…

00:43:16.463 --> 00:43:20.534 align:middle line:-2
我不打算在SpriteKit
游戏的背景下讨论它们

00:43:20.601 --> 00:43:23.837 align:middle line:-1
我将在常规app的环境中讨论它们

00:43:25.372 --> 00:43:28.509 align:middle line:-1
它们有一些属性

00:43:28.575 --> 00:43:30.978 align:middle line:-2
跟Will介绍过的
自动化图像打包很相似

00:43:31.044 --> 00:43:33.480 align:middle line:-2
你要采集精灵地图集中的
所有相关图像

00:43:33.547 --> 00:43:35.015 align:middle line:-1
并将它们打包成一个单元

00:43:35.082 --> 00:43:36.717 align:middle line:-1
它们会立即被加载

00:43:36.783 --> 00:43:40.320 align:middle line:-2
然后包含在该地图集中的
所有引用的图像

00:43:40.387 --> 00:43:44.391 align:middle line:-1
都只是轻量级引用地图集中的位置

00:43:45.425 --> 00:43:46.360 align:middle line:-1
这很棒

00:43:48.295 --> 00:43:49.463 align:middle line:-1
但关键问题所在就是

00:43:49.530 --> 00:43:52.366 align:middle line:-2
你并不需要
使用SpriteKit来访问它们

00:43:52.432 --> 00:43:54.334 align:middle line:-1
你可以就将其作为分组机制使用

00:43:54.401 --> 00:43:56.270 align:middle line:-2
因为Sprite地图集与
自动化图像打包的不同是

00:43:56.336 --> 00:43:59.339 align:middle line:-1
你可以控制分组

00:43:59.640 --> 00:44:01.074 align:middle line:-1
并且可以为其分配名称

