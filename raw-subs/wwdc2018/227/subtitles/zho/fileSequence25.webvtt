WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:58.098 --> 00:25:01.668 align:middle line:-1
这可以让你识别出图像的可拉伸部分

00:25:01.735 --> 00:25:03.837 align:middle line:-1
与不可拉伸部分

00:25:03.971 --> 00:25:06.206 align:middle line:-1
在本例中 左侧和右侧检查完了

00:25:06.273 --> 00:25:10.077 align:middle line:-2
而中间部分是橙色的
也就是可拉伸的部分

00:25:10.544 --> 00:25:11.445 align:middle line:-1
现在

00:25:12.079 --> 00:25:14.581 align:middle line:-2
你可能注意到了
这个图像上面大部分

00:25:14.648 --> 00:25:17.084 align:middle line:-1
地方都有白色阴影

00:25:17.150 --> 00:25:18.385 align:middle line:-1
这是怎么回事呢？

00:25:18.785 --> 00:25:20.754 align:middle line:-1
这其实是一个很有意思的事

00:25:20.821 --> 00:25:25.192 align:middle line:-1
这部分的资源其实是不再被需要了

00:25:25.259 --> 00:25:28.996 align:middle line:-2
因为我们用剩下的三个部分
来表示所有可能的大小

00:25:29.429 --> 00:25:31.231 align:middle line:-1
为什么这很重要呢？

00:25:31.899 --> 00:25:35.702 align:middle line:-2
好处就是现在Xcode
可以在构造时间就知道这件事了

00:25:35.769 --> 00:25:40.073 align:middle line:-2
我们可以只取需要的部分
然后留下剩下的部分

00:25:40.674 --> 00:25:41.942 align:middle line:-1
所以我们就不要

00:25:42.009 --> 00:25:43.710 align:middle line:-1
将这一大块部分保存在磁盘字节上

00:25:43.777 --> 00:25:45.579 align:middle line:-1
这些字节会被用到你的app中的

00:25:46.113 --> 00:25:47.114 align:middle line:-1
这很棒

00:25:47.181 --> 00:25:50.450 align:middle line:-1
它还有另一个好处

00:25:50.517 --> 00:25:53.253 align:middle line:-1
这个更加隐晦一点 不过我很喜欢

00:25:53.320 --> 00:25:55.122 align:middle line:-1
这意味着你可以告诉你的设计师

00:25:55.189 --> 00:25:57.658 align:middle line:-1
可以以原始尺寸

00:25:57.724 --> 00:25:59.593 align:middle line:-1
送达资源

00:25:59.726 --> 00:26:01.795 align:middle line:-2
且不用为了有效部署
而对它们进行预处理

