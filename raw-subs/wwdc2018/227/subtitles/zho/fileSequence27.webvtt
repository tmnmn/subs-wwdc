WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:00.721 --> 00:27:01.722 align:middle line:-1
谢谢

00:27:04.658 --> 00:27:07.160 align:middle line:-1
接下来我想介绍一下矢量资源

00:27:07.227 --> 00:27:08.495 align:middle line:-1
（矢量资源）

00:27:08.562 --> 00:27:11.465 align:middle line:-1
由于我们所有产品的显示屏

00:27:11.532 --> 00:27:13.367 align:middle line:-1
都有不同的分辨率

00:27:13.433 --> 00:27:16.303 align:middle line:-1
你可能已经习惯于根据目标平台

00:27:16.370 --> 00:27:18.505 align:middle line:-1
使用1倍、2倍、3倍大的图像

00:27:18.572 --> 00:27:19.640 align:middle line:-1
不同的资源

00:27:20.073 --> 00:27:22.209 align:middle line:-1
这用起来并没有问题

00:27:22.643 --> 00:27:25.679 align:middle line:-2
但每次对于一个设计
都要用两三个资源

00:27:25.746 --> 00:27:27.314 align:middle line:-1
挺麻烦的

00:27:28.015 --> 00:27:29.750 align:middle line:-2
就是因为分辨率
没有别的什么原因

00:27:30.817 --> 00:27:32.920 align:middle line:-1
如果你可以避免使用这个方法

00:27:32.986 --> 00:27:33.987 align:middle line:-1
只用一个资源就可以？

00:27:34.054 --> 00:27:37.024 align:middle line:-2
你确实可以这么做
我们在资源目录中以PDF格式

00:27:37.090 --> 00:27:39.426 align:middle line:-1
支持矢量资源已经有些年头了

00:27:39.826 --> 00:27:42.996 align:middle line:-1
通过使用Xcode资源目录

00:27:43.664 --> 00:27:45.532 align:middle line:-1
你可以提供一个PDF

00:27:45.866 --> 00:27:49.369 align:middle line:-2
Xcode就可以根据平台
生成、栅格化

00:27:49.670 --> 00:27:52.639 align:middle line:-2
那个PDF文件
为所有可应用范围内的

00:27:53.340 --> 00:27:55.843 align:middle line:-1
你app正指向的因素

00:27:57.177 --> 00:27:58.378 align:middle line:-1
这很棒 因为这意味着

00:27:58.445 --> 00:28:00.948 align:middle line:-1
你不要担心需要支付任何开销

