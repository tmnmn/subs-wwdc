WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.200 --> 00:20:01.535 align:middle line:-1
不同大小的显示屏

00:20:01.602 --> 00:20:04.338 align:middle line:-2
所以就要有某些东西
保证你资源的实际颜色

00:20:04.404 --> 00:20:07.508 align:middle line:-2
会匹配合适
在这些不同的显示屏上

00:20:07.574 --> 00:20:08.809 align:middle line:-1
看起来及缩放时比较得当

00:20:08.876 --> 00:20:11.278 align:middle line:-1
这就是色彩管理的职责

00:20:11.845 --> 00:20:13.647 align:middle line:-1
这是个计算的过程

00:20:14.081 --> 00:20:17.618 align:middle line:-2
它可以由CPU完成
有时候是在GPU上

00:20:17.684 --> 00:20:18.819 align:middle line:-1
不过它的计算量不小

00:20:20.053 --> 00:20:21.088 align:middle line:-1
现在…

00:20:21.154 --> 00:20:22.823 align:middle line:-1
资源目录就会发挥作用了

00:20:22.923 --> 00:20:25.158 align:middle line:-1
因为在编译过程

00:20:25.225 --> 00:20:26.793 align:middle line:-1
的构建时间

00:20:27.060 --> 00:20:29.396 align:middle line:-1
它们会为你进行颜色匹配

00:20:29.830 --> 00:20:32.432 align:middle line:-1
这真的很棒 因为计算根本

00:20:32.499 --> 00:20:35.102 align:middle line:-1
不必在设备上进行

00:20:35.802 --> 00:20:38.071 align:middle line:-1
而且你的资源在设备上已经准备好了

00:20:38.138 --> 00:20:38.972 align:middle line:-1
准备好加载

00:20:39.039 --> 00:20:41.308 align:middle line:-1
准备好被显示 不会有任何的麻烦

00:20:42.109 --> 00:20:42.943 align:middle line:-1
还有意外收获就是

00:20:43.010 --> 00:20:46.280 align:middle line:-2
这个多出来的在构造时间
对色彩管理进行的处理

00:20:46.346 --> 00:20:48.115 align:middle line:-1
消除了你原来

00:20:48.182 --> 00:20:50.184 align:middle line:-1
可能要去掉的配置文件负载

00:20:50.250 --> 00:20:55.122 align:middle line:-2
并且将它替换成
一种非常高效的方法来注解

00:20:55.189 --> 00:20:56.823 align:middle line:-2
我们所拥有的颜色空间
以及磁盘上的像素

00:20:58.659 --> 00:21:00.093 align:middle line:-1
这就是色彩管理的内容

