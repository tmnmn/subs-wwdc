WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.592 --> 00:31:02.796 align:middle line:-1
然后调整你的资源 并使用点修整

00:31:02.863 --> 00:31:05.933 align:middle line:-1
来调整你的笔画和边缘来适应这里

00:31:07.234 --> 00:31:08.268 align:middle line:-1
真很不错

00:31:08.335 --> 00:31:09.870 align:middle line:-1
那现在该怎么做呢？

00:31:09.937 --> 00:31:11.872 align:middle line:-1
它太大了不是吗 难道不能用吗？

00:31:12.206 --> 00:31:13.040 align:middle line:-1
是可以用的！

00:31:13.440 --> 00:31:16.343 align:middle line:-1
你只需要把它放到

00:31:16.410 --> 00:31:18.879 align:middle line:-1
资源目录缩放桶里的2倍那一格

00:31:19.213 --> 00:31:23.150 align:middle line:-2
这就可以让Xcode
自动处理这个插图

00:31:23.217 --> 00:31:25.185 align:middle line:-1
知道它其实是插图的两倍部分

00:31:25.252 --> 00:31:26.653 align:middle line:-1
它有点太大了

00:31:26.720 --> 00:31:29.356 align:middle line:-1
一点并不等于视网膜显示的两个像素

00:31:29.423 --> 00:31:31.225 align:middle line:-1
而是刚好相反

00:31:31.291 --> 00:31:32.426 align:middle line:-1
我们来计算一下

00:31:32.492 --> 00:31:35.028 align:middle line:-1
我们要为所有其他范围因素渲染

00:31:35.095 --> 00:31:37.364 align:middle line:-2
右边所有的栅格化位图
并为你处理它

00:31:37.865 --> 00:31:42.102 align:middle line:-2
将设计师解放出来使用两倍网格
是非常有帮助的

00:31:43.103 --> 00:31:44.037 align:middle line:-1
（有提示的资源）

00:31:44.104 --> 00:31:46.940 align:middle line:-1
当然了 如果自动缩放还不够

00:31:47.007 --> 00:31:49.676 align:middle line:-1
或是在某些地方出问题的话

00:31:50.611 --> 00:31:53.514 align:middle line:-1
你对结果是有最终控制权的

00:31:53.580 --> 00:31:57.084 align:middle line:-2
你可以将有提示的位图
投放到合适的缩放因素桶中

00:31:57.150 --> 00:31:58.452 align:middle line:-1
接下来我们会使用它

00:31:58.519 --> 00:32:02.956 align:middle line:-1
来替代生成的PDF栅格化

