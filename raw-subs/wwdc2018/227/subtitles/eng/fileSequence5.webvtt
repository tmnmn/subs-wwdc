WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.456 --> 00:05:00.866 A:middle
Now these image artwork are all

00:05:00.866 --> 00:05:03.276 A:middle
fairly small, but still the

00:05:03.276 --> 00:05:06.146 A:middle
overall size add up to over 50

00:05:06.146 --> 00:05:06.756 A:middle
kilobytes.

00:05:10.096 --> 00:05:11.786 A:middle
This automatic image packing

00:05:12.636 --> 00:05:13.786 A:middle
Asset Catalog is able to

00:05:13.786 --> 00:05:15.386 A:middle
identify that all of these image

00:05:15.386 --> 00:05:17.426 A:middle
artwork share very similar color

00:05:17.426 --> 00:05:19.606 A:middle
spectrum and if so it'll group

00:05:19.656 --> 00:05:21.526 A:middle
them together to generate one

00:05:21.526 --> 00:05:23.476 A:middle
single larger image atlas.

00:05:25.066 --> 00:05:28.956 A:middle
This way the overall disk size

00:05:29.056 --> 00:05:31.666 A:middle
gets reduced to only 20% of the

00:05:31.666 --> 00:05:32.566 A:middle
original size.

00:05:32.976 --> 00:05:34.966 A:middle
That is an 80% size reduction

00:05:34.966 --> 00:05:36.496 A:middle
saving and that is huge.

00:05:38.156 --> 00:05:40.086 A:middle
It's also important to be aware

00:05:40.086 --> 00:05:41.456 A:middle
of these optimization scales

00:05:41.456 --> 00:05:42.036 A:middle
very well.

00:05:42.646 --> 00:05:44.576 A:middle
The larger the amount of our

00:05:44.666 --> 00:05:46.926 A:middle
asset in your application, the

00:05:46.926 --> 00:05:47.936 A:middle
more benefit you're going to get

00:05:47.936 --> 00:05:48.976 A:middle
out of this optimization.

00:05:52.356 --> 00:05:53.786 A:middle
So that's automatic image

00:05:53.786 --> 00:05:54.126 A:middle
packing.

00:05:56.666 --> 00:05:57.496 A:middle
Now let's talk a little bit

00:05:57.496 --> 00:05:58.976 A:middle
about lossy compression.

