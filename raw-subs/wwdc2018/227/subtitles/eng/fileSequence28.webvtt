WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.596 --> 00:28:02.086 A:middle
about paying any cost at runtime

00:28:02.086 --> 00:28:03.086 A:middle
on device to render an

00:28:03.086 --> 00:28:04.086 A:middle
arbitrary, potentially

00:28:04.086 --> 00:28:06.626 A:middle
arbitrarily complex PDF vector

00:28:06.626 --> 00:28:06.916 A:middle
asset.

00:28:08.096 --> 00:28:09.216 A:middle
So it gives you some peace of

00:28:09.216 --> 00:28:10.366 A:middle
mind about using vectors.

00:28:11.486 --> 00:28:13.556 A:middle
Now you may have a scenario

00:28:13.556 --> 00:28:15.026 A:middle
where actually you want to

00:28:15.026 --> 00:28:16.836 A:middle
present your assets in some

00:28:16.946 --> 00:28:18.916 A:middle
circumstances at a different

00:28:18.916 --> 00:28:20.956 A:middle
size or scale than the most

00:28:20.956 --> 00:28:22.166 A:middle
common natural size that the

00:28:22.166 --> 00:28:23.086 A:middle
asset was designed for.

00:28:23.776 --> 00:28:26.836 A:middle
Well new since last year in iOS

00:28:26.836 --> 00:28:29.146 A:middle
11 and Xcode 9 we now allow you

00:28:29.146 --> 00:28:31.496 A:middle
to preserve the vector data so

00:28:31.496 --> 00:28:35.256 A:middle
that when that image is put into

00:28:35.256 --> 00:28:37.216 A:middle
an image view that is larger

00:28:37.216 --> 00:28:38.356 A:middle
than the natural size of that

00:28:38.356 --> 00:28:39.766 A:middle
asset it'll go ahead and find

00:28:39.766 --> 00:28:41.456 A:middle
that original PDF vector data,

00:28:41.846 --> 00:28:43.656 A:middle
which by the way we've linked it

00:28:43.656 --> 00:28:44.746 A:middle
out and cleaned of any

00:28:44.746 --> 00:28:46.426 A:middle
extraneous metadata and profiles

00:28:46.426 --> 00:28:47.526 A:middle
as well so it's nice and tight

00:28:47.526 --> 00:28:49.186 A:middle
and it's slim as possible.

00:28:49.896 --> 00:28:51.316 A:middle
And we'll go ahead and

00:28:51.316 --> 00:28:52.706 A:middle
re-rasterize that at runtime but

00:28:52.706 --> 00:28:53.966 A:middle
only if you're going beyond the

00:28:53.966 --> 00:28:55.096 A:middle
natural size, otherwise we'll

00:28:55.096 --> 00:28:57.216 A:middle
use that optimized prerendered

00:28:57.216 --> 00:28:57.596 A:middle
bitmap.

00:28:58.426 --> 00:28:59.836 A:middle
So this is great because it

00:28:59.836 --> 00:29:00.866 A:middle
means your app might be able to

