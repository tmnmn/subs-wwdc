WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:02.496 --> 00:14:05.936 A:middle
With OS Variant Thinning your

00:14:05.936 --> 00:14:07.846 A:middle
application can still target

00:14:08.806 --> 00:14:09.846 A:middle
those that are on earlier

00:14:09.846 --> 00:14:11.116 A:middle
versions of your target

00:14:11.116 --> 00:14:13.736 A:middle
platform, say in this case from

00:14:13.736 --> 00:14:15.356 A:middle
iOS 9 all the way to iOS 11.

00:14:17.246 --> 00:14:18.216 A:middle
And for those that are running

00:14:18.216 --> 00:14:20.936 A:middle
on the latest version of iOS, OS

00:14:20.936 --> 00:14:22.276 A:middle
Variant Thinning is able to

00:14:22.276 --> 00:14:23.536 A:middle
generate a special variant of

00:14:23.536 --> 00:14:25.226 A:middle
your project that has all the

00:14:25.226 --> 00:14:26.826 A:middle
latest optimizations and

00:14:26.826 --> 00:14:27.696 A:middle
compression types.

00:14:28.786 --> 00:14:31.206 A:middle
This way everybody is able to

00:14:31.206 --> 00:14:33.166 A:middle
get the most effective version

00:14:33.166 --> 00:14:34.856 A:middle
of your project and everybody's

00:14:34.856 --> 00:14:34.976 A:middle
happy.

00:14:39.516 --> 00:14:43.416 A:middle
[ Applause ]

00:14:43.916 --> 00:14:45.006 A:middle
So that was App Thinning and

00:14:45.006 --> 00:14:45.896 A:middle
backward deployment.

00:14:47.506 --> 00:14:48.586 A:middle
Now I'd like to walk you through

00:14:48.586 --> 00:14:50.246 A:middle
an example of how you can

00:14:50.246 --> 00:14:52.486 A:middle
exercise the same App Thinning

00:14:52.486 --> 00:14:54.416 A:middle
expert workflow locally within

00:14:54.446 --> 00:14:54.986 A:middle
Xcode.

00:14:56.246 --> 00:14:58.226 A:middle
It is a fairly simple process,

00:14:59.146 --> 00:15:00.436 A:middle
all you have to do is go to

