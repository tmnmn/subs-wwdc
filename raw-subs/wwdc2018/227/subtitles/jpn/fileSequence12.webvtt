WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:02.723 --> 00:12:04.958 align:start position:29% line:-1
以上がロスレス圧縮でした

00:12:05.826 --> 00:12:09.696 align:start position:23% line:-2
今から
２つのトピックについて話します

00:12:09.797 --> 00:12:12.799 align:start position:30% line:-1
互いに関連するものです

00:12:13.400 --> 00:12:18.305 align:start position:25% line:-2
先ほど話した最適化と圧縮にも
大きく関連します

00:12:19.540 --> 00:12:22.042 align:start position:14% line:-1
それは配備とApp Thinningです

00:12:25.612 --> 00:12:28.182 align:start position:14% line:-1
まずはApp Thinningの概要です

00:12:28.549 --> 00:12:31.518 align:start position:20% line:-2
App Thinningは
App Store内のプロセスです

00:12:31.618 --> 00:12:35.989 align:start position:25% line:-2
全デバイスモデルと
配備ターゲットのバージョンに

00:12:36.123 --> 00:12:39.393 align:start position:27% line:-2
プロジェクトのバリアントを
生成します

00:12:41.195 --> 00:12:45.065 align:start position:14% line:-1
App Thinningが有効な時とは？

00:12:45.566 --> 00:12:50.204 align:start position:25% line:-2
それはアプリケーションの
配備ターゲットのバージョンが

00:12:50.437 --> 00:12:53.073 align:start position:32% line:-1
最新ではない場合です

00:12:53.674 --> 00:12:56.944 align:start position:29% line:-2
そうすれば
幅広く利用されるからです

00:12:58.479 --> 00:13:04.084 align:start position:21% line:-2
App Thinningは
すべてのバリアントを自動で生成し

