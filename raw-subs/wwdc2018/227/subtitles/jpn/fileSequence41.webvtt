WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:55.255 --> 00:41:00.594 align:start position:21% line:-2
特定のGPUと機能でしかできない
シェーダを使ったり

00:41:00.694 --> 00:41:05.799 align:start position:30% line:-2
少し多めの処理が必要な
アセットを含めたり

00:41:06.233 --> 00:41:11.305 align:start position:32% line:-2
２つの例を挙げて
どうなるかを見せます

00:41:12.840 --> 00:41:16.543 align:start position:23% line:-2
NSDataAssetを用いて
説明します

00:41:16.777 --> 00:41:21.014 align:start position:16% line:-2
NSDataAssetはシンプルですが
とても強力です

00:41:21.115 --> 00:41:25.819 align:start position:23% line:-2
アセットカタログに
フレキシブルなコンテナを提供し

00:41:25.919 --> 00:41:29.356 align:start position:32% line:-2
任意のファイル周辺に
バリアントを格納

00:41:29.490 --> 00:41:33.126 align:start position:23% line:-1
画像だけでなく何でもいいのです

00:41:33.360 --> 00:41:37.498 align:start position:18% line:-1
App Thinningでこれを使い

00:41:37.598 --> 00:41:40.768 align:start position:29% line:-2
各データを各性能クラスへ
転送できます

00:41:40.868 --> 00:41:44.972 align:start position:29% line:-2
例えば ゲームの
カットシーン用の動画です

00:41:45.772 --> 00:41:51.011 align:start position:21% line:-2
性能スペクトルの中レベルの動画を
使うかもしれません

00:41:51.812 --> 00:41:55.749 align:start position:23% line:-1
またはスペクトルの最高レベルの

00:41:55.849 --> 00:42:00.788 align:start position:30% line:-2
高解像度の動画を
提供することも可能です

