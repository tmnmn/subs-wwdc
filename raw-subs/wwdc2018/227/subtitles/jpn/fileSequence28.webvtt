WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:57.044 --> 00:28:02.249 align:start position:25% line:-2
PDFのベクターアセットを
レンダリングしなくて済むので

00:28:02.349 --> 00:28:07.221 align:start position:29% line:-2
デバイスのランタイム時に
コストがかかりません

00:28:08.155 --> 00:28:10.891 align:start position:27% line:-1
安心してベクターを使えます

00:28:11.258 --> 00:28:16.163 align:start position:27% line:-2
さてアセットには
最も自然なサイズがあります

00:28:16.263 --> 00:28:18.298 align:start position:30% line:-1
しかし場合によっては―

00:28:18.398 --> 00:28:23.203 align:start position:21% line:-2
違う大きさで
アセットを表示したい時もあります

00:28:23.604 --> 00:28:28.175 align:start position:14% line:-1
昨年からiOS 11とXcode 9では

00:28:28.275 --> 00:28:30.744 align:start position:25% line:-1
ベクターデータを保存できます

00:28:31.078 --> 00:28:35.215 align:start position:27% line:-2
ですから
その画像を自然なサイズより

00:28:35.315 --> 00:28:39.152 align:start position:23% line:-1
大きな画像ビューに入れられます

00:28:39.253 --> 00:28:42.823 align:start position:21% line:-2
そして元のPDFベクターデータを
見つけます

00:28:42.990 --> 00:28:46.160 align:start position:27% line:-2
これは無関係なメタデータや
プロファイルとは

00:28:46.293 --> 00:28:49.463 align:start position:25% line:-1
切り離されてスリムな状態です

00:28:49.730 --> 00:28:54.301 align:start position:30% line:-2
サイズを変える場合のみ
再度ラスタライズします

00:28:54.401 --> 00:28:57.805 align:start position:30% line:-2
それ以外は最適化された
ビットマップを使います

00:28:58.338 --> 00:29:03.143 align:start position:27% line:-2
アプリケーションは
より柔軟に動的タイプに対応

