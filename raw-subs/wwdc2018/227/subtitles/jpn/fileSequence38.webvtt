WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:55.476 --> 00:38:00.647 align:start position:29% line:-2
２つ目はグラフィックスの
クラスを使う方法です

00:38:00.748 --> 00:38:03.717 align:start position:23% line:-1
実際には２つのものに対応します

00:38:03.851 --> 00:38:07.454 align:start position:20% line:-1
１つ目がMetalのバージョンです

00:38:07.554 --> 00:38:11.491 align:start position:20% line:-1
それはGPUのコンセプトと同じです

00:38:11.692 --> 00:38:17.865 align:start position:23% line:-2
またデバイスの
特定のプロセッサにも一致します

00:38:18.098 --> 00:38:21.001 align:start position:25% line:-1
Metal 1はA7に対応し

00:38:21.101 --> 00:38:25.005 align:start position:20% line:-1
Metal 4はA11に対応します

00:38:25.138 --> 00:38:27.975 align:start position:27% line:-1
各グラフィックスのクラスに

00:38:28.075 --> 00:38:31.779 align:start position:21% line:-1
アセットを分類し割り当てられます

00:38:32.813 --> 00:38:36.049 align:start position:27% line:-1
どちらかだけでも強力ですが

00:38:36.149 --> 00:38:41.688 align:start position:27% line:-2
両方の特徴を組み合わせると
非常に興味深いのです

00:38:41.789 --> 00:38:45.792 align:start position:29% line:-2
性能のマトリックスを作り
アセットの適応先が

00:38:45.893 --> 00:38:49.797 align:start position:23% line:-1
どこになるか確認してみましょう

00:38:51.865 --> 00:38:53.434 align:start position:32% line:-1
具体的にどう働くか？

00:38:54.201 --> 00:38:57.838 align:start position:23% line:-1
簡単な例を使って説明しましょう

00:38:57.938 --> 00:39:02.843 align:start position:25% line:-2
これが仕組みを理解し
利用するためのキーとなります

