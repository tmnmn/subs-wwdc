WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:00.621 --> 00:27:01.455 align:start position:45% line:-1
どうも

00:27:01.555 --> 00:27:03.624 align:start position:43% line:-1
(拍手)

00:27:04.591 --> 00:27:07.561 align:start position:29% line:-1
次はベクターアセットです

00:27:08.362 --> 00:27:13.233 align:start position:30% line:-2
ディスプレイの解像度は
製品によって異なるので

00:27:13.333 --> 00:27:19.773 align:start position:18% line:-2
ターゲットに合わせ1x 2x 3xの
アセットを作成します

00:27:20.007 --> 00:27:22.209 align:start position:29% line:-1
これでうまくいっています

00:27:22.509 --> 00:27:27.481 align:start position:21% line:-2
しかしデザインごとに
アセットを２～３つも納品するのは

00:27:27.948 --> 00:27:30.050 align:start position:36% line:-1
無駄とも言えます

00:27:30.684 --> 00:27:33.854 align:start position:27% line:-1
アセット１つで対応可能か？

00:27:33.954 --> 00:27:39.426 align:start position:25% line:-2
アセットカタログのPDF用
ベクターアセットなら可能です

00:27:39.626 --> 00:27:43.096 align:start position:23% line:-1
Xcodeのアセットカタログは

00:27:43.464 --> 00:27:45.532 align:start position:36% line:-1
PDFを扱えます

00:27:45.732 --> 00:27:49.469 align:start position:21% line:-1
XcodeがPDFを必要な倍率に

00:27:49.570 --> 00:27:52.639 align:start position:23% line:-1
自動で生成しラスタライズします

00:27:53.240 --> 00:27:56.210 align:start position:29% line:-2
これで異なるターゲットに
適用できます

00:27:57.044 --> 00:28:02.249 align:start position:25% line:-2
PDFのベクターアセットを
レンダリングしなくて済むので

