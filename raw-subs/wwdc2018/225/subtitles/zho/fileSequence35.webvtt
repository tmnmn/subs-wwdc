WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:59.106 --> 00:35:00.946 A:middle
这种洞察力可以告诉我们

00:35:00.946 --> 00:35:02.426 A:middle
在我们的 App 中

00:35:02.756 --> 00:35:04.466 A:middle
发生了什么错误

00:35:05.476 --> 00:35:06.516 A:middle
因为最后个项目

00:35:06.516 --> 00:35:07.696 A:middle
重新加载中的删除和

00:35:07.696 --> 00:35:10.376 A:middle
项目的移动概念相冲突

00:35:10.476 --> 00:35:10.796 A:middle
好的

00:35:10.846 --> 00:35:12.006 A:middle
所以当我们回到代码中

00:35:12.006 --> 00:35:14.396 A:middle
我们可以一分钟内解决这个问题

00:35:14.396 --> 00:35:15.906 A:middle
好的 我不打算检查

00:35:15.906 --> 00:35:17.866 A:middle
这些 但是你可以稍后解释

00:35:17.866 --> 00:35:18.996 A:middle
只是把它放在这里作参考

00:35:18.996 --> 00:35:22.346 A:middle
这些都会导致 CollectionView 崩溃

00:35:22.726 --> 00:35:23.576 A:middle
不要这样做

00:35:23.716 --> 00:35:27.486 A:middle
我们如何获取所有这些

00:35:27.486 --> 00:35:29.176 A:middle
知识并简化它

00:35:29.176 --> 00:35:30.746 A:middle
以这样一种方式来使用它

00:35:30.746 --> 00:35:32.456 A:middle
我们总是可以从给定的    

00:35:32.456 --> 00:35:34.016 A:middle
CollectionView 或 TableView   

00:35:34.016 --> 00:35:35.026 A:middle
中应用我们的数据源更新

00:35:35.026 --> 00:35:36.826 A:middle
并确保所有的东西都同步

00:35:37.056 --> 00:35:37.426 A:middle
好的

00:35:37.496 --> 00:35:38.796 A:middle
所以这是四项基本的原则

00:35:39.446 --> 00:35:40.176 A:middle
所以首先你想要

00:35:40.176 --> 00:35:41.466 A:middle
分解这些动作

00:35:41.466 --> 00:35:42.336 A:middle
删除然后插入

00:35:42.556 --> 00:35:44.776 A:middle
简单 将所有删除和插入

00:35:44.776 --> 00:35:45.796 A:middle
组合到两个

00:35:45.796 --> 00:35:48.536 A:middle
单独的列表中 

00:35:48.536 --> 00:35:50.546 A:middle
首先在索引路径上

00:35:50.546 --> 00:35:52.396 A:middle
按降序顺序进行删除

00:35:52.396 --> 00:35:54.176 A:middle
最后按升序索引路径

00:35:54.246 --> 00:35:55.636 A:middle
应用这些插入

00:35:55.776 --> 00:35:59.586 A:middle
做到这一点 就很好往下进行了

00:35:59.816 --> 00:36:00.826 A:middle
重新加载数据怎么样

