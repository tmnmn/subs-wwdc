WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:00.216 --> 00:29:01.386 A:middle
我们为什么不回到

00:29:01.386 --> 00:29:03.616 A:middle
开发机器 Mohammed     

00:29:03.776 --> 00:29:04.996 A:middle
你何不给我们展示一下 这个是怎么操作的呢

00:29:06.096 --> 00:29:08.416 A:middle
&gt;&gt; 当然    

00:29:08.636 --> 00:29:11.226 A:middle
好的 所以我们

00:29:11.226 --> 00:29:13.216 A:middle
同时做了很多动画的更新

00:29:14.036 --> 00:29:15.606 A:middle
所以你可能会认识到

00:29:15.606 --> 00:29:17.206 A:middle
UICollectionView 和 UITableView 提供给 

00:29:17.206 --> 00:29:19.576 A:middle
我们 一个多么伟大的工具    

00:29:19.576 --> 00:29:21.236 A:middle
正是执行批量更新 API       

00:29:21.936 --> 00:29:24.266 A:middle
它基本上可以允许我们

00:29:24.266 --> 00:29:26.636 A:middle
通过集合视图

00:29:26.636 --> 00:29:28.036 A:middle
可以在动画执行的同时

00:29:28.036 --> 00:29:29.736 A:middle
执行一组更新

00:29:30.606 --> 00:29:33.226 A:middle
所以我要给   

00:29:33.486 --> 00:29:34.126 A:middle
CollectionView PerformBatchUpdates    

00:29:34.186 --> 00:29:36.426 A:middle
添加一个调用 并且注意            

00:29:36.426 --> 00:29:37.646 A:middle
我在关闭这里做了

00:29:37.646 --> 00:29:38.896 A:middle
我的数据源更新和

00:29:38.896 --> 00:29:40.856 A:middle
我的 CollectionView 的更新          

00:29:41.256 --> 00:29:43.196 A:middle
这实际上是一种最佳方式

00:29:43.196 --> 00:29:45.486 A:middle
协调我的更新

00:29:45.606 --> 00:29:47.576 A:middle
并保持事物的整齐同步

00:29:47.576 --> 00:29:49.676 A:middle
避免事物不一致

00:29:50.836 --> 00:29:53.356 A:middle
所以 首先 我在我的数据源上

00:29:53.356 --> 00:29:57.586 A:middle
更新了我的最后一个项目

00:29:57.666 --> 00:29:59.476 A:middle
我把第二个项目移动到最后

00:29:59.476 --> 00:30:01.316 A:middle
一个项目中 选中最后一个项目

