WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.946 --> 00:34:01.206 A:middle
在 PerformBatchUpdate 中发生了什么 

00:34:01.206 --> 00:34:02.786 A:middle
你的数据源处于之前状态

00:34:04.046 --> 00:34:05.466 A:middle
现在一旦所有事情

00:34:05.466 --> 00:34:07.156 A:middle
在批量更新中完成

00:34:07.276 --> 00:34:08.025 A:middle
你将处于一个后续状态

00:34:08.606 --> 00:34:10.906 A:middle
好的 所以对于删除而言

00:34:10.966 --> 00:34:13.275 A:middle
索引路径总是指向前级

00:34:13.686 --> 00:34:15.326 A:middle
所以这就是删除

00:34:15.326 --> 00:34:18.226 A:middle
所以插入是按

00:34:18.335 --> 00:34:20.255 A:middle
升序索引路径顺序进行处理的

00:34:20.846 --> 00:34:23.346 A:middle
因此 插入中的索引

00:34:23.346 --> 00:34:25.376 A:middle
路径总是指向

00:34:25.446 --> 00:34:27.116 A:middle
最终状态或者

00:34:27.255 --> 00:34:28.206 A:middle
后更新阶段

00:34:29.636 --> 00:34:30.946 A:middle
所以 移动是这两者的结合

00:34:30.946 --> 00:34:31.436 A:middle
对吧

00:34:31.436 --> 00:34:33.485 A:middle
你有一个来和一个去的索引

00:34:33.485 --> 00:34:35.235 A:middle
路径 来是处于

00:34:35.235 --> 00:34:39.366 A:middle
之前状态 好的 去是处于后续状态

00:34:39.806 --> 00:34:42.545 A:middle
重新加载 现在如果你愿意

00:34:42.545 --> 00:34:44.186 A:middle
重新加载算一个超级命令

00:34:44.186 --> 00:34:46.096 A:middle
它实际上可以分解成为

00:34:46.096 --> 00:34:47.876 A:middle
一个删除和一个插入

00:34:48.416 --> 00:34:51.266 A:middle
重新加载中指定的

00:34:51.266 --> 00:34:55.016 A:middle
索引路径是关于前状态的

00:34:56.126 --> 00:34:57.776 A:middle
好的 所以既然我们已经

00:34:57.776 --> 00:34:59.106 A:middle
了解了重新加载是干什么的

00:34:59.106 --> 00:35:00.946 A:middle
这种洞察力可以告诉我们

