WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.136 --> 00:19:01.906 A:middle
核心自定义布局子集中的第四个

00:19:01.976 --> 00:19:04.106 A:middle
就是 Prepare 方法 

00:19:04.106 --> 00:19:05.396 A:middle
现在 Mohammed 已经讲了  

00:19:05.396 --> 00:19:06.706 A:middle
一些这方面的事情 

00:19:06.706 --> 00:19:08.266 A:middle
每当布局无效时 

00:19:08.266 --> 00:19:09.346 A:middle
就调用这个 

00:19:09.406 --> 00:19:11.226 A:middle
所以这是计算一切的

00:19:11.226 --> 00:19:12.436 A:middle
有利时机 比如

00:19:12.436 --> 00:19:13.486 A:middle
你想要缓存的布局属性

00:19:13.486 --> 00:19:16.206 A:middle
和你的内容大小

00:19:16.206 --> 00:19:18.976 A:middle
之后很快就会要求这些事情 

00:19:23.456 --> 00:19:25.326 A:middle
好的 所以我们值得骄傲的  

00:19:25.326 --> 00:19:27.066 A:middle
API 让我们谈论一下它吧

00:19:27.066 --> 00:19:28.316 A:middle
这是一个为边界变更设置的   

00:19:28.316 --> 00:19:29.856 A:middle
ShouldInvalidateLayout       

00:19:30.766 --> 00:19:33.046 A:middle
所以每次 CollectionView 的 

00:19:33.046 --> 00:19:34.126 A:middle
边界改变时

00:19:34.126 --> 00:19:34.876 A:middle
都会被调用

00:19:35.066 --> 00:19:36.366 A:middle
好的 再一次 它是 CollectionView  

00:19:36.366 --> 00:19:38.566 A:middle
是 UIScrollView 的一个子集     

00:19:38.566 --> 00:19:41.216 A:middle
所以边界发生变化 究竟是什么意思 

00:19:41.216 --> 00:19:43.206 A:middle
当一个 ScrollView 边界发生改变 

00:19:43.206 --> 00:19:45.406 A:middle
原点可以在滚动期间  

00:19:45.406 --> 00:19:47.246 A:middle
发生改变  

00:19:47.246 --> 00:19:48.546 A:middle
当 App 大小改变   

00:19:48.546 --> 00:19:50.366 A:middle
或者 CollectionView 的大小改变时 

00:19:50.366 --> 00:19:51.726 A:middle
其大小也会发生改变  

00:19:51.726 --> 00:19:53.996 A:middle
所以这将会在滚动过程中被调用  

00:19:55.116 --> 00:19:56.996 A:middle
是的 就像表情符号 

00:19:56.996 --> 00:19:58.196 A:middle
这经常被调用

00:19:58.196 --> 00:20:00.126 A:middle
所以在这里做出正确的决定

