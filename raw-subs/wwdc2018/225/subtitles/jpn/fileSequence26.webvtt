WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.926 --> 00:26:03.464 align:start position:32% line:-2
この関数は配列全体を
フィルタにかけます

00:26:03.564 --> 00:26:08.202 align:start position:27% line:-2
そのためアイテムが増えると
作業が大変になります

00:26:08.302 --> 00:26:12.840 align:start position:23% line:-2
写真が増えると
スクロールの速度が落ちるのです

00:26:14.541 --> 00:26:20.414 align:start position:25% line:-2
こういう時は 一段階前に戻り
レイアウトの性質と

00:26:20.514 --> 00:26:23.817 align:start position:25% line:-1
最適化について考えてください

00:26:24.184 --> 00:26:26.487 align:start position:29% line:-1
レイアウトの要求は何か？

00:26:27.688 --> 00:26:30.824 align:start position:21% line:-1
それは アプリケーションのセルが

00:26:30.924 --> 00:26:33.260 align:start position:29% line:-1
上下 左右に並ぶことです

00:26:33.427 --> 00:26:37.698 align:start position:30% line:-2
つまり属性は既に
キャッシュ属性配列内で

00:26:37.798 --> 00:26:42.135 align:start position:32% line:-2
フレームの最低Ｙ値で
並べられているのです

00:26:43.704 --> 00:26:45.172 align:start position:32% line:-1
配列はソート済みです

00:26:45.272 --> 00:26:49.042 align:start position:29% line:-2
従って フィルタではなく
２分探索を使うと

00:26:49.142 --> 00:26:52.980 align:start position:23% line:-1
検索を迅速に行うことができます

00:26:53.614 --> 00:26:56.417 align:start position:29% line:-1
まずスピードの遅い実装を

00:26:57.151 --> 00:26:59.319 align:start position:38% line:-1
削除しましょう

00:26:59.486 --> 00:27:02.322 align:start position:23% line:-1
そして 速いものと入れ替えます

