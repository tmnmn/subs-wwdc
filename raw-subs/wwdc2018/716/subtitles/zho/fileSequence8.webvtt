WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.513 --> 00:08:02.416 align:middle line:-2
你将得到的
首先是确定性行为

00:08:02.916 --> 00:08:06.987 align:middle line:-1
你知道要引用的算法的性能

00:08:07.254 --> 00:08:08.355 align:middle line:-1
你知道会发生什么

00:08:08.755 --> 00:08:12.025 align:middle line:-1
你可以通过让你的app更具前瞻性

00:08:12.326 --> 00:08:13.927 align:middle line:-1
从而避免像这样的错误

00:08:13.994 --> 00:08:16.296 align:middle line:-1
即若干年后

00:08:16.363 --> 00:08:17.631 align:middle line:-1
如果我们弃用某些版本

00:08:18.031 --> 00:08:20.667 align:middle line:-1
那么你今天就可以引用它了

00:08:25.506 --> 00:08:29.109 align:middle line:-2
让我们更深入了解一下
如何与Vision API交互

00:08:32.078 --> 00:08:34.214 align:middle line:-2
我们首先看一个
图像请求处理程序的例子

00:08:35.549 --> 00:08:37.183 align:middle line:-1
你应该还记得图像请求处理程序

00:08:37.251 --> 00:08:40.687 align:middle line:-2
用于处理同一图像上的
一个或多个请求

00:08:42.523 --> 00:08:44.958 align:middle line:-2
它通过缓存一些信息
如图像衍生物和请求结果

00:08:45.025 --> 00:08:46.960 align:middle line:-1
来进行优化

00:08:47.227 --> 00:08:50.631 align:middle line:-1
以便即将处理的连续请求

00:08:51.064 --> 00:08:52.232 align:middle line:-1
可以使用此信息

00:08:53.333 --> 00:08:54.501 align:middle line:0
让我们看一下代码示例

00:08:56.904 --> 00:08:58.438 align:middle line:0
在我们深入研究代码示例之前

00:08:58.505 --> 00:08:59.907 align:middle line:0
我想强调几点

00:08:59.973 --> 00:09:02.509 align:middle line:0
关于此次演讲中的代码示例的问题

