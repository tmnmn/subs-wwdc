WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.967 --> 00:10:01.134 align:middle line:0
我得到的是什么呢？

00:10:01.201 --> 00:10:02.970 align:middle line:0
我得到了一个
FaceObservation对象

00:10:03.237 --> 00:10:05.372 align:middle line:0
该对象中最重要的字段之一

00:10:05.439 --> 00:10:07.407 align:middle line:0
是面部所在的边界框

00:10:09.409 --> 00:10:11.078 align:middle line:0
让我们再看看这张幻灯片

00:10:11.144 --> 00:10:13.714 align:middle line:-2
前三行代码几乎是你为了
找到图片中所有面孔

00:10:13.780 --> 00:10:16.283 align:middle line:-2
所要做的全部
那不是很酷吗？

00:10:19.486 --> 00:10:20.320 align:middle line:-1
谢谢

00:10:22.723 --> 00:10:24.925 align:middle line:-2
现在让我们看看
序列请求处理程序

00:10:27.895 --> 00:10:29.496 align:middle line:-2
如果你还记得
序列请求处理程序

00:10:29.563 --> 00:10:34.001 align:middle line:-2
用于处理特定操作
例如跟踪帧序列

00:10:35.402 --> 00:10:37.304 align:middle line:0
让我们看看代码示例
此代码示例

00:10:37.371 --> 00:10:40.507 align:middle line:0
几乎是我们用Vision API
可以实现的

00:10:40.574 --> 00:10:42.376 align:middle line:0
最简单的跟踪序列

00:10:43.810 --> 00:10:46.146 align:middle line:0
首先 我将创建我的
SequenceRequestHandler

00:10:47.414 --> 00:10:50.117 align:middle line:0
然后 我需要指定要跟踪的对象

00:10:50.184 --> 00:10:51.885 align:middle line:0
我通过创建一个

00:10:51.952 --> 00:10:53.887 align:middle line:0
DetectedObjectObservation
对象来做到这点

00:10:53.954 --> 00:10:57.491 align:middle line:0
它为我们提供了一个位置参数
一个边界框

00:10:58.792 --> 00:11:01.061 align:middle line:0
接下来我将开始跟踪信号

