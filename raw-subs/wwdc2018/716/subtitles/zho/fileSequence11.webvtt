WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.792 --> 00:11:01.061 align:middle line:0
接下来我将开始跟踪信号

00:11:01.695 --> 00:11:04.164 align:middle line:0
在这个例子中
我将在连续的5个帧中

00:11:04.231 --> 00:11:05.632 align:middle line:0
跟踪我的对象

00:11:06.800 --> 00:11:08.235 align:middle line:0
让我们看看序列如何工作

00:11:08.735 --> 00:11:10.938 align:middle line:0
首先 我有个
frameFeeder对象

00:11:11.004 --> 00:11:13.674 align:middle line:0
你使用的可能是相机输入等

00:11:14.241 --> 00:11:15.542 align:middle line:0
这是我获取帧的地方

00:11:16.510 --> 00:11:19.112 align:middle line:0
我得到了帧 创建了请求对象

00:11:19.179 --> 00:11:23.884 align:middle line:0
并将DetectedObjectObservation
作为参数传递给其初始化程序

00:11:24.218 --> 00:11:26.887 align:middle line:0
这就是我在循环开始之前创建的东西

00:11:28.689 --> 00:11:31.959 align:middle line:0
然后 我将要求我的
requestHandler处理请求

00:11:33.660 --> 00:11:35.562 align:middle line:0
我现在要查看结果

00:11:35.629 --> 00:11:38.632 align:middle line:0
这就是我分析结果
并继续处理它们的地方

00:11:39.233 --> 00:11:43.470 align:middle line:0
最后一步非常重要
我在这里做的是

00:11:43.737 --> 00:11:45.772 align:middle line:0
我从当前迭代中获取结果

00:11:45.839 --> 00:11:48.041 align:middle line:0
并将其传递给下一次迭代

00:11:48.242 --> 00:11:50.277 align:middle line:0
因此当下一个迭代请求被创建时

00:11:50.344 --> 00:11:51.845 align:middle line:0
我想在其中看到这些结果

00:11:53.580 --> 00:11:55.916 align:middle line:0
如果我在一个包含5帧的序列中
运行它

00:11:55.983 --> 00:11:57.818 align:middle line:0
我的结果会是这样的

