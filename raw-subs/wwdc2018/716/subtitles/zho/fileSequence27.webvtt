WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:00.287 --> 00:27:02.456 align:middle line:-1
还有一个RectangleObservation

00:27:02.990 --> 00:27:04.958 align:middle line:-1
其有四个额外的属性

00:27:05.025 --> 00:27:07.127 align:middle line:-1
来表示矩形的顶点

00:27:07.861 --> 00:27:09.396 align:middle line:-2
现在你可能会说
既然有了边界框

00:27:09.463 --> 00:27:11.331 align:middle line:-1
为什么还需要矩形的顶点呢？

00:27:12.332 --> 00:27:14.234 align:middle line:-1
当你跟踪矩形时

00:27:14.735 --> 00:27:16.937 align:middle line:-1
它们是现实生活中的矩形物体

00:27:17.004 --> 00:27:19.640 align:middle line:-2
当它们投射到帧中时
可能看起来有所不同

00:27:20.073 --> 00:27:22.075 align:middle line:-1
例如 它们可能看起来像梯形

00:27:23.510 --> 00:27:26.747 align:middle line:-2
所以这种情况下的边界框
不是矩形本身

00:27:26.813 --> 00:27:28.182 align:middle line:-1
而是包含矩形所有顶点的

00:27:28.248 --> 00:27:30.184 align:middle line:-1
最小的框

00:27:33.720 --> 00:27:34.855 align:middle line:-1
现在让我们看看演示

00:27:36.290 --> 00:27:37.958 align:middle line:-2
（演示
在Vision中进行跟踪）

00:27:47.401 --> 00:27:50.037 align:middle line:-2
我这里有一个示例app
顺便说一下

00:27:50.103 --> 00:27:52.706 align:middle line:-1
你可以从WWDC网站下载它

00:27:52.773 --> 00:27:54.741 align:middle line:-1
链接就在此演讲旁边

00:27:55.442 --> 00:27:58.011 align:middle line:-1
该app可以处理一个视频

00:27:59.479 --> 00:28:01.315 align:middle line:-1
它将该视频解析为帧

