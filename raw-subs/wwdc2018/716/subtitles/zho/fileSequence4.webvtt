WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.773 --> 00:04:03.076 align:middle line:-2
我们会将其输入神经网络
以获取当前请求的结果

00:04:03.143 --> 00:04:06.280 align:middle line:-2
但我们也会在请求处理程序对象上
缓存该信息

00:04:06.613 --> 00:04:08.215 align:middle line:-1
所以当下一个请求到来时

00:04:08.282 --> 00:04:10.884 align:middle line:-2
如果它需要使用相同的格式
它已经存在于那里了

00:04:10.951 --> 00:04:12.519 align:middle line:-1
因此不需要重新计算

00:04:13.253 --> 00:04:15.889 align:middle line:0
我们也会缓存从请求中获得的结果

00:04:15.956 --> 00:04:17.958 align:middle line:0
从而使其它请求可以在管道中使用它

00:04:18.024 --> 00:04:21.161 align:middle line:0
我们将稍后再讨论管道

00:04:22.930 --> 00:04:24.765 align:middle line:0
让我们来看看序列请求处理程序

00:04:25.566 --> 00:04:28.769 align:middle line:0
序列请求处理程序用于处理特定操作

00:04:28.836 --> 00:04:31.672 align:middle line:0
例如在一系列帧中进行跟踪

00:04:32.339 --> 00:04:35.576 align:middle line:0
它在内部所做的是
它缓存了该操作的状态

00:04:35.642 --> 00:04:38.378 align:middle line:0
从一帧到另一帧
再到另一帧的整个序列

00:04:39.580 --> 00:04:43.483 align:middle line:0
在Vision中 它用于处理跟踪
和图像配准请求

00:04:43.917 --> 00:04:46.720 align:middle line:0
所有其它请求都使用我们的
图像请求处理程序来处理

00:04:51.124 --> 00:04:52.259 align:middle line:-1
让我们来看看结果

00:04:52.693 --> 00:04:54.895 align:middle line:-2
Vision的结果
以观察的形式呈现

00:04:55.362 --> 00:05:01.034 align:middle line:-2
Observation是从VNObservation类
派生的一系列类

