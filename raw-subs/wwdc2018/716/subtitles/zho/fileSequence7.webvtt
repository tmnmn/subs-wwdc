WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.352 --> 00:07:00.454 align:middle line:-2
你通过指定请求的
revision属性

00:07:00.521 --> 00:07:02.689 align:middle line:-1
告诉我们你要使用哪一个

00:07:03.991 --> 00:07:05.392 align:middle line:-1
这就是显式行为

00:07:05.792 --> 00:07:07.361 align:middle line:-1
但我们也有默认行为

00:07:07.761 --> 00:07:11.164 align:middle line:-2
如果你创建了一个请求对象
并且你根本没有告诉我们任何东西

00:07:11.231 --> 00:07:14.201 align:middle line:-2
然后你开始处理该请求
以下是将要发生的事情

00:07:14.801 --> 00:07:18.972 align:middle line:-1
默认情况下 你将得到你的app

00:07:19.306 --> 00:07:20.974 align:middle line:-1
所连接的SDK的

00:07:21.308 --> 00:07:23.610 align:middle line:-1
最新版本

00:07:24.044 --> 00:07:26.380 align:middle line:-2
理解这一点很重要
我将举一个例子

00:07:27.014 --> 00:07:30.050 align:middle line:-1
假设你的app连接到去年的SDK

00:07:30.651 --> 00:07:32.753 align:middle line:-1
去年 我们只有一个检测器

00:07:33.253 --> 00:07:34.955 align:middle line:-1
所以这就是你将使用的检测器

00:07:35.455 --> 00:07:38.058 align:middle line:-2
即使你将该app运行在
当前操作系统上

00:07:38.125 --> 00:07:39.359 align:middle line:-1
而没有进行编译

00:07:40.527 --> 00:07:43.397 align:middle line:-1
另一方面 如果你重新编译app

00:07:43.463 --> 00:07:47.100 align:middle line:-2
使用当前的SDK
而不更改一行代码或坐标

00:07:47.167 --> 00:07:49.937 align:middle line:-2
并且你在当前操作系统上运行它
默认情况下你将得到

00:07:50.003 --> 00:07:53.040 align:middle line:-2
第二个修正版本
因为这是当前SDK中的方式

00:07:54.708 --> 00:07:57.277 align:middle line:-2
我们强烈建议你的app
应该具有前瞻性

00:07:57.344 --> 00:07:58.912 align:middle line:-1
并引用明确的修正版本

00:07:59.513 --> 00:08:02.416 align:middle line:-2
你将得到的
首先是确定性行为

