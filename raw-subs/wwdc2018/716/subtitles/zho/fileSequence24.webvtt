WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.238 --> 00:24:01.208 align:middle line:-1
并在接下来尝试在帧序列中查找它

00:24:02.142 --> 00:24:03.944 align:middle line:-1
此类app的例子有什么呢？

00:24:04.511 --> 00:24:06.213 align:middle line:-1
你可能已经看过很多了

00:24:06.813 --> 00:24:10.284 align:middle line:-1
比如实时评注体育赛事

00:24:10.350 --> 00:24:12.786 align:middle line:-2
相机的跟踪对焦
以及很多其它的app

00:24:15.422 --> 00:24:17.291 align:middle line:-1
你可能会说如果我能对序列中的

00:24:17.357 --> 00:24:19.993 align:middle line:-2
每一帧进行检测
那为什么还要使用跟踪呢？

00:24:20.827 --> 00:24:22.529 align:middle line:-1
原因有多种

00:24:23.063 --> 00:24:25.966 align:middle line:-1
首先 你可能没有一个特定的跟踪器

00:24:26.033 --> 00:24:28.235 align:middle line:-1
来跟踪你想跟踪的每种类型的对象

00:24:28.869 --> 00:24:31.305 align:middle line:-2
假设你想跟踪面孔
你很幸运

00:24:31.772 --> 00:24:33.440 align:middle line:-1
因为你可以使用面部检测器

00:24:34.041 --> 00:24:37.110 align:middle line:-1
但如果你需要跟踪特定品种的鸟

00:24:37.811 --> 00:24:39.646 align:middle line:-1
你可能没有那个检测器

00:24:39.713 --> 00:24:42.382 align:middle line:-1
现在你必须创建那个特定的检测器

00:24:42.449 --> 00:24:46.386 align:middle line:-1
你可能不想这样做

00:24:46.453 --> 00:24:48.589 align:middle line:-1
因为你的app还有别的事情要处理

00:24:50.390 --> 00:24:52.759 align:middle line:-2
但我们假设你很幸运
你正在跟踪面孔

00:24:52.993 --> 00:24:54.394 align:middle line:-1
那你应该使用检测器吗

00:24:55.128 --> 00:24:57.364 align:middle line:-1
也许在这种情况下也不应该

00:24:58.065 --> 00:24:59.333 align:middle line:-1
让我们看看这个例子

