WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.058 --> 00:26:00.561 align:middle line:-1
跟踪器通常是轻量级算法

00:26:00.627 --> 00:26:03.630 align:middle line:-2
而探测器通常会
在设备上运行神经网络

00:26:03.697 --> 00:26:04.698 align:middle line:-1
这会花费更长时间

00:26:05.999 --> 00:26:09.436 align:middle line:-1
此外 如果你需要在图形用户界面上

00:26:09.503 --> 00:26:11.438 align:middle line:-2
显示跟踪信息
你可能会发现

00:26:11.505 --> 00:26:13.774 align:middle line:-1
跟踪器更平滑而且不那么抖动

00:26:17.244 --> 00:26:20.113 align:middle line:-2
还记得吗 在第一张幻灯片中
我请你记住

00:26:23.217 --> 00:26:25.018 align:middle line:-2
这三个词
什么 如何和结果

00:26:25.853 --> 00:26:29.223 align:middle line:-2
让我们看看它们如何
映射到跟踪用例中

00:26:30.958 --> 00:26:31.792 align:middle line:-1
首先

00:26:32.993 --> 00:26:33.827 align:middle line:-1
是请求

00:26:34.361 --> 00:26:37.731 align:middle line:-2
在Vision中
我们有两种类型的跟踪请求

00:26:38.165 --> 00:26:40.133 align:middle line:-1
一个是通用的对象跟踪器

00:26:40.200 --> 00:26:42.035 align:middle line:-1
另一个是矩形对象跟踪器

00:26:42.936 --> 00:26:43.770 align:middle line:-1
如何？

00:26:44.505 --> 00:26:45.906 align:middle line:-1
正如你现在应该猜到的那样

00:26:45.973 --> 00:26:48.075 align:middle line:-1
我们将使用序列请求处理程序

00:26:49.743 --> 00:26:50.577 align:middle line:-1
结果

00:26:51.578 --> 00:26:53.247 align:middle line:-1
这里有两种重要的类型

00:26:53.313 --> 00:26:56.950 align:middle line:-2
一个是DetectedObjectObservation
其中有一个重要属性

00:26:57.017 --> 00:26:59.453 align:middle line:-2
即boundingBox
它告诉你对象的位置

