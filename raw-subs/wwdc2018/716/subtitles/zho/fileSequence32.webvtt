WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.452 --> 00:32:00.087 align:middle line:-1
让我们看一下观察对象

00:32:08.028 --> 00:32:09.997 align:middle line:0
这里有几个重要的字段

00:32:10.063 --> 00:32:12.032 align:middle line:0
这是我们讨论过的唯一ID

00:32:12.799 --> 00:32:15.602 align:middle line:0
这是我们在标准化坐标中的边界框

00:32:17.971 --> 00:32:20.841 align:middle line:-2
如果我一直运行下来
我将命中这个断点

00:32:21.108 --> 00:32:23.911 align:middle line:-2
因为这个例子中我们没有使用它
它是用于矩形对象的

00:32:26.346 --> 00:32:28.916 align:middle line:-1
这是我创建序列请求处理程序的地方

00:32:30.884 --> 00:32:32.286 align:middle line:-1
这是我的帧计数器

00:32:33.854 --> 00:32:35.622 align:middle line:-1
这是如果出现问题时的标志

00:32:36.623 --> 00:32:38.926 align:middle line:-1
现在我终于要开始跟踪序列了

00:32:39.493 --> 00:32:41.328 align:middle line:-2
正如你所看到的
这是一个无限循环

00:32:41.728 --> 00:32:43.463 align:middle line:-1
退出该循环的条件是

00:32:43.530 --> 00:32:47.000 align:middle line:-1
用户请求取消或者视频已经结束

00:32:51.271 --> 00:32:53.574 align:middle line:-1
我要初始化

00:32:54.875 --> 00:32:56.009 align:middle line:-1
rects结构

00:32:56.076 --> 00:32:58.946 align:middle line:-1
来保存稍后要显示的

00:32:59.012 --> 00:33:02.850 align:middle line:-2
图形用户界面的信息
并且我将开始遍历

