WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:57.911 --> 00:23:02.049 align:middle line:-2
Clang要查找并处理
800多个头文件夹

00:23:02.282 --> 00:23:04.318 align:middle line:-1
只为一个导入声明

00:23:05.519 --> 00:23:10.891 align:middle line:-2
也就是要解析和验证
大于9兆的源代码

00:23:11.792 --> 00:23:15.062 align:middle line:-2
每次调用编译器
都是如此

00:23:15.495 --> 00:23:18.131 align:middle line:-2
这个工作量很大
很冗余

00:23:18.999 --> 00:23:19.833 align:middle line:-1
所以

00:23:20.901 --> 00:23:21.835 align:middle line:-1
怎么改善？

00:23:23.971 --> 00:23:27.875 align:middle line:-2
这里有个功能叫做
预编译头文件

00:23:27.941 --> 00:23:29.910 align:middle line:-1
这是个好办法

00:23:30.544 --> 00:23:31.812 align:middle line:-1
但还有更好的

00:23:32.145 --> 00:23:35.048 align:middle line:-2
几年前
我们发布了Clang模块

00:23:36.283 --> 00:23:40.020 align:middle line:-2
Clang模块只允许我们
为框架查找和解析头文件

00:23:40.087 --> 00:23:41.955 align:middle line:-1
一次

00:23:42.322 --> 00:23:47.528 align:middle line:-2
然后储存到硬盘
缓存并可以再利用

00:23:48.295 --> 00:23:51.031 align:middle line:-1
这可以提升构建速度

00:23:53.867 --> 00:23:54.801 align:middle line:-1
要实现它

00:23:55.369 --> 00:23:57.905 align:middle line:-2
Clang模块
要具备特定的属性

00:23:59.406 --> 00:24:02.943 align:middle line:-2
最重要的一点是
上下文无关

