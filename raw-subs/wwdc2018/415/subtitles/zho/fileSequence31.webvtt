WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:57.925 --> 00:31:01.195 align:middle line:-2
这种情况常见于
将同一个头文件导入了两次

00:31:03.163 --> 00:31:05.799 align:middle line:-1
Clang在后台辛苦工作

00:31:05.866 --> 00:31:09.336 align:middle line:-2
就为了解决
诸如此类的常见问题

00:31:10.537 --> 00:31:12.339 align:middle line:-1
但它不可能全部解决

00:31:13.240 --> 00:31:14.842 align:middle line:-1
这只是个简单的例子

00:31:15.442 --> 00:31:16.777 align:middle line:-1
稍微调整一下

00:31:18.545 --> 00:31:20.047 align:middle line:-1
修改一下上下文

00:31:21.315 --> 00:31:25.419 align:middle line:-2
模块的导入
完全不受影响

00:31:25.485 --> 00:31:28.055 align:middle line:-2
因为我说过
上下文可以忽略

00:31:29.756 --> 00:31:30.724 align:middle line:-1
cat导入

00:31:30.924 --> 00:31:33.727 align:middle line:-1
还是头文件的文本导入

00:31:33.894 --> 00:31:35.729 align:middle line:-1
它会遵循这个修改

00:31:36.330 --> 00:31:39.867 align:middle line:-1
这时可能就不是双重定义了

00:31:39.933 --> 00:31:42.269 align:middle line:-1
而是矛盾定义

00:31:42.469 --> 00:31:44.137 align:middle line:-1
无法解决

00:31:44.771 --> 00:31:46.306 align:middle line:-1
Clang解决不了

00:31:46.974 --> 00:31:47.808 align:middle line:-1
那么…

00:31:47.941 --> 00:31:49.743 align:middle line:-1
记住我的建议

00:31:49.810 --> 00:31:52.145 align:middle line:-1
永远明确框架名称

00:31:52.513 --> 00:31:55.516 align:middle line:-2
无论是导入公共的
还是私有的头文件

00:31:56.683 --> 00:31:58.218 align:middle line:-1
现在有请Devin

00:31:58.285 --> 00:32:02.256 align:middle line:-2
他为大家讲解Swift和
Swift对Clang模块的使用

