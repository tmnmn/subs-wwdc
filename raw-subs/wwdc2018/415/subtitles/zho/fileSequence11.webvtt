WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.092 --> 00:11:01.461 align:middle line:-2
构建行动顺序
逐个构建

00:11:01.962 --> 00:11:04.131 align:middle line:-2
目标依赖关系
优先级较高

00:11:04.198 --> 00:11:05.866 align:middle line:-2
优先决定
第一个构建目标

00:11:05.933 --> 00:11:08.235 align:middle line:-1
但Xcode会遵从这个排列

00:11:08.569 --> 00:11:12.272 align:middle line:-2
这个让人跃跃欲试
因为它给出了可预期的构建顺序

00:11:12.339 --> 00:11:14.575 align:middle line:-1
即使依赖关系有误

00:11:14.708 --> 00:11:17.511 align:middle line:-2
但这样会牺牲
大量并行空间

00:11:17.711 --> 00:11:19.012 align:middle line:-1
延缓构建速度

00:11:19.179 --> 00:11:22.216 align:middle line:-2
所以我们推荐
开启并行构建

00:11:22.282 --> 00:11:25.519 align:middle line:-2
正确设置依赖关系
不要依赖排序

00:11:27.521 --> 00:11:30.224 align:middle line:-1
最后 依赖关系在于你自己

00:11:30.290 --> 00:11:31.291 align:middle line:-1
开发者

00:11:32.759 --> 00:11:35.863 align:middle line:-2
你可以自定义shell脚本
构建阶段或规则

00:11:35.929 --> 00:11:38.866 align:middle line:-2
明确告诉构建系统
输入和输入都是什么

00:11:39.032 --> 00:11:42.536 align:middle line:-2
以避免重复运行
不必要的脚本任务

00:11:42.603 --> 00:11:45.472 align:middle line:-1
保证正确执行顺序

00:11:45.739 --> 00:11:48.942 align:middle line:-2
你可以用运行脚本阶段编辑器
定义输入和输出

00:11:49.009 --> 00:11:50.077 align:middle line:-1
这些文件的路径

00:11:50.143 --> 00:11:53.113 align:middle line:-2
将作为环境变量
在脚本中激活

00:11:54.681 --> 00:11:58.252 align:middle line:-2
不要依赖项目里
目标依赖关系的自动连接

00:11:58.652 --> 00:12:00.687 align:middle line:-2
Clang编译器
有自动关联功能

