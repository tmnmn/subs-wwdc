WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:55:58.525 --> 00:56:00.294 align:middle line:-1
LINKEDIT是元数据

00:56:00.661 --> 00:56:03.263 align:middle line:-1
连接器会用它

00:56:03.764 --> 00:56:06.433 align:middle line:-1
给操作系统留下信息

00:56:06.500 --> 00:56:09.870 align:middle line:-2
这就是动态连接器
在运行时间解决问题

00:56:10.103 --> 00:56:11.538 align:middle line:-1
了解更多信息

00:56:12.105 --> 00:56:16.443 align:middle line:-2
请观看2016年的演讲
优化app启动时间

00:56:19.246 --> 00:56:20.080 align:middle line:-1
那么…

00:56:21.048 --> 00:56:23.417 align:middle line:-1
简单回顾下今天的内容

00:56:23.483 --> 00:56:27.287 align:middle line:-2
Jake讲述了构建系统
如何用依赖关系

00:56:27.688 --> 00:56:30.624 align:middle line:-1
优化多核构建过程

00:56:33.026 --> 00:56:36.763 align:middle line:-2
Jurgen展示了Clang
和如何查找头文件

00:56:36.830 --> 00:56:39.299 align:middle line:-1
以及如何优化模块构建

00:56:41.001 --> 00:56:42.135 align:middle line:-1
Devin简述了

00:56:42.436 --> 00:56:44.872 align:middle line:-1
Swift对模块的扩展

00:56:45.005 --> 00:56:46.840 align:middle line:-1
所有这些今年的新实施

00:56:46.907 --> 00:56:49.443 align:middle line:-2
比如BF处理
都是为了提升构建速度

00:56:49.810 --> 00:56:51.645 align:middle line:-1
最后连接器接收

00:56:51.712 --> 00:56:52.913 align:middle line:-1
两个编译器的输出

00:56:53.146 --> 00:56:55.015 align:middle line:-1
将它们带入app

00:56:55.249 --> 00:56:57.951 align:middle line:-2
这时Xcode会
代码签名并打包

00:56:58.018 --> 00:56:58.852 align:middle line:-1
与其他…

