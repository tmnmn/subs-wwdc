WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.959 --> 00:01:00.194 align:middle line:-1
我们要解答如下问题

00:01:00.260 --> 00:01:02.496 align:middle line:-2
按住Command + B
会发生什么

00:01:02.563 --> 00:01:04.197 align:middle line:-1
如何架构构建过程

00:01:04.263 --> 00:01:06.900 align:middle line:-2
Xcode如何用
project文件的信息

00:01:06.967 --> 00:01:09.937 align:middle line:-1
决定构建过程的模型和流程

00:01:11.438 --> 00:01:13.907 align:middle line:-1
然后是编译器领域

00:01:14.541 --> 00:01:16.376 align:middle line:-1
看看Clang和Swift

00:01:16.443 --> 00:01:18.679 align:middle line:-1
怎样将源代码加入目标文件

00:01:19.179 --> 00:01:21.481 align:middle line:-2
我们会展示
头文件和模块的运行

00:01:21.582 --> 00:01:24.218 align:middle line:-1
编译器如何在代码中查找声明

00:01:24.284 --> 00:01:26.820 align:middle line:-1
以及Swift编译模型如何不同于

00:01:26.887 --> 00:01:29.489 align:middle line:-2
C、C++
和Objective-C

00:01:30.724 --> 00:01:32.593 align:middle line:-1
最后是连接器

00:01:32.893 --> 00:01:35.863 align:middle line:-1
构建过程的最后一步

00:01:36.330 --> 00:01:39.499 align:middle line:-2
我们会解释什么是符号
及其与源代码的关系

00:01:39.566 --> 00:01:42.536 align:middle line:-2
还有连接器如何将
编译器产生的目标文件

00:01:42.603 --> 00:01:44.805 align:middle line:-1
整合成最终的可执行文件

00:01:44.872 --> 00:01:46.607 align:middle line:-1
提供给app或框架

00:01:48.141 --> 00:01:49.276 align:middle line:-1
我们会使用

00:01:49.343 --> 00:01:51.078 align:middle line:-1
叫PetWall的小app样本

00:01:51.144 --> 00:01:52.980 align:middle line:-1
作为这次演讲的示例

00:01:53.146 --> 00:01:56.016 align:middle line:-2
它只是一个很小的iOS app
用来展示宠物图片

00:01:59.119 --> 00:02:02.189 align:middle line:-2
首先来了解
什么是构建过程

