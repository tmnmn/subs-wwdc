WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:01.021 --> 00:27:03.090 align:middle line:-2
如何创建
foundation模块呢？

00:27:03.957 --> 00:27:04.858 align:middle line:-1
首先

00:27:05.292 --> 00:27:07.594 align:middle line:-1
为Clang单独创建位置

00:27:08.462 --> 00:27:11.698 align:middle line:-2
Clang位置里
包含的所有头文件

00:27:11.765 --> 00:27:13.267 align:middle line:-1
都属于foundation模块

00:27:15.135 --> 00:27:18.839 align:middle line:-1
我们不会转移任何现有的上下文

00:27:19.173 --> 00:27:21.275 align:middle line:-1
来自原始的编译器调用

00:27:21.508 --> 00:27:23.076 align:middle line:-1
所以说是上下文无关

00:27:24.044 --> 00:27:25.846 align:middle line:-1
实际上我们转移的

00:27:25.913 --> 00:27:28.315 align:middle line:-1
是传递给Clang的命令行实参

00:27:28.382 --> 00:27:29.583 align:middle line:-1
随后继续传递

00:27:32.152 --> 00:27:34.188 align:middle line:-1
在创建foundation模块时

00:27:36.023 --> 00:27:37.624 align:middle line:-1
模块本身或框架

00:27:37.691 --> 00:27:38.692 align:middle line:-1
框架本身…

00:27:39.393 --> 00:27:41.795 align:middle line:-1
会导入其他框架

00:27:41.995 --> 00:27:42.863 align:middle line:-1
也就是说…

00:27:43.130 --> 00:27:45.032 align:middle line:-1
我们也要构建那些模块

00:27:46.633 --> 00:27:48.001 align:middle line:-1
我们不能停顿

00:27:48.068 --> 00:27:51.438 align:middle line:-2
因为它可能还包含
其他框架

00:27:52.272 --> 00:27:54.575 align:middle line:-2
但是我们已经能看到
它的好处了

00:27:55.175 --> 00:27:57.344 align:middle line:-1
某些导入可能是一样的

00:27:57.644 --> 00:28:00.414 align:middle line:-1
所以总能重复使用那个模块

