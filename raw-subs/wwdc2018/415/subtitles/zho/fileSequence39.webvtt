WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:57.337 --> 00:39:01.508 align:middle line:0
让编译器导入
你要的函数形式

00:39:05.779 --> 00:39:08.315 align:middle line:-2
如果你要看看
Objective-C头文件

00:39:08.382 --> 00:39:09.917 align:middle line:-1
如何导入Swift

00:39:10.317 --> 00:39:13.187 align:middle line:-2
你可以到
Xcode相关项目弹窗

00:39:13.487 --> 00:39:15.989 align:middle line:-1
它在源编辑器的左上角

00:39:16.523 --> 00:39:18.592 align:middle line:-1
选择生成的接口

00:39:18.759 --> 00:39:21.128 align:middle line:-1
就能看到接口的样子

00:39:21.261 --> 00:39:22.863 align:middle line:-1
和不同的Swift版本

00:39:25.465 --> 00:39:27.768 align:middle line:-2
以上就是用Swift
导入Objective-C

00:39:28.302 --> 00:39:29.803 align:middle line:-1
反过来呢？

00:39:30.170 --> 00:39:33.173 align:middle line:-2
Objective-C
怎么导入Swift？

00:39:35.309 --> 00:39:37.878 align:middle line:-2
答案是
Swift会生成一个头文件

00:39:37.945 --> 00:39:39.313 align:middle line:-1
可以进行导入

00:39:39.913 --> 00:39:44.484 align:middle line:-2
这样你可以用Swift编写类
然后用Objective-C调用它们

00:39:45.619 --> 00:39:46.854 align:middle line:-1
看看工作原理

00:39:48.355 --> 00:39:51.225 align:middle line:-2
编译器生成
Objective-C声明

00:39:51.291 --> 00:39:55.963 align:middle line:-2
给Swift类
NSObject和@objc函数

00:39:57.397 --> 00:39:58.665 align:middle line:-1
单元测试的app

00:39:58.899 --> 00:40:02.503 align:middle line:-2
头文件会包含
公共和内部两种声明

