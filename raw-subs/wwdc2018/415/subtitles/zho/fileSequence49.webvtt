WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:56.670 --> 00:49:00.541 align:middle line:-2
也可能是lib
这是它的包装工具

00:49:00.941 --> 00:49:02.910 align:middle line:-1
根据AR操作文档

00:49:03.410 --> 00:49:06.680 align:middle line:-1
AR创建并维护文件组

00:49:06.747 --> 00:49:08.382 align:middle line:-1
将它们合并为一个库

00:49:09.316 --> 00:49:12.853 align:middle line:-2
听上去像是
TAR或ZIP文件

00:49:12.920 --> 00:49:13.954 align:middle line:-1
的确是这样

00:49:14.021 --> 00:49:14.855 align:middle line:-1
事实上…

00:49:14.922 --> 00:49:17.024 align:middle line:-1
.a格式是原始的库格式

00:49:17.090 --> 00:49:20.327 align:middle line:-2
在更好的工具产生之前
为UNIX所用

00:49:21.795 --> 00:49:24.364 align:middle line:-1
但现在的编译器和连接器

00:49:24.431 --> 00:49:26.567 align:middle line:-2
可以完全理解它们
所以继续使用

00:49:26.934 --> 00:49:28.936 align:middle line:-1
它就只是个档案文件

00:49:31.872 --> 00:49:35.209 align:middle line:-2
值得注意的是
它们孕育了动态链接

00:49:35.275 --> 00:49:36.143 align:middle line:-1
在过去

00:49:36.210 --> 00:49:39.313 align:middle line:-1
所有代码都被存档

00:49:39.780 --> 00:49:40.881 align:middle line:-1
因此

00:49:41.181 --> 00:49:44.184 align:middle line:-1
不能涵盖所有C库

00:49:44.251 --> 00:49:45.786 align:middle line:-1
只用一个函数

00:49:46.019 --> 00:49:47.421 align:middle line:-1
因此 行为是…

00:49:48.388 --> 00:49:50.591 align:middle line:-1
如果.o文件含有符号

00:49:50.657 --> 00:49:53.026 align:middle line:-2
我们会把整个.o文件
从库中提出来

00:49:53.093 --> 00:49:55.429 align:middle line:-1
但不会带入其他.o文件

00:49:56.230 --> 00:49:57.965 align:middle line:-1
如果在之间引用符号

00:49:58.031 --> 00:49:59.800 align:middle line:-1
只要带入即可

00:49:59.867 --> 00:50:01.935 align:middle line:-1
如果是非符号行为

