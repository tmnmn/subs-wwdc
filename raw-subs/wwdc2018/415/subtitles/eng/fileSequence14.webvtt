WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:57.856 --> 00:14:00.956 A:middle
them to speed up your builds.

00:14:01.126 --> 00:14:03.526 A:middle
Some of you might only use Swift

00:14:03.556 --> 00:14:03.906 A:middle
by now.

00:14:04.756 --> 00:14:06.656 A:middle
But I want to tell you, Swift

00:14:06.656 --> 00:14:08.236 A:middle
uses Clang behind the scenes.

00:14:08.936 --> 00:14:09.896 A:middle
So there might be something

00:14:09.896 --> 00:14:12.086 A:middle
interesting for you here, too.

00:14:14.646 --> 00:14:15.446 A:middle
So what is Clang?

00:14:17.086 --> 00:14:18.906 A:middle
Clang is Apple's official C

00:14:18.906 --> 00:14:22.756 A:middle
compiler and all the other C

00:14:22.926 --> 00:14:25.696 A:middle
language family such as C, C++,

00:14:25.956 --> 00:14:28.356 A:middle
and of course Objective-C which

00:14:28.356 --> 00:14:29.906 A:middle
is used for the majority of all

00:14:29.906 --> 00:14:30.536 A:middle
frameworks.

00:14:31.056 --> 00:14:33.296 A:middle
As Jake mentioned in the

00:14:33.296 --> 00:14:36.806 A:middle
beginning, the compilers invoked

00:14:36.806 --> 00:14:38.126 A:middle
[inaudible] for every input file

00:14:38.126 --> 00:14:39.536 A:middle
and it creates exactly one

00:14:39.536 --> 00:14:41.166 A:middle
output file which is then later

00:14:41.166 --> 00:14:42.136 A:middle
consumed by the linker.

00:14:43.496 --> 00:14:45.796 A:middle
If you want to access APIs from

00:14:46.546 --> 00:14:49.436 A:middle
the iOS, or you want to access

00:14:49.946 --> 00:14:52.576 A:middle
implementations from your own

00:14:52.666 --> 00:14:54.386 A:middle
code, you usually have to

00:14:54.386 --> 00:14:55.446 A:middle
include something what is called

00:14:55.446 --> 00:14:56.036 A:middle
a header file.

00:14:56.686 --> 00:14:59.476 A:middle
A header file is a promise.

