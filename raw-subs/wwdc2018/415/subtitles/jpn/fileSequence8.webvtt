WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.012 --> 00:08:03.283 align:start position:30% line:-2
現在の署名が
前回と異なる場合には―

00:08:03.383 --> 00:08:05.719 align:start position:30% line:-1
再びタスクを実行します

00:08:05.953 --> 00:08:08.455 align:start position:38% line:-2
署名が同じなら
スキップします

00:08:08.856 --> 00:08:11.625 align:start position:27% line:-1
これが増分ビルドの基本です

00:08:12.826 --> 00:08:17.297 align:start position:30% line:-2
ビルドの流れと仕組みが
分かってきましたね

00:08:17.397 --> 00:08:19.666 align:start position:32% line:-2
次にシステムの負担を
軽減しましょう

00:08:21.101 --> 00:08:22.769 align:start position:36% line:-1
振り返ってみます

00:08:22.970 --> 00:08:27.441 align:start position:30% line:-2
ビルドとは順序に沿った
一連のタスク処理です

00:08:27.674 --> 00:08:30.944 align:start position:30% line:-2
でも 有向グラフの話を
思い出しましょう

00:08:31.812 --> 00:08:35.249 align:start position:30% line:-2
人間は順序を
考える必要はありません

00:08:35.349 --> 00:08:37.217 align:start position:29% line:-1
ビルドシステムの仕事です

00:08:37.683 --> 00:08:42.256 align:start position:27% line:-2
私たちはタスクの依存関係を
考えればいいのです

00:08:42.356 --> 00:08:46.527 align:start position:30% line:-2
システムに順序良く
正常に処理させましょう

00:08:46.827 --> 00:08:50.764 align:start position:30% line:-2
可能な場合には
並列処理もしてくれます

00:08:50.864 --> 00:08:53.800 align:start position:32% line:-2
マルチコアを
フル活用してください

00:08:54.835 --> 00:08:57.070 align:start position:30% line:-1
依存関係の出どころは？

00:08:57.237 --> 00:09:01.675 align:start position:34% line:-2
ビルドシステムが
作る場合もあります

