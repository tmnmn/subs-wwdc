WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:00.621 --> 00:42:03.891 align:start position:27% line:-2
インポート時 コンパイラは
Swiftモジュールを―

00:42:03.991 --> 00:42:06.160 align:start position:32% line:-1
デシリアライズします

00:42:06.360 --> 00:42:08.295 align:start position:29% line:-1
タイプを確認するためです

00:42:09.096 --> 00:42:13.667 align:start position:12% line:-2
この例でも コンパイラは
PetWall.swiftmoduleの―

00:42:14.001 --> 00:42:15.969 align:start position:18% line:-2
PetViewControllerを
読み込みます

00:42:16.070 --> 00:42:18.839 align:start position:29% line:-1
整合性を確認するためです

00:42:19.740 --> 00:42:23.610 align:start position:27% line:-2
コンパイラがターゲット内の
宣言を見つける方法と―

00:42:23.710 --> 00:42:25.279 align:start position:38% line:-1
似ていますよね

00:42:25.913 --> 00:42:30.150 align:start position:27% line:-2
今回はSwiftファイルを
直接 解析するのではなく―

00:42:30.350 --> 00:42:33.420 align:start position:34% line:-2
モジュールの要約を
読み込みます

00:42:36.323 --> 00:42:38.825 align:start position:27% line:-2
コンパイラが作る
Swiftのモジュールは―

00:42:38.926 --> 00:42:41.962 align:start position:21% line:-2
Objective-Cのヘッダに
よく似ています

00:42:42.296 --> 00:42:45.499 align:start position:32% line:-2
ただし 言語ではなく
バイナリ形式です

00:42:45.966 --> 00:42:48.368 align:start position:27% line:-2
また インライナブル関数の
ボディをインクルードします

00:42:48.469 --> 00:42:51.104 align:start position:23% line:-2
Objective-Cでの
スタティックインライン関数や―

00:42:51.205 --> 00:42:53.974 align:start position:27% line:-2
C++でのヘッダ内の実装と
似ています

00:42:54.808 --> 00:42:56.810 align:start position:38% line:-1
特徴としては―

00:42:56.910 --> 00:43:01.715 align:start position:21% line:-2
プライベート宣言の名前とタイプも
インクルードすることです

