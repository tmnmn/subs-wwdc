WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:56.256 --> 00:46:01.028 align:start position:25% line:-2
特定のAPIがiOS 12で
使用可能かなどを表します

00:46:01.562 --> 00:46:05.165 align:start position:27% line:-2
内容はリンカーに着くまでに
固まっています

00:46:05.265 --> 00:46:08.502 align:start position:29% line:-2
リンカーはどのシンボルを
付けるべきで―

00:46:08.602 --> 00:46:13.106 align:start position:27% line:-2
実行に必要なシンボルは何か
決定できます

00:46:14.975 --> 00:46:18.245 align:start position:29% line:-2
言語もマングリングにより
データをエンコードし―

00:46:18.345 --> 00:46:20.114 align:start position:34% line:-1
シンボルを作ります

00:46:21.148 --> 00:46:25.319 align:start position:23% line:-2
それはC++でもSwiftでも
起こります

00:46:27.221 --> 00:46:30.023 align:start position:36% line:-2
今 言ったように
シンボルとは―

00:46:30.357 --> 00:46:32.960 align:start position:29% line:-1
コードやデータの名前です

00:46:33.360 --> 00:46:38.632 align:start position:25% line:-2
そして コンパイラが生成する
オブジェクトファイルは―

00:46:38.765 --> 00:46:41.769 align:start position:29% line:-1
コードやデータの集合です

00:46:42.369 --> 00:46:45.839 align:start position:29% line:-2
コンパイルされただけでは
実行はできません

00:46:45.939 --> 00:46:47.574 align:start position:38% line:-1
不完全なのです

00:46:47.674 --> 00:46:51.779 align:start position:32% line:-2
リンカーが結び付けて
整えていきます

00:46:54.081 --> 00:46:58.152 align:start position:27% line:-2
ファイルの各フラグメントに
シンボルが付きます

00:46:58.318 --> 00:47:00.921 align:start position:25% line:-1
例えば printf関数も―

