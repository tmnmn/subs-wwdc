WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.240 --> 00:04:06.246 align:start position:25% line:-2
コンパイラが生成したものを
リンカーにインプットすると―

00:04:06.346 --> 00:04:08.815 align:start position:29% line:-2
実行可能ファイルや
ライブラリが生成されます

00:04:08.916 --> 00:04:11.919 align:start position:27% line:-2
そして 実行可能ファイルは
Appバンドルへ収めます

00:04:12.186 --> 00:04:15.322 align:start position:27% line:-1
パターンが見えてきましたね

00:04:15.956 --> 00:04:19.625 align:start position:34% line:-2
依存関係に従った
流れになっています

00:04:19.726 --> 00:04:22.596 align:start position:34% line:-2
これが実行順序にも
なるわけです

00:04:22.896 --> 00:04:28.435 align:start position:29% line:-2
この図を交通に見立て
コンパイルを考えてみます

00:04:28.535 --> 00:04:32.439 align:start position:34% line:-2
各コンパイル過程は
独立した道路です

00:04:32.539 --> 00:04:34.508 align:start position:34% line:-1
並列処理が可能です

00:04:35.309 --> 00:04:39.713 align:start position:29% line:-2
全インプットの終着点
リンクタスクは最後ですね

00:04:41.215 --> 00:04:46.553 align:start position:25% line:-2
依存関係を定義することで
タスクの実行順序が決まります

00:04:46.653 --> 00:04:49.022 align:start position:36% line:-1
並列化も可能です

00:04:49.122 --> 00:04:51.091 align:start position:32% line:-1
これが依存性順序です

00:04:51.625 --> 00:04:53.861 align:start position:29% line:-2
以上が
ビルドプロセスの概要です

00:04:53.961 --> 00:04:57.097 align:start position:29% line:-1
続いて詳しく見ていきます

00:04:57.364 --> 00:04:59.733 align:start position:34% line:-2
ビルドを開始したら
何が起こるか？

