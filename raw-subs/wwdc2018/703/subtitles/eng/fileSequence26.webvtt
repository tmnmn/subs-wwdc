WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:04.796 --> 00:26:06.406 A:middle
Here's a recap.

00:26:07.836 --> 00:26:09.726 A:middle
So to train such a classifier,

00:26:09.866 --> 00:26:11.266 A:middle
the first thing you do is to

00:26:11.266 --> 00:26:12.246 A:middle
specify your data.

00:26:13.216 --> 00:26:14.686 A:middle
You specify your training data

00:26:14.686 --> 00:26:18.136 A:middle
as well as your test data and

00:26:18.136 --> 00:26:19.586 A:middle
then you can create your model

00:26:19.586 --> 00:26:20.836 A:middle
on the training data.

00:26:22.146 --> 00:26:24.646 A:middle
To evaluate its performance, you

00:26:24.646 --> 00:26:26.246 A:middle
evaluate a model on the test

00:26:26.246 --> 00:26:26.466 A:middle
data.

00:26:27.786 --> 00:26:30.136 A:middle
Finally, to use your model in

00:26:30.136 --> 00:26:32.716 A:middle
your app, you simply save it out

00:26:32.716 --> 00:26:35.336 A:middle
using this write API.

00:26:38.176 --> 00:26:41.586 A:middle
To summarize, with just a few

00:26:41.586 --> 00:26:43.676 A:middle
lines of code, you can train

00:26:43.676 --> 00:26:45.986 A:middle
your customized text classifier

00:26:47.136 --> 00:26:48.526 A:middle
simple intuitive.

00:26:49.046 --> 00:26:52.196 A:middle
With that, I'd like to hand back

00:26:52.196 --> 00:26:53.586 A:middle
to Gaurav who is going to talk

00:26:53.586 --> 00:26:54.696 A:middle
about tabular data.

00:26:55.256 --> 00:26:55.626 A:middle
Thank you.

00:26:56.516 --> 00:27:00.986 A:middle
[ Applause ]

