WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.826 --> 00:16:00.996 A:middle
to the desktop with the name

00:16:01.206 --> 00:16:02.706 A:middle
fruit classifier ML model.

00:16:04.846 --> 00:16:06.296 A:middle
Once I do, you can see this new

00:16:06.296 --> 00:16:07.676 A:middle
model appears on the desktop.

00:16:08.586 --> 00:16:09.876 A:middle
We can double-click it and take

00:16:09.876 --> 00:16:12.046 A:middle
a look and see it's exactly the

00:16:12.126 --> 00:16:12.466 A:middle
same.

00:16:12.696 --> 00:16:14.256 A:middle
This is also 83 kilobytes.

00:16:17.036 --> 00:16:18.316 A:middle
Furthermore, we can integrate it

00:16:18.376 --> 00:16:19.666 A:middle
back into our app the same way.

00:16:21.206 --> 00:16:21.596 A:middle
Let's recap.

00:16:22.516 --> 00:16:31.506 A:middle
[ Applause ]

00:16:32.006 --> 00:16:33.536 A:middle
We saw two ways of training

00:16:33.536 --> 00:16:35.126 A:middle
image classifier models in

00:16:35.126 --> 00:16:35.516 A:middle
Create ML.

00:16:36.276 --> 00:16:38.406 A:middle
One was with the UI which makes

00:16:38.406 --> 00:16:40.446 A:middle
it super simple to drag-and-drop

00:16:40.656 --> 00:16:41.626 A:middle
your training data and

00:16:41.626 --> 00:16:43.956 A:middle
evaluation data to produce an ML

00:16:43.956 --> 00:16:44.276 A:middle
model.

00:16:45.396 --> 00:16:47.126 A:middle
The other way was with the

00:16:47.126 --> 00:16:47.866 A:middle
Create ML API.

00:16:48.676 --> 00:16:49.726 A:middle
If we walk through some of this

00:16:49.726 --> 00:16:51.406 A:middle
code, we can see the first thing

00:16:51.406 --> 00:16:53.396 A:middle
we had to do was import Create

00:16:53.396 --> 00:16:53.486 A:middle
ML.

00:16:54.456 --> 00:16:56.066 A:middle
The next was to specify where

00:16:56.066 --> 00:16:57.486 A:middle
our training and testing data

00:16:57.486 --> 00:16:59.666 A:middle
was and then actually begin

00:16:59.666 --> 00:17:01.396 A:middle
training the model by specifying

