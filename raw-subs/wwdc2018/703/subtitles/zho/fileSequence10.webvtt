WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.936 --> 00:10:01.446 A:middle
就可以训练出一个不错的图像分类器

00:10:03.576 --> 00:10:05.656 A:middle
这可以节省很多训练时间

00:10:06.176 --> 00:10:07.306 A:middle
我们看到很多开发人员

00:10:07.346 --> 00:10:08.936 A:middle
一开始花费数小时训练模型

00:10:09.596 --> 00:10:12.996 A:middle
后来逐渐减少到几分钟

00:10:12.996 --> 00:10:14.576 A:middle
只需用几千张图像

00:10:15.056 --> 00:10:16.756 A:middle
或更小的数据组就可以

00:10:16.826 --> 00:10:17.166 A:middle
有些甚至几秒就能完成

00:10:19.886 --> 00:10:21.126 A:middle
这也缩减了模型大小

00:10:21.296 --> 00:10:23.026 A:middle
从几百 MB

00:10:23.026 --> 00:10:26.756 A:middle
缩减至几 MB

00:10:26.756 --> 00:10:28.426 A:middle
只需几千张图片

00:10:28.426 --> 00:10:28.896 A:middle
小的甚至有几 KB 的

00:10:32.076 --> 00:10:34.416 A:middle
Create ML 的目标在于

00:10:34.416 --> 00:10:35.966 A:middle
简化模型训练

00:10:35.966 --> 00:10:37.646 A:middle
让机器学习变得简单易用

00:10:38.286 --> 00:10:39.786 A:middle
为了证明这一点

00:10:39.786 --> 00:10:40.396 A:middle
我们来看一个例子

00:10:47.396 --> 00:10:49.356 A:middle
首先 为了发现问题

00:10:49.446 --> 00:10:51.066 A:middle
我运行了一个 App

00:10:51.126 --> 00:10:52.546 A:middle
而这个 App

00:10:52.626 --> 00:10:54.286 A:middle
采用的是行业现有的

00:10:54.286 --> 00:10:55.166 A:middle
一个图像分类模型

00:10:56.326 --> 00:10:57.766 A:middle
这个模型是挺大的

00:10:57.766 --> 00:10:59.446 A:middle
在 App 中有 100 MB

