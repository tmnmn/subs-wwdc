WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.260 --> 00:26:04.331 align:middle line:-2
如果我尝试对这个dlog文件
函数进行另一个函数调用

00:26:05.766 --> 00:26:07.901 align:middle line:-2
那么这个函数
就会分配它自己的堆栈帧

00:26:09.369 --> 00:26:12.506 align:middle line:-2
当它完成时
它将重新分配堆栈帧

00:26:12.639 --> 00:26:14.107 align:middle line:-1
并返回给调用者

00:26:16.810 --> 00:26:20.013 align:middle line:-1
现在我们更详细地看看这个堆栈框架

00:26:21.515 --> 00:26:25.385 align:middle line:-1
假设我将函数改成一个本地缓冲区

00:26:25.452 --> 00:26:27.321 align:middle line:-1
这是一个4字节的字符数组

00:26:29.790 --> 00:26:31.959 align:middle line:-1
我正在尝试通过先做一个

00:26:32.226 --> 00:26:36.530 align:middle line:-2
我传递到缓冲区中的字符串的
strcpy来准备调试字符串

00:26:38.565 --> 00:26:44.571 align:middle line:-2
strcpy来准备调试字符串
H-E-L-L

00:26:46.039 --> 00:26:49.276 align:middle line:-2
但问题是在这一点上
我们已经写了4个字节

00:26:49.877 --> 00:26:53.280 align:middle line:-2
我们已经用尽了在我们的缓冲区中
可用的所有4个字节

00:26:54.581 --> 00:26:57.184 align:middle line:-2
所以如果我们继续
这就是Strcpy所做的

00:26:57.518 --> 00:26:59.720 align:middle line:-1
那么我们将重写返回地址

