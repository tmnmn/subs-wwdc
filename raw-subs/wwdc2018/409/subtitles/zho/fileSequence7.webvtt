WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.585 --> 00:07:01.822 align:middle line:-1
这将导致程序在运行时

00:07:01.889 --> 00:07:03.323 align:middle line:-1
出现不希望的运行时行为

00:07:05.225 --> 00:07:09.062 align:middle line:-1
第二个问题是在释放内存之前

00:07:09.129 --> 00:07:12.065 align:middle line:-1
ARC对象指针字段未被清除

00:07:12.499 --> 00:07:17.070 align:middle line:-1
这将导致你的程序运行时内存泄漏

00:07:19.139 --> 00:07:25.212 align:middle line:-2
要解决第一个问题
可将对malloc的调用替换为对calloc的调用

00:07:25.746 --> 00:07:29.449 align:middle line:-1
这将确保你的内存是零初始化的

00:07:30.050 --> 00:07:34.688 align:middle line:-2
这将消除所有那些令人不快的
意想不到的运行时问题

00:07:35.722 --> 00:07:39.059 align:middle line:0
要解决第二个问题

00:07:39.459 --> 00:07:41.728 align:middle line:0
你可以在循环分配到内存之前

00:07:42.129 --> 00:07:45.532 align:middle line:0
编写一个循环以清除项目中的
所有ARC对象指针字段

00:07:46.266 --> 00:07:49.803 align:middle line:-1
这将确保在释放条目时

00:07:49.937 --> 00:07:52.239 align:middle line:-1
条目中的名称和价格不会泄漏

00:07:56.009 --> 00:07:58.478 align:middle line:-1
现在这是一个令人兴奋的新特性

00:07:59.046 --> 00:08:03.217 align:middle line:-2
如果你们当中
由于缺少这样的特性

