WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.632 --> 00:20:01.602 align:middle line:-1
并确保在必要时销毁临时内存

00:20:03.036 --> 00:20:06.373 align:middle line:-1
然而它可能会导致意外的崩溃

00:20:07.040 --> 00:20:09.042 align:middle line:-1
而且它们更令人意外

00:20:09.109 --> 00:20:12.212 align:middle line:-2
因为你甚至不需要在app中
编写“自动释放”这个词

00:20:12.279 --> 00:20:14.681 align:middle line:-1
就可以发生这些崩溃

00:20:15.082 --> 00:20:18.318 align:middle line:-1
例如这里有一个验证函数

00:20:19.019 --> 00:20:21.588 align:middle line:-1
它接受out参数NSError

00:20:22.289 --> 00:20:23.624 align:middle line:-1
而out参数

00:20:23.690 --> 00:20:27.494 align:middle line:-2
在Objective-C中
默认为ARC

00:20:28.095 --> 00:20:32.866 align:middle line:-2
所以当我们把这个out参数
写在自动释放池中时

00:20:35.269 --> 00:20:39.206 align:middle line:-2
然后函数退出时
错误值就被释放了

00:20:39.840 --> 00:20:43.610 align:middle line:-2
如果调用者试图
读取这个错误变量的值

00:20:43.810 --> 00:20:46.747 align:middle line:-1
他们可能会释放后使用中崩溃

00:20:46.813 --> 00:20:48.849 align:middle line:-1
（OUT参数和自动存储池）

00:20:48.916 --> 00:20:50.684 align:middle line:-1
（获块中的自恢复变量）

00:20:50.751 --> 00:20:55.856 align:middle line:-2
这种模式已经很难被发现
但是当你甚至不控制

00:20:55.989 --> 00:20:58.559 align:middle line:-1
拥有自动存储池的app的部分时

00:20:58.625 --> 00:21:00.127 align:middle line:-1
这种模式会变得更糟

