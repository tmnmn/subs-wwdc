WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.740 --> 00:19:03.143 align:middle line:-2
你可以重构app
以使用安装的连续程序

00:19:03.410 --> 00:19:06.180 align:middle line:-1
只需在回调中调用所需的函数即可

00:19:09.216 --> 00:19:11.285 align:middle line:-1
这个检查在默认情况下是不启用的

00:19:11.552 --> 00:19:14.087 align:middle line:-1
但是我们鼓励你在构建设置中启用它

00:19:14.254 --> 00:19:17.824 align:middle line:-2
以确保在你的app中
不会出现这样的问题

00:19:17.891 --> 00:19:19.560 align:middle line:-1
并尽可能快地运行

00:19:21.328 --> 00:19:23.363 align:middle line:-1
现在让我们讨论第二个检查

00:19:23.430 --> 00:19:25.866 align:middle line:-1
用于检测

00:19:25.933 --> 00:19:28.502 align:middle line:-2
比自动释放池的生命周期
更长的自动释放变量

00:19:30.404 --> 00:19:35.175 align:middle line:-2
自动释放限定符指定
一旦控件退出自动释放池

00:19:35.409 --> 00:19:37.878 align:middle line:-1
就必须释放该值

00:19:38.545 --> 00:19:42.816 align:middle line:-2
这里有一个例子
我们在自动释放池中

00:19:43.016 --> 00:19:44.451 align:middle line:-1
创建一个错误变量

00:19:44.685 --> 00:19:47.254 align:middle line:-1
一旦控件在自动释放池之外

00:19:47.321 --> 00:19:50.490 align:middle line:-1
个变量就会被释放 然后被销毁

00:19:51.058 --> 00:19:55.128 align:middle line:-2
自动释放池是
Objective-C的有用特性

00:19:55.395 --> 00:19:58.565 align:middle line:-1
它有助于控制app的大内存占用

00:19:58.632 --> 00:20:01.602 align:middle line:-1
并确保在必要时销毁临时内存

