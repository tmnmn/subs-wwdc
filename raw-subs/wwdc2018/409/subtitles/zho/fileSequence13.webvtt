WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.012 --> 00:13:02.316 align:middle line:-1
因此这是为了帮助你记住

00:13:02.382 --> 00:13:07.454 align:middle line:-2
Swift和Object-C代码
之间存在这样的契约

00:13:09.990 --> 00:13:13.260 align:middle line:-2
现在第二个警告
可能对那些使用

00:13:14.228 --> 00:13:15.929 align:middle line:-1
更低级别代码并关心

00:13:15.996 --> 00:13:20.601 align:middle line:-1
结构在内存中的布局方式的人感兴趣

00:13:21.835 --> 00:13:23.470 align:middle line:-1
让我们来看看一个结构

00:13:23.770 --> 00:13:28.809 align:middle line:-2
在C语言中结构必须遵循严格的
布局和对齐规则

00:13:29.810 --> 00:13:32.679 align:middle line:-2
在这个特殊的结构中
你可以在幻灯片上看到

00:13:32.813 --> 00:13:35.916 align:middle line:-2
编译器必须在
结构的第二个和第三个字段之间

00:13:36.250 --> 00:13:39.253 align:middle line:-1
插入一个2字节的填充

00:13:40.721 --> 00:13:44.024 align:middle line:-1
有时你可能想要放松这些规则

00:13:44.124 --> 00:13:47.528 align:middle line:-2
编译器提供了一个
pragma pack指令

00:13:47.594 --> 00:13:51.965 align:middle line:-1
你可以用它来控制布局和结构的对齐

00:13:52.032 --> 00:13:54.434 align:middle line:-2
（用#PRAGMA PACK
填充结构构件）

00:13:54.501 --> 00:13:59.173 align:middle line:-2
现在这个示例中我们使用
pragma pack push 1指令

00:13:59.706 --> 00:14:03.277 align:middle line:-1
来删除这个固定的布局

