WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:00.227 --> 00:16:03.030 align:middle line:-1
还在列出漏洞的路径的

00:16:03.096 --> 00:16:04.932 align:middle line:-1
Xcode中显示其可视化

00:16:05.566 --> 00:16:10.604 align:middle line:-2
NSMutableArray中
添加了nil 可能在稍后导致崩溃

00:16:11.071 --> 00:16:14.274 align:middle line:-2
静态分析器向你展示了
这个崩溃的路径

00:16:14.341 --> 00:16:16.577 align:middle line:-2
这样你就可以看到
app是如何被修复的

00:16:18.045 --> 00:16:22.049 align:middle line:-2
我想告诉你们
我们所做的三项新的改进

00:16:23.083 --> 00:16:28.055 align:middle line:-2
首先我们有了一个新的检查
用来检测伟大的中央调度反模式

00:16:28.422 --> 00:16:31.692 align:middle line:-2
这可能会导致不良的性能
和挂起你的app

00:16:32.359 --> 00:16:35.729 align:middle line:-2
其次我们有一项新的检查
用于检测

00:16:35.996 --> 00:16:39.132 align:middle line:-1
动释放池中的自动释放变量的误用

00:16:39.433 --> 00:16:41.802 align:middle line:-1
这可能会导致释放后使用崩溃

00:16:42.970 --> 00:16:46.473 align:middle line:-2
最后我们改进了
Clang静态分析器的

00:16:46.540 --> 00:16:47.975 align:middle line:-1
性能和可视

00:16:49.376 --> 00:16:52.079 align:middle line:-1
那么让我们从一个

00:16:52.145 --> 00:16:54.081 align:middle line:-1
检测伟大的中央调度反模式检查开始

00:16:54.915 --> 00:16:58.852 align:middle line:-1
我们平台上的许多API都是异步的

00:16:59.186 --> 00:17:01.822 align:middle line:-1
但有时开发人员出于某种原因

