WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.580 --> 00:23:03.283 align:middle line:-2
因此在Xcode 10中
我们改进了分析器

00:23:03.350 --> 00:23:05.519 align:middle line:-1
以更有效的方式探索你的程序

00:23:05.752 --> 00:23:10.991 align:middle line:-2
现在它在相同的分析时间内
发现的漏洞比以前多出15%

00:23:12.392 --> 00:23:16.630 align:middle line:-2
它不仅发现了更多的漏洞
而且它现在生成的漏洞

00:23:17.264 --> 00:23:19.933 align:middle line:-1
报告往往更小也更容易理解

00:23:20.033 --> 00:23:23.737 align:middle line:-2
我的意思是
有时候在Xcode 10中

00:23:24.638 --> 00:23:25.739 align:middle line:-1
你会得到

00:23:25.806 --> 00:23:28.509 align:middle line:-1
很多步骤和箭头的例子

00:23:28.575 --> 00:23:30.744 align:middle line:-1
这些例子有些难以理解

00:23:31.445 --> 00:23:35.282 align:middle line:-2
在Xcode的新版本中的
许多示例中

00:23:35.849 --> 00:23:39.820 align:middle line:-2
我们提供了一个更小的错误路径
它更容易查看

00:23:39.887 --> 00:23:41.655 align:middle line:-1
你可以更快地看到问题

00:23:43.390 --> 00:23:47.261 align:middle line:-1
因此为了在项目中使用静态分析器

00:23:47.327 --> 00:23:53.734 align:middle line:-2
你可以使用产品 分析
甚至可以在构建期间启用分析

00:23:53.967 --> 00:23:56.637 align:middle line:-1
以确保分析器问题不被忽略

00:23:57.271 --> 00:23:59.573 align:middle line:-1
所以我鼓励你使用静态分析器

00:23:59.973 --> 00:24:02.409 align:middle line:-2
它是一个很好的工具
可以在用户使用之前发现你的错误

