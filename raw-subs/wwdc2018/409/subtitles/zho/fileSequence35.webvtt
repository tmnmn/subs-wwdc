WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.364 --> 00:35:01.735 align:middle line:-2
因此如果你使用simd.h 例如
simd_float4 128位向量类型

00:35:02.636 --> 00:35:05.572 align:middle line:-2
现在我们可以使用相同的代码
在AVX-512 版本上

00:35:05.839 --> 00:35:06.840 align:middle line:-1
获得更好的性能

00:35:09.109 --> 00:35:11.445 align:middle line:-1
如果你使用更大的向量类型

00:35:11.512 --> 00:35:13.514 align:middle line:-1
比如 simd浮点数16

00:35:13.580 --> 00:35:16.583 align:middle line:-2
那么现在你的性能要比
AVX-512版本好得多

00:35:17.117 --> 00:35:19.453 align:middle line:-2
AVX-512版本中
512位矢量实际是负的

00:35:22.022 --> 00:35:24.691 align:middle line:-1
如果你一直伸入到到X86本质

00:35:24.925 --> 00:35:27.694 align:middle line:-2
那么现在你可以开始使用新的
AVX-512方差

00:35:28.095 --> 00:35:29.796 align:middle line:-1
和M512类型

00:35:32.866 --> 00:35:35.602 align:middle line:-1
因此如果你想专攻更大的代码单元

00:35:35.669 --> 00:35:40.307 align:middle line:-2
那么不仅是单个函数
还有文件、目标、库

00:35:40.707 --> 00:35:43.577 align:middle line:-1
然后你可以使用附加向量扩展构建

00:35:43.644 --> 00:35:46.113 align:middle line:-1
设置的新的AVX-512值

00:35:46.180 --> 00:35:49.349 align:middle line:-2
（在XCODE中
启用AVX-512）

00:35:49.416 --> 00:35:51.919 align:middle line:-2
所以当你这样做的时候
有一些事情要记住

00:35:51.985 --> 00:35:56.790 align:middle line:-2
如果你熟悉AVX-1和AVX-2
这些都是非常相似的问题

00:35:56.857 --> 00:35:58.759 align:middle line:-1
（AVX-512考虑）

00:35:58.825 --> 00:36:02.629 align:middle line:-2
所以你只能从
AVX-512函数传递或

