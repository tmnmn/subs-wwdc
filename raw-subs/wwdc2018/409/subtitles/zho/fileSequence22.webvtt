WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.185 --> 00:22:01.355 align:middle line:-1
建议显式地使这些参数自动发送

00:22:02.089 --> 00:22:04.691 align:middle line:-2
但是我们注意到
这样的问题一直在发生

00:22:05.526 --> 00:22:07.160 align:middle line:-1
所以在Xcode 10中

00:22:07.227 --> 00:22:10.864 align:middle line:-2
我们引入了一个功能更强大的
Clang静态分析器警告

00:22:11.865 --> 00:22:14.168 align:middle line:-1
它知道哪些API

00:22:15.169 --> 00:22:17.871 align:middle line:-1
调用了自动释放池中提供的块

00:22:18.172 --> 00:22:20.073 align:middle line:-1
并对此类情况进行警告

00:22:21.108 --> 00:22:22.843 align:middle line:-2
（Xcode 10：
检查自动释放误用）

00:22:23.610 --> 00:22:25.679 align:middle line:-1
现在让我们看看如何解决这个问题

00:22:26.213 --> 00:22:27.814 align:middle line:-1
这里最简单的方法就是

00:22:28.081 --> 00:22:30.417 align:middle line:-1
引入一个强大的局部变量

00:22:31.084 --> 00:22:33.320 align:middle line:-1
然后当你在块中时

00:22:33.654 --> 00:22:36.857 align:middle line:-1
将一个值写入内部的强变量中

00:22:37.624 --> 00:22:40.194 align:middle line:-1
将一个值写入内部的强变量中

00:22:40.561 --> 00:22:42.696 align:middle line:-1
只复制到out参数

00:22:42.863 --> 00:22:45.432 align:middle line:-1
并且你知道它不在自动释放池中

00:22:45.499 --> 00:22:48.202 align:middle line:-1
因此写入自动释放变量是安全的

00:22:50.103 --> 00:22:53.140 align:middle line:-1
（改进性能和报告可视化）

00:22:53.207 --> 00:22:57.077 align:middle line:-1
最后我们还改进了

00:22:57.144 --> 00:22:58.545 align:middle line:-2
Clang静态分析器的性能
和可视化

00:22:59.580 --> 00:23:03.283 align:middle line:-2
因此在Xcode 10中
我们改进了分析器

