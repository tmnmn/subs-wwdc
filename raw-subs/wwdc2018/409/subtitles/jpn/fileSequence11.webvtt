WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:56.456 --> 00:11:00.260 align:start position:18% line:-2
このヘッダファイルを
Objective-Cにインポートし

00:11:00.360 --> 00:11:04.131 align:start position:29% line:-2
基底のSwiftの宣言に
アクセスします

00:11:04.865 --> 00:11:06.300 align:start position:36% line:-1
詳細を説明します

00:11:06.400 --> 00:11:11.672 align:start position:27% line:-2
重要なのは Swiftでの
クロージャのパラメータです

00:11:12.139 --> 00:11:14.041 align:start position:32% line:-1
こちらをご覧ください

00:11:14.141 --> 00:11:18.178 align:start position:27% line:-2
Executorという
Swiftのプロトコルです

00:11:18.679 --> 00:11:22.783 align:start position:16% line:-2
performOperationという
メンバ関数を定義し

00:11:22.883 --> 00:11:26.320 align:start position:25% line:-2
クロージャにhandlerを
取り入れます

00:11:27.454 --> 00:11:31.358 align:start position:32% line:-2
今 このパラメータは
エスケープ不可です

00:11:31.458 --> 00:11:34.561 align:start position:30% line:-1
つまり関数が返した後に

00:11:34.661 --> 00:11:37.464 align:start position:27% line:-1
保持や呼び出しはできません

00:11:38.565 --> 00:11:43.737 align:start position:25% line:-2
Objective-Cで
このようなプロトコルに従う時

00:11:43.837 --> 00:11:47.674 align:start position:30% line:-2
プログラマは
この規定を忘れがちです

00:11:48.075 --> 00:11:51.378 align:start position:18% line:-1
例えば Objective-C言語で

00:11:51.478 --> 00:11:55.215 align:start position:21% line:-2
インターフェイスは
DispatchExecutor

00:11:55.315 --> 00:11:58.185 align:start position:18% line:-1
Executorプロトコルに従います

00:11:58.285 --> 00:12:01.221 align:start position:14% line:-1
performOperationを提供し

