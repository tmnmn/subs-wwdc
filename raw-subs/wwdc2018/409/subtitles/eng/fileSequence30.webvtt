WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.896 --> 00:30:02.626 A:middle
the memory is not infinite so if

00:30:02.626 --> 00:30:04.176 A:middle
we keep allocating in this stack

00:30:04.366 --> 00:30:05.906 A:middle
eventually we'll hit another

00:30:05.906 --> 00:30:07.026 A:middle
region of memory that's already

00:30:07.026 --> 00:30:10.646 A:middle
allocated and usually that's the

00:30:10.646 --> 00:30:10.736 A:middle
heap.

00:30:10.736 --> 00:30:12.116 A:middle
And when we do that then we're

00:30:12.116 --> 00:30:13.226 A:middle
going to clash with the heap,

00:30:13.806 --> 00:30:15.256 A:middle
with whatever is already used in

00:30:15.256 --> 00:30:16.316 A:middle
there, so that's usually things

00:30:16.316 --> 00:30:17.776 A:middle
like malloc and new.

00:30:20.276 --> 00:30:22.016 A:middle
So if we try to see what would

00:30:22.016 --> 00:30:23.816 A:middle
happen with our strcpy example

00:30:24.616 --> 00:30:26.826 A:middle
then we will try to write the

00:30:26.826 --> 00:30:27.696 A:middle
bytes one by one.

00:30:28.406 --> 00:30:32.766 A:middle
So we do H-E-L, etcetera.

00:30:32.816 --> 00:30:34.616 A:middle
And from the standpoint of the

00:30:34.616 --> 00:30:37.026 A:middle
CPU, the code that's generated

00:30:37.026 --> 00:30:38.156 A:middle
and the operating system this is

00:30:38.156 --> 00:30:39.856 A:middle
all fine because we're just

00:30:39.856 --> 00:30:41.586 A:middle
writing into a page that's

00:30:41.586 --> 00:30:43.526 A:middle
already available and allocated.

00:30:44.556 --> 00:30:47.006 A:middle
But it really isn't because this

00:30:47.006 --> 00:30:48.216 A:middle
is part of the heap, this is not

00:30:48.216 --> 00:30:50.046 A:middle
part of our local stack

00:30:50.046 --> 00:30:50.796 A:middle
allocated array.

00:30:51.186 --> 00:30:52.606 A:middle
So when we do our writes we're

00:30:52.606 --> 00:30:53.576 A:middle
actually overriding some

00:30:53.576 --> 00:30:55.586 A:middle
completely unrelated piece of

00:30:55.586 --> 00:30:57.416 A:middle
information like I don't know a

00:30:57.416 --> 00:30:58.496 A:middle
Boolean that checks whether we

00:30:58.496 --> 00:30:59.356 A:middle
should check a password.

