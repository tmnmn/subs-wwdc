WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.086 --> 00:05:02.096 A:middle
which retains the ARC object

00:05:02.176 --> 00:05:03.796 A:middle
pointer fields in the item.

00:05:05.066 --> 00:05:06.766 A:middle
The code comments on the slide

00:05:07.106 --> 00:05:08.936 A:middle
demonstrate the code that the

00:05:08.936 --> 00:05:10.306 A:middle
compiler synthesizes.

00:05:11.056 --> 00:05:13.386 A:middle
This code ensures the name and

00:05:13.386 --> 00:05:15.586 A:middle
the price of the item are not

00:05:15.586 --> 00:05:17.346 A:middle
released prematurely before the

00:05:17.346 --> 00:05:18.726 A:middle
item is actually used.

00:05:18.726 --> 00:05:23.076 A:middle
Now at the end of the function

00:05:23.286 --> 00:05:25.706 A:middle
item goes out of scope and is

00:05:25.706 --> 00:05:27.666 A:middle
deallocated from the stack so

00:05:27.666 --> 00:05:30.256 A:middle
the compiler has to synthesize

00:05:30.256 --> 00:05:32.686 A:middle
code which releases the ARC

00:05:32.686 --> 00:05:34.116 A:middle
object pointer fields in the

00:05:34.116 --> 00:05:34.536 A:middle
item.

00:05:35.596 --> 00:05:37.306 A:middle
This ensures that the name and

00:05:37.306 --> 00:05:39.536 A:middle
the price are not leaked when

00:05:39.536 --> 00:05:40.756 A:middle
the item is released.

00:05:42.986 --> 00:05:44.676 A:middle
Previously it was possible to

00:05:44.676 --> 00:05:46.546 A:middle
use Objective-C object pointer

00:05:46.546 --> 00:05:48.916 A:middle
fields when using manual

00:05:48.976 --> 00:05:51.076 A:middle
retained release mode, but you

00:05:51.076 --> 00:05:53.246 A:middle
had to write the retains and

00:05:53.276 --> 00:05:54.506 A:middle
releases yourself.

00:05:55.206 --> 00:05:57.856 A:middle
With ARC the compiler hides all

00:05:57.856 --> 00:05:59.826 A:middle
of this complexity for you and

00:05:59.826 --> 00:06:01.646 A:middle
synthesizes code that retains

