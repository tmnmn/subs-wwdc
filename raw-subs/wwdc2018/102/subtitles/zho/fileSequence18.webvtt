WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.866 --> 00:18:02.516 A:middle
之后我们再一次开始

00:18:02.516 --> 00:18:03.126 A:middle
记录数据

00:18:04.136 --> 00:18:05.826 A:middle
就像之前一样

00:18:05.826 --> 00:18:07.136 A:middle
我需要跟踪 pointsOfInterest

00:18:07.136 --> 00:18:08.126 A:middle
这里有我想要

00:18:08.126 --> 00:18:08.896 A:middle
观察的数据

00:18:09.436 --> 00:18:11.356 A:middle
但是现在 我有了更多

00:18:11.356 --> 00:18:13.096 A:middle
关于我所发出的网络请求

00:18:13.096 --> 00:18:15.076 A:middle
的详细信息

00:18:15.536 --> 00:18:16.506 A:middle
同样地 我需要放大一下

00:18:16.506 --> 00:18:16.976 A:middle
这样我们可以看得更清楚一些

00:18:22.406 --> 00:18:24.136 A:middle
这个定制的 Instruments 包

00:18:24.466 --> 00:18:26.536 A:middle
使我能够

00:18:26.536 --> 00:18:28.706 A:middle
清楚地看到

00:18:28.706 --> 00:18:30.566 A:middle
我是如何使用这个框架的

00:18:31.016 --> 00:18:32.426 A:middle
例如这里

00:18:32.626 --> 00:18:34.226 A:middle
它向我展示了

00:18:34.226 --> 00:18:35.746 A:middle
我每 0.1 秒平均发出了

00:18:35.746 --> 00:18:37.506 A:middle
多少个网络请求

00:18:38.226 --> 00:18:39.456 A:middle
然后在这里

00:18:39.456 --> 00:18:41.256 A:middle
这个跟踪显示了

00:18:41.256 --> 00:18:43.536 A:middle
关于每个网络请求的详细信息

00:18:43.796 --> 00:18:44.726 A:middle
耗时多久

00:18:45.026 --> 00:18:46.326 A:middle
它甚至用红色突出显示

00:18:46.326 --> 00:18:47.396 A:middle
重复的请求

00:18:47.756 --> 00:18:48.766 A:middle
在这些地方

00:18:48.946 --> 00:18:50.386 A:middle
我不止一次请求

00:18:50.386 --> 00:18:51.816 A:middle
相同的数据

00:18:51.816 --> 00:18:53.066 A:middle
看起来大约超过一半的时间

00:18:53.146 --> 00:18:55.406 A:middle
我都在做这样的事情

00:18:55.666 --> 00:18:56.836 A:middle
所以我一直在浪费

00:18:56.836 --> 00:18:58.056 A:middle
大量的性能

00:18:58.536 --> 00:18:59.816 A:middle
这些正是我需要的信息

00:18:59.816 --> 00:19:01.796 A:middle
帮助我更有效地

