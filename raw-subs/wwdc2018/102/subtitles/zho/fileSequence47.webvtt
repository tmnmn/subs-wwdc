WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:58.496 --> 00:47:00.906 A:middle
并行执行测试

00:47:01.516 --> 00:47:07.066 A:middle
[ 掌声 ]

00:47:07.566 --> 00:47:09.236 A:middle
去年 你们可以使用 Xcodebuild

00:47:09.236 --> 00:47:11.056 A:middle
对多个设备进行并行测试

00:47:11.056 --> 00:47:13.366 A:middle
将所有相同的测试

00:47:13.366 --> 00:47:15.056 A:middle
发送到每个设备上

00:47:15.056 --> 00:47:17.126 A:middle
如果你们想要使用持续集成

00:47:17.126 --> 00:47:18.476 A:middle
并达到最广泛的测试规模

00:47:18.476 --> 00:47:19.886 A:middle
它是最适合的方法

00:47:20.956 --> 00:47:22.146 A:middle
当你们使用 Xcode 时

00:47:22.326 --> 00:47:24.556 A:middle
你们通常只关注于单个配置

00:47:24.966 --> 00:47:25.916 A:middle
但在测试时

00:47:25.916 --> 00:47:27.586 A:middle
你们希望尽快完成

00:47:28.696 --> 00:47:30.406 A:middle
Xcode 10 通过并行测试

00:47:30.406 --> 00:47:33.376 A:middle
极大地改进了

00:47:33.376 --> 00:47:34.016 A:middle
这个配置的测试速度

00:47:35.126 --> 00:47:36.536 A:middle
在后台 Xcode 创建了

00:47:36.536 --> 00:47:38.706 A:middle
Mac App 的副本

00:47:38.826 --> 00:47:40.906 A:middle
或者 iOS 模拟器的克隆

00:47:41.156 --> 00:47:42.866 A:middle
然后将测试套件

00:47:42.866 --> 00:47:43.106 A:middle
发送给它们

00:47:44.496 --> 00:47:45.756 A:middle
这意味着你们将

00:47:45.826 --> 00:47:47.716 A:middle
继续测试单个配置

00:47:47.716 --> 00:47:49.856 A:middle
但是将在很短的时间内完成

00:47:51.096 --> 00:47:51.926 A:middle
并行测试可以

00:47:51.966 --> 00:47:53.286 A:middle
根据你们的机器容量

00:47:53.286 --> 00:47:55.106 A:middle
自动进行伸缩

00:47:55.106 --> 00:47:57.316 A:middle
这意味着在 iMac Pro 上

00:47:57.316 --> 00:47:57.876 A:middle
它会表现得非常棒

00:47:59.796 --> 00:48:00.846 A:middle
你们可能会问 具体有多棒呢

