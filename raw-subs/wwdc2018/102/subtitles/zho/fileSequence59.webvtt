WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:58:59.426 --> 00:59:01.096 A:middle
那么你们的模型将不会得到很好的训练

00:59:01.096 --> 00:59:02.456 A:middle
它们会被过度供给

00:59:02.456 --> 00:59:03.236 A:middle
然后你们就会得到糟糕的预测

00:59:03.846 --> 00:59:06.506 A:middle
Apple 在使用

00:59:06.506 --> 00:59:08.646 A:middle
数百万的照片数据

00:59:08.646 --> 00:59:10.696 A:middle
训练非常大的模型的方面

00:59:10.746 --> 00:59:12.856 A:middle
有着十分丰富的经验

00:59:13.236 --> 00:59:14.786 A:middle
我们想把所有的经验

00:59:14.786 --> 00:59:16.416 A:middle
传授给你们

00:59:16.746 --> 00:59:19.136 A:middle
通过一种叫做迁移学习的技术

00:59:19.136 --> 00:59:21.896 A:middle
你们可以训练自己的

00:59:22.156 --> 00:59:23.896 A:middle
自定义图形分类器

00:59:25.206 --> 00:59:27.506 A:middle
我们把模型打包到

00:59:27.506 --> 00:59:28.956 A:middle
我们的 OS 中

00:59:28.956 --> 00:59:29.666 A:middle
这样就不需要你们交付了

00:59:30.096 --> 00:59:32.116 A:middle
然后获取你们的数据

00:59:32.116 --> 00:59:33.336 A:middle
并通过 Creat ML 使用迁移学习

00:59:33.336 --> 00:59:35.366 A:middle
然后增强我们的模型

00:59:36.706 --> 00:59:38.076 A:middle
这意味着你们只需要

00:59:38.136 --> 00:59:39.166 A:middle
交付模型中被增强的那部分

00:59:39.166 --> 00:59:41.636 A:middle
这为你们的 App 

00:59:41.636 --> 00:59:43.516 A:middle
带来了十分可观的节省 

00:59:44.926 --> 00:59:45.926 A:middle
很多开发人员

00:59:45.926 --> 00:59:47.626 A:middle
需要构建大约 100MB 规模的模型

00:59:47.626 --> 00:59:48.606 A:middle
仅仅为了向他们的 App 中

00:59:48.606 --> 00:59:50.396 A:middle
添加一个智能功能

00:59:50.396 --> 00:59:52.526 A:middle
我们帮助他们提高了效率

00:59:53.376 --> 00:59:54.506 A:middle
现在 通过迁移学习

00:59:54.506 --> 00:59:55.886 A:middle
他们可以把模型的大小

00:59:55.886 --> 00:59:57.726 A:middle
缩减到 3MB

00:59:58.516 --> 01:00:05.856 A:middle
[ 掌声 ]

