WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

01:15:59.936 --> 01:16:01.876 A:middle
shaders with an enormous array

01:16:01.876 --> 01:16:03.566 A:middle
of all-new compute kernels,

01:16:03.966 --> 01:16:05.626 A:middle
optimized to support machine

01:16:05.626 --> 01:16:07.196 A:middle
learning training right on the

01:16:07.196 --> 01:16:09.326 A:middle
local GPU on your iOS and Mac

01:16:09.366 --> 01:16:09.926 A:middle
devices.

01:16:10.246 --> 01:16:11.646 A:middle
And the performance improvements

01:16:11.646 --> 01:16:12.776 A:middle
we are seeing from these new

01:16:12.776 --> 01:16:14.076 A:middle
Metal performance shaders on

01:16:14.076 --> 01:16:15.706 A:middle
training are truly stunning,

01:16:15.706 --> 01:16:17.116 A:middle
with an order of magnitude

01:16:17.166 --> 01:16:18.456 A:middle
faster training times.

01:16:19.376 --> 01:16:20.846 A:middle
We're also really excited to

01:16:20.846 --> 01:16:21.826 A:middle
announce we've been working with

01:16:21.866 --> 01:16:22.796 A:middle
Google to bring Metal

01:16:22.796 --> 01:16:24.676 A:middle
acceleration to TensorFlow later

01:16:24.676 --> 01:16:25.966 A:middle
this year, and the early

01:16:25.966 --> 01:16:27.226 A:middle
performance results are showing

01:16:27.226 --> 01:16:29.406 A:middle
an astonishing improvement of 20

01:16:29.406 --> 01:16:30.436 A:middle
times the previous

01:16:30.436 --> 01:16:31.236 A:middle
implementation.

01:16:32.316 --> 01:16:33.936 A:middle
[Applause] Yeah, it's awesome.

01:16:34.516 --> 01:16:36.756 A:middle
[ Applause ]

01:16:37.256 --> 01:16:38.796 A:middle
And last, ray tracing.

01:16:38.796 --> 01:16:39.866 A:middle
Now this is a time-honored

01:16:39.866 --> 01:16:41.746 A:middle
technique to achieve incredibly

01:16:41.806 --> 01:16:44.076 A:middle
realistic scenes, often used for

01:16:44.076 --> 01:16:45.646 A:middle
high-end rendering and 3D

01:16:45.646 --> 01:16:46.336 A:middle
product design.

01:16:46.716 --> 01:16:48.116 A:middle
However, it traditionally had to

01:16:48.116 --> 01:16:49.466 A:middle
be done offline because it was

01:16:49.466 --> 01:16:51.206 A:middle
so computationally expensive.

01:16:51.346 --> 01:16:54.346 A:middle
Now let me describe why very

01:16:54.346 --> 01:16:54.796 A:middle
quickly.

01:16:55.126 --> 01:16:56.196 A:middle
First, you would need to

01:16:56.196 --> 01:16:58.036 A:middle
mathematically model the rays

01:16:58.036 --> 01:16:58.966 A:middle
from a light source as they

01:16:58.966 --> 01:17:00.636 A:middle
bounce off of objects through

