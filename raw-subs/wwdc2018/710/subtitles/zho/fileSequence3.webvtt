WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.096 --> 00:03:01.276 A:middle
给本地通知

00:03:01.276 --> 00:03:02.406 A:middle
加过线程标识

00:03:02.536 --> 00:03:03.636 A:middle
正如所示 你可以在

00:03:03.806 --> 00:03:05.606 A:middle
UNMutableNotificationContent

00:03:05.606 --> 00:03:06.906 A:middle
的对象中进行添加

00:03:08.056 --> 00:03:10.096 A:middle
而在远程通知的 payload 处

00:03:10.096 --> 00:03:11.876 A:middle
你也可以将

00:03:11.876 --> 00:03:13.706 A:middle
线程标识添加进去

00:03:15.756 --> 00:03:17.816 A:middle
现在你们

00:03:17.816 --> 00:03:19.696 A:middle
可能已经比较了解线程标识了

00:03:20.996 --> 00:03:23.616 A:middle
现在我们用它

00:03:23.616 --> 00:03:25.486 A:middle
将通知发送给

00:03:25.486 --> 00:03:27.126 A:middle
App 的

00:03:27.126 --> 00:03:28.976 A:middle
通知内容扩展

00:03:29.176 --> 00:03:30.406 A:middle
App 必须带有

00:03:30.406 --> 00:03:32.336 A:middle
同样的线程标识

00:03:32.336 --> 00:03:33.986 A:middle
才能根据新通知

00:03:34.026 --> 00:03:35.846 A:middle
来更新内容扩展视图

00:03:37.256 --> 00:03:39.346 A:middle
我们从 iOS 11 起

00:03:39.346 --> 00:03:41.536 A:middle
如果用户之前开启了 [ 音质不清晰 ]

00:03:41.536 --> 00:03:43.386 A:middle
我们便可以使用线程标识

00:03:43.386 --> 00:03:46.326 A:middle
对通知进行分组

00:03:47.156 --> 00:03:48.126 A:middle
可以说

00:03:48.126 --> 00:03:50.006 A:middle
我们拓展了线程标识的运用

00:03:50.006 --> 00:03:51.096 A:middle
将其覆盖所有类型的通知

00:03:52.756 --> 00:03:54.726 A:middle
那通知分组是如何实现的呢

00:03:55.446 --> 00:03:57.166 A:middle
你的设备

00:03:57.166 --> 00:03:59.676 A:middle
接收到新通知时

00:03:59.676 --> 00:04:01.556 A:middle
如果该通知不包含

