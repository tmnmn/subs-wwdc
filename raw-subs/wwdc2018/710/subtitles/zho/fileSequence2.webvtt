WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:57.136 --> 00:02:01.356 A:middle
在 iOS 11 及之前版本的系统中

00:02:01.356 --> 00:02:02.586 A:middle
所有新的用户通知

00:02:02.586 --> 00:02:04.426 A:middle
都是在通知列表中

00:02:04.426 --> 00:02:05.816 A:middle
以时间顺序

00:02:05.816 --> 00:02:06.756 A:middle
排列显示的

00:02:07.276 --> 00:02:08.735 A:middle
这就造成多个 App 的通知

00:02:08.735 --> 00:02:10.376 A:middle
穿插显示

00:02:10.705 --> 00:02:12.006 A:middle
而用户很难

00:02:12.006 --> 00:02:13.886 A:middle
一下找到某个通知

00:02:13.886 --> 00:02:16.746 A:middle
或分流多个通知

00:02:17.796 --> 00:02:20.346 A:middle
因此从 iOS 12 起

00:02:20.346 --> 00:02:22.216 A:middle
我们决定加以改进

00:02:22.216 --> 00:02:23.676 A:middle
新增分组通知功能

00:02:23.676 --> 00:02:25.696 A:middle
现在大家可以看到

00:02:25.696 --> 00:02:27.586 A:middle
多个 App 的

00:02:27.586 --> 00:02:30.526 A:middle
各种通知都被分到了

00:02:30.526 --> 00:02:31.036 A:middle
专属于它们的分组

00:02:32.056 --> 00:02:33.616 A:middle
下面我们仔细谈谈

00:02:33.616 --> 00:02:34.866 A:middle
分组通知

00:02:36.016 --> 00:02:38.426 A:middle
所有通知

00:02:38.426 --> 00:02:39.856 A:middle
会自动进行分组

00:02:39.856 --> 00:02:41.586 A:middle
所以你不需要

00:02:41.716 --> 00:02:43.626 A:middle
任何操作

00:02:43.706 --> 00:02:44.996 A:middle
就可以使用该功能

00:02:45.406 --> 00:02:47.016 A:middle
但是如果你想

00:02:47.136 --> 00:02:49.426 A:middle
创建自定义分组

00:02:49.426 --> 00:02:51.176 A:middle
那就需要使用线程标识

00:02:51.556 --> 00:02:53.566 A:middle
线程标识

00:02:53.746 --> 00:02:55.556 A:middle
是 UN notification content 对象中

00:02:55.556 --> 00:02:55.996 A:middle
已有的属性

00:02:57.646 --> 00:02:59.096 A:middle
你们当中可能有人

00:02:59.096 --> 00:03:01.276 A:middle
给本地通知

