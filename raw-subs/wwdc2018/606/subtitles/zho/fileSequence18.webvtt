WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.314 --> 00:18:01.215 align:middle line:-1
最后…

00:18:01.281 --> 00:18:04.117 align:middle line:-2
记住 我们不能
将阴影颜色写入图像

00:18:04.184 --> 00:18:07.254 align:middle line:-2
除非我们知道原始阴影点
是否位于阴影之中

00:18:07.821 --> 00:18:11.058 align:middle line:-2
因此我们需要一种方法
通过Intersector将颜色

00:18:11.124 --> 00:18:14.127 align:middle line:-2
从阴影内核
传递到最终内核

00:18:14.194 --> 00:18:15.596 align:middle line:-1
这将会更新图像

00:18:16.296 --> 00:18:18.632 align:middle line:-2
为此 可以自定义
我们的光线结构

00:18:22.302 --> 00:18:23.904 align:middle line:-1
我们有多个选项

00:18:23.971 --> 00:18:26.507 align:middle line:-2
选择为Intersector
提供哪些数据

00:18:27.140 --> 00:18:28.742 align:middle line:-2
本例中
我们将使用一个数据类型

00:18:28.809 --> 00:18:31.445 align:middle line:-1
它包含最小和最大距离字段

00:18:32.379 --> 00:18:35.449 align:middle line:-2
MPS将会忽略
此范围之外的任何交叉

00:18:35.649 --> 00:18:38.552 align:middle line:-2
从而防止阴影射线
偏离光源

00:18:40.187 --> 00:18:41.054 align:middle line:-1
其次…

00:18:41.288 --> 00:18:44.758 align:middle line:-1
如果应用特定的光线相关数据

00:18:45.125 --> 00:18:47.261 align:middle line:-2
可以将这些数据追加到
光线结构的末尾

00:18:47.327 --> 00:18:48.996 align:middle line:-1
并且提供一个rayStride

00:18:49.730 --> 00:18:52.866 align:middle line:-2
MPS从你的光线缓冲区读取数据时
将会跳过此数据

00:18:53.867 --> 00:18:54.701 align:middle line:-1
在本例中

00:18:54.768 --> 00:18:57.004 align:middle line:-2
我们将阴影颜色添加到
光线结构的末尾

00:18:57.070 --> 00:18:59.339 align:middle line:-1
这样 可以将它从阴影内核

00:18:59.406 --> 00:19:00.607 align:middle line:-1
传递到最后内核

