WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.719 --> 00:12:01.822 align:middle line:-2
然后 我们使用
Intersector

00:12:01.889 --> 00:12:03.257 align:middle line:-1
寻找光线与场景间的交叉区

00:12:04.024 --> 00:12:04.958 align:middle line:-1
最后

00:12:05.025 --> 00:12:07.694 align:middle line:-2
最后我们使用交叉区结果
计算阴影效果

00:12:09.263 --> 00:12:10.731 align:middle line:-1
我们先来看Intersector

00:12:12.566 --> 00:12:14.468 align:middle line:-1
MPSRayIntersector类

00:12:14.768 --> 00:12:17.304 align:middle line:-1
协调所有光线三角交叉区测试结果

00:12:18.305 --> 00:12:21.041 align:middle line:-2
我们只需要提供
想要用于交叉测试的

00:12:21.108 --> 00:12:23.043 align:middle line:-1
Metal设备

00:12:25.312 --> 00:12:27.314 align:middle line:-1
接下来 我们将创建加速结构

00:12:28.982 --> 00:12:29.917 align:middle line:-1
此加速结构用

00:12:29.983 --> 00:12:32.686 align:middle line:-2
MPSTriangle
AccelerationStructure类表示

00:12:33.120 --> 00:12:36.456 align:middle line:-2
同样地 要创建加速结构
我们只需要提供用于创建Intersector的

00:12:36.523 --> 00:12:38.158 align:middle line:-1
相同Metal设备

00:12:40.027 --> 00:12:43.230 align:middle line:-2
然后 加入我们的vertexBuffer
指定triangleCount

00:12:44.298 --> 00:12:46.967 align:middle line:-1
最后 我们创建加速结构

00:12:47.534 --> 00:12:48.869 align:middle line:0
只需要创建一次

00:12:48.936 --> 00:12:51.338 align:middle line:0
然后 就可以重复地

00:12:51.405 --> 00:12:52.739 align:middle line:0
多次使用这个加速结构

00:12:56.677 --> 00:12:59.947 align:middle line:-2
接下来 将生成一次光线
将它们写入光线缓冲区

