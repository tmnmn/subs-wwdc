WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:58.779 --> 00:03:02.549 align:middle line:-2
软阴影贴图技术
会产生不均匀的软阴影

00:03:03.717 --> 00:03:04.818 align:middle line:-1
利用光线追踪技术

00:03:04.985 --> 00:03:08.388 align:middle line:-2
我们可以直接计算
确定点是否在阴影之中

00:03:08.822 --> 00:03:10.490 align:middle line:-1
因此可以生成清晰的阴影

00:03:10.757 --> 00:03:13.994 align:middle line:-1
包括在物体之间的距离增大时

00:03:14.061 --> 00:03:16.163 align:middle line:-1
生成从硬到软的真实阴影过渡效果

00:03:18.532 --> 00:03:20.834 align:middle line:-1
最后一个例子是球形淡出

00:03:22.202 --> 00:03:24.838 align:middle line:-2
它模拟光线在场景表面上的
淡出效果

00:03:25.706 --> 00:03:29.476 align:middle line:-2
使用光栅化方法
很难实现球形淡出效果

00:03:29.743 --> 00:03:32.613 align:middle line:-2
但是使用光线追踪器
却可以进行十分自然的建模

00:03:33.013 --> 00:03:35.516 align:middle line:-1
事实上 许多游戏和实时app

00:03:35.582 --> 00:03:37.718 align:middle line:-1
都包含球形淡出效果组件

00:03:37.985 --> 00:03:40.454 align:middle line:-2
这些组件使用光线追踪器
进行预计算

00:03:40.621 --> 00:03:42.422 align:middle line:-1
然后将结果存储到材质之中

00:03:42.556 --> 00:03:45.192 align:middle line:-1
在运行时映射到几何形状上

00:03:47.327 --> 00:03:50.797 align:middle line:-2
当然 我们还可以使用
光线追踪器模拟许多其他效果

00:03:50.864 --> 00:03:54.801 align:middle line:-2
例如环境光遮蔽
折射和面光源

00:03:55.169 --> 00:03:58.238 align:middle line:-2
以及摄像机效果
例如景深和运动模糊

00:03:59.573 --> 00:04:01.375 align:middle line:-1
因此 光线追踪技术被用于

