WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.706 --> 00:14:02.776 align:middle line:-1
此缓冲区包含我们刚创建的一次光线

00:14:03.410 --> 00:14:04.778 align:middle line:-1
另外还提供交叉区缓冲区

00:14:04.845 --> 00:14:06.613 align:middle line:-1
此缓冲区包含交叉区结果

00:14:07.848 --> 00:14:09.583 align:middle line:-1
还需要提供rayCount

00:14:09.816 --> 00:14:11.485 align:middle line:-1
在本例中 它是图像宽度

00:14:11.552 --> 00:14:12.619 align:middle line:-1
乘以图像高度

00:14:13.787 --> 00:14:16.290 align:middle line:-1
最后 提供我们的加速结构

00:14:17.724 --> 00:14:20.494 align:middle line:-2
MPS将会沿每条光线
寻找最近的交叉区

00:14:20.561 --> 00:14:22.829 align:middle line:-1
并在交叉区缓冲中返回结果

00:14:23.230 --> 00:14:25.632 align:middle line:-2
最后剩下的工作是
使用交叉区数据

00:14:25.699 --> 00:14:26.700 align:middle line:-1
计算阴影

00:14:28.669 --> 00:14:30.771 align:middle line:-2
为此 我们启动
另外一个计算内核

00:14:31.705 --> 00:14:33.440 align:middle line:-1
可以像在片段着色器中那样

00:14:33.507 --> 00:14:35.742 align:middle line:-1
app光照和材质

00:14:36.043 --> 00:14:38.612 align:middle line:-1
在片段着色器中可以使用的

00:14:38.679 --> 00:14:40.547 align:middle line:-1
大多数标准材质和数学函数

00:14:40.714 --> 00:14:42.616 align:middle line:-1
都可以在计算内核中使用

00:14:43.784 --> 00:14:46.753 align:middle line:-2
但是一般来说
阴影取决于交叉点

00:14:46.820 --> 00:14:49.489 align:middle line:-2
和顶点属性
例如颜色和形态

00:14:50.023 --> 00:14:53.594 align:middle line:-2
在片段着色器中
GPU将为我们完成这些插值

00:14:53.927 --> 00:14:55.729 align:middle line:-1
但我们需要它们在交叉数据的基础上

00:14:55.796 --> 00:14:57.297 align:middle line:-1
自己进行插值

00:14:58.866 --> 00:15:01.368 align:middle line:-1
因此 让我们来看如何计算交叉点

