WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.398 --> 00:20:00.968 align:middle line:0
由于并不需要知道
将会遇到哪个三角形

00:20:01.034 --> 00:20:04.404 align:middle line:0
因此可以在遇到任意三角形时
结束交叉搜索

00:20:04.705 --> 00:20:05.672 align:middle line:0
通常情况下

00:20:05.739 --> 00:20:08.375 align:middle line:0
这比搜索最近交叉点的速度更快

00:20:09.142 --> 00:20:12.112 align:middle line:0
对此 MPS有一个专用模式
可以启用它

00:20:12.312 --> 00:20:15.349 align:middle line:0
方法是传递任意intersectionType
而不是传递nearest

00:20:18.385 --> 00:20:22.222 align:middle line:-2
最后 可以启动最后内核
将颜色添加到图像

00:20:24.191 --> 00:20:28.929 align:middle line:-2
每个线程将读入一阴影光线和相应的
intersection数据

00:20:30.297 --> 00:20:32.332 align:middle line:-1
如果交叉间距为正值

00:20:32.533 --> 00:20:34.902 align:middle line:-1
那么原始交叉点位于阴影之中

00:20:35.269 --> 00:20:36.703 align:middle line:-1
不需要做其他工作

00:20:37.504 --> 00:20:39.907 align:middle line:-1
否则 交叉点不在阴影之中

00:20:41.275 --> 00:20:44.745 align:middle line:-2
因此 应读入光线颜色
将它写入输出图像

00:20:45.979 --> 00:20:48.282 align:middle line:-2
这样就可以将阴影
添加到图像之中

00:20:50.817 --> 00:20:53.587 align:middle line:-2
我们可以看到
在添加光照到图像之前

00:20:53.654 --> 00:20:56.757 align:middle line:-2
每个阴影点检查
光源是否可见

00:20:57.591 --> 00:20:59.193 align:middle line:-1
由于我们使用光线追踪器

00:20:59.660 --> 00:21:02.429 align:middle line:-2
因此可以随机采样
光源的表面

