WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.360 --> 00:26:02.196 align:middle line:-1
所有GPU完成处理之后

00:26:02.262 --> 00:26:04.965 align:middle line:-1
我们选择连接到显示的GPU

00:26:05.732 --> 00:26:07.968 align:middle line:-1
将会复制所有已经完成的区域

00:26:08.035 --> 00:26:08.902 align:middle line:-1
以进行合成

00:26:10.537 --> 00:26:11.471 align:middle line:-1
合成是将各个区域

00:26:11.538 --> 00:26:13.307 align:middle line:-1
拼接在一起

00:26:13.373 --> 00:26:15.309 align:middle line:-1
然后放入帧缓冲区

00:26:16.043 --> 00:26:19.179 align:middle line:-2
你可能想要将它们
与先前的渲染组合在一起

00:26:19.246 --> 00:26:21.448 align:middle line:-1
以增强图像质量和消除噪讯

00:26:23.550 --> 00:26:25.485 align:middle line:-1
在开始进行渲染之前

00:26:25.619 --> 00:26:28.822 align:middle line:-2
需要确保每个GPU
都有完整的场景副本

00:26:30.123 --> 00:26:33.227 align:middle line:-1
需要在所有GPU上复制资产

00:26:33.293 --> 00:26:35.462 align:middle line:-1
例如顶点缓冲区和材质

00:26:36.563 --> 00:26:38.432 align:middle line:-1
然后 创建Sean前面说过的

00:26:38.498 --> 00:26:39.867 align:middle line:-1
三角形加速结构

00:26:42.436 --> 00:26:44.705 align:middle line:-1
现在… 对于加速结构

00:26:44.771 --> 00:26:47.808 align:middle line:-1
不需要为每个GPU

00:26:47.875 --> 00:26:48.976 align:middle line:0
重头进行创建

00:26:49.510 --> 00:26:54.147 align:middle line:0
我们添加一个API
让你能够使用现有的加速结构

00:26:54.214 --> 00:26:56.850 align:middle line:0
为每个想要使用的GPU
生成一个副本

00:26:58.118 --> 00:27:00.587 align:middle line:0
这个副本是非递归性的

