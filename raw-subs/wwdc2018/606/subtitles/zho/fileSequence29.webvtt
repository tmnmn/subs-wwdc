WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:58.272 --> 00:29:00.307 align:middle line:-2
我们通过系统内存
Blit完成的区域

00:29:02.142 --> 00:29:03.944 align:middle line:-1
来看如何进行设置

00:29:05.012 --> 00:29:08.815 align:middle line:-2
首先 使用Metal共享存储模式
在设备A上创建缓冲区

00:29:09.783 --> 00:29:12.152 align:middle line:-1
这将会在内部分配系统内存

00:29:12.553 --> 00:29:15.522 align:middle line:-2
使用.contents方法
指向此内存区域

00:29:18.625 --> 00:29:20.460 align:middle line:-1
然后在设备B上创建缓冲区时

00:29:20.761 --> 00:29:25.032 align:middle line:-2
使用NoCopy API包装
刚才为缓冲区分配的内存

00:29:27.000 --> 00:29:29.136 align:middle line:-1
对于此API 需要知道的是

00:29:29.203 --> 00:29:32.406 align:middle line:-1
缓冲区必须是多页面大小

00:29:32.472 --> 00:29:35.442 align:middle line:-2
因此在创建原始缓冲区时
必须设置合适的内存大小

00:29:38.745 --> 00:29:41.381 align:middle line:-1
现在 我们可以在设备之间共享内存

00:29:41.448 --> 00:29:43.150 align:middle line:0
我们需要思考同步化问题

00:29:43.917 --> 00:29:46.420 align:middle line:0
为了描述这个问题
我们使用一个示例时间线

00:29:46.486 --> 00:29:48.989 align:middle line:0
来描述两个并行运行的GPU

00:29:49.489 --> 00:29:51.792 align:middle line:0
黑框表示指令缓冲区

00:29:51.859 --> 00:29:53.026 align:middle line:0
绿框表示我们编码进入

00:29:53.093 --> 00:29:55.996 align:middle line:0
这些指令缓冲区中的工作内容

00:29:56.296 --> 00:29:58.632 align:middle line:0
例如 使用计算指令编码器

