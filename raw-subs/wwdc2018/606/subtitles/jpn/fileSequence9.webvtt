WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.640 --> 00:09:00.507 align:start position:41% line:-1
出ましたね

00:09:01.475 --> 00:09:05.479 align:start position:36% line:-2
3Dモデルは通常
三角形で表します

00:09:06.013 --> 00:09:09.016 align:start position:23% line:-1
これらの三角形とレイの交点を―

00:09:09.116 --> 00:09:11.919 align:start position:32% line:-1
調べる必要があります

00:09:12.853 --> 00:09:17.858 align:start position:30% line:-2
また レイの始点に
最も近い交点を求めます

00:09:19.026 --> 00:09:20.794 align:start position:32% line:-1
一番 単純な方法は―

00:09:20.894 --> 00:09:24.932 align:start position:32% line:-2
すべての三角形で
交点を求めることです

00:09:25.232 --> 00:09:28.936 align:start position:27% line:-1
しかし時間がかかりすぎます

00:09:29.803 --> 00:09:34.007 align:start position:29% line:-2
そこで“加速構造”という
データ構造を作成

00:09:34.608 --> 00:09:37.845 align:start position:23% line:-1
再帰的にシーンを分割することで

00:09:37.945 --> 00:09:41.215 align:start position:32% line:-2
空間内で近い三角形を
グループ化

00:09:42.382 --> 00:09:47.955 align:start position:29% line:-2
ツリー内の境界ボックスと
レイを交差させます

00:09:48.255 --> 00:09:52.159 align:start position:30% line:-2
交差しないサブツリーは
スキップして

00:09:52.993 --> 00:09:57.931 align:start position:32% line:-2
交点を求める三角形を
最終的に残すのです

00:09:59.032 --> 00:10:02.236 align:start position:27% line:-1
以上が交差判定の高速化です

