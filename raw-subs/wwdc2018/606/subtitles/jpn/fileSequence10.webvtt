WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.032 --> 00:10:02.236 align:start position:27% line:-1
以上が交差判定の高速化です

00:10:03.203 --> 00:10:05.539 align:start position:27% line:-1
これは単純化した例なので―

00:10:06.073 --> 00:10:10.177 align:start position:36% line:-2
実際の加速構造は
もう少し複雑です

00:10:11.278 --> 00:10:13.146 align:start position:38% line:-1
この画像では―

00:10:13.247 --> 00:10:17.284 align:start position:30% line:-2
複雑なジオメトリに
加速構造を使っています

00:10:17.751 --> 00:10:21.154 align:start position:29% line:-2
つまり
大半の時間を費やすのは―

00:10:21.255 --> 00:10:25.392 align:start position:30% line:-2
ジオメトリの
複雑な範囲だけなのです

00:10:26.460 --> 00:10:32.232 align:start position:30% line:-2
加速構造の理解のため
このことに触れています

00:10:32.432 --> 00:10:34.902 align:start position:34% line:-1
でも心配は無用です

00:10:35.002 --> 00:10:37.404 align:start position:25% line:-1
MPSがすべてサポートします

00:10:38.939 --> 00:10:41.308 align:start position:34% line:-1
三角形のモデルは―

00:10:41.708 --> 00:10:45.946 align:start position:27% line:-2
頂点として
頂点バッファに格納されます

00:10:46.713 --> 00:10:52.352 align:start position:23% line:-2
MPSを呼び 頂点バッファから
加速構造を作ってください

00:10:53.287 --> 00:10:58.559 align:start position:27% line:-2
交差判定の際 加速構造を
インターセクタに提供します

00:10:59.560 --> 00:11:02.396 align:start position:34% line:-2
アプリケーションで
使ってみましょう

