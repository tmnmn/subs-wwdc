WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.506 --> 00:04:04.745 align:start position:27% line:-2
従って写実的なオフラインの
描画に用いられます

00:04:05.779 --> 00:04:10.817 align:start position:29% line:-2
しかしレイトレーシングは
作業量が膨大なため

00:04:10.918 --> 00:04:14.154 align:start position:30% line:-2
ラスタ化より
計算コストが高いのです

00:04:14.988 --> 00:04:18.392 align:start position:30% line:-2
まずレイトレーシングの
レンダリングに触れ―

00:04:18.492 --> 00:04:21.295 align:start position:21% line:-1
Metalでの高速化を説明します

00:04:23.463 --> 00:04:25.365 align:start position:25% line:-1
パストレーシング法を使います

00:04:26.400 --> 00:04:29.403 align:start position:25% line:-1
現実では光源から光子が放たれ

00:04:29.503 --> 00:04:33.173 align:start position:32% line:-2
跳ね返りながら
カメラや目に届きます

00:04:33.841 --> 00:04:37.211 align:start position:30% line:-2
ただ カメラに届くのは
光子の一部なので―

00:04:37.311 --> 00:04:39.880 align:start position:29% line:-1
すべてを追うのはムダです

00:04:40.414 --> 00:04:46.353 align:start position:27% line:-2
そこでカメラの位置から
逆方向に光をトレースします

00:04:47.120 --> 00:04:52.125 align:start position:27% line:-2
まずカメラから空間に向けて
プライマリレイを飛ばし

00:04:53.393 --> 00:04:56.363 align:start position:32% line:-2
物体との交点で
シェーディングします

00:04:56.763 --> 00:05:01.101 align:start position:32% line:-2
計算するのは
交点に届いた光量と―

