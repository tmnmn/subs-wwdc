WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:56.703 --> 00:19:00.574 align:start position:16% line:-2
Cocoa開発の流れで
PythonとObjective-Cの

00:19:00.674 --> 00:19:07.080 align:start position:29% line:-2
双方向のブリッジとして
当初 実施されたものです

00:19:09.316 --> 00:19:12.519 align:start position:25% line:-2
PyObjCをシンタックスで
呼び出すには

00:19:12.619 --> 00:19:15.689 align:start position:23% line:-2
Objective-Cコードで
コラムを配置します

00:19:15.789 --> 00:19:20.427 align:start position:27% line:-2
もっと複雑なので
詳細はAPIをご覧ください

00:19:20.961 --> 00:19:24.097 align:start position:20% line:-2
ここではCIVectorのクラスを
取り上げます

00:19:24.431 --> 00:19:28.969 align:start position:12% line:-2
CIVectorは
Objective-Cコードで作成されます

00:19:29.670 --> 00:19:32.473 align:start position:18% line:-2
呼び出すのは
X Y Z WのCIVectorです

00:19:32.839 --> 00:19:34.541 align:start position:23% line:-1
PyObjCコードを見ましょう

00:19:34.675 --> 00:19:38.512 align:start position:14% line:-2
CIVectorをQuartzアンブレラ
パッケージからインポートし

00:19:39.012 --> 00:19:42.616 align:start position:18% line:-2
X Y Z WのCIVectorと
CIVectorクラスを呼び出します

00:19:44.284 --> 00:19:47.621 align:start position:21% line:-1
コードがPythonとは違います

00:19:47.955 --> 00:19:50.357 align:start position:27% line:-1
これは あとでお話しします

00:19:53.193 --> 00:19:56.029 align:start position:20% line:-1
PyCoreImageを見ましょう

00:19:56.196 --> 00:20:00.567 align:start position:14% line:-2
Core Imageはハードウェアに近く
フィルタしたコールを

