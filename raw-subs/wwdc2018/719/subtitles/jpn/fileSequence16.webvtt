WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.392 --> 00:16:02.429 align:start position:12% line:-1
CPUに留まる場合 Core Imageや

00:16:04.565 --> 00:16:09.403 align:start position:5% line:-2
Metal Performance Shaders
vlmageなどが使えます

00:16:10.304 --> 00:16:14.141 align:start position:23% line:-2
プロトタイプからの初期ポートは
時間がかかるし

00:16:14.241 --> 00:16:18.645 align:start position:29% line:-2
最初のレンダリングが
期待どおりとは限りません

00:16:19.246 --> 00:16:24.418 align:start position:25% line:-2
ピクセルの相違を生むソースは
多くありますが

00:16:24.518 --> 00:16:29.122 align:start position:23% line:-2
フィルタがフレームワークで
実行される方法の違いもその１つ

00:16:29.690 --> 00:16:36.296 align:start position:21% line:-2
左側の例は前景と背景に
いい感じのぼかしが施されています

00:16:36.463 --> 00:16:41.735 align:start position:23% line:-2
このフィルタは
内部のパフォーマンスを最適化し

00:16:41.835 --> 00:16:43.871 align:start position:30% line:-1
処理速度を上げています

00:16:44.271 --> 00:16:47.407 align:start position:34% line:-2
こうした最適化は
数的なエラーを招き

00:16:47.508 --> 00:16:49.576 align:start position:27% line:-1
それがフィルタに伝わります

00:16:49.977 --> 00:16:54.281 align:start position:27% line:-2
フィルタの出力に
影響を与えることがあります

00:16:55.649 --> 00:17:02.322 align:start position:23% line:-2
他の問題は メモリ管理の大半が
代理で行われることです

