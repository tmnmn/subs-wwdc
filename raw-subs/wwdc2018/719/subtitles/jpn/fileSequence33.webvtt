WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:56.376 --> 00:33:00.747 align:start position:29% line:-2
次のデモでお見せするのは
結合です

00:33:01.048 --> 00:33:05.018 align:start position:27% line:-2
Pythonの画像分割を
使っている方もいるでしょう

00:33:05.119 --> 00:33:09.189 align:start position:30% line:-2
ここでは
水平分割した画像にのみ

00:33:09.289 --> 00:33:11.892 align:start position:32% line:-1
フィルタを適用します

00:33:12.459 --> 00:33:14.728 align:start position:29% line:-1
まずはコードを見ましょう

00:33:15.129 --> 00:33:17.264 align:start position:34% line:-1
これが結合機能です

00:33:17.498 --> 00:33:23.504 align:start position:23% line:-2
一番下に２つの構成要素で
レンダリングした様子が見えます

00:33:23.604 --> 00:33:25.906 align:start position:23% line:-1
右側にCIImageがあります

00:33:26.440 --> 00:33:31.912 align:start position:14% line:-2
Core Imageをこの一群の中でのみ
レンダリングしました

00:33:32.012 --> 00:33:35.649 align:start position:29% line:-1
ですから効率がいいのです

00:33:37.484 --> 00:33:42.523 align:start position:29% line:-2
画像を５つに分割し
最終結果を見てみましょう

00:33:45.092 --> 00:33:48.762 align:start position:27% line:-1
ここに書かれているラベルは

00:33:48.962 --> 00:33:51.498 align:start position:34% line:-2
適用したフィルタと
一致しています

00:33:51.899 --> 00:33:54.068 align:start position:29% line:-2
PyCoreImageは
本当にシンプルです

00:33:54.468 --> 00:33:58.739 align:start position:32% line:-2
性能について
手短に説明しましょう

00:33:58.839 --> 00:34:03.544 align:start position:25% line:-2
CIImageインスタンスで
レンダリングを呼び出すたび

