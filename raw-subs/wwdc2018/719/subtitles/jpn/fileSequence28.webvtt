WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.812 --> 00:28:01.615 align:start position:27% line:-1
呼び出し方に焦点を当てます

00:28:02.115 --> 00:28:05.886 align:start position:18% line:-2
cimgインスタンスで
applyKernelを呼び出します

00:28:06.487 --> 00:28:09.223 align:start position:34% line:-2
次のソースコードは
トリプルコードの

00:28:09.323 --> 00:28:11.291 align:start position:25% line:-1
Python文字列を使います

00:28:12.493 --> 00:28:15.495 align:start position:34% line:-2
カーネルを適用する
度合いを決めます

00:28:17.197 --> 00:28:21.301 align:start position:27% line:-2
サンプリングの表現に沿って
領域を定義します

00:28:21.735 --> 00:28:26.707 align:start position:23% line:-2
デスティネーションのドメインの
コンセプトや領域については

00:28:26.874 --> 00:28:31.812 align:start position:21% line:-2
オンライン資料と過去の
WWDCセッションをご覧ください

00:28:32.045 --> 00:28:34.281 align:start position:29% line:-2
ここに畳み込みカーネルが
ありますが

00:28:34.381 --> 00:28:36.984 align:start position:25% line:-1
１つのピクセルを読み込みます

00:28:37.451 --> 00:28:41.822 align:start position:20% line:-2
Core Imageがバウンダリー
コンディションをハンドルします

00:28:43.023 --> 00:28:48.295 align:start position:23% line:-2
たくさん話しましたが
APIを見ること自体は簡潔です

00:28:48.395 --> 00:28:52.032 align:start position:23% line:-1
デモで実際の操作をご覧ください

00:28:54.268 --> 00:28:58.505 align:start position:43% line:-1
(拍手)

