WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:54.241 --> 00:13:00.581 align:start position:25% line:-2
CIカーネルでの値を
カーネルから戻す手法とは違い

00:13:00.681 --> 00:13:03.684 align:start position:18% line:-1
“dest.write”を使うのです

00:13:05.485 --> 00:13:10.123 align:start position:29% line:-2
わずかな努力で
素晴らしい結果になります

00:13:10.224 --> 00:13:13.627 align:start position:23% line:-2
このシェーダで
倍のパフォーマンスを得られます

00:13:13.727 --> 00:13:17.798 align:start position:34% line:-2
特に畳み込みを行う
他のシェーダでも

00:13:17.898 --> 00:13:20.267 align:start position:27% line:-1
似たような結果が得られます

00:13:20.601 --> 00:13:24.338 align:start position:27% line:-2
カーネルのパフォーマンスが
向上します

00:13:25.105 --> 00:13:31.578 align:start position:18% line:-2
従来のCIカーネル言語と
MetalがベースのCIカーネルの―

00:13:31.678 --> 00:13:36.383 align:start position:32% line:-2
両方について書かれた
新しい資料があります

00:13:36.483 --> 00:13:39.286 align:start position:34% line:-1
ぜひ読んでください

00:13:39.419 --> 00:13:43.257 align:start position:21% line:-2
以上がカーネルのパフォーマンスの
改善についてです

00:13:43.357 --> 00:13:45.726 align:start position:29% line:-1
ここからはエマヌエルに―

00:13:45.826 --> 00:13:51.064 align:start position:21% line:-2
新しいアルゴリズムの開発について
話してもらいます

00:13:51.164 --> 00:13:55.536 align:start position:43% line:-1
(拍手)

00:13:55.636 --> 00:13:56.603 align:start position:45% line:-1
どうも

00:13:59.106 --> 00:14:00.674 align:start position:41% line:-1
こんにちは

