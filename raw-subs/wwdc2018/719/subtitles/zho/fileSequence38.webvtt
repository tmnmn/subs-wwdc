WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:58.078 --> 00:38:00.981 align:middle line:-1
并开始任意实时进行更改

00:38:03.250 --> 00:38:07.221 align:middle line:-1
我还想演示如何从图像中加载元数据

00:38:07.788 --> 00:38:09.456 align:middle line:-1
这里我有一张图片

00:38:09.523 --> 00:38:11.124 align:middle line:0
加载了人像效果褪光

00:38:11.191 --> 00:38:12.893 align:middle line:0
以及纵向深度数据

00:38:14.094 --> 00:38:15.829 align:middle line:-1
以下是并排的l图片

00:38:16.763 --> 00:38:18.665 align:middle line:-1
左侧的图像是RGB图像

00:38:18.732 --> 00:38:20.100 align:middle line:-1
中心是深度数据

00:38:20.167 --> 00:38:22.503 align:middle line:-1
右侧是高质量的人像效果图

00:38:22.569 --> 00:38:24.838 align:middle line:-1
我们今天在另一个演讲上介绍了

00:38:26.006 --> 00:38:27.474 align:middle line:0
我们还可以查看EXIF标记

00:38:27.541 --> 00:38:30.344 align:middle line:0
直接通过查看下层的CIImage

00:38:31.545 --> 00:38:34.081 align:middle line:0
来自相同的G实例和调用属性

00:38:35.215 --> 00:38:38.018 align:middle line:0
这里 我们获得有关捕获本身的信息

00:38:39.953 --> 00:38:42.389 align:middle line:-1
像我说的 我们介绍了人像效果褪光

00:38:42.456 --> 00:38:44.224 align:middle line:-1
在另一个演讲 演讲503

00:38:44.291 --> 00:38:45.993 align:middle line:-1
我强烈建议你去看看那个演讲

00:38:46.293 --> 00:38:48.028 align:middle line:-1
所以这里我们略去细节

00:38:48.662 --> 00:38:50.230 align:middle line:-1
我将要实现这个过滤器

00:38:50.297 --> 00:38:52.833 align:middle line:-1
如果你有兴趣了解如何做到的

00:38:53.333 --> 00:38:55.869 align:middle line:-1
我强烈建议你查看本次演讲

00:38:57.137 --> 00:38:58.138 align:middle line:-1
非常有意思的东西

