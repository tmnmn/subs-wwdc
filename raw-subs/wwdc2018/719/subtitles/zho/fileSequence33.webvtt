WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.012 --> 00:33:00.547 align:middle line:-1
如何做弯曲处理

00:33:01.014 --> 00:33:02.950 align:middle line:-1
如果你熟悉Python的切片操作

00:33:03.016 --> 00:33:05.118 align:middle line:-1
这正是我们要做的

00:33:05.185 --> 00:33:08.822 align:middle line:-2
我们将在图像中定义带或切片
水平切片

00:33:09.223 --> 00:33:11.658 align:middle line:-1
我们只对这些切片应用过滤器

00:33:12.492 --> 00:33:14.494 align:middle line:-1
让我们先来看一下代码

00:33:15.429 --> 00:33:16.964 align:middle line:-1
这是我们的添加带功能

00:33:17.531 --> 00:33:19.666 align:middle line:-1
我们可以看到它的最底层

00:33:20.400 --> 00:33:22.102 align:middle line:0
我们用两种复合材料生成图像

00:33:22.169 --> 00:33:23.637 align:middle line:0
这是实际的NumPy缓冲区

00:33:23.704 --> 00:33:25.672 align:middle line:0
但右边是CIImage

00:33:26.507 --> 00:33:27.708 align:middle line:0
通过使用这样的切片

00:33:27.774 --> 00:33:30.577 align:middle line:0
我们强制Core Image
只在该带进行生成

00:33:30.644 --> 00:33:31.778 align:middle line:0
而不是整个图片

00:33:32.045 --> 00:33:35.382 align:middle line:0
因此效率更高

00:33:37.551 --> 00:33:40.721 align:middle line:-2
我们这样做并在我们的图像中
创建五个不同的带

00:33:40.787 --> 00:33:42.222 align:middle line:-1
并显示最终的合成

00:33:45.092 --> 00:33:47.794 align:middle line:-2
非常棒
在顶上还有其它标签

00:33:48.996 --> 00:33:51.298 align:middle line:-1
对应于应用的过滤器

00:33:51.865 --> 00:33:54.101 align:middle line:-2
使用PyCoreImage
真的很简单

00:33:54.434 --> 00:33:56.370 align:middle line:0
好的
我之前提到过性能

00:33:56.436 --> 00:33:58.505 align:middle line:0
所以让我们快速看看这个

00:33:59.306 --> 00:34:00.240 align:middle line:0
我想给你看的第一个是

