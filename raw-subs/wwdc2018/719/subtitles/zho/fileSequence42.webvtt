WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.186 --> 00:42:00.754 align:middle line:-1
我们来看看实践中的所有这些

00:42:08.996 --> 00:42:11.231 align:middle line:-2
好 我们回到
Jupiter Notebook

00:42:11.298 --> 00:42:13.100 align:middle line:-1
与之前相同的设置

00:42:13.467 --> 00:42:15.502 align:middle line:-2
我想向你展示的是
如何用Core Image

00:42:15.569 --> 00:42:16.436 align:middle line:-1
作批量增强

00:42:17.037 --> 00:42:18.572 align:middle line:-1
我们正在加载图片

00:42:19.239 --> 00:42:21.775 align:middle line:-1
我们将在这里定义我们的增强功能

00:42:21.842 --> 00:42:23.510 align:middle line:-1
我们要做的主要是

00:42:23.577 --> 00:42:24.645 align:middle line:0
来自随机空间的

00:42:24.912 --> 00:42:26.713 align:middle line:0
为我在这里定义的每个过滤器的抽样

00:42:27.181 --> 00:42:30.851 align:middle line:0
我们将用GaussianBlur
缩放旋转

00:42:31.251 --> 00:42:33.287 align:middle line:0
一些调整 曝光调整

00:42:33.554 --> 00:42:35.856 align:middle line:0
纤维以及噪音抖动

00:42:37.758 --> 00:42:39.660 align:middle line:0
好了？让我们缓存该功能

00:42:40.460 --> 00:42:41.328 align:middle line:-1
再来看看

00:42:41.395 --> 00:42:44.531 align:middle line:-1
对该增强的一些实现

00:42:46.567 --> 00:42:47.968 align:middle line:-1
所以我的滑块在这里控制

00:42:48.035 --> 00:42:50.337 align:middle line:-1
我在后端使用的数字生成器种子

00:42:52.673 --> 00:42:53.807 align:middle line:-1
好 非常酷

00:42:53.874 --> 00:42:55.309 align:middle line:0
我不确定效率如何

00:42:55.375 --> 00:42:58.612 align:middle line:0
所以这里我将实时处理
200个这样的增强

00:42:58.979 --> 00:43:01.148 align:middle line:-1
我们将在这里看看它们如何

