WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.026 --> 00:36:01.395 align:middle line:-2
它非常强大
而这一切都是实时完成的

00:36:01.461 --> 00:36:03.530 align:middle line:-2
所以你可通过这种方式
对过滤器进行微调

00:36:03.597 --> 00:36:06.300 align:middle line:-1
并确保达到你正在寻找的效果

00:36:08.635 --> 00:36:11.405 align:middle line:0
我们来看一个更复杂的内核

00:36:11.471 --> 00:36:12.873 align:middle line:0
我们来看一下通用内核

00:36:12.940 --> 00:36:15.609 align:middle line:0
这有点像我之前展示的
拉普拉斯锐化

00:36:15.676 --> 00:36:18.979 align:middle line:-2
这是一个在每个像素附近
进行额外点击的内核

00:36:19.446 --> 00:36:21.148 align:middle line:-1
所以从文件中的图像开始

00:36:21.215 --> 00:36:22.916 align:middle line:-1
这是我们之前看到的同一图像

00:36:23.116 --> 00:36:25.219 align:middle line:-1
这里有我们的内核代码

00:36:25.285 --> 00:36:26.386 align:middle line:-1
我们略去细节

00:36:26.453 --> 00:36:27.654 align:middle line:-1
这是一个双边过滤器

00:36:27.721 --> 00:36:29.656 align:middle line:-1
是模糊滤镜的边缘

00:36:30.891 --> 00:36:32.793 align:middle line:-1
我们把代码放进去

00:36:33.193 --> 00:36:35.262 align:middle line:-2
并带有一些参数调用
applyKernel

00:36:36.897 --> 00:36:42.302 align:middle line:-1
可以获得非常好的效果

00:36:42.369 --> 00:36:43.904 align:middle line:-1
我们在这里做的 基本上

00:36:44.137 --> 00:36:48.342 align:middle line:-1
是剪切图像中的无冗余高频

00:36:48.408 --> 00:36:49.409 align:middle line:-1
如果我们看看…

00:36:50.043 --> 00:36:51.945 align:middle line:0
我们更仔细地看一下

00:36:53.213 --> 00:36:54.047 align:middle line:-1
看看这里的剪切

00:36:54.114 --> 00:36:56.650 align:middle line:-1
我们可以看到强边缘还存在

00:36:56.717 --> 00:36:58.919 align:middle line:-1
但是非冗余的精细频率

00:36:58.986 --> 00:37:00.020 align:middle line:-1
被冲走了

