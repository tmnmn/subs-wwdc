WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.432 --> 00:20:00.400 align:middle line:-1
Core Image非常接近硬件

00:20:00.667 --> 00:20:02.436 align:middle line:-1
因此可以重定向过滤的方程

00:20:02.503 --> 00:20:04.505 align:middle line:-1
到最合适的生成后端

00:20:04.571 --> 00:20:06.607 align:middle line:-1
为你提供尽可能高的性能

00:20:07.374 --> 00:20:09.343 align:middle line:0
PyObjC存在于
Core Image上层

00:20:09.409 --> 00:20:12.880 align:middle line:0
它可以通过Core Image的
Python绑定与它通信

00:20:13.180 --> 00:20:15.082 align:middle line:0
由Quartz伞包提供

00:20:15.649 --> 00:20:18.819 align:middle line:0
Quartz伞包同时包含

00:20:18.886 --> 00:20:21.788 align:middle line:0
各种其它图像处理框架
如Core Graphics

00:20:21.855 --> 00:20:23.991 align:middle line:0
以及使用
Core Image的所有类

00:20:24.057 --> 00:20:26.627 align:middle line:0
例如CIVector、CIImages
和CIContext

00:20:28.662 --> 00:20:35.235 align:middle line:-2
PyCoreImage位于PyObjC之上
它本质上利用PyObjC

00:20:35.669 --> 00:20:37.504 align:middle line:-1
与Core Image通信

00:20:37.571 --> 00:20:40.307 align:middle line:-1
并为你做了很多简化

00:20:40.741 --> 00:20:44.144 align:middle line:-2
以便你在用Core Image时
没有那么多设置代码

00:20:44.211 --> 00:20:46.046 align:middle line:-1
我们稍后会看一下这个

00:20:47.014 --> 00:20:49.349 align:middle line:-1
这里很多都是通过CIMG类完成的

00:20:49.416 --> 00:20:53.153 align:middle line:-2
你用它通过供应商方程
与NumPy解释

00:20:53.787 --> 00:20:56.223 align:middle line:-1
你也可以包装NumPy缓冲区

00:20:56.456 --> 00:20:58.325 align:middle line:-1
直接使用类构造函数

