WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.050 --> 00:22:00.120 align:middle line:-2
我们需要对Core Image的
调用方式进行简化

00:22:00.187 --> 00:22:01.922 align:middle line:-1
或为你做一些设置代码

00:22:02.489 --> 00:22:05.993 align:middle line:-2
对于已经熟悉
Core Image的人

00:22:06.727 --> 00:22:08.762 align:middle line:-1
这不会让人感到意外

00:22:08.829 --> 00:22:10.631 align:middle line:-1
但对于不熟悉它的人

00:22:10.964 --> 00:22:12.432 align:middle line:-1
我们一起看看步骤

00:22:12.499 --> 00:22:17.237 align:middle line:-2
你将看到我们作的一些简化
以更清楚地说明问题

00:22:18.805 --> 00:22:22.242 align:middle line:-2
Core Image是一个
高性能的GPU图像处理框架

00:22:22.309 --> 00:22:24.378 align:middle line:-1
同时支持iOS和macOS

00:22:24.444 --> 00:22:26.713 align:middle line:-1
以及各种生成后端

00:22:27.881 --> 00:22:29.583 align:middle line:-1
支持大多数像素格式

00:22:30.417 --> 00:22:32.319 align:middle line:-1
这当然意味着位图数据

00:22:32.386 --> 00:22:35.122 align:middle line:-1
以及来自各供应商的原始文件

00:22:36.590 --> 00:22:39.359 align:middle line:-1
支持大多数文件格式

00:22:40.694 --> 00:22:44.898 align:middle line:-2
就像刚才说的 来自各种供应商的
位图数据和原始数据

00:22:44.965 --> 00:22:46.400 align:middle line:-1
支持大多数像素格式

00:22:46.466 --> 00:22:49.903 align:middle line:-1
例如 你可以用无符号8位加载图像

00:22:50.237 --> 00:22:52.172 align:middle line:-1
通过计算和半浮动

00:22:52.339 --> 00:22:54.908 align:middle line:-2
并在最终生成期间
完全呈现32位浮点数

00:22:56.343 --> 00:22:58.879 align:middle line:-2
Core Image可以为你
提取图像元数据

00:22:58.946 --> 00:23:03.917 align:middle line:-2
例如 捕获时间
EXIF标记以及嵌入的元数据

