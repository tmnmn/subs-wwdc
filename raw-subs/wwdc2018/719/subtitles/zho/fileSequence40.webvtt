WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:58.465 --> 00:40:00.501 align:middle line:0
并且你获得了一个输出

00:40:00.567 --> 00:40:01.735 align:middle line:0
已被潜在神经网络处理的输出

00:40:01.802 --> 00:40:04.037 align:middle line:-1
这真的很简单 很强大

00:40:04.438 --> 00:40:07.708 align:middle line:-2
为了展示代码有多简单
让我们来看看Swift

00:40:09.142 --> 00:40:10.978 align:middle line:0
我们在左侧有一个输入图像

00:40:11.044 --> 00:40:12.913 align:middle line:0
你要做的就是调用过滤器

00:40:13.413 --> 00:40:15.782 align:middle line:0
传入我们今年推出的新过滤器

00:40:16.216 --> 00:40:18.385 align:middle line:0
并提供预编译的ML模型

00:40:18.452 --> 00:40:19.586 align:middle line:0
就是这么简单

00:40:20.053 --> 00:40:21.855 align:middle line:0
如果你想看看其它方式

00:40:21.922 --> 00:40:24.658 align:middle line:0
在图像处理app中利用机器学习

00:40:24.725 --> 00:40:27.594 align:middle line:0
我鼓励你看看其它演讲

00:40:27.661 --> 00:40:30.531 align:middle line:0
关于Turi Create指南
和Visionwith CoreML

00:40:33.000 --> 00:40:34.401 align:middle line:-1
一个相关的话题

00:40:34.735 --> 00:40:37.804 align:middle line:-1
我们在训练数据集中的常见操作之一

00:40:37.871 --> 00:40:39.840 align:middle line:-1
是机器学习中的数据增强

00:40:40.541 --> 00:40:42.109 align:middle line:-1
而数据增强

00:40:42.643 --> 00:40:46.213 align:middle line:-1
可以显着提高神经网络的稳健性

00:40:46.280 --> 00:40:49.716 align:middle line:-2
在这种情况下
假设我们正在进行对象分类

00:40:50.250 --> 00:40:51.818 align:middle line:-1
我们正在努力确定

00:40:51.885 --> 00:40:54.421 align:middle line:-1
该图像是桥还是有水

00:40:56.890 --> 00:41:01.161 align:middle line:-1
对原始趋势数据集进行扩充

