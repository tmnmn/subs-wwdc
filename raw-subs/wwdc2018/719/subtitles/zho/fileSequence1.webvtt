WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.193 --> 00:01:02.362 align:middle line:-2
最后 我们将讨论
如何使用Core Image

00:01:02.629 --> 00:01:05.632 align:middle line:-1
配合各种机器学习app

00:01:07.568 --> 00:01:09.803 align:middle line:-1
好 让我们开始

00:01:09.870 --> 00:01:11.505 align:middle line:-1
首先我们来说说性能API

00:01:11.572 --> 00:01:14.241 align:middle line:-1
今年 我们重点在两个领域

00:01:14.775 --> 00:01:15.676 align:middle line:-1
致力于提高性能

00:01:15.742 --> 00:01:18.278 align:middle line:-1
首先 我们新添了一些对插入

00:01:18.512 --> 00:01:19.813 align:middle line:-1
中间缓冲区的控制

00:01:19.980 --> 00:01:21.615 align:middle line:-1
我们将详细讨论这个问题

00:01:21.949 --> 00:01:23.684 align:middle line:-1
第二 我们将谈谈

00:01:23.750 --> 00:01:28.021 align:middle line:-2
你可以利用的
一些新CI内核语言功能

00:01:28.088 --> 00:01:31.358 align:middle line:-1
我们先来谈谈中间缓冲区

00:01:33.227 --> 00:01:35.495 align:middle line:-2
若你曾用过Core Image
那么你知道

00:01:35.562 --> 00:01:39.833 align:middle line:-2
Core Image让你轻松地
将过滤器序列连接在一起

00:01:40.167 --> 00:01:43.770 align:middle line:0
Core Image中每个过滤器
都由一个或多个内核组成

00:01:44.071 --> 00:01:46.173 align:middle line:0
Core Image的一项重要的

00:01:46.240 --> 00:01:49.376 align:middle line:0
提高性能的功能是连接内核

00:01:49.443 --> 00:01:51.979 align:middle line:0
以减少中间缓冲区的数量

00:01:52.145 --> 00:01:54.882 align:middle line:0
许多情况下
要获得你想要的最佳性能

00:01:54.948 --> 00:01:56.550 align:middle line:-1
你需要尽量减少缓冲区数

00:01:57.484 --> 00:01:59.486 align:middle line:-1
但是 有一些情况

00:01:59.786 --> 00:02:03.190 align:middle line:-1
你不希望最大量地连接

