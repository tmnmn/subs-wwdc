WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.358 --> 00:31:01.562 align:middle line:0
并在我们尝试编码的消息中传递它们

00:31:02.296 --> 00:31:03.397 align:middle line:0
这是实时的

00:31:03.463 --> 00:31:06.333 align:middle line:0
所以我可以对该消息进行更改

00:31:06.400 --> 00:31:09.570 align:middle line:0
并查看它如何影响正在生成的QR码

00:31:11.605 --> 00:31:13.974 align:middle line:0
Core Image
还支持标记图像

00:31:14.041 --> 00:31:16.210 align:middle line:0
你可以用
CI文本图像生成器来做到

00:31:16.977 --> 00:31:18.345 align:middle line:-1
这里有个例子

00:31:18.912 --> 00:31:21.849 align:middle line:0
WWDC并使用SFLO字体

00:31:23.050 --> 00:31:24.518 align:middle line:0
好 我们继续

00:31:25.385 --> 00:31:29.356 align:middle line:-2
刚才提到过
我们支持与NumPy间的互操作性

00:31:29.423 --> 00:31:31.525 align:middle line:-1
这是我们要做的第一件事

00:31:32.159 --> 00:31:34.962 align:middle line:-1
我们将从图像开始并应用一些有趣的

00:31:35.028 --> 00:31:36.096 align:middle line:-1
且有明显影响的变化

00:31:36.163 --> 00:31:37.698 align:middle line:-1
这种情况下 是一个涡旋畸变

00:31:39.299 --> 00:31:40.534 align:middle line:0
接下来我们要做的

00:31:40.601 --> 00:31:41.902 align:middle line:0
我们将生成该缓冲区

00:31:44.271 --> 00:31:46.139 align:middle line:0
从中获取NumPy区域

00:31:46.206 --> 00:31:47.441 align:middle line:0
这里我们看到它的类型

00:31:47.808 --> 00:31:48.842 align:middle line:0
和它的形状

00:31:49.443 --> 00:31:50.377 align:middle line:0
它的深度

00:31:51.144 --> 00:31:52.613 align:middle line:0
以及一些统计数据

00:31:52.679 --> 00:31:54.181 align:middle line:0
这是最小值 中值

00:31:54.481 --> 00:31:55.949 align:middle line:0
以及它的最大值

00:31:58.719 --> 00:32:00.254 align:middle line:0
我们也可以走另一条路

