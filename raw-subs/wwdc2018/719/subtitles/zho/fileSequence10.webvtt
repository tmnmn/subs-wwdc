WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.701 --> 00:10:02.870 align:middle line:-1
但我们看到 代码的整体架构

00:10:02.936 --> 00:10:04.738 align:middle line:-1
内核的流程是一样的

00:10:06.773 --> 00:10:09.610 align:middle line:-1
好 第二步是使用半浮动

00:10:10.077 --> 00:10:12.579 align:middle line:-1
这个例子我们可以

00:10:12.646 --> 00:10:14.481 align:middle line:-1
只使用半浮点数的精度

00:10:14.548 --> 00:10:16.517 align:middle line:-1
因为我们只是处理颜色值

00:10:16.583 --> 00:10:19.786 align:middle line:-2
我们将再次对代码
进行一些非常简单的更改

00:10:20.220 --> 00:10:25.058 align:middle line:-1
基本上代码中曾使用浮点精度的位置

00:10:25.125 --> 00:10:27.227 align:middle line:-1
我们将使用半浮点精度

00:10:27.294 --> 00:10:30.397 align:middle line:-2
这表示sampler参数
和destination参数

00:10:30.464 --> 00:10:32.666 align:middle line:-1
有一个_h后缀

00:10:33.367 --> 00:10:37.237 align:middle line:-2
以及代码中的float4
全部变为half4

00:10:38.071 --> 00:10:39.973 align:middle line:-1
这很简单易行

00:10:40.040 --> 00:10:43.110 align:middle line:-2
还有一件事要注意
如果你的代码中有常数

00:10:43.177 --> 00:10:45.279 align:middle line:-1
确保在它们的末尾加h

00:10:45.345 --> 00:10:47.014 align:middle line:-1
比如除以9.0

00:10:48.849 --> 00:10:50.617 align:middle line:-1
这也很简单

00:10:51.084 --> 00:10:52.853 align:middle line:-1
为了获得此示例中的最佳性能

00:10:52.920 --> 00:10:55.088 align:middle line:-1
我们要做的最后一件事

00:10:55.155 --> 00:10:57.291 align:middle line:-1
是利用组读取和组写入

00:10:57.357 --> 00:10:59.726 align:middle line:-1
我们看看完成这个的代码

