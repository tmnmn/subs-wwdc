WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.912 --> 00:18:02.282 align:middle line:-2
我们来看看
PyCoreImage的细节

00:18:04.184 --> 00:18:06.653 align:middle line:-2
PyCoreImage
由三个主要部分组成

00:18:07.754 --> 00:18:10.224 align:middle line:-2
它用Core Image
作为生成后端

00:18:10.891 --> 00:18:13.794 align:middle line:-1
用Python作为编程接口

00:18:14.862 --> 00:18:18.799 align:middle line:-1
它还有一层薄薄NumPy连接代码

00:18:18.866 --> 00:18:21.602 align:middle line:-1
以期与现有代码库互操作

00:18:23.170 --> 00:18:25.706 align:middle line:-2
我们相信
PyCoreImage可以减少

00:18:25.772 --> 00:18:28.375 align:middle line:-1
你的原型设计和产品代码之间的摩擦

00:18:29.209 --> 00:18:31.211 align:middle line:0
如你想留在
以Swift为中心的环境中

00:18:31.278 --> 00:18:33.780 align:middle line:0
使用Swift Playground
也可以做很多事情

00:18:33.847 --> 00:18:35.449 align:middle line:0
我们鼓励你查看

00:18:35.516 --> 00:18:38.919 align:middle line:0
创建自己的
Swift Playground订阅的演讲

00:18:41.822 --> 00:18:45.425 align:middle line:-2
我们来看看
PyCoreImage的主要组件

00:18:46.159 --> 00:18:50.297 align:middle line:-2
因此 PyCoreImage利用Python
绑定objective C和PyObjC

00:18:50.731 --> 00:18:51.865 align:middle line:-1
而且有趣的是

00:18:52.232 --> 00:18:55.202 align:middle line:-2
我们自macOS 10.5
Leopard以来一直在发行PyObjC

00:18:56.670 --> 00:18:58.972 align:middle line:-2
它最初是作为Python
和Objective C之间的

00:18:59.039 --> 00:19:00.440 align:middle line:-1
双向桥实现的

