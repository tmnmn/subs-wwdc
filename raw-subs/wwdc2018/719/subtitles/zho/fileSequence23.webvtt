WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:58.946 --> 00:23:03.917 align:middle line:-2
例如 捕获时间
EXIF标记以及嵌入的元数据

00:23:03.984 --> 00:23:07.020 align:middle line:-1
例如人像地图和人像深度信息

00:23:09.356 --> 00:23:11.692 align:middle line:-2
Core Image
可以很好地处理色彩管理

00:23:11.758 --> 00:23:15.262 align:middle line:-2
这是一个高难度的问题
很多框架都不作处理

00:23:16.263 --> 00:23:18.498 align:middle line:-2
Core Image
支持许多电池状况

00:23:18.832 --> 00:23:20.100 align:middle line:-1
无限图像

00:23:20.334 --> 00:23:22.769 align:middle line:-1
并且有200多个内置过滤器供使用

00:23:22.836 --> 00:23:24.471 align:middle line:-1
你可以拿来即用

00:23:25.272 --> 00:23:26.773 align:middle line:-1
好 我不需要说服你

00:23:26.840 --> 00:23:28.275 align:middle line:-1
那是很多信息

00:23:28.342 --> 00:23:30.143 align:middle line:-2
并且如果你尝试
在原型和工作流程中

00:23:30.444 --> 00:23:32.079 align:middle line:-1
使用Core Image

00:23:33.614 --> 00:23:35.148 align:middle line:-1
学习曲线可能相当陡峭

00:23:35.215 --> 00:23:37.684 align:middle line:-2
所以我们所做的就是
在新功能列表中选出最好的一些

00:23:38.051 --> 00:23:39.453 align:middle line:-1
进行了一些简化

00:23:39.653 --> 00:23:41.221 align:middle line:-1
请记住 这些简化

00:23:41.288 --> 00:23:42.956 align:middle line:-1
都可以随时被覆盖

00:23:43.123 --> 00:23:44.925 align:middle line:-1
因为我们会给你加权代码

00:23:44.992 --> 00:23:46.693 align:middle line:-1
你其实可以对这些更改进行硬编码

00:23:46.760 --> 00:23:48.495 align:middle line:-1
如果这适合你的原型堆栈

00:23:49.696 --> 00:23:51.465 align:middle line:-1
我们做的第一件事就是我们还有

00:23:51.532 --> 00:23:54.401 align:middle line:-1
Core Image的高性能功能

00:23:54.468 --> 00:23:56.003 align:middle line:-1
我们仍生成到Metal后端

00:23:56.470 --> 00:23:58.639 align:middle line:-1
仍然支持几乎所有输入输出格式

00:23:59.072 --> 00:24:01.108 align:middle line:-1
我们仍然可以提取数据的捕获时间

