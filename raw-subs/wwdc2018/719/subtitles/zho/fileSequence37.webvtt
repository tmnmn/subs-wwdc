WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:58.986 --> 00:37:00.020 align:middle line:-1
被冲走了

00:37:00.721 --> 00:37:04.258 align:middle line:-1
双边滤波器可用于许多不同目的

00:37:04.324 --> 00:37:06.527 align:middle line:-2
在这种情况下
我们将用它来进行锐化

00:37:06.927 --> 00:37:08.896 align:middle line:-1
并使用此过滤器实现锐化

00:37:09.196 --> 00:37:10.898 align:middle line:-1
我们可以简单地拿左边的图像

00:37:11.164 --> 00:37:12.633 align:middle line:-1
并减去右边的图像

00:37:12.699 --> 00:37:15.669 align:middle line:-2
为我们提供了图像中
高频或细节的地图

00:37:15.736 --> 00:37:16.870 align:middle line:-1
我们这样做

00:37:17.905 --> 00:37:20.073 align:middle line:0
我在这里做的是生成我的图像

00:37:20.307 --> 00:37:21.375 align:middle line:0
它是一个NumPy缓冲区

00:37:21.675 --> 00:37:26.146 align:middle line:0
生成我过滤后的图片

00:37:26.713 --> 00:37:29.716 align:middle line:0
并且用运算符重载将它们一起减去

00:37:29.783 --> 00:37:31.151 align:middle line:0
这是随NumPy提供的操作

00:37:31.718 --> 00:37:33.353 align:middle line:0
让我们来看一下细节层

00:37:34.922 --> 00:37:37.691 align:middle line:-1
如果你的左侧有整个图像的细节

00:37:37.758 --> 00:37:39.626 align:middle line:-1
和图像中心的裁剪

00:37:40.727 --> 00:37:43.730 align:middle line:-1
现在 我们可以做的就是将它添加到

00:37:43.797 --> 00:37:44.932 align:middle line:-1
原始图像的顶部

00:37:45.866 --> 00:37:47.334 align:middle line:0
这正是我们要做的

00:37:47.401 --> 00:37:49.169 align:middle line:0
我们将两次加它

00:37:50.170 --> 00:37:52.206 align:middle line:-1
通过这样做 我们实现了形成锐化

00:37:52.940 --> 00:37:54.041 align:middle line:-1
就是这么简单

00:37:54.408 --> 00:37:57.444 align:middle line:-2
如果我想
我可以回到我的过滤器内核字符串

00:37:58.078 --> 00:38:00.981 align:middle line:-1
并开始任意实时进行更改

