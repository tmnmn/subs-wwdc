WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.720 --> 00:12:02.923 align:middle line:0
只要一行代码
就能创建梯度节点

00:12:02.990 --> 00:12:04.024 align:middle line:0
对应正向节点

00:12:04.091 --> 00:12:08.362 align:middle line:0
这个例子展示了
如何创建梯度卷积节点

00:12:08.428 --> 00:12:09.663 align:middle line:0
基于卷积节点

00:12:13.100 --> 00:12:14.735 align:middle line:-1
现在创建整个图形

00:12:16.203 --> 00:12:18.372 align:middle line:-1
这里有个很小的网络

00:12:18.438 --> 00:12:21.241 align:middle line:-2
一个卷积节点
接着一个池化节点

00:12:21.308 --> 00:12:22.943 align:middle line:-1
随后是另一个卷积节点

00:12:23.911 --> 00:12:25.679 align:middle line:-1
怎样连接这些节点

00:12:26.813 --> 00:12:27.681 align:middle line:-1
到图形中？

00:12:27.915 --> 00:12:28.949 align:middle line:-1
很简单

00:12:29.616 --> 00:12:31.685 align:middle line:-2
我们将结果节点
不对

00:12:32.352 --> 00:12:34.521 align:middle line:-1
一个节点的输出图像

00:12:34.588 --> 00:12:37.758 align:middle line:-2
以源图片形式
传递到后续节点

00:12:38.859 --> 00:12:41.528 align:middle line:-1
这就形成全连接图形

00:12:42.729 --> 00:12:44.731 align:middle line:-1
现在创建训练图形

00:12:45.766 --> 00:12:48.735 align:middle line:-2
首先在图形中
添加损失节点

00:12:50.037 --> 00:12:52.005 align:middle line:-1
再添加梯度节点

00:12:52.072 --> 00:12:54.274 align:middle line:-1
我说过 只要一行代码

00:12:54.341 --> 00:12:55.943 align:middle line:-1
就能创建梯度节点

00:12:56.210 --> 00:12:57.978 align:middle line:-1
对应正向节点

00:12:58.345 --> 00:13:00.380 align:middle line:-1
然后跟之前一样连接它们

