WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:58.345 --> 00:13:00.380 align:middle line:-1
然后跟之前一样连接它们

00:13:00.447 --> 00:13:02.616 align:middle line:-1
完整的训练图就做好了

00:13:05.752 --> 00:13:07.588 align:middle line:-1
通过这个例子 你能看到

00:13:07.654 --> 00:13:10.524 align:middle line:-1
图形API简单易用

00:13:11.558 --> 00:13:13.393 align:middle line:-1
训练图可以自动做很多事

00:13:13.460 --> 00:13:15.495 align:middle line:-1
它能处理所有中间结果

00:13:16.797 --> 00:13:18.365 align:middle line:-1
甚至输出图像

00:13:19.166 --> 00:13:22.870 align:middle line:-1
它能最小化网络的内存占用

00:13:22.936 --> 00:13:26.607 align:middle line:-1
通过将所有的中间图像折叠

00:13:26.673 --> 00:13:27.808 align:middle line:-1
借助Metal堆

00:13:28.809 --> 00:13:30.410 align:middle line:-1
它还能融合图形节点

00:13:30.477 --> 00:13:34.181 align:middle line:-2
例如它可以融合
批标准化和网络节点

00:13:34.615 --> 00:13:36.416 align:middle line:-1
它还能优化away节点

00:13:36.717 --> 00:13:39.219 align:middle line:-2
比如优化切割
nation节点的方法

00:13:40.387 --> 00:13:43.156 align:middle line:-1
它还可以自动处理填充

00:13:43.223 --> 00:13:44.958 align:middle line:-1
管理状态对象

00:13:45.025 --> 00:13:46.727 align:middle line:-1
这些稍后会讲到

00:13:47.561 --> 00:13:49.930 align:middle line:-1
所以请好好利用图形API

00:13:54.868 --> 00:13:57.104 align:middle line:-1
了解如何创建训练图后

00:13:57.471 --> 00:14:01.308 align:middle line:-2
现在看看
要传递给训练图的输入

