WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.139 --> 00:19:01.408 align:middle line:0
当purge函数被调用时

00:19:01.608 --> 00:19:02.843 align:middle line:0
权重就被释放了

00:19:03.644 --> 00:19:06.580 align:middle line:0
数据源提供器对训练也很重要

00:19:06.647 --> 00:19:08.515 align:middle line:0
这个我们稍后讲

00:19:11.919 --> 00:19:13.654 align:middle line:-1
那么我们有了训练图

00:19:13.720 --> 00:19:16.423 align:middle line:-1
也准备好了输入和具体权重

00:19:16.490 --> 00:19:18.559 align:middle line:-1
就可以在GPU上执行图形了

00:19:20.360 --> 00:19:22.362 align:middle line:-1
要在GPU上执行训练图

00:19:22.429 --> 00:19:24.831 align:middle line:-1
首先要完成Metal设置

00:19:25.432 --> 00:19:27.501 align:middle line:-1
我们要初始化训练图

00:19:27.935 --> 00:19:29.469 align:middle line:-1
准备好输入

00:19:29.736 --> 00:19:32.072 align:middle line:-1
开始在GPU上训练网络吧

00:19:35.209 --> 00:19:36.944 align:middle line:-1
训练是迭代进程

00:19:38.011 --> 00:19:39.780 align:middle line:-1
因此要设置训练回路

00:19:40.581 --> 00:19:44.117 align:middle line:-2
通常我们要执行训练图
经过几个轮次

00:19:44.885 --> 00:19:47.287 align:middle line:-1
轮次次数是总次数…

00:19:48.088 --> 00:19:50.958 align:middle line:-1
是对整个数据集的迭代次数

00:19:51.792 --> 00:19:54.828 align:middle line:-1
每个轮次应该有多个迭代

00:19:54.895 --> 00:19:57.764 align:middle line:-1
所以迭代的次数是图像总数

00:19:57.831 --> 00:20:01.268 align:middle line:-2
在数据集中
除以批大小32或64

