WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.119 --> 00:07:02.923 align:middle line:0
网络输出一个很低的值
给正确答案7

00:07:03.490 --> 00:07:06.860 align:middle line:0
而把最高值
分配给了9

00:07:07.394 --> 00:07:09.930 align:middle line:0
因此网络返回的
正确答案是9

00:07:11.465 --> 00:07:13.166 align:middle line:0
现在把所有信息

00:07:13.467 --> 00:07:15.669 align:middle line:0
传递给损失原语

00:07:18.705 --> 00:07:20.374 align:middle line:0
我之前讲过

00:07:21.441 --> 00:07:24.811 align:middle line:0
损失衡量的差值
是网络输出

00:07:25.145 --> 00:07:26.380 align:middle line:0
较之标准值的误差

00:07:27.548 --> 00:07:30.350 align:middle line:0
而训练算法的目标
是最小化误差

00:07:32.352 --> 00:07:34.488 align:middle line:-2
这时就要需要
图形的下半部分

00:07:36.590 --> 00:07:37.724 align:middle line:-1
下半部分图形

00:07:37.858 --> 00:07:40.060 align:middle line:-1
包括梯度原语

00:07:40.527 --> 00:07:42.262 align:middle line:-1
对应每个正向原语

00:07:43.330 --> 00:07:44.431 align:middle line:-1
梯度原语

00:07:45.098 --> 00:07:47.601 align:middle line:-1
计算更新权重所需的梯度

00:07:49.937 --> 00:07:51.038 align:middle line:-1
损失原语

00:07:52.506 --> 00:07:53.941 align:middle line:-1
计算第一梯度

00:07:54.508 --> 00:07:56.510 align:middle line:-2
就是选定的
损失函数的导数

00:07:56.577 --> 00:07:57.845 align:middle line:-1
基于输出

00:07:58.312 --> 00:07:59.646 align:middle line:-1
然后将这个梯度

00:07:59.980 --> 00:08:01.782 align:middle line:-1
反向传播

