WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.193 --> 00:11:01.161 align:middle line:-1
这是可视化的

00:11:01.461 --> 00:11:04.031 align:middle line:-1
手写数字识别网络

00:11:04.665 --> 00:11:06.099 align:middle line:-1
这个图形里

00:11:06.166 --> 00:11:07.901 align:middle line:-1
你能看到图像节点

00:11:07.968 --> 00:11:09.303 align:middle line:-1
就是白色的小节点

00:11:10.904 --> 00:11:13.073 align:middle line:-1
图像节点用于数据

00:11:13.373 --> 00:11:16.677 align:middle line:-1
输入输出和所有中间结果

00:11:18.846 --> 00:11:21.949 align:middle line:-2
它们描述了不同操作时
数据的移动情况

00:11:22.716 --> 00:11:24.585 align:middle line:-1
然后处理数据

00:11:24.651 --> 00:11:26.220 align:middle line:-1
比如卷积或池化

00:11:27.087 --> 00:11:29.957 align:middle line:-1
以过滤节点表示

00:11:30.924 --> 00:11:33.193 align:middle line:-1
我们支持所有必要的节点

00:11:33.260 --> 00:11:35.829 align:middle line:-1
以创建常用的神经网络

00:11:37.231 --> 00:11:39.132 align:middle line:-1
现在看看怎么简单地

00:11:39.199 --> 00:11:40.767 align:middle line:-1
使用神经网络图形API

00:11:41.702 --> 00:11:46.440 align:middle line:0
这个例子就是
如何创建MPSImageNode

00:11:46.507 --> 00:11:48.141 align:middle line:0
通过神经网络图形API

00:11:48.675 --> 00:11:51.011 align:middle line:0
这是如何创建卷积节点

00:11:51.078 --> 00:11:52.346 align:middle line:0
通过图形API

00:11:53.380 --> 00:11:55.916 align:middle line:0
对于每个正向节点

00:11:55.983 --> 00:11:59.386 align:middle line:0
提供相应的训练梯度节点

00:11:59.720 --> 00:12:02.923 align:middle line:0
只要一行代码
就能创建梯度节点

