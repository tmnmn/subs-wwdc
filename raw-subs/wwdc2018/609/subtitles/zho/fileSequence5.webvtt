WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.233 --> 00:05:00.367 align:middle line:-1
产生输出

00:05:01.068 --> 00:05:02.536 align:middle line:-1
类似推断进程

00:05:04.238 --> 00:05:05.939 align:middle line:-1
然后计算缺失

00:05:06.573 --> 00:05:08.876 align:middle line:-1
损失直观地衡量了

00:05:08.942 --> 00:05:11.245 align:middle line:-2
网络输出值
与标准值之间的误差

00:05:13.313 --> 00:05:16.450 align:middle line:-2
训练算法的目标
是最小化损失

00:05:18.819 --> 00:05:20.854 align:middle line:0
下一步是梯度传播

00:05:21.488 --> 00:05:24.558 align:middle line:0
就是反向传播
网络输出相对

00:05:24.825 --> 00:05:27.361 align:middle line:0
标准值的误差
给神经网络

00:05:27.794 --> 00:05:29.096 align:middle line:0
再更新权重

00:05:29.963 --> 00:05:33.267 align:middle line:0
理念是随着训练不断进行

00:05:33.333 --> 00:05:35.202 align:middle line:0
网络会越来越准确

00:05:35.269 --> 00:05:38.906 align:middle line:0
所以最好能用
输入修正输出

00:05:39.806 --> 00:05:41.675 align:middle line:-1
从而最小化误差

00:05:43.210 --> 00:05:44.478 align:middle line:-1
以上是概述

00:05:44.778 --> 00:05:47.748 align:middle line:-2
下面分别看看
每个步骤的具体内容

00:05:50.350 --> 00:05:53.654 align:middle line:-2
正向传播指
向网络正向传递信息

00:05:54.054 --> 00:05:55.155 align:middle line:0
以计算输出

00:05:56.190 --> 00:05:58.692 align:middle line:0
如你所见
在这个训练场景下

00:05:59.092 --> 00:06:00.627 align:middle line:0
网络的表现不是很好

