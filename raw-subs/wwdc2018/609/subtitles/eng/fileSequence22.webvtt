WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.286 --> 00:22:00.176 A:middle
providers are essential for

00:22:00.176 --> 00:22:00.616 A:middle
training.

00:22:01.456 --> 00:22:02.946 A:middle
All of your weight updates need

00:22:02.946 --> 00:22:04.246 A:middle
to happen through an optional

00:22:04.246 --> 00:22:05.926 A:middle
update method on a data source

00:22:05.926 --> 00:22:06.346 A:middle
provider.

00:22:07.806 --> 00:22:08.996 A:middle
The graph will call the update

00:22:08.996 --> 00:22:10.526 A:middle
method automatically.

00:22:11.116 --> 00:22:12.256 A:middle
So, what does the weight update

00:22:12.256 --> 00:22:13.486 A:middle
step actually involve?

00:22:13.706 --> 00:22:14.906 A:middle
Let's take a look.

00:22:16.316 --> 00:22:18.296 A:middle
So, recall that we're computing

00:22:18.296 --> 00:22:19.706 A:middle
gradients during the gradient

00:22:19.926 --> 00:22:21.526 A:middle
pass that we can apply small

00:22:21.566 --> 00:22:22.986 A:middle
deltas to the weights, in each

00:22:22.986 --> 00:22:23.976 A:middle
situation of training.

00:22:25.546 --> 00:22:26.926 A:middle
How these deltas are applied to

00:22:26.926 --> 00:22:29.296 A:middle
the weights, is described by an

00:22:29.296 --> 00:22:29.996 A:middle
optimizer.

00:22:30.536 --> 00:22:32.436 A:middle
It's just a function that takes

00:22:32.516 --> 00:22:34.186 A:middle
the old weights, the computed

00:22:34.186 --> 00:22:36.836 A:middle
gradients as input, and produces

00:22:37.696 --> 00:22:39.246 A:middle
updated weights as outputs.

00:22:40.336 --> 00:22:43.096 A:middle
You will use an optimizer in the

00:22:43.096 --> 00:22:44.286 A:middle
update method of your data

00:22:44.286 --> 00:22:44.996 A:middle
source provider.

00:22:45.976 --> 00:22:47.226 A:middle
And we support a number of

00:22:47.226 --> 00:22:48.476 A:middle
different variants of the weight

00:22:48.476 --> 00:22:50.356 A:middle
update step on the GPU,

00:22:50.556 --> 00:22:52.116 A:middle
including Adam, Stochastic

00:22:52.116 --> 00:22:53.786 A:middle
Gradient Descent, and RMSProp.

00:22:54.896 --> 00:22:57.376 A:middle
And you can even define your own

00:22:57.436 --> 00:22:58.946 A:middle
custom update weight step if you

00:22:58.946 --> 00:22:59.326 A:middle
prefer.

