WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.016 --> 00:10:01.486 A:middle
我们在幕后做的

00:10:01.486 --> 00:10:03.026 A:middle
就是创建的模型

00:10:03.026 --> 00:10:04.546 A:middle
是为你的任务

00:10:04.546 --> 00:10:06.496 A:middle
量身定制的 像是艺术品

00:10:06.496 --> 00:10:07.916 A:middle
这意味着我们尽力

00:10:07.956 --> 00:10:10.016 A:middle
保证它的高质量 高准确度

00:10:10.016 --> 00:10:12.256 A:middle
无论你的数据规模是大还是小

00:10:12.256 --> 00:10:14.206 A:middle
我们都可以做到

00:10:14.516 --> 00:10:16.336 A:middle
对我们而言重要的是

00:10:16.386 --> 00:10:17.926 A:middle
所有的任务都可以正常工作

00:10:17.926 --> 00:10:19.846 A:middle
就算每个

00:10:19.846 --> 00:10:22.116 A:middle
你想要检测的

00:10:22.176 --> 00:10:23.266 A:middle
对象类中的项目

00:10:23.266 --> 00:10:24.676 A:middle
只有 40 张图像

00:10:25.106 --> 00:10:26.276 A:middle
在对象检测的例子中

00:10:26.826 --> 00:10:30.866 A:middle
让我们进行下一步 评估

00:10:31.236 --> 00:10:32.446 A:middle
我提到有一个简单的

00:10:32.446 --> 00:10:34.936 A:middle
函数 .evaluate

00:10:34.936 --> 00:10:36.566 A:middle
它会告诉你模型的

00:10:36.566 --> 00:10:37.106 A:middle
质量如何

00:10:38.216 --> 00:10:40.006 A:middle
在这个例子中

00:10:40.416 --> 00:10:42.086 A:middle
我们有两个考虑因素

00:10:42.406 --> 00:10:43.846 A:middle
首先 我们想知道

00:10:43.846 --> 00:10:44.766 A:middle
标签匹配正确吗

00:10:45.386 --> 00:10:46.966 A:middle
但我们也必须知道

00:10:46.966 --> 00:10:48.306 A:middle
框住对象的边界框

00:10:48.666 --> 00:10:49.476 A:middle
是否正确

00:10:50.616 --> 00:10:51.876 A:middle
所以我们可以建立

00:10:51.876 --> 00:10:53.846 A:middle
对这两个因素的衡量标准

00:10:53.846 --> 00:10:55.906 A:middle
并通过测试数据集

00:10:55.906 --> 00:10:57.696 A:middle
对预测进行评分

00:10:57.696 --> 00:11:00.616 A:middle
基于完全正确的已知数据

