WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.816 --> 00:32:01.266 A:middle
回顾一下我们刚刚看到的

00:32:01.266 --> 00:32:03.336 A:middle
我们将图像加载到 SFrame 格式

00:32:03.646 --> 00:32:05.576 A:middle
这个例子中的风格图像和内容图像

00:32:05.576 --> 00:32:07.346 A:middle
被分成两个 SFrame

00:32:07.836 --> 00:32:09.656 A:middle
我们使用高级 API

00:32:09.656 --> 00:32:10.966 A:middle
创建了一个

00:32:10.966 --> 00:32:12.816 A:middle
风格转移模型

00:32:12.946 --> 00:32:14.576 A:middle
它可以直接运行于一组风格图像

00:32:14.576 --> 00:32:15.646 A:middle
和一组内容图像上

00:32:16.436 --> 00:32:18.956 A:middle
然后 我们将图片风格化

00:32:19.256 --> 00:32:20.836 A:middle
以检查该模型是否正确运行

00:32:21.356 --> 00:32:22.876 A:middle
我们在 Turi Create

00:32:22.876 --> 00:32:23.706 A:middle
将预测可视化

00:32:24.226 --> 00:32:25.686 A:middle
最后我们导出了

00:32:25.686 --> 00:32:27.566 A:middle
Core ML 格式的模型

00:32:27.566 --> 00:32:29.996 A:middle
在 App 中使用

00:32:30.636 --> 00:32:31.566 A:middle
换一个话题

00:32:31.616 --> 00:32:32.656 A:middle
我想谈谈 Turi Create 5.0 中的

00:32:32.656 --> 00:32:34.336 A:middle
其他一些功能

00:32:35.066 --> 00:32:37.186 A:middle
我们现在有 Mac GPU 加速00:32:37.536 --> 00:32:39.626 A:middle在图像分类上

00:32:39.626 --> 00:32:41.586 A:middle
达到了高达 12 倍的性能提升

00:32:41.756 --> 00:32:43.966 A:middle
对象检测提升了 9 倍

00:32:43.966 --> 00:32:45.226 A:middle
这都是在 iMac Pro 上做到的

00:32:46.516 --> 00:32:50.586 A:middle
[ 掌声 ]

00:32:51.086 --> 00:32:53.096 A:middle
我们还有一个可用的新任务

00:32:53.096 --> 00:32:54.616 A:middle
可供导出为 Core ML 格式

00:32:54.876 --> 00:32:55.776 A:middle
就是个性化

00:32:56.466 --> 00:32:58.096 A:middle
这个任务是基于

00:32:58.096 --> 00:33:00.496 A:middle
用户的历史偏好

