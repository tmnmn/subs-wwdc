WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.286 --> 00:21:01.226 A:middle
调用 model.evaluate

00:21:01.226 --> 00:21:04.186 A:middle
再一次 我将会传入整个测试数据集

00:21:05.936 --> 00:21:08.096 A:middle
这里的评估函数会

00:21:08.096 --> 00:21:09.436 A:middle
依照刚刚 Aaron 所描述的

00:21:09.436 --> 00:21:11.526 A:middle
衡量标准

00:21:11.526 --> 00:21:12.546 A:middle
检查边界框

00:21:12.546 --> 00:21:14.556 A:middle
是否有 50% 的重叠度

00:21:14.556 --> 00:21:15.586 A:middle
以及标签是否正确

00:21:15.586 --> 00:21:17.226 A:middle
它会给我们结果

00:21:17.226 --> 00:21:19.926 A:middle
这个结果是 六个已训类别中的一个

00:21:20.516 --> 00:21:22.036 A:middle
在这里我们可以看到

00:21:22.356 --> 00:21:24.096 A:middle
对于百吉饼 边界框重叠度达标

00:21:24.096 --> 00:21:25.636 A:middle
且标签正确的情况

00:21:25.736 --> 00:21:27.696 A:middle
有 80%

00:21:28.106 --> 00:21:31.276 A:middle
香蕉的正确率为 67%

00:21:32.456 --> 00:21:34.016 A:middle
结果很好

00:21:34.096 --> 00:21:35.616 A:middle
现在我想知道 这个模型

00:21:35.616 --> 00:21:37.226 A:middle
能否在实际的 App 中工作

00:21:37.866 --> 00:21:39.526 A:middle
我打算调用

00:21:39.806 --> 00:21:42.366 A:middle
export_coreml 来创建一个 Core ML 模型

00:21:42.366 --> 00:21:44.076 A:middle
也就是我们刚刚训练的的模型

00:21:44.226 --> 00:21:45.666 A:middle
我决定把它命名为

00:21:45.666 --> 00:21:47.536 A:middle
BreakfastModel.mlmodel.

00:21:47.826 --> 00:21:49.036 A:middle
然后 一旦完成

00:21:49.036 --> 00:21:50.546 A:middle
训练 我就可以在

00:21:50.546 --> 00:21:51.656 A:middle
访达中打开它

00:21:52.236 --> 00:21:56.000 A:middle
对不起口误了 是一旦完成 导出

