WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.886 --> 00:17:01.216 A:middle
这要花费一些时间

00:17:01.216 --> 00:17:03.856 A:middle
因为程序需要遍历并调整

00:17:03.856 --> 00:17:05.445 A:middle
所有图像的大小

00:17:05.445 --> 00:17:07.435 A:middle
从而运行神经网络

00:17:07.435 --> 00:17:09.665 A:middle
这是在物体检测器后台发生的

00:17:10.465 --> 00:17:12.036 A:middle
然后它会在这台 Mac GPO 上

00:17:12.036 --> 00:17:14.856 A:middle
仅进行一次迭代

00:17:16.116 --> 00:17:17.965 A:middle
但这可能不是

00:17:17.965 --> 00:17:19.435 A:middle
得出的最好的模型

00:17:19.435 --> 00:17:21.306 A:middle
因为我只能花几秒钟训练它

00:17:21.656 --> 00:17:22.906 A:middle
然后我就要

00:17:22.906 --> 00:17:25.016 A:middle
切换到烹饪节目模式

00:17:25.056 --> 00:17:26.406 A:middle
从烤箱里拿出一个

00:17:26.406 --> 00:17:27.445 A:middle
已经训练一个小时的

00:17:27.445 --> 00:17:28.036 A:middle
成品 [ 笑声 ]

00:17:28.726 --> 00:17:30.826 A:middle
[ 掌声 ] 所以我要输入

00:17:30.826 --> 00:17:34.676 A:middle
tc.load_model

00:17:34.796 --> 00:17:36.696 A:middle
并调用 breakfastmodel.model

00:17:36.696 --> 00:17:39.546 A:middle
我花了较长的时间

00:17:39.546 --> 00:17:41.316 A:middle
训练了这个模型

00:17:41.806 --> 00:17:43.466 A:middle
所以我们 Notebook 中

00:17:43.466 --> 00:17:44.026 A:middle
查看一下

00:17:44.266 --> 00:17:45.396 A:middle
我们可以看到

00:17:45.396 --> 00:17:46.576 A:middle
这是一个物体探测器模型

00:17:47.226 --> 00:17:48.356 A:middle
它已经接受了六个类别的训练

00:17:48.386 --> 00:17:50.336 A:middle
训练时间为

00:17:50.336 --> 00:17:51.486 A:middle
55 分钟

00:17:52.026 --> 00:17:53.006 A:middle
这意味着你

00:17:53.006 --> 00:17:54.296 A:middle
可以在一小时以内

00:17:54.296 --> 00:17:55.966 A:middle
使用你的 Mac

00:17:55.966 --> 00:17:58.000 A:middle
训练出一个可用的物体探测器模型

