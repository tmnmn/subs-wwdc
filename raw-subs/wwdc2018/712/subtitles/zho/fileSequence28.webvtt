WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.626 --> 00:28:01.326 A:middle
我认为应该很有辨识度

00:28:02.676 --> 00:28:04.666 A:middle
现在我们来看看一些

00:28:04.666 --> 00:28:05.566 A:middle
内容图像

00:28:06.016 --> 00:28:07.916 A:middle
我要加载一个测试数据集

00:28:08.126 --> 00:28:10.566 A:middle
再次重申 这个数据集

00:28:10.566 --> 00:28:13.936 A:middle
代表着用户将在 App 运行时

00:28:13.936 --> 00:28:15.326 A:middle
提供的图像类型

00:28:15.776 --> 00:28:18.606 A:middle
重点是 该模型将这些图像

00:28:18.606 --> 00:28:19.346 A:middle
用作训练材料

00:28:19.656 --> 00:28:21.366 A:middle
所以通过评估测试图像的结果

00:28:21.366 --> 00:28:22.836 A:middle
我们就会知道该模型

00:28:22.836 --> 00:28:25.096 A:middle
是否可以推广到用户数据 

00:28:26.206 --> 00:28:28.636 A:middle
我现在再一次使用

00:28:29.166 --> 00:28:30.496 A:middle
tc.loadimages 函数

00:28:30.606 --> 00:28:33.086 A:middle
加载测试数据集

00:28:33.656 --> 00:28:34.906 A:middle
我们将 test 文件夹

00:28:34.906 --> 00:28:36.006 A:middle
作为参数传入

00:28:37.046 --> 00:28:38.406 A:middle
现在我要将测试数据集中的

00:28:38.406 --> 00:28:39.696 A:middle
一张图像当做样本

00:28:39.696 --> 00:28:40.736 A:middle
设为 sample_image

00:28:41.216 --> 00:28:44.576 A:middle
就选第一张图像吧

00:28:45.156 --> 00:28:48.016 A:middle
我将调用 .show

00:28:48.016 --> 00:28:51.446 A:middle
所以我们可以看到

00:28:51.446 --> 00:28:52.526 A:middle
没有应用任何滤镜的情况下

00:28:52.526 --> 00:28:53.256 A:middle
图像是什么样子的

00:28:54.016 --> 00:28:58.216 A:middle
那是我的猫 九只猫中的老七

00:28:59.046 --> 00:29:02.306 A:middle
它总是这个样子

