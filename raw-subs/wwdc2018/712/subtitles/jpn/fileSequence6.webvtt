WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.059 --> 00:06:01.495 align:start position:25% line:-2
まずTuri Createを
インポート

00:06:02.396 --> 00:06:06.633 align:start position:23% line:-2
SFrameというデータ構造で
データをロード

00:06:06.733 --> 00:06:10.337 align:start position:30% line:-2
SFrameについては
後ほど説明します

00:06:11.538 --> 00:06:15.742 align:start position:29% line:-2
関数“.create”を
使ってモデルを作成

00:06:15.843 --> 00:06:20.814 align:start position:27% line:-2
この関数は複雑な機械学習を
省いてくれます

00:06:22.850 --> 00:06:27.387 align:start position:21% line:-2
次に関数“.evaluate”で
モデルを評価します

00:06:28.789 --> 00:06:31.358 align:start position:34% line:-2
最後に モデルを
エクスポートします

00:06:31.458 --> 00:06:33.460 align:start position:27% line:-1
mlmodel形式にした後

00:06:33.560 --> 00:06:36.964 align:start position:34% line:-2
Xcodeに
ドラッグ＆ドロップ

00:06:37.598 --> 00:06:42.336 align:start position:18% line:-2
このレシピはTuri Createの
どのタスクにも

00:06:42.436 --> 00:06:44.004 align:start position:34% line:-1
使えると話しました

00:06:44.137 --> 00:06:46.073 align:start position:39% line:-1
物体検知でも

00:06:46.740 --> 00:06:48.442 align:start position:39% line:-1
画像分類でも

00:06:49.042 --> 00:06:53.280 align:start position:30% line:-2
アクティビティ分類でも
やり方は同じです

00:06:55.349 --> 00:06:56.850 align:start position:38% line:-1
最初のデモは―

00:06:56.950 --> 00:06:59.219 align:start position:32% line:-2
カロリー計算の
アプリケーションです

00:06:59.319 --> 00:07:01.522 align:start position:36% line:-2
物体検知モデルを
使っています

