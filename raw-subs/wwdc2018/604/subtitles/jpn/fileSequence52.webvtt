WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:51:55.582 --> 00:52:00.354 align:start position:20% line:-2
Metalアプリケーションがあれば
その特性がすべて活用できます

00:52:00.921 --> 00:52:04.525 align:start position:20% line:-2
CPU制約のあるアプリケーションは
エンコーディング動作を

00:52:04.625 --> 00:52:07.327 align:start position:30% line:-2
マルチスレッドにすると
効果的です

00:52:07.561 --> 00:52:10.898 align:start position:29% line:-2
別のスレッドに同時に
マルチコマンドバッファを

00:52:10.998 --> 00:52:12.533 align:start position:34% line:-1
エンコードできます

00:52:12.800 --> 00:52:17.104 align:start position:23% line:-2
並列レンダコマンドエンコーダを
使い 単一バッファコマンドを

00:52:17.237 --> 00:52:19.907 align:start position:32% line:-2
マルチスレッドに
分けることもできます

00:52:24.511 --> 00:52:28.615 align:start position:21% line:-2
また計画的API処理による
GPUコンピュートがMetalに

00:52:28.716 --> 00:52:30.484 align:start position:34% line:-1
組み込まれています

00:52:30.584 --> 00:52:33.754 align:start position:25% line:-2
GPUをまったく新しい方法で
活用できます

00:52:33.854 --> 00:52:37.758 align:start position:21% line:-2
CPUの代わりに
グラフィックGPUデータの生成に

00:52:37.858 --> 00:52:41.061 align:start position:27% line:-2
コンピュートパイプラインを
活用できます

00:52:41.195 --> 00:52:44.398 align:start position:32% line:-2
GPUが自ら
データを生成するので

00:52:44.498 --> 00:52:49.136 align:start position:27% line:-2
CPU使用と同期ポイントが
軽減されるだけでなく

00:52:49.236 --> 00:52:52.506 align:start position:30% line:-2
GPUにデータ帯域幅を
開放できます

00:52:53.006 --> 00:52:56.310 align:start position:27% line:-1
この高度帯域幅プロセッサで

00:52:56.410 --> 00:52:59.813 align:start position:29% line:-2
より複雑なアルゴリズムを
たくさん適用できます

