WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.100 --> 00:05:01.935 align:start position:21% line:-1
OpenGLと比べMetalでは

00:05:02.035 --> 00:05:06.440 align:start position:30% line:-2
高価なオペレーションが
減少します

00:05:06.907 --> 00:05:10.410 align:start position:27% line:-2
APIステートは
オブジェクト作成時に移動し

00:05:10.511 --> 00:05:14.248 align:start position:32% line:-2
GPUコマンドとして
パッケージ化されます

00:05:15.549 --> 00:05:19.753 align:start position:27% line:-2
これによりレンダリングの際
コストが大幅に減ります

00:05:20.420 --> 00:05:24.958 align:start position:27% line:-2
シェーダにも最新のGPUが
反映されています

00:05:25.526 --> 00:05:30.297 align:start position:21% line:-2
APIのGPUコマンドへの変換は
より安価になるのです

00:05:31.031 --> 00:05:36.336 align:start position:30% line:-2
とはいえパイプラインが
異なるのではありません

00:05:36.737 --> 00:05:40.474 align:start position:27% line:-2
Metalはパイプラインの
各段階をまとめ

00:05:40.574 --> 00:05:42.676 align:start position:30% line:-1
処理が効率的になります

00:05:42.776 --> 00:05:45.846 align:start position:27% line:-1
パイプライン自体は同じです

00:05:46.947 --> 00:05:51.084 align:start position:30% line:-2
マルチスレッド処理の
明確なモデルもあります

00:05:51.318 --> 00:05:54.621 align:start position:27% line:-1
アプリケーションはGPUを

00:05:54.721 --> 00:05:56.790 align:start position:34% line:-2
異なるスレッドから
駆動させます

00:05:56.890 --> 00:06:00.327 align:start position:34% line:-2
しかし方法は明確で
制約はないです

