WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:58.745 --> 00:43:02.583 align:start position:32% line:-2
いくつかのコマンドを
エンコードします

00:43:02.683 --> 00:43:07.087 align:start position:21% line:-2
またフレームのコマンドバッファに
完了ハンドラを加えます

00:43:08.088 --> 00:43:12.259 align:start position:29% line:-2
そしてコマンドバッファを
GPUにゆだねます

00:43:12.760 --> 00:43:19.133 align:start position:21% line:-2
フレームのGPU処理が終了すると
完了ハンドラが発動され

00:43:19.233 --> 00:43:22.502 align:start position:34% line:-2
フレームセマフォに
信号を送ります

00:43:23.637 --> 00:43:28.342 align:start position:25% line:-2
これでCPUはエンコード用に
バッファを再利用できます

00:43:28.575 --> 00:43:31.511 align:start position:27% line:-1
このトリプルバッファ用法は

00:43:31.678 --> 00:43:36.250 align:start position:25% line:-2
あらゆる動的データリソースの
更新に活用できます

00:43:37.784 --> 00:43:43.056 align:start position:25% line:-2
さてコマンドバッファと
リソースアップデートに続いて

00:43:43.490 --> 00:43:46.393 align:start position:27% line:-2
ドローコードのエンコードに
使用する―

00:43:46.493 --> 00:43:50.130 align:start position:25% line:-2
レンダパスエンコーダについて
解説します

00:43:51.598 --> 00:43:56.870 align:start position:29% line:-2
先にダンが説明したように
コマンドエンコーダは

00:43:56.970 --> 00:44:00.274 align:start position:21% line:-2
コマンドバッファでAPIコールを
GPUコマンドに変換します

