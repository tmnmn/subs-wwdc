WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:57.357 --> 00:41:02.429 align:start position:29% line:-2
動的データアップデートを
３つのバッファで行います

00:41:02.629 --> 00:41:07.901 align:start position:23% line:-2
まずフレーム１でバッファに書き
それをGPUが読みます

00:41:08.035 --> 00:41:12.906 align:start position:23% line:-2
フレーム２は別のバッファに書き
競合状態を回避します

00:41:13.140 --> 00:41:16.710 align:start position:27% line:-2
同様にフレーム３で３つ目の
バッファに書き込みます

00:41:18.178 --> 00:41:22.783 align:start position:25% line:-2
これで３つとも使い果たし
バッファプールが枯渇しました

00:41:23.350 --> 00:41:29.056 align:start position:23% line:-2
GPUがフレーム１を終えるまで
フレーム４に再利用できません

00:41:31.625 --> 00:41:34.595 align:start position:32% line:-2
ここで完了ハンドラの
出番となります

00:41:34.695 --> 00:41:38.699 align:start position:25% line:-2
GPUのフレーム処理の終了を
教えてくれます

00:41:38.932 --> 00:41:43.270 align:start position:23% line:-2
フレーム１が終わればバッファを
フレーム４に再利用できます

00:41:44.571 --> 00:41:45.772 align:start position:39% line:-1
以下同様です

00:41:47.107 --> 00:41:49.109 align:start position:34% line:-1
例を見てみましょう

00:41:50.911 --> 00:41:54.781 align:start position:29% line:-2
レンダリングループ外の
トリプルバッファ適用では

00:41:54.882 --> 00:41:58.152 align:start position:23% line:-2
３つのバッファに対し
まずFIFOキューを作成します

00:41:59.853 --> 00:42:04.825 align:start position:5% line:-2
またframeBoundarySemaphoreの
初期スタート値を３に設定します

