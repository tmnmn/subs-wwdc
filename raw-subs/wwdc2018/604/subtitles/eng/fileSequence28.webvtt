WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.986 --> 00:28:01.996 A:middle
You load a buffer through the

00:28:02.036 --> 00:28:03.506 A:middle
contents property, which is

00:28:03.506 --> 00:28:05.026 A:middle
simply a void pointer to the

00:28:05.026 --> 00:28:06.186 A:middle
memory backing the buffer.

00:28:07.276 --> 00:28:08.706 A:middle
To Metal's core the data is

00:28:08.706 --> 00:28:10.076 A:middle
completely unstructured, so it's

00:28:10.076 --> 00:28:11.896 A:middle
up to you to define the layout

00:28:12.196 --> 00:28:14.066 A:middle
in your application and share

00:28:14.066 --> 00:28:14.296 A:middle
your code.

00:28:15.086 --> 00:28:16.746 A:middle
Here we're casting the contents

00:28:16.826 --> 00:28:18.486 A:middle
pointer to a structure which

00:28:18.486 --> 00:28:20.546 A:middle
uses some of the SIMD types I

00:28:20.546 --> 00:28:21.236 A:middle
mentioned earlier.

00:28:21.236 --> 00:28:23.796 A:middle
We set the members of the

00:28:23.796 --> 00:28:25.466 A:middle
structure which fills in the

00:28:25.466 --> 00:28:26.936 A:middle
buffer's data using the layout

00:28:26.936 --> 00:28:28.286 A:middle
or application as is defined

00:28:28.606 --> 00:28:29.816 A:middle
with the structure's definition.

00:28:31.306 --> 00:28:32.506 A:middle
As mentioned earlier, you can

00:28:32.506 --> 00:28:34.026 A:middle
share a structure's definition

00:28:34.276 --> 00:28:35.406 A:middle
between your application and

00:28:35.406 --> 00:28:36.736 A:middle
share code which ensures the

00:28:36.736 --> 00:28:38.216 A:middle
layouts match between these two

00:28:38.216 --> 00:28:38.886 A:middle
components.

00:28:39.466 --> 00:28:44.846 A:middle
A common mistake is a mismatch

00:28:44.886 --> 00:28:46.456 A:middle
between buffer data and how it's

00:28:46.456 --> 00:28:48.226 A:middle
interpreted in the shader due to

00:28:48.356 --> 00:28:49.556 A:middle
an assumption or due to

00:28:49.556 --> 00:28:51.196 A:middle
assumptions about alignment.

00:28:52.136 --> 00:28:53.476 A:middle
For instance, you might assume

00:28:53.476 --> 00:28:54.496 A:middle
that the shading language's

00:28:54.826 --> 00:28:57.256 A:middle
float3 type consumes only 12

00:28:57.296 --> 00:28:57.576 A:middle
bytes.

00:28:58.266 --> 00:29:00.506 A:middle
Three 4 byte components is 12

