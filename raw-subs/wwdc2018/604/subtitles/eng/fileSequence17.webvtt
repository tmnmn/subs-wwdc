WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.486 --> 00:17:00.206 A:middle
and we use it here to sample

00:17:00.366 --> 00:17:02.966 A:middle
from a texture.

00:17:03.086 --> 00:17:04.586 A:middle
In our application code which is

00:17:04.586 --> 00:17:06.486 A:middle
written in Objective-C we use a

00:17:06.486 --> 00:17:08.316 A:middle
Render Command Encoder to map

00:17:08.406 --> 00:17:10.226 A:middle
objects to shader parameters.

00:17:12.915 --> 00:17:15.016 A:middle
The index argument with each of

00:17:15.016 --> 00:17:16.396 A:middle
these calls are similar to

00:17:16.396 --> 00:17:18.316 A:middle
OpenGL's attribute indices,

00:17:18.366 --> 00:17:19.935 A:middle
vertex attribute indices, and

00:17:19.935 --> 00:17:20.715 A:middle
textured units.

00:17:21.336 --> 00:17:23.415 A:middle
They specify indices which map

00:17:23.526 --> 00:17:25.296 A:middle
to indices in our shader

00:17:25.296 --> 00:17:25.836 A:middle
parameters.

00:17:27.026 --> 00:17:29.056 A:middle
So by calling the encoder's set

00:17:29.106 --> 00:17:30.526 A:middle
fragment buffer method with an

00:17:30.526 --> 00:17:33.046 A:middle
index of three we map this my

00:17:33.046 --> 00:17:35.346 A:middle
uniform buffer object to the

00:17:35.346 --> 00:17:37.446 A:middle
uniform's parameter of our

00:17:37.446 --> 00:17:38.936 A:middle
encoder, of our shader.

00:17:39.536 --> 00:17:42.326 A:middle
We make similar calls to set our

00:17:42.326 --> 00:17:44.836 A:middle
texture and sampler objects.

00:17:50.396 --> 00:17:52.096 A:middle
Now I want to talk about one

00:17:52.096 --> 00:17:53.996 A:middle
library that's incredibly useful

00:17:54.106 --> 00:17:55.606 A:middle
for shader development.

00:17:57.236 --> 00:17:58.576 A:middle
This is called SIMD.

00:17:58.896 --> 00:18:00.666 A:middle
Now SIMD is actually a library

