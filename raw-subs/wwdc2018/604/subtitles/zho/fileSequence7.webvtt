WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.846 --> 00:07:01.966 A:middle
它追踪 API 的状态

00:07:02.166 --> 00:07:03.766 A:middle
它管理 OpenGL 对象和其它内存

00:07:03.766 --> 00:07:05.246 A:middle
同时还转换

00:07:05.246 --> 00:07:06.506 A:middle
并递交 GPU 命令

00:07:07.366 --> 00:07:09.066 A:middle
Metal 将所有这些

00:07:09.066 --> 00:07:10.626 A:middle
OpenGL 内容的工作分成

00:07:10.626 --> 00:07:12.956 A:middle
很多个小对象

00:07:14.056 --> 00:07:18.616 A:middle
第一个被创建的对象就是 Metal 设备

00:07:18.716 --> 00:07:20.626 A:middle
它是一个物理 GPU 的

00:07:20.776 --> 00:07:21.686 A:middle
抽象表现

00:07:22.256 --> 00:07:26.286 A:middle
这个设备创建对象

00:07:26.286 --> 00:07:27.646 A:middle
比如说纹理 缓冲

00:07:27.646 --> 00:07:29.906 A:middle
和包含着色器的管道对象

00:07:31.026 --> 00:07:32.886 A:middle
它还创建了一个关键对象

00:07:33.136 --> 00:07:34.636 A:middle
叫做 Metal 命令队列

00:07:35.196 --> 00:07:37.816 A:middle
这个命令队列只有一个工作

00:07:37.816 --> 00:07:39.796 A:middle
就是去创建

00:07:39.796 --> 00:07:41.176 A:middle
一系列的命令缓存

00:07:41.956 --> 00:07:43.506 A:middle
这里我们已经创建了一个命令缓存

00:07:43.506 --> 00:07:44.856 A:middle
并且这个命令缓存是

00:07:44.856 --> 00:07:46.706 A:middle
一系列 GPU 命令的简单列表

00:07:46.956 --> 00:07:48.956 A:middle
你的 App 将填写这个列表

00:07:48.956 --> 00:07:50.146 A:middle
并且发送给 GPU 去执行

00:07:51.166 --> 00:07:52.836 A:middle
通常你的 App 要在每一帧去创建一个

00:07:52.836 --> 00:07:54.926 A:middle
单独的命令缓存

00:07:55.016 --> 00:07:55.866 A:middle
但是有些情况下

00:07:55.866 --> 00:07:57.566 A:middle
它也会觉得需要

00:07:57.696 --> 00:08:00.886 A:middle
在一帧里创建两三个

