WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:00.096 --> 00:50:02.996 A:middle
那么让我来给你们展示一下代码例子

00:50:03.516 --> 00:50:06.196 A:middle
首先我需要说一下

00:50:06.196 --> 00:50:07.886 A:middle
这些 drawable 受限于你的

00:50:08.166 --> 00:50:10.696 A:middle
着色器系统资源

00:50:10.696 --> 00:50:12.206 A:middle
所以你应该尽可能简单

00:50:12.206 --> 00:50:13.536 A:middle
地处理他们

00:50:14.236 --> 00:50:15.776 A:middle
这代表着你应该

00:50:15.776 --> 00:50:18.096 A:middle
在你获取 drawable 以前编码

00:50:18.126 --> 00:50:20.606 A:middle
所有的离线渲染通行

00:50:21.906 --> 00:50:23.626 A:middle
之后你可以创建一个 MetalKit 视图

00:50:23.626 --> 00:50:26.856 A:middle
不但可以去看一个完整的

00:50:26.856 --> 00:50:29.206 A:middle
填充渲染通行描述符

00:50:29.466 --> 00:50:30.926 A:middle
这个描述符你可以直接用来

00:50:30.926 --> 00:50:33.836 A:middle
创建编码器 就是这里你们看到的这个

00:50:33.836 --> 00:50:36.336 A:middle
同时你还可以通过

00:50:36.336 --> 00:50:37.746 A:middle
view.currentDrawable 属性

00:50:37.976 --> 00:50:41.626 A:middle
请求指定的纹理

00:50:41.626 --> 00:50:42.706 A:middle
之后你可以围绕它创建你自己的

00:50:42.706 --> 00:50:45.086 A:middle
渲染通行描述符

00:50:47.136 --> 00:50:48.846 A:middle
一旦你完成了编码你的帧

00:50:48.846 --> 00:50:50.496 A:middle
你可以调用

00:50:50.496 --> 00:50:51.896 A:middle
现有的命令缓存中的

00:50:51.896 --> 00:50:53.456 A:middle
drawable 方法

00:50:53.456 --> 00:50:55.626 A:middle
这在 GPU 完成执行命令换内存后

00:50:55.626 --> 00:50:58.166 A:middle
将你的 drawable 输出到屏幕上

00:50:58.986 --> 00:51:00.946 A:middle
所以一旦 GPU 完成了

