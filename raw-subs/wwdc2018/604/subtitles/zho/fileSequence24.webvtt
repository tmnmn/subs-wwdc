WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:00.816 --> 00:24:03.156 A:middle
这也需要为返回纹理图像

00:24:03.266 --> 00:24:04.726 A:middle
分配内存

00:24:06.086 --> 00:24:07.946 A:middle
一旦你创建了对象 你就不再需要

00:24:07.946 --> 00:24:09.286 A:middle
描述符了 因为它只是用来

00:24:09.286 --> 00:24:10.126 A:middle
创建对象的

00:24:11.256 --> 00:24:12.296 A:middle
然后你设置在描述符中的属性

00:24:12.296 --> 00:24:14.396 A:middle
就会被锁定并且不能再改变

00:24:15.766 --> 00:24:17.056 A:middle
然后 纹理图像的内容

00:24:17.056 --> 00:24:18.726 A:middle
是可以修改的

00:24:18.756 --> 00:24:21.816 A:middle
所以我会再说一下一个

00:24:21.816 --> 00:24:22.816 A:middle
你将设定在纹理描述符中的属性

00:24:22.816 --> 00:24:24.096 A:middle
同时你也能

00:24:24.096 --> 00:24:25.876 A:middle
在创建缓存的时候使用

00:24:26.626 --> 00:24:28.166 A:middle
这被称为存储模式

00:24:29.286 --> 00:24:30.366 A:middle
就像之前提到的

00:24:30.366 --> 00:24:31.966 A:middle
在你创建纹理的时候

00:24:31.966 --> 00:24:33.596 A:middle
Metal 会为它分配内存

00:24:34.106 --> 00:24:35.276 A:middle
存储模式属性告诉

00:24:35.276 --> 00:24:37.406 A:middle
Metal 要在哪一个内存池中去分配内存

00:24:38.576 --> 00:24:40.056 A:middle
最简单的方式

00:24:40.056 --> 00:24:42.436 A:middle
去共享存储模式就是同时给

00:24:42.876 --> 00:24:44.046 A:middle
CPU 和 GPU 访问权限

00:24:44.656 --> 00:24:46.076 A:middle
对于缓存来说这就是

00:24:46.076 --> 00:24:47.666 A:middle
你为指向对象的内存

00:24:47.666 --> 00:24:48.156 A:middle
获取了一个指针

00:24:48.996 --> 00:24:50.166 A:middl
Protector 代表着你可以

00:24:50.166 --> 00:24:51.926 A:middle
调用简易的方法

00:24:52.196 --> 00:24:54.196 A:middle
从纹理中去设定和获取数据

00:24:54.736 --> 00:24:57.246 A:middle
你可以用私有存储模式

00:24:57.246 --> 00:24:58.836 A:middle
这种模式只给了 GPU 访问

00:24:58.926 --> 00:25:00.486 A:middle
数据的权限

