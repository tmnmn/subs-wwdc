WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:59.926 --> 00:44:02.936 A:middle
我将会谈到渲染命令编码器

00:44:02.936 --> 00:44:06.656 A:middle
它提供了一些针对典型图形的 API

00:44:06.816 --> 00:44:08.216 A:middle
一些操作 如设定管道

00:44:08.216 --> 00:44:10.186 A:middle
纹理缓存对象

00:44:10.186 --> 00:44:12.276 A:middle
还有绘图请求

00:44:12.786 --> 00:44:16.816 A:middle
所以当你们创建编码器时

00:44:16.966 --> 00:44:18.906 A:middle
你需要先去设定渲染目标

00:44:18.936 --> 00:44:20.756 A:middle
所以这是个渲染通行描述符

00:44:20.756 --> 00:44:22.396 A:middl
这里你将会设置你的

00:44:22.396 --> 00:44:24.746 A:middle
渲染目标并且在之后请求

00:44:24.746 --> 00:44:26.586 A:middle
命令缓存为了这个渲染通行

00:44:26.586 --> 00:44:28.706 A:middle
去创建一个新的编码器 

00:44:29.366 --> 00:44:31.186 A:middle
现在你就可以用这个编码器

00:44:31.186 --> 00:44:33.256 A:middle
去编码你的绘图请求了

00:44:35.136 --> 00:44:37.946 A:middle
跟 OpenGL 不一样的一个地方是

00:44:38.106 --> 00:44:40.666 A:middle
在 Metal 里一旦编码器被创建了

00:44:40.666 --> 00:44:42.736 A:middle
你不能再更改它的渲染目标

00:44:42.736 --> 00:44:45.606 A:middle
因为 GPU 如果看见了一个

00:44:45.696 --> 00:44:47.646 A:middle
巨大的绘图请求跨度

00:44:47.646 --> 00:44:49.776 A:middle
它会表现得好很多

00:44:49.776 --> 00:44:51.436 A:middle
这些请求是去渲染同一个

00:44:51.436 --> 00:44:53.106 A:middle
渲染目标集合

00:44:54.046 --> 00:44:56.906 A:middle
所以 Metal API 通过给渲染通行一个

00:44:57.246 --> 00:44:59.876 A:middle
明确的开始和结束

00:44:59.956 --> 00:45:00.906 A:middle
来反映这一点

