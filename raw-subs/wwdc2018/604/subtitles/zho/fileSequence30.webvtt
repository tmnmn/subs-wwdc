WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:00.086 --> 00:30:00.976 A:middle
纹理和缓存

00:30:02.386 --> 00:30:03.726 A:middle
在 macOS 系统上 你就不能用

00:30:03.726 --> 00:30:05.076 A:middle
StorageModeShared 处理纹理

00:30:05.246 --> 00:30:07.146 A:middle
但是 StorageModeManaged 会让你访问

00:30:07.146 --> 00:30:08.526 A:middle
图像数据变得更容易一些

00:30:08.856 --> 00:30:10.846 A:middle
虽然私有存储是最优选择

00:30:16.046 --> 00:30:16.996 A:middle
你可以在 macOS 上使用

00:30:16.996 --> 00:30:19.216 A:middle
StorageModeShared 和缓存

00:30:19.216 --> 00:30:19.906 A:middle
但你需要特别的小心

00:30:20.526 --> 00:30:22.456 A:middle
如果你混合了 CPU 和 GPU 

00:30:22.576 --> 00:30:26.066 A:middle
都需要访问的数据和只有

00:30:26.066 --> 00:30:28.336 A:middle
GPU 需要访问的数据

00:30:28.376 --> 00:30:29.456 A:middle
你可能在之后会很难去

00:30:29.456 --> 00:30:31.246 A:middle
分开这两种类型的数据

00:30:31.246 --> 00:30:33.046 A:middle
再把它们放到

00:30:33.046 --> 00:30:34.286 A:middle
单独的内存池中

00:30:34.906 --> 00:30:37.816 A:middle
现在我已经说了一些

00:30:37.816 --> 00:30:39.166 A:middle
关于创建纹理和

00:30:39.166 --> 00:30:41.186 A:middle
缓存对象的内容

00:30:41.186 --> 00:30:42.106 A:middle
我会再提一下 MetalKit 框架

00:30:42.156 --> 00:30:43.526 A:middle
它是用来更简单地去

00:30:43.526 --> 00:30:44.676 A:middle
通过常用文件格式去

00:30:44.676 --> 00:30:46.606 A:middle
创建纹理和顶点的框架

00:30:47.146 --> 00:30:48.336 A:middle
这里面包含了纹理加载类

00:30:48.626 --> 00:30:50.286 A:middle
和一些功能去创建

00:30:50.286 --> 00:30:52.216 A:middle
Metal 缓存支持的网格

00:30:52.376 --> 00:30:53.936 A:middle
这些网格是通过 Model I/O 加载的

00:30:58.046 --> 00:30:59.106 A:middle
现在我们来说一说

00:30:59.106 --> 00:31:00.506 A:middle
包含它们的着色器和

