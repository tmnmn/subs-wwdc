WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.626 --> 00:04:01.146 A:middle
如果接口需要预测

00:04:01.146 --> 00:04:04.056 A:middle
去避免开发者陷入

00:04:04.136 --> 00:04:08.586 A:middle
API 的隐藏陷阱

00:04:08.586 --> 00:04:09.926 A:middle
那么每一个调用需要有明显的结果

00:04:09.926 --> 00:04:12.146 A:middle
并且最好不要有

00:04:12.206 --> 00:04:13.846 A:middle
隐式的操作

00:04:14.336 --> 00:04:16.476 A:middle
这种预测的一部分

00:04:16.576 --> 00:04:17.805 A:middle
需要去控制

00:04:17.805 --> 00:04:19.916 A:middle
资源分布和

00:04:19.956 --> 00:04:22.376 A:middle
什么时候需要同步

00:04:27.896 --> 00:04:29.456 A:middle
我们想要这个接口

00:04:29.456 --> 00:04:31.416 A:middle
是可触及的

00:04:31.416 --> 00:04:32.536 A:middle
它需要正确的

00:04:32.536 --> 00:04:34.306 A:middle
平衡低层次控制和明确的用量

00:04:34.306 --> 00:04:36.436 A:middle
因为当你了解一个东西以后

00:04:36.436 --> 00:04:40.566 A:middle
你能更高效和有效的使用它

00:04:41.976 --> 00:04:43.766 A:middle
当然 我们设计 Metal

00:04:43.766 --> 00:04:46.516 A:middle
是为了更好地映射到各种当代 GPU 上

00:04:46.516 --> 00:04:49.486 A:middle
特别是我们知道

00:04:49.486 --> 00:04:50.446 A:middle
管道中的硬件

00:04:50.496 --> 00:04:53.216 A:middle
需要软件去推动它

00:04:53.906 --> 00:04:55.556 A:middle
这就包括了 Apple 设计的

00:04:55.696 --> 00:04:58.486 A:middle
所有 A11 仿生 GPU

00:04:59.956 --> 00:05:01.736 A:middle
所以为什么 Metal 不同于 OpenGL

