WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:58.906 --> 00:34:00.526 A:middle
这甚至不是

00:34:00.526 --> 00:34:01.586 A:middle
要考虑将数据

00:34:01.586 --> 00:34:03.726 A:middle
填充到这些资源中的操作

00:34:04.946 --> 00:34:06.076 A:middle
然而一旦你创建了这些对象

00:34:06.076 --> 00:34:07.866 A:middle
在你在渲染循环中使用它们的时候

00:34:07.866 --> 00:34:09.646 A:middle
就只需要非常小的 CPU 了

00:34:09.746 --> 00:34:11.045 A:middle
[ 音质不清晰 ] 因为这在之前的操作中

00:34:11.045 --> 00:34:12.966 A:middle
已经做得够多了

00:34:14.176 --> 00:34:15.485 A:middle
现在我们交给 Sukanya 去解释

00:34:15.485 --> 00:34:16.716 A:middle
他会告诉你们

00:34:16.716 --> 00:34:17.735 A:middle
如何移植你的渲染循环

00:34:18.516 --> 00:34:22.545 A:middle
[ 掌声 ]

00:34:23.045 --> 00:34:24.065 A:middle
&gt;&gt; 晚上好各位

00:34:24.065 --> 00:34:25.886 A:middle
我是 Sukanya Sudugu

00:34:25.886 --> 00:34:26.856 A:middle
是 Apple 的 GPU 软件工程师

00:34:27.646 --> 00:34:29.696 A:middle
我真的超级兴奋去跟你们分享一些

00:34:29.696 --> 00:34:31.496 A:middle
我们在移植上的经验

00:34:31.496 --> 00:34:32.976 A:middle
所以我们来继续看看移植问题

00:34:35.876 --> 00:34:37.096 A:middle
Dan 已经说了很多关于

00:34:37.096 --> 00:34:39.496 A:middle
App 的建立 所以目前为止

00:34:39.496 --> 00:34:40.795 A:middle
你已经建立了所有的

00:34:40.795 --> 00:34:43.596 A:middle
着色器同时也创建了所有的

00:34:43.596 --> 00:34:45.216 A:middle
帧分片所需要的

00:34:45.216 --> 00:34:46.275 A:middle
持久对象

00:34:47.196 --> 00:34:48.656 A:middle
那么现在我们来深入了解一下

00:34:48.656 --> 00:34:50.795 A:middle
你的 App 的渲染循环

00:34:50.795 --> 00:34:52.926 A:middle
它是在每一帧里都会执行的代码

00:34:53.186 --> 00:34:55.996 A:middle
通过 Metal 你会

00:34:55.996 --> 00:34:57.616 A:middle
在你的渲染循环里明确地

00:34:57.616 --> 00:35:00.196 A:middle
管理 GPU 执行的异步性

