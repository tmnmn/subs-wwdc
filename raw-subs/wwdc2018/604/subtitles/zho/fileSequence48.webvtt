WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.776 --> 00:48:00.916 A:middle
最后绘图

00:48:01.546 --> 00:48:03.956 A:middle
所以这就是 Metal 的等价操作

00:48:04.566 --> 00:48:05.956 A:middle
这会稍微多出几行代码

00:48:05.996 --> 00:48:07.936 A:middle
因为它是明确的但是它

00:48:07.936 --> 00:48:09.766 A:middle
和 OpenGL 非常类似

00:48:10.586 --> 00:48:11.866 A:middle
首先我们用渲染通行描述符

00:48:11.866 --> 00:48:13.336 A:middle
创建一个渲染命令编码器

00:48:13.336 --> 00:48:15.456 A:middle
这个描述符含有我们的

00:48:15.456 --> 00:48:16.346 A:middle
渲染目标

00:48:17.696 --> 00:48:19.296 A:middle
然后我们设定含有

00:48:19.296 --> 00:48:20.506 A:middle
着色器的管道对象

00:48:21.836 --> 00:48:24.606 A:middle
然后我们再去设定缓存器

00:48:24.606 --> 00:48:26.276 A:middle
去访问顶点着色器

00:48:26.676 --> 00:48:27.836 A:middle
同时它还含有我们要画的

00:48:27.836 --> 00:48:29.226 A:middle
图像的顶点

00:48:30.436 --> 00:48:32.316 A:middle
值得注意的是 Metal 并不会

00:48:32.316 --> 00:48:33.846 A:middle
区别包含标准数据

00:48:33.846 --> 00:48:36.026 A:middle
的缓存器和那些

00:48:36.026 --> 00:48:37.176 A:middle
包含顶点的缓存器

00:48:37.816 --> 00:48:40.276 A:middle
所以我们会用相同的 API

00:48:40.276 --> 00:48:41.386 A:middle
去设置标准缓存

00:48:41.386 --> 00:48:44.026 A:middle
所以这里第一个请求会给

00:48:44.026 --> 00:48:46.026 A:middle
缓存器访问顶点着色器的权限

00:48:46.026 --> 00:48:47.236 A:middle
第二个请求会给出访问

00:48:47.236 --> 00:48:48.746 A:middle
分片着色器的权限

00:48:49.286 --> 00:48:52.166 A:middle
接下来我们为要去采样的

00:48:52.166 --> 00:48:54.026 A:middle
分片着色器设定纹理

00:48:54.516 --> 00:48:56.556 A:middle
然后绘图

00:48:57.076 --> 00:48:59.846 A:middle
一旦我们完成了编码命令

00:48:59.846 --> 00:49:01.456 A:middle
我们会通过在编码对象上

