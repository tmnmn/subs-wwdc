WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.896 --> 00:18:00.666 A:middle
现在 SIMD 实际上是一个

00:18:00.966 --> 00:18:02.616 A:middle
分离于 Metal 的库

00:18:03.126 --> 00:18:05.246 A:middle
经常用于许多正交框架

00:18:05.836 --> 00:18:07.366 A:middle
但是它在思想上

00:18:07.366 --> 00:18:07.686 A:middle
跟 Metal 很相似

00:18:08.936 --> 00:18:10.886 A:middle
SIMD 定义了常用的

00:18:10.886 --> 00:18:12.786 A:middle
向量和矩阵类型

00:18:13.286 --> 00:18:15.056 A:middle
去实现图形化算法

00:18:15.056 --> 00:18:16.036 A:middle
所以它包括了三四个

00:18:16.036 --> 00:18:17.846 A:middle
向量类型和

00:18:17.846 --> 00:18:19.976 A:middle
三乘三和四乘四 矩阵类型

00:18:24.046 --> 00:18:24.906 A:middle
这个库最棒的特性之一是

00:18:24.906 --> 00:18:26.676 A:middle
你能用它

00:18:26.676 --> 00:18:30.496 A:middle
在你的 App 代码

00:18:30.496 --> 00:18:33.306 A:middle
和着色语言代码之间

00:18:33.306 --> 00:18:34.966 A:middle
分享代码

00:18:35.596 --> 00:18:37.216 A:middle
这真的很有用

00:18:37.216 --> 00:18:38.856 A:middle
因为你可以定义数据的布局

00:18:38.926 --> 00:18:39.986 A:middle
这些数据和结构就是通过这些类型

00:18:39.986 --> 00:18:42.066 A:middle
从你的 App 传递

00:18:42.066 --> 00:18:43.426 A:middle
到你的着色器

00:18:44.046 --> 00:18:44.766 A:middle
它怎么工作的呢

00:18:45.996 --> 00:18:47.276 A:middle
你先创建一个带有数据的结构

00:18:47.346 --> 00:18:48.216 A:middle
这些数据是你想要从你的 App

00:18:48.216 --> 00:18:49.516 A:middle
传递到你的着色器的

00:18:49.836 --> 00:18:51.396 A:middle
所以举例来说

00:18:51.396 --> 00:18:52.536 A:middle
如果你想传递一个

00:18:52.536 --> 00:18:55.206 A:middle
模型视图投影矩阵

00:18:55.206 --> 00:18:56.646 A:middle
和这个 SIMD 的首要光源位置

00:18:56.646 --> 00:18:58.696 A:middle
你就可以在你的结构中

00:18:58.696 --> 00:19:01.546 A:middle
通过 SIMD 类型去实现

