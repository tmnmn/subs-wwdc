WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.496 --> 00:27:00.996 A:middle
OpenGL 使用的是左下角原点

00:27:01.306 --> 00:27:03.196 A:middle
但是 Metal 用的是左上角原点

00:27:03.196 --> 00:27:04.426 A:middle
所以在你加载纹理的时候

00:27:04.426 --> 00:27:06.266 A:middle
你要留意这些区别

00:27:06.686 --> 00:27:09.696 A:middle
桌面版 OpenGL 同时也执行转化

00:27:09.796 --> 00:27:10.866 A:middle
当提供的数据是

00:27:10.916 --> 00:27:13.376 A:middle
不同的格式而不是

00:27:13.376 --> 00:27:15.016 A:middle
内部格式的时候

00:27:16.456 --> 00:27:18.106 A:middle
但是 Metal 和 OpenGL ES 很类似

00:27:18.206 --> 00:27:20.346 A:middle
所以你需要确认

00:27:20.346 --> 00:27:21.406 A:middle
你的数据都已经被

00:27:21.436 --> 00:27:23.436 A:middle
设定成了合适的格式或者

00:27:23.696 --> 00:27:25.696 A:middle
执行路径去进行转化

00:27:29.066 --> 00:27:32.316 A:middle
我们再来看看缓存器

00:27:32.456 --> 00:27:34.266 A:middle
Metal 对于所有非结构体数据

00:27:34.266 --> 00:27:34.976 A:middle
都是用的缓存器

00:27:41.456 --> 00:27:42.406 A:middle
它们非常类似于 OpenGL 的顶点 

00:27:42.406 --> 00:27:45.646 A:middle
元素和标准缓存

00:27:45.926 --> 00:27:47.076 A:middle
所以如果你已经在 OpenGL 中用了这些缓存器

00:27:47.076 --> 00:27:48.456 A:middle
你在处理你的端口的时候

00:27:48.506 --> 00:27:50.126 A:middle
就会更容易一些

00:27:51.506 --> 00:27:52.686 A:middle
通过设备你能很轻易地创建缓存器

00:27:52.686 --> 00:27:54.456 A:middle
这个设备是你通过 newBufferWithLength

00:27:54.516 --> 00:27:55.986 A:middle
调用的 它指定了你想要

00:27:55.986 --> 00:27:57.146 A:middle
多大的缓存

00:27:57.826 --> 00:27:59.626 A:middle
你也可以指定存储模式

