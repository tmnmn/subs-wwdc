WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:58.466 --> 00:09:02.056 A:middle
现在我已经谈到了

00:09:02.056 --> 00:09:03.876 A:middle
命令队列是如何

00:09:03.876 --> 00:09:06.276 A:middle
产生一个命令缓存的序列

00:09:06.276 --> 00:09:07.606 A:middle
并且你能从命令缓存中

00:09:07.606 --> 00:09:09.286 A:middle
创建一个命令编译器

00:09:10.196 --> 00:09:11.216 A:middle
让我们更细致地看一看

00:09:11.216 --> 00:09:13.096 A:middle
这些用来写入命令缓存的

00:09:13.096 --> 00:09:14.466 A:middle
编码器对象

00:09:15.726 --> 00:09:17.036 A:middle
它们有三种主要类型

00:09:18.096 --> 00:09:18.986 A:middle
Render Command Encoder

00:09:18.986 --> 00:09:20.606 A:middle
它的命令类似于 OpenGL 命令字符串

00:09:20.606 --> 00:09:22.266 A:middle
对于这些命令你可以

00:09:22.356 --> 00:09:23.776 A:middle
设置状态

00:09:23.776 --> 00:09:25.316 A:middle
绑定对象和发出绘图申请

00:09:26.446 --> 00:09:27.736 A:middle
还有一个是 Blit Command Encoder

00:09:27.906 --> 00:09:29.306 A:middle
基于它你可以发出纹理

00:09:29.306 --> 00:09:31.246 A:middle
和缓存拷贝操作

00:09:31.576 --> 00:09:32.786 A:middle
你也可以用它来生成

00:09:32.786 --> 00:09:34.526 A:middle
用于纹理和从缓存中 转移

00:09:34.566 --> 00:09:36.156 A:middle
像素数据的 Mipmap 就类似于

00:09:36.156 --> 00:09:38.076 A:middle
glReadPixels 如何对 OpenGL 的

00:09:38.076 --> 00:09:40.266 A:middle
像素缓存对象操作的

00:09:40.806 --> 00:09:43.496 A:middle
最后是 Compute Command Encoder

00:09:43.756 --> 00:09:46.076 A:middle
它让你可以

00:09:46.076 --> 00:09:48.466 A:middle
分派内核

00:09:49.316 --> 00:09:50.826 A:middle
Render Command Encoder 可能将会是

00:09:50.826 --> 00:09:51.746 A:middle
你最熟悉的编码器

00:09:51.746 --> 00:09:54.346 A:middle
因为它负责

00:09:54.346 --> 00:09:56.206 A:middle
大部分基于图形的 App

00:09:56.206 --> 00:09:57.976 A:middle
需要的操作

00:09:59.306 --> 00:10:00.816 A:middle
这一组命令编译进

