WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:57.946 --> 00:37:00.156 A:middle
现在你要把这些命令编译进

00:37:00.156 --> 00:37:01.156 A:middle
这个命令缓存里

00:37:01.156 --> 00:37:03.086 A:middle
我将会简短地说一下

00:37:03.146 --> 00:37:04.616 A:middle
这个编码器

00:37:05.936 --> 00:37:06.936 A:middle
当你完成编码以后

00:37:06.936 --> 00:37:08.846 A:middle
你需要调用提交方法

00:37:08.846 --> 00:37:11.446 A:middle
来让这个命令缓存

00:37:11.446 --> 00:37:14.366 A:middle
被提交到 GPU 里执行

00:37:14.366 --> 00:37:17.846 A:middle
现在你有两个选择

00:37:17.916 --> 00:37:19.686 A:middle
去决定在这个命令缓存在 GPU 上被执行的时候

00:37:19.686 --> 00:37:21.806 A:middle
应该去做点什么

00:37:22.316 --> 00:37:25.526 A:middle
你可以通过调用这个

00:37:25.526 --> 00:37:27.436 A:middle
waitUntilCompleted 方法来等待

00:37:27.436 --> 00:37:29.256 A:middle
这就像 OpenGL 里边的

00:37:29.256 --> 00:37:29.956 A:middle
glFinish

00:37:30.896 --> 00:37:33.026 A:middle
这个方法会同步等待

00:37:33.026 --> 00:37:35.456 A:middle
并且只在所有命令缓存里的

00:37:35.456 --> 00:37:38.806 A:middle
命令被 GPU 执行完以后才会返回

00:37:40.916 --> 00:37:44.816 A:middle
或者在你提交这个

00:37:44.816 --> 00:37:46.206 A:middle
命令缓存给 GPU 以前

00:37:46.206 --> 00:37:48.566 A:middle
你可以添加一个完成处理器

00:37:49.406 --> 00:37:51.286 A:middle
这个处理器会在 GPU 

00:37:51.286 --> 00:37:53.296 A:middle
完成执行以后被调用

00:37:53.946 --> 00:37:56.476 A:middle
这就允许 CPU 和 GPU 去

00:37:56.476 --> 00:37:57.576 A:middle
并行执行

00:37:58.456 --> 00:38:00.486 A:middle
同时这样就允许我们去追踪

