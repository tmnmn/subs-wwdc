WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:58.932 --> 00:15:02.135 align:middle line:-2
我们现在要使用四元数
对这个向量进行旋转

00:15:03.670 --> 00:15:05.472 align:middle line:-2
从技术上来说
我们正在旋转整个场景

00:15:05.539 --> 00:15:06.773 align:middle line:-1
但出于说明的目的

00:15:06.840 --> 00:15:08.509 align:middle line:-1
我们说我们正在旋转这个向量

00:15:10.010 --> 00:15:11.879 align:middle line:-1
当使用四元数进行旋转时

00:15:12.112 --> 00:15:14.515 align:middle line:-1
你需要指定一个轴和旋转角度

00:15:15.649 --> 00:15:16.683 align:middle line:-1
或者换一种说法

00:15:16.984 --> 00:15:19.152 align:middle line:-1
你在旋转什么以及旋转了多少

00:15:20.120 --> 00:15:21.922 align:middle line:-1
我们要围绕X轴旋转

00:15:21.989 --> 00:15:24.791 align:middle line:-1
我们将向上旋转三个pi的弧度

00:15:27.628 --> 00:15:30.130 align:middle line:-2
你可通过调用simd_act
函数来应用此旋转

00:15:31.899 --> 00:15:34.168 align:middle line:-1
这将在该向量上执行四元数的动作

00:15:34.234 --> 00:15:35.802 align:middle line:-2
并返回一个
rotatedVector

00:15:37.137 --> 00:15:38.272 align:middle line:-1
现在我们来看看

00:15:47.214 --> 00:15:50.551 align:middle line:-2
通常情况下
你不会对沿单轴旋转感兴趣

00:15:50.617 --> 00:15:52.786 align:middle line:-1
你通常要沿多个轴旋转

00:15:54.521 --> 00:15:56.290 align:middle line:-1
如果你已经熟悉旋转矩阵

00:15:56.356 --> 00:15:57.791 align:middle line:-1
这将看起来很自然

