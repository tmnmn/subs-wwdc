WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:58.705 --> 00:14:01.308 align:middle line:-1
除了矢量和矩阵对象之外

00:14:02.709 --> 00:14:06.713 align:middle line:-1
它还允许你对这些对象执行算术运算

00:14:08.749 --> 00:14:09.750 align:middle line:-1
它还具有扩展功能

00:14:09.816 --> 00:14:12.286 align:middle line:-1
例如 点积和clamp函数

00:14:14.188 --> 00:14:15.956 align:middle line:-1
它也支持超越函数

00:14:16.023 --> 00:14:17.591 align:middle line:-1
例如正弦和余弦

00:14:19.726 --> 00:14:21.128 align:middle line:-1
以及四元数

00:14:21.595 --> 00:14:22.829 align:middle line:-1
四元数在表示三维旋转时

00:14:22.896 --> 00:14:25.065 align:middle line:-1
是非常有用的

00:14:25.365 --> 00:14:27.668 align:middle line:-1
我想多谈一点这个话题

00:14:29.903 --> 00:14:32.105 align:middle line:-1
我们来看一段代码示例

00:14:33.674 --> 00:14:35.108 align:middle line:-1
这里有很多东西要展开讨论

00:14:35.876 --> 00:14:36.810 align:middle line:-1
所以我们从右边开始

00:14:37.544 --> 00:14:39.813 align:middle line:-2
这里有一个单位球体
就是这个灰色的球体

00:14:40.280 --> 00:14:41.748 align:middle line:-1
你会注意到这个红点

00:14:43.150 --> 00:14:44.852 align:middle line:-1
这实际上是这个向量的尖端

00:14:45.953 --> 00:14:48.121 align:middle line:-2
我们声明了
simd_float3向量

00:14:48.188 --> 00:14:50.190 align:middle line:-1
我们将x和y分量设置为零

00:14:50.390 --> 00:14:51.792 align:middle line:-1
并将z分量设置为1

00:14:52.092 --> 00:14:53.393 align:middle line:-1
所以它指向我们

00:14:54.461 --> 00:14:57.064 align:middle line:-1
那个红色点代表该向量的尖端

00:14:58.932 --> 00:15:02.135 align:middle line:-2
我们现在要使用四元数
对这个向量进行旋转

