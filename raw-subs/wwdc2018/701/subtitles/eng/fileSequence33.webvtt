WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.436 --> 00:33:01.646 A:middle
iPhone X using Accelerate.

00:33:02.816 --> 00:33:04.376 A:middle
The performance is measured in

00:33:04.376 --> 00:33:08.226 A:middle
gigaflops, for double precisions

00:33:08.226 --> 00:33:11.696 A:middle
catch up with iPhone 5S, iPhone

00:33:11.696 --> 00:33:18.906 A:middle
6, iPhone 6S, iPhone 7, iPhone X

00:33:18.906 --> 00:33:21.786 A:middle
comes in around 28.7 gigaflops.

00:33:22.346 --> 00:33:23.456 A:middle
That's double precision.

00:33:23.906 --> 00:33:25.346 A:middle
Let's look at single precision.

00:33:26.776 --> 00:33:32.086 A:middle
Again, we run out of space, we

00:33:32.086 --> 00:33:33.646 A:middle
have to shrink to try to make it

00:33:33.686 --> 00:33:34.736 A:middle
come closer.

00:33:36.226 --> 00:33:40.796 A:middle
IPhone X comes in at 68

00:33:40.796 --> 00:33:41.526 A:middle
gigaflops.

00:33:42.776 --> 00:33:44.936 A:middle
Now you might be thinking, this

00:33:44.936 --> 00:33:46.416 A:middle
is not that surprising.

00:33:47.246 --> 00:33:48.826 A:middle
However, it improves over time,

00:33:48.826 --> 00:33:50.816 A:middle
so the performance improves over

00:33:50.816 --> 00:33:53.296 A:middle
time as well, but in fact,

00:33:53.756 --> 00:33:55.156 A:middle
that's only half of the story.

00:33:55.586 --> 00:33:57.496 A:middle
When there is a micro

00:33:57.496 --> 00:33:58.676 A:middle
architecture change to have

00:33:58.676 --> 00:34:00.316 A:middle
additional computational power

