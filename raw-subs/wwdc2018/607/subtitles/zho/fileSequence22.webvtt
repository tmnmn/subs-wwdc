WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.386 --> 00:22:00.526 A:middle
进行计算 而不是每个

00:22:00.526 --> 00:22:02.356 A:middle
单独的三角形

00:22:03.576 --> 00:22:05.496 A:middle
然后我们告诉 GPU 

00:22:05.496 --> 00:22:06.536 A:middle
只渲染那些

00:22:06.536 --> 00:22:07.416 A:middle
实际可见的块

00:22:07.916 --> 00:22:11.956 A:middle
再一次 让我们看一下

00:22:11.956 --> 00:22:13.016 A:middle
屏幕左右侧的视图

00:22:13.406 --> 00:22:14.566 A:middle
左侧是相机视图

00:22:14.566 --> 00:22:16.376 A:middle
右侧是校车的

00:22:16.376 --> 00:22:17.556 A:middle
另一个​​视图

00:22:18.466 --> 00:22:20.346 A:middle
你可以在右侧看到红色和

00:22:20.346 --> 00:22:21.326 A:middle
粉红色的色调

00:22:21.326 --> 00:22:22.846 A:middle
这就是我们的计算着色器

00:22:22.846 --> 00:22:24.306 A:middle
所确定的不可见的部分

00:22:25.536 --> 00:22:27.606 A:middle
我们从未真正将此场景

00:22:27.606 --> 00:22:30.216 A:middle
发送给 GPU 因此它可以节省 50％

00:22:30.216 --> 00:22:32.536 A:middle
或更多的几何渲染成本

00:22:35.896 --> 00:22:38.316 A:middle
这是最后一个视图

00:22:38.316 --> 00:22:40.666 A:middle
它展示了这种技术 可以为你节省多少成本

00:22:41.846 --> 00:22:43.516 A:middle
注意右侧的画面

00:22:43.516 --> 00:22:44.876 A:middle
许多校车和救护车实际上

00:22:44.876 --> 00:22:45.976 A:middle
是隐形的

00:22:50.516 --> 00:22:52.036 A:middle
这实在是太神奇了

00:22:52.036 --> 00:22:52.866 A:middle
我喜欢这个

00:22:53.556 --> 00:22:55.156 A:middle
所以请尽情地探索代码

00:22:55.156 --> 00:22:56.996 A:middle
我希望我将来会在

00:22:57.136 --> 00:22:58.776 A:middle
一些游戏中看到

00:22:58.776 --> 00:22:59.986 A:middle
这种技术的应用

