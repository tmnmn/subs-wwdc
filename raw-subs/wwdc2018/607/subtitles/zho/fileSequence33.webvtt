WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.516 --> 00:33:01.246 A:middle
它直接在渲染过程中提供了

00:33:01.246 --> 00:33:02.036 A:middle
计算能力

00:33:02.656 --> 00:33:04.016 A:middle
这个阶段将会在

00:33:04.016 --> 00:33:06.216 A:middle
每个 Tile 上执行一个可配置的线程组

00:33:06.756 --> 00:33:07.936 A:middle
举个例子

00:33:07.936 --> 00:33:09.626 A:middle
你可以为每个 Tile 启动一个线程

00:33:09.626 --> 00:33:10.846 A:middle
或者也可以为每个像素启动一个线程

00:33:14.286 --> 00:33:15.296 A:middle
Tile 的着色

00:33:15.336 --> 00:33:16.526 A:middle
可以让你交叉使用

00:33:16.526 --> 00:33:17.916 A:middle
对相同数据进行操作的绘制调用

00:33:17.916 --> 00:33:19.156 A:middle
和线程组调度

00:33:19.496 --> 00:33:21.796 A:middle
Tile 的着色器可

00:33:21.796 --> 00:33:23.066 A:middle
以访问所有 Tile 内存

00:33:23.066 --> 00:33:24.446 A:middle
因此它们可以读写图像块的任何像素

00:33:26.196 --> 00:33:27.696 A:middle
那么让我们来看一看

00:33:27.696 --> 00:33:31.286 A:middle
Tile 着色如何优化切片正向着色等技术

00:33:34.536 --> 00:33:36.406 A:middle
像延迟着色一样

00:33:36.406 --> 00:33:37.866 A:middle
切片正向着色是一种多层技术

00:33:38.616 --> 00:33:39.986 A:middle
我们通常会在

00:33:39.986 --> 00:33:41.406 A:middle
MSA 非常重要时

00:33:41.406 --> 00:33:43.356 A:middle
或需要各种材料时使用它

00:33:43.356 --> 00:33:44.676 A:middle
并且它对不透明和半透明几何图形

00:33:44.676 --> 00:33:48.476 A:middle
同样适用切片正向着色

00:33:48.476 --> 00:33:50.546 A:middle
一般由 3 次传递组成

00:33:51.226 --> 00:33:53.436 A:middle
首先 一个渲染通道生成了

00:33:53.436 --> 00:33:54.256 A:middle
一个场景深度缓冲区

00:33:55.136 --> 00:33:56.626 A:middle
其次 计算通道将会

00:33:56.626 --> 00:33:58.806 A:middle
生成并计算使用该场景

00:33:58.806 --> 00:34:00.716 A:middle
深度缓冲区的

