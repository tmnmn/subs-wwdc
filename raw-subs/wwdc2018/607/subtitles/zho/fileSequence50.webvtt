WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:57.306 --> 00:50:00.206 A:middle
如何影响客户在游戏中的表现

00:50:01.976 --> 00:50:03.726 A:middle
接下来我们专门

00:50:03.726 --> 00:50:04.896 A:middle
讨论一下 Metal 技术

00:50:05.716 --> 00:50:09.006 A:middle
我们在大多数设备上

00:50:09.006 --> 00:50:11.786 A:middle
都有 2 个核心 是的

00:50:11.786 --> 00:50:13.626 A:middle
所以我们使用的方式是

00:50:14.206 --> 00:50:14.966 A:middle
我们有一个传统的游戏主线

00:50:14.966 --> 00:50:16.196 A:middle
和渲染线程的拆分

00:50:16.576 --> 00:50:17.676 A:middle
在游戏主线上

00:50:17.676 --> 00:50:19.086 A:middle
我们正在进行联网 模拟

00:50:19.086 --> 00:50:20.746 A:middle
动画 物理等等工作

00:50:21.316 --> 00:50:22.546 A:middle
渲染线程执行

00:50:22.546 --> 00:50:25.796 A:middle
所有场景遍历剔除并

00:50:25.796 --> 00:50:26.316 A:middle
发布所有 Metal API 调用

00:50:26.646 --> 00:50:29.316 A:middle
我们也有一个异步线程

00:50:29.626 --> 00:50:31.026 A:middle
大多数情况下 它处理

00:50:31.026 --> 00:50:32.796 A:middle
流式传输任务 纹理流式传输

00:50:32.796 --> 00:50:34.386 A:middle
以及级别流式传输

00:50:36.006 --> 00:50:37.726 A:middle
在拥有 2 个快速内核

00:50:37.726 --> 00:50:39.996 A:middle
和 4 个高效内核的新设备上

00:50:39.996 --> 00:50:41.456 A:middle
我们增加了 3 个任务线程

00:50:41.456 --> 00:50:42.656 A:middle
并启用了虚幻引擎中的一些

00:50:42.656 --> 00:50:44.186 A:middle
并行算法

00:50:44.796 --> 00:50:48.526 A:middle
所以我们采取动画在多帧

00:50:48.526 --> 00:50:51.126 A:middle
CPU 粒子 物理等条件下

00:50:51.126 --> 00:50:53.926 A:middle
进行模拟 场景剔除

00:50:53.926 --> 00:50:55.056 A:middle
以及其他一些任务

00:50:57.376 --> 00:50:59.166 A:middle
我之前提到过绘图调用

00:50:59.296 --> 00:51:00.916 A:middle
绘图调用是我们的主要的

