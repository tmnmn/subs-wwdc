WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:58.806 --> 00:34:00.716 A:middle
深度缓冲区的

00:34:00.716 --> 00:34:02.446 A:middle
每个 Tile 深度边界和光源列表

00:34:03.326 --> 00:34:04.886 A:middle
最后 另一个渲染通道

00:34:04.886 --> 00:34:05.956 A:middle
将使用相应的光源列表

00:34:05.956 --> 00:34:08.096 A:middle
为每个 Tile 中的像素着色

00:34:08.706 --> 00:34:13.235 A:middle
现在 这种混合

00:34:13.235 --> 00:34:14.976 A:middle
渲染和计算的模式是很常见的

00:34:14.976 --> 00:34:17.366 A:middle
在 A11 之前

00:34:17.366 --> 00:34:19.226 A:middle
这些通道之间的交流需要系统内存

00:34:19.936 --> 00:34:21.755 A:middle
但是使用 Tile 着色

00:34:21.755 --> 00:34:22.856 A:middle
我们可以将计算内联

00:34:22.856 --> 00:34:24.036 A:middle
所以渲染通道就可以合并

00:34:26.396 --> 00:34:28.356 A:middle
在这里 深度边界和

00:34:28.356 --> 00:34:29.476 A:middle
光线剔除步骤被

00:34:29.476 --> 00:34:31.036 A:middle
作为 Tile 着色器实现

00:34:31.036 --> 00:34:32.576 A:middle
并内嵌到单个渲染通道中

00:34:33.496 --> 00:34:34.735 A:middle
深度现在只

00:34:34.735 --> 00:34:36.426 A:middle
存储在图像块中

00:34:36.525 --> 00:34:42.706 A:middle
但却可以在整个过程中被访问

00:34:42.906 --> 00:34:44.496 A:middle
所以现在 Tile 的着色

00:34:44.496 --> 00:34:45.696 A:middle
将帮助你消除大量带宽

00:34:45.696 --> 00:34:47.626 A:middle
但这些 Tile 的着色器的输出

00:34:47.626 --> 00:34:49.545 A:middle
仍然存储在系统内存中

00:34:50.545 --> 00:34:51.826 A:middle
Tile 的着色器

00:34:51.826 --> 00:34:53.226 A:middle
调度与绘制同步

00:34:53.226 --> 00:34:54.286 A:middle
所以这是完全安全的

00:34:54.656 --> 00:34:55.606 A:middle
但我认为我们仍然可以

00:34:55.606 --> 00:34:57.136 A:middle
使用我们的下一个功能

00:34:57.706 --> 00:34:59.426 A:middle
持久线程组内存 来使我们做得更好

