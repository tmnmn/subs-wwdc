WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:00.836 --> 00:07:01.986 A:middle
现在让我们看看 Metal 技术

00:07:01.986 --> 00:07:02.766 A:middle
如何在图形处理器（GPU）上

00:07:02.766 --> 00:07:04.366 A:middle
为你进行自动并行化

00:07:04.946 --> 00:07:07.316 A:middle
所以让我们先从头看一下

00:07:07.316 --> 00:07:10.176 A:middle
一个框架示例 然后看一看

00:07:10.176 --> 00:07:12.316 A:middle
图形处理器（GPU）如何执行这个框架

00:07:13.296 --> 00:07:14.546 A:middle
基于你平台的功能

00:07:14.546 --> 00:07:17.006 A:middle
Metal 技术可以通过

00:07:17.006 --> 00:07:19.376 A:middle
分析数据相关性

00:07:19.376 --> 00:07:20.956 A:middle
自动提取并行性

00:07:21.576 --> 00:07:22.746 A:middle
现在让我们看一看这些相关性

00:07:22.746 --> 00:07:23.376 A:middle
当中的 2 个

00:07:24.726 --> 00:07:26.436 A:middle
在这个例子中 粒子模拟会

00:07:26.436 --> 00:07:28.416 A:middle
写入数据 而这些数据稍后

00:07:28.416 --> 00:07:30.116 A:middle
将会被效果用来

00:07:30.316 --> 00:07:31.456 A:middle
渲染粒子

00:07:32.816 --> 00:07:35.586 A:middle
类似地 G 缓冲（G-buffer）通道

00:07:36.106 --> 00:07:37.796 A:middle
生成几何图形 稍后将会通过

00:07:37.796 --> 00:07:38.916 A:middle
延迟着色过程

00:07:38.916 --> 00:07:43.256 A:middle
来计算材质的明暗

00:07:43.486 --> 00:07:45.216 A:middle
所有这些信息都

00:07:45.216 --> 00:07:46.686 A:middle
允许 Metal 技术自动

00:07:46.686 --> 00:07:49.276 A:middle
并且便宜地识别

00:07:49.816 --> 00:07:51.236 A:middle
可以并行运行的整个通道

00:07:51.236 --> 00:07:52.416 A:middle
例如使用异步计算

00:07:55.616 --> 00:07:57.896 A:middle
所以你可以在

00:07:57.936 --> 00:08:00.166 A:middle
图形处理器（GPU）上获得免费的并

