WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.716 --> 00:15:00.276 A:middle
访问的缓冲区 因此你可以

00:15:00.276 --> 00:15:01.836 A:middle
随时修改它的内容

00:15:02.086 --> 00:15:03.976 A:middle
例如更改着色器类型

00:15:03.976 --> 00:15:05.276 A:middle
或相机矩阵 或者其他

00:15:05.276 --> 00:15:06.606 A:middle
任何你可能需要更改的内容

00:15:07.036 --> 00:15:09.476 A:middle
当然 通过将渲染

00:15:09.476 --> 00:15:11.566 A:middle
转移到 GPU 上

00:15:11.566 --> 00:15:13.886 A:middle
你可以移除昂贵的 CPU

00:15:13.886 --> 00:15:15.216 A:middle
和 GPU 同步点 这些

00:15:15.216 --> 00:15:17.126 A:middle
同步点通常需要提交数据给它们

00:15:18.346 --> 00:15:19.636 A:middle
让我们来看一个例子

00:15:20.706 --> 00:15:23.186 A:middle
这是一个典型的游戏框架

00:15:23.646 --> 00:15:24.856 A:middle
一般的渲染循环有

00:15:24.856 --> 00:15:26.366 A:middle
常见的几个阶段

00:15:27.046 --> 00:15:29.066 A:middle
首先 你通过浏览

00:15:29.246 --> 00:15:30.806 A:middle
场景图来确定哪些对象

00:15:30.806 --> 00:15:31.456 A:middle
需要被渲染

00:15:32.016 --> 00:15:34.836 A:middle
你可能使用

00:15:34.886 --> 00:15:36.226 A:middle
视锥体剔除来确定

00:15:36.226 --> 00:15:37.236 A:middle
视锥体内的物体

00:15:38.016 --> 00:15:39.266 A:middle
你们中的一些人可能会

00:15:39.266 --> 00:15:41.486 A:middle
使用更加复杂的方法来解决

00:15:41.486 --> 00:15:42.206 A:middle
遮挡问题

00:15:42.576 --> 00:15:44.956 A:middle
此外细节选择的程度自然

00:15:45.056 --> 00:15:46.816 A:middle
而然地产生在这个阶段

00:15:47.576 --> 00:15:49.326 A:middle
只有当你编码并

00:15:49.326 --> 00:15:51.176 A:middle
提交命令缓冲区后 GPU 才会

00:15:51.176 --> 00:15:55.136 A:middle
开始使用它

00:15:55.816 --> 00:15:57.356 A:middle
越来越多的游戏正在将

00:15:57.356 --> 00:15:58.776 A:middle
确定可见对象的过程

00:15:58.776 --> 00:16:00.496 A:middle
转移到 GPU 上

