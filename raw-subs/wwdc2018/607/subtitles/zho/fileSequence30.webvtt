WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:00.556 --> 00:30:02.416 A:middle
所以现在我们来讨论

00:30:02.416 --> 00:30:04.376 A:middle
一下图像块（Imageblocks）

00:30:04.376 --> 00:30:05.936 A:middle
它允许你在更多的情况下

00:30:05.936 --> 00:30:06.696 A:middle
合并渲染通道

00:30:12.476 --> 00:30:13.546 A:middle
图像块（Imageblocks）可以

00:30:13.546 --> 00:30:14.736 A:middle
让你在 Tile 的内存中完全

00:30:14.736 --> 00:30:15.116 A:middle
控制你的数据

00:30:15.536 --> 00:30:17.196 A:middle
图像块允许你以

00:30:17.196 --> 00:30:18.506 A:middle
结构体的形式直接用

00:30:18.506 --> 00:30:20.486 A:middle
着色语言声明像素布局

00:30:21.456 --> 00:30:22.696 A:middle
而不是将像素描述

00:30:22.696 --> 00:30:24.006 A:middle
为 Metal 技术的 API 中的

00:30:24.006 --> 00:30:25.816 A:middle
渲染通道内容中的数组

00:30:28.056 --> 00:30:29.336 A:middle
它将新的数据类型

00:30:29.336 --> 00:30:30.556 A:middle
添加到与你已经使用的

00:30:30.556 --> 00:30:31.856 A:middle
匹配纹理格式的

00:30:31.856 --> 00:30:33.446 A:middle
着色语言当中

00:30:33.446 --> 00:30:35.116 A:middle
并且在访问着色器时

00:30:35.116 --> 00:30:36.666 A:middle
这些类型被透明地打包和解压

00:30:37.646 --> 00:30:39.196 A:middle
实际上 你还可以在

00:30:39.196 --> 00:30:40.676 A:middle
顶点缓冲区和

00:30:40.676 --> 00:30:42.216 A:middle
常量缓冲区中使用

00:30:42.216 --> 00:30:43.976 A:middle
这些新的数据类型来更紧密地

00:30:43.976 --> 00:30:44.476 A:middle
打包所有数据

00:30:46.736 --> 00:30:47.946 A:middle
图像块（Imageblocks）还允许

00:30:47.946 --> 00:30:49.996 A:middle
你描述更复杂的每个像素

00:30:49.996 --> 00:30:50.826 A:middle
数据结构

00:30:51.176 --> 00:30:52.806 A:middle
你可以使用数组

00:30:52.806 --> 00:30:54.616 A:middle
嵌套结构或其组合

00:30:55.126 --> 00:30:56.586 A:middle
它们都可以正常运行

00:30:59.096 --> 00:31:01.016 A:middle
现在 直接控制

