WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:05.336 --> 00:35:06.846 A:middle
好的 线程组内存

00:35:06.846 --> 00:35:08.206 A:middle
是 Metal 技术计算的一个众所周知的特性

00:35:08.826 --> 00:35:09.856 A:middle
它使线程组内的线程

00:35:09.856 --> 00:35:11.766 A:middle
可以使用快速的 用于传输的内存

00:35:11.766 --> 00:35:12.636 A:middle
来共享数据

00:35:13.736 --> 00:35:14.886 A:middle
现在 由于 Tile 着色

00:35:14.936 --> 00:35:16.096 A:middle
线程组内存也可以在

00:35:16.096 --> 00:35:17.396 A:middle
渲染通道中使用

00:35:18.446 --> 00:35:19.586 A:middle
但渲染通道中的

00:35:19.586 --> 00:35:20.756 A:middle
线程组内存含有

00:35:20.756 --> 00:35:21.946 A:middle
2 个传统上不可用于计算

00:35:21.946 --> 00:35:22.766 A:middle
的新功能

00:35:23.376 --> 00:35:25.286 A:middle
首先 片段着色器

00:35:25.286 --> 00:35:26.756 A:middle
现在也可以访问相同的

00:35:26.756 --> 00:35:27.446 A:middle
线程组内存

00:35:28.126 --> 00:35:29.366 A:middle
其次 线程组内存

00:35:29.366 --> 00:35:30.496 A:middle
的内容在整个

00:35:30.496 --> 00:35:32.116 A:middle
Tile 的整个生命周期中都存在

00:35:33.476 --> 00:35:35.706 A:middle
总而言之 这是

00:35:35.756 --> 00:35:37.146 A:middle
一个强大的工具

00:35:37.146 --> 00:35:39.286 A:middle
可以让数据在绘制和调度之间共享

00:35:40.486 --> 00:35:41.646 A:middle
实际上 我们相信

00:35:41.646 --> 00:35:42.666 A:middle
这会非常有用

00:35:42.666 --> 00:35:43.916 A:middle
因为我们实际上已经

00:35:43.916 --> 00:35:44.876 A:middle
使线程组内存的最大容量翻倍

00:35:44.876 --> 00:35:46.466 A:middle
比起上一代来说

00:35:46.466 --> 00:35:47.326 A:middle
你可以将更多的中间数据

00:35:47.326 --> 00:35:50.606 A:middle
存储在传输过程中

00:35:50.786 --> 00:35:52.956 A:middle
好的 现在让我们使用持久线程组

00:35:52.956 --> 00:35:54.176 A:middle
来进一步优化我们的

00:35:54.176 --> 00:35:55.106 A:middle
切片正向着色示例

00:35:55.686 --> 00:36:00.576 A:middle
因此 有了持久线程组

