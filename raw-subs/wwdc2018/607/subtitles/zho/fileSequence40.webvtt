WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:01.126 --> 00:40:02.716 A:middle
但仅仅 Tile 着色是不够的

00:40:02.956 --> 00:40:04.266 A:middle
我们需要色彩覆盖控制来

00:40:04.266 --> 00:40:06.586 A:middle
改变多重采样率

00:40:07.576 --> 00:40:08.876 A:middle
颜色覆盖控制功能非常强大

00:40:08.996 --> 00:40:10.996 A:middle
并且使用非常简单

00:40:11.526 --> 00:40:12.496 A:middle
让我们来看一下着色器

00:40:16.176 --> 00:40:17.976 A:middle
好的 请记住

00:40:17.976 --> 00:40:19.336 A:middle
我们的目标是

00:40:19.336 --> 00:40:20.766 A:middle
平均每个像素的样本

00:40:20.766 --> 00:40:22.126 A:middle
然后将该结果

00:40:22.236 --> 00:40:24.106 A:middle
存储回图像块中作为整体像素值

00:40:25.616 --> 00:40:27.276 A:middle
现在 我们不是

00:40:27.276 --> 00:40:29.686 A:middle
循环每个颜色 循环

00:40:29.826 --> 00:40:30.776 A:middle
每个样本 而是

00:40:30.776 --> 00:40:32.146 A:middle
使用 A11 的色差率

00:40:32.146 --> 00:40:34.916 A:middle
功能 只循环独特的颜色

00:40:36.836 --> 00:40:38.726 A:middle
为了在所有样本中

00:40:38.726 --> 00:40:40.066 A:middle
正确地平均

00:40:40.066 --> 00:40:41.416 A:middle
我们需要根据与其相关的

00:40:41.416 --> 00:40:43.166 A:middle
样本数对每种颜色进行

00:40:43.166 --> 00:40:46.436 A:middle
加权 我们通过计算颜色掩码中

00:40:46.436 --> 00:40:47.866 A:middle
设置的位来实现这一点

00:40:49.186 --> 00:40:50.426 A:middle
然后 我们通过

00:40:50.426 --> 00:40:51.606 A:middle
除以总采样数来完成

00:40:51.606 --> 00:40:54.766 A:middle
平均 最后将

00:40:54.766 --> 00:40:56.616 A:middle
结果写回到图像块中

00:40:57.136 --> 00:40:58.526 A:middle
输出样本掩码告诉

00:40:58.526 --> 00:41:00.126 A:middle
Metal 技术将结果应用于

