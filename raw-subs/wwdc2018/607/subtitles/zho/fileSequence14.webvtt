WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:00.466 --> 00:14:02.346 A:middle
参数缓冲区允许你将

00:14:02.986 --> 00:14:04.536 A:middle
材质管理卸载到

00:14:05.176 --> 00:14:08.366 A:middle
GPU 上并节省宝贵的 CPU 资源

00:14:08.916 --> 00:14:10.206 A:middle
但今年 我们把它稍微扩展了

00:14:10.206 --> 00:14:11.546 A:middle
一点 再稍稍

00:14:11.546 --> 00:14:13.436 A:middle
扩展了一点

00:14:13.926 --> 00:14:15.506 A:middle
我们开始加入 2 个新的

00:14:15.506 --> 00:14:16.516 A:middle
参数类型

00:14:17.426 --> 00:14:19.046 A:middle
它们包括管线状态和

00:14:19.156 --> 00:14:20.126 A:middle
命令缓冲区

00:14:21.056 --> 00:14:22.646 A:middle
现在 这些将用于

00:14:22.646 --> 00:14:24.226 A:middle
支持我们全新的

00:14:24.226 --> 00:14:24.836 A:middle
间接命令缓冲区功能

00:14:26.116 --> 00:14:27.916 A:middle
通过间接命令缓冲区

00:14:27.916 --> 00:14:30.956 A:middle
你可以在 GPU 上编码整个场景

00:14:31.506 --> 00:14:33.066 A:middle
在 CPU 上 你只有几个线程

00:14:33.066 --> 00:14:34.426 A:middle
可用于渲染

00:14:34.866 --> 00:14:35.936 A:middle
但是在 GPU 上

00:14:35.936 --> 00:14:37.986 A:middle
你拥有数百甚至

00:14:37.986 --> 00:14:40.976 A:middle
数千个可以同时运行的线程

00:14:41.716 --> 00:14:42.856 A:middle
通过间接命令缓冲区

00:14:42.856 --> 00:14:44.416 A:middle
你可以充分利用这种

00:14:44.416 --> 00:14:45.916 A:middle
大规模的并行性质

00:14:47.236 --> 00:14:49.186 A:middle
此外 间接命令缓冲区是

00:14:49.186 --> 00:14:51.376 A:middle
完全可以复用的

00:14:51.376 --> 00:14:52.556 A:middle
因此你可以只花费

00:14:52.556 --> 00:14:55.196 A:middle
一次编码成本 然后不断重复使用它

00:14:55.886 --> 00:14:57.626 A:middle
由于 ICB 是一个可直接

00:14:57.716 --> 00:15:00.276 A:middle
访问的缓冲区 因此你可以

