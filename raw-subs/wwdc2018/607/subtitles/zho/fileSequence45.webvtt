WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:59.936 --> 00:45:01.456 A:middle
移除永远不会显示的 LOD

00:45:01.456 --> 00:45:03.016 A:middle
因此我们可以把它

00:45:03.466 --> 00:45:06.096 A:middle
放入内存或更改我们在

00:45:06.096 --> 00:45:08.866 A:middle
特定级别上动画的

00:45:08.866 --> 00:45:11.696 A:middle
角色数量 以降低 CPU 成本

00:45:12.736 --> 00:45:14.776 A:middle
在 iOS 平台内部 我们还定义了 3 个

00:45:14.776 --> 00:45:17.116 A:middle
可扩展性 - 低

00:45:17.116 --> 00:45:19.056 A:middle
中 高 - 这些

00:45:19.056 --> 00:45:20.136 A:middle
通常与不同代

00:45:20.136 --> 00:45:21.736 A:middle
iPhone 相关

00:45:21.806 --> 00:45:24.116 A:middle
所以 iPhone 6 使用低端

00:45:24.116 --> 00:45:26.046 A:middle
iPhone 7 使用中档

00:45:26.046 --> 00:45:27.806 A:middle
iPhone 8 和

00:45:27.806 --> 00:45:31.366 A:middle
iPhone X 使用高端

00:45:31.366 --> 00:45:34.226 A:middle
分辨率显然是

00:45:34.226 --> 00:45:36.356 A:middle
我们拥有的最简单和最佳的

00:45:36.516 --> 00:45:37.446 A:middle
可扩展性选项

00:45:37.786 --> 00:45:39.266 A:middle
我们最终调整了每个设备

00:45:39.766 --> 00:45:41.186 A:middle
我们倾向于

00:45:41.186 --> 00:45:42.456 A:middle
在可能的情况下 使用后备缓冲分辨率

00:45:42.456 --> 00:45:43.836 A:middle
这是用户界面呈现的内容所决定的

00:45:44.346 --> 00:45:45.996 A:middle
因为如果我们这样做

00:45:45.996 --> 00:45:47.676 A:middle
那么我们不必支付单独的

00:45:47.676 --> 00:45:48.726 A:middle
上采样成本

00:45:49.196 --> 00:45:50.746 A:middle
但是 我们确实支持

00:45:50.786 --> 00:45:52.736 A:middle
以较低的分辨率

00:45:52.736 --> 00:45:54.566 A:middle
渲染 3D 分辨率 在某些情况下

00:45:54.566 --> 00:45:56.826 A:middle
我们需要一个清晰的用户界面

00:45:56.826 --> 00:45:58.886 A:middle
但不得不降低 3D 渲染

00:45:58.886 --> 00:46:00.746 A:middle
分辨率来适配

