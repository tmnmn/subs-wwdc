WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.156 --> 00:05:00.216 A:middle
命令队列的先后

00:05:01.026 --> 00:05:02.696 A:middle
所以 现在让我们来看一看

00:05:02.696 --> 00:05:04.316 A:middle
在代码中这是多么容易实现

00:05:04.316 --> 00:05:09.606 A:middle
你可以看到这并不需要很多代码

00:05:10.136 --> 00:05:11.016 A:middle
你要做的第一件事是

00:05:11.016 --> 00:05:13.816 A:middle
从队列中创建

00:05:13.816 --> 00:05:15.146 A:middle
任意数量的命令缓冲区

00:05:16.346 --> 00:05:19.126 A:middle
接下来 我们将通过使用

00:05:19.126 --> 00:05:21.456 A:middle
enqueue 接口来提前定义

00:05:21.456 --> 00:05:22.846 A:middle
图形处理器（GPU）的执行顺序

00:05:23.366 --> 00:05:25.526 A:middle
这非常棒 因为

00:05:25.526 --> 00:05:27.076 A:middle
你可以在不用等待命令缓冲区

00:05:27.076 --> 00:05:28.746 A:middle
首先 被编码的情况下完成所有操作

00:05:29.436 --> 00:05:31.906 A:middle
最后 我们将为

00:05:31.906 --> 00:05:33.696 A:middle
每个部分创建

00:05:33.696 --> 00:05:35.536 A:middle
单独的线程和调用编码函数

00:05:35.826 --> 00:05:36.506 A:middle
这就是全部了

00:05:36.966 --> 00:05:37.996 A:middle
这就是你需要做的内容

00:05:38.566 --> 00:05:40.186 A:middle
它非常快速 非常

00:05:40.186 --> 00:05:41.446 A:middle
高效 而且非常简单

00:05:42.136 --> 00:05:43.516 A:middle
所以现在 让我们回到

00:05:43.516 --> 00:05:45.896 A:middle
前面的图表 看一下另一个例子

00:05:46.246 --> 00:05:49.166 A:middle
就像你所看到的 我们能够在

00:05:49.166 --> 00:05:51.356 A:middle
中央处理器（CPU）上执行很好的

00:05:51.356 --> 00:05:54.196 A:middle
并行操作 但是如果

00:05:54.196 --> 00:05:58.826 A:middle
你有一个非常长的渲染通道呢

00:05:58.826 --> 00:06:01.036 A:middle
在这种情况下 Metal 技术

