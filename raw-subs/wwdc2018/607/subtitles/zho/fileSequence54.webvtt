WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:54:00.316 --> 00:54:01.226 A:middle
然后 在我们的日常

00:54:01.226 --> 00:54:03.396 A:middle
测试中 我们获得了

00:54:03.396 --> 00:54:06.106 A:middle
所有未被该自动化管线

00:54:06.106 --> 00:54:07.576 A:middle
所捕获的管线状态对象

00:54:07.966 --> 00:54:09.276 A:middle
自动化管线也

00:54:09.756 --> 00:54:12.476 A:middle
可以捕获像美化

00:54:12.896 --> 00:54:14.176 A:middle
和发射不同武器的效果

00:54:14.176 --> 00:54:15.136 A:middle
等等对象

00:54:16.556 --> 00:54:18.056 A:middle
我们把从自动化

00:54:18.056 --> 00:54:19.126 A:middle
和游戏测试中获取

00:54:19.126 --> 00:54:20.666 A:middle
所有这些信息组合成一个列表

00:54:20.856 --> 00:54:22.486 A:middle
这是我们在加载时创建的

00:54:22.486 --> 00:54:24.416 A:middle
也是我们随游戏一起运行的内容

00:54:24.956 --> 00:54:26.266 A:middle
这并不完美 但我们发现

00:54:26.266 --> 00:54:27.556 A:middle
我们在运行时创建的

00:54:27.556 --> 00:54:28.686 A:middle
管线状态对象数量

00:54:28.686 --> 00:54:31.146 A:middle
平均为任何游戏部分创建的个位数

00:54:31.516 --> 00:54:32.926 A:middle
所以玩家不会遇到任何

00:54:32.926 --> 00:54:34.846 A:middle
生成管线状态对象的麻烦

00:54:37.356 --> 00:54:39.096 A:middle
资源分配

00:54:39.196 --> 00:54:43.216 A:middle
所以基本上 创建和

00:54:43.366 --> 00:54:46.466 A:middle
删除资源是昂贵的

00:54:46.466 --> 00:54:47.326 A:middle
或可能是昂贵的

00:54:47.326 --> 00:54:50.046 A:middle
这有点像 想一想

00:54:50.046 --> 00:54:50.113 A:middle
[ 音质不清晰 ]

00:54:50.113 --> 00:54:51.166 A:middle
你非常想尽可能

00:54:51.166 --> 00:54:52.276 A:middle
减少你每帧

00:54:52.276 --> 00:54:53.036 A:middle
制作的 [ 音质不清晰 ] 数量

00:54:53.436 --> 00:54:54.246 A:middle
你非常不想

00:54:54.246 --> 00:54:55.416 A:middle
动态创建和销毁

00:54:55.416 --> 00:54:57.246 A:middle
大量资源 但是当你

00:54:57.246 --> 00:54:58.476 A:middle
动态地在内容中进行流式传输时

00:54:58.656 --> 00:55:00.606 A:middle
当你有很多

