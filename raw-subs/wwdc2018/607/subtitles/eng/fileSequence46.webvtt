WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:58.886 --> 00:46:00.746 A:middle
resolution lower than that in

00:46:00.746 --> 00:46:01.866 A:middle
order to meet our performance

00:46:01.866 --> 00:46:03.976 A:middle
goals -- the iPhone 6s, for

00:46:03.976 --> 00:46:04.456 A:middle
example.

00:46:06.176 --> 00:46:07.846 A:middle
Shadows were another axis of

00:46:07.846 --> 00:46:09.296 A:middle
scalability and actually really

00:46:09.296 --> 00:46:10.576 A:middle
important because they impact

00:46:10.686 --> 00:46:12.376 A:middle
both the CPU and the GPU.

00:46:13.056 --> 00:46:15.076 A:middle
On low-end devices, we don't

00:46:15.076 --> 00:46:16.276 A:middle
render any shadows at all.

00:46:16.586 --> 00:46:17.956 A:middle
On our mid-range target, we have

00:46:17.956 --> 00:46:21.016 A:middle
1 cascade, 1024 by 1024.

00:46:21.506 --> 00:46:22.726 A:middle
We set the distance to be about

00:46:22.726 --> 00:46:24.006 A:middle
the size of a building, so if

00:46:24.006 --> 00:46:25.136 A:middle
you're inside of a structure,

00:46:25.426 --> 00:46:26.276 A:middle
you're not going to see light

00:46:26.276 --> 00:46:28.056 A:middle
leaking on the other side.

00:46:28.736 --> 00:46:29.936 A:middle
High-end phones add a second

00:46:29.936 --> 00:46:31.246 A:middle
cascade, which gives crisper

00:46:31.246 --> 00:46:32.586 A:middle
character shadows as well as

00:46:32.586 --> 00:46:34.096 A:middle
lets us push out the shadowing

00:46:34.096 --> 00:46:35.966 A:middle
distance a little further.

00:46:37.406 --> 00:46:38.956 A:middle
Foliage was another axis of

00:46:38.956 --> 00:46:39.646 A:middle
scalability.

00:46:39.996 --> 00:46:41.426 A:middle
On low-end devices, we simply

00:46:41.426 --> 00:46:42.486 A:middle
don't render foliage.

00:46:42.756 --> 00:46:43.656 A:middle
On the mid range, we render

00:46:43.656 --> 00:46:45.556 A:middle
about 30% of the density we

00:46:45.556 --> 00:46:46.516 A:middle
support on console.

00:46:46.816 --> 00:46:47.936 A:middle
And on high-end devices, we

00:46:47.936 --> 00:46:49.716 A:middle
actually render 100% of the

00:46:49.716 --> 00:46:50.836 A:middle
density that we support on

00:46:50.836 --> 00:46:51.266 A:middle
console.

00:46:53.956 --> 00:46:55.666 A:middle
Memory is interesting in terms

00:46:55.666 --> 00:46:57.006 A:middle
of scalability because it

00:46:57.006 --> 00:46:58.296 A:middle
doesn't always correlate with

00:46:58.336 --> 00:46:59.006 A:middle
performance.

00:46:59.456 --> 00:47:00.866 A:middle
For instance, an iPhone 8 is

