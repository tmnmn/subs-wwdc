WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.516 --> 00:33:01.246 A:middle
compute capabilities directly in

00:33:01.246 --> 00:33:02.036 A:middle
the render pass.

00:33:02.656 --> 00:33:04.016 A:middle
This stage is going to execute a

00:33:04.016 --> 00:33:05.606 A:middle
configurable threadgroup for

00:33:05.606 --> 00:33:06.216 A:middle
each tile.

00:33:06.756 --> 00:33:07.936 A:middle
For example, you can launch a

00:33:07.936 --> 00:33:09.626 A:middle
single thread per tile, or you

00:33:09.626 --> 00:33:10.846 A:middle
can launch a thread per pixel.

00:33:14.286 --> 00:33:15.296 A:middle
Now, tile shading lets you

00:33:15.336 --> 00:33:16.526 A:middle
interleave draw calls and

00:33:16.526 --> 00:33:17.916 A:middle
threadgroup dispatches that

00:33:17.916 --> 00:33:19.156 A:middle
operate on the same data.

00:33:19.496 --> 00:33:21.796 A:middle
Tile shaders have access to all

00:33:21.796 --> 00:33:23.066 A:middle
of tile memory, so they can read

00:33:23.066 --> 00:33:24.016 A:middle
and write any pixel of the

00:33:24.016 --> 00:33:24.446 A:middle
imageblock.

00:33:26.196 --> 00:33:27.696 A:middle
So let's look at how tile

00:33:27.696 --> 00:33:29.306 A:middle
shading can optimize techniques

00:33:29.486 --> 00:33:31.286 A:middle
such as tiled forward shading.

00:33:34.536 --> 00:33:36.406 A:middle
So like deferred shading, tiled

00:33:36.406 --> 00:33:37.046 A:middle
forward shading is a

00:33:37.046 --> 00:33:37.866 A:middle
many-layered technique.

00:33:38.616 --> 00:33:39.986 A:middle
It's often used when MSA is

00:33:39.986 --> 00:33:41.406 A:middle
important or when a variety of

00:33:41.406 --> 00:33:43.356 A:middle
materials are needed and works

00:33:43.356 --> 00:33:44.676 A:middle
equally well for both opaque and

00:33:44.676 --> 00:33:45.566 A:middle
translucent geometry.

00:33:46.166 --> 00:33:48.476 A:middle
Now, tiled forward shading

00:33:48.476 --> 00:33:49.916 A:middle
traditionally consists of 3

00:33:49.916 --> 00:33:50.546 A:middle
passes.

00:33:51.226 --> 00:33:53.436 A:middle
First, a render pass generates a

00:33:53.436 --> 00:33:54.256 A:middle
scene depth buffer.

00:33:55.136 --> 00:33:56.626 A:middle
Second, a compute pass

00:33:56.626 --> 00:33:58.806 A:middle
generates, calculates per-tile

00:33:58.806 --> 00:34:00.716 A:middle
depth bounds and per-tile light

