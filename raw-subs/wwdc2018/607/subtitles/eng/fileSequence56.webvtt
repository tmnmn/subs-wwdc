WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:55:59.846 --> 00:56:00.186 A:middle
memory.

00:56:01.916 --> 00:56:03.006 A:middle
We also use it to improve the

00:56:03.006 --> 00:56:04.286 A:middle
quality of MSAA.

00:56:04.806 --> 00:56:06.356 A:middle
As I mentioned, we do HDR

00:56:06.356 --> 00:56:08.316 A:middle
rendering, and a-- just an MSAA

00:56:08.316 --> 00:56:10.906 A:middle
resolve of HDR can still lead to

00:56:10.906 --> 00:56:12.116 A:middle
very aliased edges.

00:56:12.506 --> 00:56:13.556 A:middle
Think of cases where you have a

00:56:13.556 --> 00:56:15.226 A:middle
very, very bright sky and a

00:56:15.226 --> 00:56:16.636 A:middle
very, very dark foreground.

00:56:17.126 --> 00:56:19.616 A:middle
Just doing a box filter over

00:56:19.616 --> 00:56:22.526 A:middle
that is, basically, if 1 of

00:56:22.526 --> 00:56:24.396 A:middle
those subsamples is incredibly

00:56:24.576 --> 00:56:25.876 A:middle
bright and the others are

00:56:25.876 --> 00:56:27.516 A:middle
incredibly dark, the result is

00:56:27.516 --> 00:56:28.606 A:middle
going to be an incredibly bright

00:56:28.606 --> 00:56:29.106 A:middle
pixel.

00:56:29.106 --> 00:56:30.066 A:middle
And when tone mapped, it'll be

00:56:30.066 --> 00:56:31.136 A:middle
something close to white.

00:56:31.516 --> 00:56:32.656 A:middle
You end up with edges that don't

00:56:32.656 --> 00:56:33.766 A:middle
look anti-aliased at all.

00:56:33.766 --> 00:56:36.436 A:middle
So our solution to this was to

00:56:36.436 --> 00:56:38.866 A:middle
do a pre tone map over all of

00:56:38.866 --> 00:56:41.686 A:middle
the MSAA samples, then perform

00:56:41.686 --> 00:56:43.606 A:middle
the normal MSAA resolve, and

00:56:43.606 --> 00:56:44.766 A:middle
then the first postprocessing

00:56:44.766 --> 00:56:46.356 A:middle
pass just reverses that pre tone

00:56:46.356 --> 00:56:46.576 A:middle
map.

00:56:47.486 --> 00:56:49.026 A:middle
We use programmable blending for

00:56:49.026 --> 00:56:50.116 A:middle
the pre tone map pass.

00:56:50.746 --> 00:56:51.946 A:middle
Otherwise, we'd have to resolve

00:56:51.946 --> 00:56:53.576 A:middle
the entire MSAA color buffer to

00:56:53.576 --> 00:56:55.366 A:middle
memory and read it back in,

00:56:55.366 --> 00:56:56.796 A:middle
which would be unaffordable.

00:56:58.676 --> 00:57:00.316 A:middle
Looking forward to some of the

