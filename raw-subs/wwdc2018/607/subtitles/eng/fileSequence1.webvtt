WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:00.806 --> 00:01:02.086 A:middle
Your games are using an

00:01:02.086 --> 00:01:03.176 A:middle
ever-increasing number of

00:01:03.176 --> 00:01:05.896 A:middle
objects, materials, and lights.

00:01:07.056 --> 00:01:08.706 A:middle
Games like Inside, for example,

00:01:09.156 --> 00:01:10.696 A:middle
use a great deal of special

00:01:10.696 --> 00:01:12.956 A:middle
effects to capture and support

00:01:13.006 --> 00:01:14.316 A:middle
the mood of the game.

00:01:16.296 --> 00:01:17.486 A:middle
Making games like this that

00:01:17.586 --> 00:01:19.606 A:middle
truly draw you in is challenging

00:01:19.606 --> 00:01:21.836 A:middle
because it can require efficient

00:01:22.006 --> 00:01:23.196 A:middle
GPU utilization.

00:01:23.756 --> 00:01:27.176 A:middle
At the same time, games are

00:01:27.176 --> 00:01:28.886 A:middle
requiring more and more CPU

00:01:28.886 --> 00:01:30.436 A:middle
cycles for exciting gameplay.

00:01:31.026 --> 00:01:33.116 A:middle
For example, games like Tomb

00:01:33.116 --> 00:01:34.336 A:middle
Raider that features

00:01:34.336 --> 00:01:36.256 A:middle
breathtaking vistas and

00:01:36.256 --> 00:01:38.466 A:middle
highly-detailed terrain, but, at

00:01:38.526 --> 00:01:40.116 A:middle
the same time, they're also

00:01:40.116 --> 00:01:41.946 A:middle
managing complex physics

00:01:41.946 --> 00:01:43.056 A:middle
simulations in AI.

00:01:44.066 --> 00:01:45.166 A:middle
This is challenging because it

00:01:45.166 --> 00:01:47.396 A:middle
leaves less CPU time for

00:01:47.396 --> 00:01:47.846 A:middle
rendering.

00:01:49.556 --> 00:01:52.206 A:middle
And finally, developers are

00:01:52.206 --> 00:01:55.076 A:middle
taking AAA titles like Fortnite

00:01:55.076 --> 00:01:57.456 A:middle
from Epic Games, importing them

00:01:57.456 --> 00:01:59.606 A:middle
to iOS so you can run a

00:01:59.606 --> 00:02:01.716 A:middle
console-level game in the palm

