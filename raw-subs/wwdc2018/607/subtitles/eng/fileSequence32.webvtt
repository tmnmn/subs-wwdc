WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.556 --> 00:32:00.136 A:middle
Each incoming fragment is sorted

00:32:00.136 --> 00:32:01.326 A:middle
by depth into the array.

00:32:02.186 --> 00:32:03.706 A:middle
If a fragment's depth lies

00:32:03.706 --> 00:32:04.916 A:middle
beyond the last element of the

00:32:04.916 --> 00:32:06.246 A:middle
array, then those elements are

00:32:06.246 --> 00:32:07.536 A:middle
merged, so it's really an

00:32:07.536 --> 00:32:09.126 A:middle
approximation, approximate

00:32:09.566 --> 00:32:09.766 A:middle
technique.

00:32:11.376 --> 00:32:12.976 A:middle
Now, sorting the MLAB array is

00:32:12.976 --> 00:32:14.136 A:middle
really fast because it lives in

00:32:14.136 --> 00:32:14.746 A:middle
tile memory.

00:32:15.556 --> 00:32:16.796 A:middle
Doing the same off chip would be

00:32:16.796 --> 00:32:18.186 A:middle
really expensive because of the

00:32:18.186 --> 00:32:19.356 A:middle
extra bandwidth and

00:32:19.356 --> 00:32:20.346 A:middle
synchronization overhead.

00:32:20.856 --> 00:32:25.326 A:middle
Now, the A11 actually doubles

00:32:25.326 --> 00:32:26.826 A:middle
the maximum supported pixel size

00:32:26.826 --> 00:32:28.096 A:middle
over your previous generation,

00:32:28.866 --> 00:32:30.466 A:middle
but that's still not going to be

00:32:30.466 --> 00:32:31.596 A:middle
enough to contain both the

00:32:31.596 --> 00:32:33.026 A:middle
G-buffer and MLAB data

00:32:33.026 --> 00:32:34.606 A:middle
structures simultaneously.

00:32:35.396 --> 00:32:37.366 A:middle
Fortunately, you don't need both

00:32:37.366 --> 00:32:38.106 A:middle
at the same time.

00:32:38.916 --> 00:32:40.076 A:middle
Imageblocks let you change your

00:32:40.076 --> 00:32:41.896 A:middle
pixel layouts inside the render

00:32:41.896 --> 00:32:43.216 A:middle
pass to match your current

00:32:43.916 --> 00:32:44.036 A:middle
needs.

00:32:44.956 --> 00:32:47.296 A:middle
So changing pixel layouts

00:32:47.296 --> 00:32:48.926 A:middle
actually requires tile shading,

00:32:48.926 --> 00:32:50.846 A:middle
so let's talk about that next.

00:32:56.256 --> 00:32:58.036 A:middle
So tile shading is the new

00:32:58.036 --> 00:32:59.516 A:middle
programmable stage that provides

00:32:59.516 --> 00:33:01.246 A:middle
compute capabilities directly in

