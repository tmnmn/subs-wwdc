WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:55.829 --> 00:15:01.902 align:start position:27% line:-2
直接アクセスできるので
いつでも内容を編集できます

00:15:02.002 --> 00:15:07.007 align:start position:29% line:-2
例えば シェーダの種類や
カメラ行列です

00:15:07.274 --> 00:15:10.811 align:start position:25% line:-2
もちろん
GPUでレンダリングを行えば

00:15:10.911 --> 00:15:17.518 align:start position:21% line:-2
CPUとGPUの同期が不要になり
コストを大幅に減らせます

00:15:18.252 --> 00:15:20.087 align:start position:38% line:-1
例を紹介します

00:15:21.488 --> 00:15:23.457 align:start position:34% line:-1
典型的なゲームでは

00:15:23.557 --> 00:15:26.760 align:start position:30% line:-2
レンダリングに
共通する部分があります

00:15:26.960 --> 00:15:31.832 align:start position:27% line:-2
まずシーングラフを調査して
描画するオブジェクトを決定

00:15:33.066 --> 00:15:37.638 align:start position:27% line:-2
視すい台カリングで
視界に入る物体を判定します

00:15:37.805 --> 00:15:42.543 align:start position:30% line:-2
もっと複雑な手法を使う
開発者もいるでしょう

00:15:42.843 --> 00:15:47.281 align:start position:32% line:-2
詳細度の設定も
この時点で行われます

00:15:47.514 --> 00:15:52.452 align:start position:29% line:-2
コマンドバッファを送ると
GPUがそれを消費します

00:15:55.722 --> 00:16:00.861 align:start position:25% line:-2
可視オブジェクトの判定を
GPUで行うゲームは多いです

