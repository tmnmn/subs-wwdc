WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:57.097 --> 00:25:02.169 align:start position:29% line:-2
タイル化された
頂点バッファに変換します

00:25:02.536 --> 00:25:05.305 align:start position:29% line:-2
これらはシステムメモリに
保存されます

00:25:07.508 --> 00:25:12.846 align:start position:25% line:-2
次に A11でフラグメントの
一部として処理されます

00:25:13.547 --> 00:25:18.218 align:start position:30% line:-2
この構造は ２つの面で
ゲームを最適化できます

00:25:19.987 --> 00:25:22.856 align:start position:32% line:-2
まず タイル化された
プリミティブが

00:25:22.956 --> 00:25:26.593 align:start position:30% line:-2
陰影処理の前に
ラスタライズされること

00:25:26.760 --> 00:25:31.098 align:start position:27% line:-2
これにより
オーバードローをなくせます

00:25:32.933 --> 00:25:38.071 align:start position:27% line:-2
次に 柔軟なタイルメモリに
フラグメントを保存すること

00:25:38.272 --> 00:25:43.177 align:start position:27% line:-2
シェーダが近いので
データのやりとりが高速です

00:25:44.978 --> 00:25:50.784 align:start position:27% line:-2
タイルメモリは陰影処理後に
一度書き込まれるだけなので

00:25:51.151 --> 00:25:55.556 align:start position:32% line:-2
バンド幅が小さくなり
消費電力も減ります

00:25:56.723 --> 00:26:00.227 align:start position:32% line:-2
Metalを導入した
iOSさえあれば

