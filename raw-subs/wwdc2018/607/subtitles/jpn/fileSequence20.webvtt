WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.398 --> 00:20:01.235 align:start position:27% line:-1
すると冗長コードが削除され

00:20:01.335 --> 00:20:05.472 align:start position:29% line:-2
無駄のない
GPUコマンドが残ります

00:20:06.373 --> 00:20:11.645 align:start position:27% line:-2
符号化と最適化が済んだら
バッファの実行を予約します

00:20:11.879 --> 00:20:16.717 align:start position:29% line:-2
実行するコマンドの範囲を
指定することも可能です

00:20:17.251 --> 00:20:22.856 align:start position:27% line:-2
この例では 間接バッファを
GPUで符号化しています

00:20:25.459 --> 00:20:29.596 align:start position:34% line:-2
一度 符号化すれば
再利用できるので

00:20:29.696 --> 00:20:32.499 align:start position:36% line:-2
オーバーヘッドは
無視できます

00:20:32.766 --> 00:20:37.638 align:start position:29% line:-2
実際の挙動が分かる
サンプルをご用意しました

00:20:39.439 --> 00:20:43.110 align:start position:34% line:-2
複数台のバスが
街に停車しています

00:20:43.944 --> 00:20:50.617 align:start position:23% line:-2
それぞれ50万枚のポリゴンと
2000個のパーツから成ります

00:20:51.785 --> 00:20:54.121 align:start position:36% line:-1
各パーツに対して

00:20:54.221 --> 00:20:58.025 align:start position:30% line:-2
ドローコールや
各種バッファが必要です

00:20:58.792 --> 00:21:02.629 align:start position:32% line:-2
大量のAPIコールが
生じますが

