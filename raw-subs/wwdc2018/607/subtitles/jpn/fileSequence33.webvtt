WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.413 --> 00:33:02.316 align:start position:32% line:-2
レンダーパスに対し
処理能力を発揮します

00:33:02.583 --> 00:33:03.784 align:start position:39% line:-1
この工程で―

00:33:03.884 --> 00:33:06.520 align:start position:32% line:-2
タイルごとのスレッド
グループを実行します

00:33:06.720 --> 00:33:09.189 align:start position:32% line:-2
１スレッドを
タイル単位で使っても

00:33:09.289 --> 00:33:11.191 align:start position:30% line:-2
ピクセル単位で使っても
いいのです

00:33:14.194 --> 00:33:16.296 align:start position:34% line:-2
ドローコールと
スレッドグループを

00:33:16.396 --> 00:33:19.466 align:start position:30% line:-1
インターリーブできます

00:33:19.666 --> 00:33:22.202 align:start position:29% line:-2
タイルシェーダはタイル
メモリにアクセスするので

00:33:22.302 --> 00:33:24.838 align:start position:27% line:-2
イメージブロックの
ピクセルを読み書きできます

00:33:26.406 --> 00:33:29.243 align:start position:32% line:-2
タイル単位の
前方シェーディングを

00:33:29.343 --> 00:33:31.645 align:start position:36% line:-2
最適化する過程を
見てみましょう

00:33:34.915 --> 00:33:38.285 align:start position:27% line:-2
前方シェーディングの技術も
レイヤー化されています

00:33:38.519 --> 00:33:42.489 align:start position:32% line:-2
MSAやマテリアルが
必要な時に使われます

00:33:42.689 --> 00:33:45.893 align:start position:27% line:-2
透過や不透過のジオメトリに
同じような効果があります

00:33:47.494 --> 00:33:50.731 align:start position:29% line:-2
前方シェーディングは
３つのパスで構成されます

00:33:51.231 --> 00:33:54.601 align:start position:30% line:-2
シーンの深度バッファを
出力するレンダーパス

00:33:55.002 --> 00:33:59.606 align:start position:27% line:-2
その深度バッファを使い
タイルごとの深度バウンドや

00:33:59.706 --> 00:34:02.776 align:start position:29% line:-2
ライトリストを
計算するコンピュートパス

