WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.792 --> 00:21:02.629 align:start position:32% line:-2
大量のAPIコールが
生じますが

00:21:02.729 --> 00:21:07.701 align:start position:27% line:-2
間接コマンドバッファなら
すべてGPUで処理できます

00:21:09.736 --> 00:21:15.008 align:start position:32% line:-2
最適な詳細度を選べば
負担を増やさずに

00:21:15.109 --> 00:21:19.479 align:start position:32% line:-2
複数のオブジェクトを
描画できます

00:21:19.613 --> 00:21:22.749 align:start position:30% line:-1
左は通常のカメラの映像

00:21:22.849 --> 00:21:25.252 align:start position:30% line:-1
右はバスの拡大表示です

00:21:25.352 --> 00:21:28.288 align:start position:29% line:-1
詳細度が変化していきます

00:21:29.690 --> 00:21:34.127 align:start position:29% line:-2
この他にも
驚くべき最適化を行います

00:21:35.796 --> 00:21:39.500 align:start position:30% line:-2
ポリゴンを数百枚ごとに
チャンクに分割し

00:21:39.600 --> 00:21:42.503 align:start position:27% line:-1
個別のカーネルで分析します

00:21:43.270 --> 00:21:46.006 align:start position:36% line:-2
各チャンクを
色分けしています

00:21:47.007 --> 00:21:51.111 align:start position:30% line:-2
各スレッドが
カメラに映らない部分や

00:21:51.211 --> 00:21:55.249 align:start position:27% line:-2
オブジェクトで隠れる部分を
判断します

00:21:55.682 --> 00:22:00.254 align:start position:27% line:-2
ポリゴンではなく
チャンクごとに計算するので

