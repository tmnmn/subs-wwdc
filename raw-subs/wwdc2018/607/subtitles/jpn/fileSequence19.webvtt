WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:57.504 --> 00:19:00.908 align:start position:34% line:-2
この例では
シェーダを設けます

00:19:02.142 --> 00:19:05.345 align:start position:29% line:-2
ジオメトリ用のバッファも
用意しました

00:19:06.113 --> 00:19:08.849 align:start position:32% line:-2
最後がドローコールの
符号化です

00:19:08.949 --> 00:19:13.520 align:start position:29% line:-2
シェーディング言語により
符号化は簡単になります

00:19:13.821 --> 00:19:19.293 align:start position:27% line:-2
GPUでの符号化ですが
CPUのようにシンプルです

00:19:20.094 --> 00:19:21.962 align:start position:36% line:-1
もう１つの例です

00:19:22.996 --> 00:19:29.203 align:start position:27% line:-2
間接コマンドバッファを
生成し 実行するコードです

00:19:29.837 --> 00:19:32.839 align:start position:27% line:-1
まず 記述子に値を入れます

00:19:33.140 --> 00:19:35.309 align:start position:32% line:-1
記述子に含まれるのは

00:19:35.676 --> 00:19:40.447 align:start position:30% line:-2
継承されたプロパティや
ドロータイプなどです

00:19:40.547 --> 00:19:43.884 align:start position:27% line:-1
バッファの挙動を記述します

00:19:46.353 --> 00:19:48.088 align:start position:39% line:-1
符号化の際は

00:19:48.188 --> 00:19:52.626 align:start position:30% line:-2
エンコーダを作成して
リソースを割り当てます

00:19:53.927 --> 00:19:58.298 align:start position:32% line:-2
符号化が終わると
最適化が実行できます

00:19:58.398 --> 00:20:01.235 align:start position:27% line:-1
すると冗長コードが削除され

