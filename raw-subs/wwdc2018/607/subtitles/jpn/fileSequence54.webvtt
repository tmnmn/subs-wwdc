WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:53:56.437 --> 00:54:00.073 align:start position:27% line:-2
環境を生成するために必要な
PSOを記録するためです

00:54:00.174 --> 00:54:04.111 align:start position:25% line:-2
毎日のプレイテストで
PSOのデータが集まりました

00:54:04.211 --> 00:54:07.781 align:start position:27% line:-2
自動化パスでは集められない
データでした

00:54:07.881 --> 00:54:11.852 align:start position:29% line:-2
自動化パスでは装飾などの
データも集められました

00:54:12.786 --> 00:54:15.389 align:start position:29% line:-1
武器の使用効果などもです

00:54:16.423 --> 00:54:20.627 align:start position:27% line:-2
自動化パスとプレイテストの
データは集計され

00:54:20.728 --> 00:54:24.765 align:start position:29% line:-2
それを参考にロード時間を
ゲームに組み込みました

00:54:24.865 --> 00:54:28.135 align:start position:29% line:-2
その結果 ランタイム時に
作成したPSOの数字は

00:54:28.235 --> 00:54:31.305 align:start position:32% line:-2
どんなプレイの時でも
平均して１桁以内です

00:54:31.405 --> 00:54:35.175 align:start position:30% line:-2
PSOで作成しても
プレイに障害は出ません

00:54:37.511 --> 00:54:40.013 align:start position:34% line:-2
リソース割り当ての
話をします

00:54:40.280 --> 00:54:44.952 align:start position:27% line:-2
通常 リソースを作成したり
消去したりすると―

00:54:45.185 --> 00:54:47.688 align:start position:34% line:-1
コストがかかります

00:54:47.788 --> 00:54:49.923 align:start position:29% line:-2
そこで考えるのが
フレームごとに作成した―

00:54:50.023 --> 00:54:53.227 align:start position:23% line:-2
MallocとFreeの関数を
減らすことです

00:54:53.327 --> 00:54:56.697 align:start position:27% line:-2
何度もリソースを作成したり
手放すのは面倒です

00:54:56.797 --> 00:54:59.833 align:start position:30% line:-2
コンテンツに
動的にアクセスする時に

00:54:59.933 --> 00:55:03.570 align:start position:29% line:-2
移動できるオブジェクトが
多くある場合もあります

