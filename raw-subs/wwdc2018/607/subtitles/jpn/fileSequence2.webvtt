WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:56.683 --> 00:02:02.723 align:start position:25% line:-2
家庭用ゲームをiOSに移植し
手元で遊べるようにしました

00:02:02.890 --> 00:02:05.225 align:start position:34% line:-1
すばらしい功績です

00:02:05.392 --> 00:02:08.428 align:start position:30% line:-2
しかし
課題は多く残っています

00:02:08.662 --> 00:02:12.666 align:start position:27% line:-2
例えば バッテリー消費との
兼ね合いです

00:02:13.200 --> 00:02:17.304 align:start position:32% line:-2
Metalが
この問題を解決します

00:02:19.373 --> 00:02:22.509 align:start position:23% line:-1
CPUとGPUの並列処理による

00:02:22.609 --> 00:02:27.181 align:start position:29% line:-2
複雑な描画を行う仕組みを
お見せします

00:02:29.416 --> 00:02:32.819 align:start position:30% line:-2
また パフォーマンスを
改善するための

00:02:32.920 --> 00:02:37.324 align:start position:30% line:-2
明示的な制御についても
お話しします

00:02:39.993 --> 00:02:45.098 align:start position:29% line:-2
さらに 新機能である
２種類のバッファを用いた

00:02:45.199 --> 00:02:48.135 align:start position:27% line:-2
GPUパイプラインの構築も
紹介します

00:02:48.268 --> 00:02:50.938 align:start position:27% line:-1
こうしたAPIの改善に加え

00:02:51.305 --> 00:02:55.375 align:start position:30% line:-2
ハードウェアの動作を
理解することも重要です

00:02:55.742 --> 00:02:58.812 align:start position:27% line:-1
そこで 次のセクションでは

00:02:58.912 --> 00:03:04.651 align:start position:27% line:-2
アプリケーションをA11に
最適化する方法を示します

