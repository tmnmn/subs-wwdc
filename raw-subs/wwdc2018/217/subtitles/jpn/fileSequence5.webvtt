WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.566 --> 00:05:02.302 align:start position:36% line:-2
前出のプレゼンも
ご覧ください

00:05:03.704 --> 00:05:06.640 align:start position:30% line:-2
では Watchの
ショートカット使用例を

00:05:06.740 --> 00:05:08.242 align:start position:36% line:-1
見ていきましょう

00:05:09.510 --> 00:05:12.646 align:start position:29% line:-2
ユーザがショートカットを
利用する際

00:05:12.746 --> 00:05:16.550 align:start position:32% line:-2
タップするか
キーワードを言います

00:05:16.783 --> 00:05:18.352 align:start position:29% line:-1
それにWatchが反応し

00:05:18.519 --> 00:05:22.589 align:start position:27% line:-2
対応可能な
アプリケーションを探します

00:05:22.923 --> 00:05:25.425 align:start position:29% line:-1
この例では見つかりました

00:05:25.526 --> 00:05:28.996 align:start position:30% line:-2
それにショートカットを
割り当てます

00:05:29.596 --> 00:05:33.500 align:start position:30% line:-2
バックグラウンド処理が
可能な場合

00:05:34.067 --> 00:05:37.137 align:start position:32% line:-2
Intentが
ショートカットを実行

00:05:37.404 --> 00:05:41.842 align:start position:21% line:-2
NSUserActivityなど
バックグラウンドの対象外は

00:05:41.942 --> 00:05:44.878 align:start position:34% line:-2
アプリケーションが
実行します

00:05:45.746 --> 00:05:49.917 align:start position:34% line:-2
その後 結果が
画面に表示されます

00:05:51.084 --> 00:05:52.653 align:start position:41% line:-1
次の例です

00:05:52.986 --> 00:05:56.490 align:start position:32% line:-2
ユーザが
タップかキーワードで

00:05:56.590 --> 00:05:58.692 align:start position:29% line:-1
ショートカットを使います

00:05:59.059 --> 00:06:00.527 align:start position:30% line:-1
Watchが検証します

