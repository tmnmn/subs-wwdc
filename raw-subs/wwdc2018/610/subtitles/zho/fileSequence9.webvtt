WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:00.706 --> 00:09:02.426 A:middle
这个技术提供了

00:09:02.506 --> 00:09:05.276 A:middle
更高的准确性 但却

00:09:05.276 --> 00:09:06.546 A:middle
以计算时间为代价

00:09:08.056 --> 00:09:10.176 A:middle
同时 它对快速相机运动

00:09:10.226 --> 00:09:12.596 A:middle
十分敏感

00:09:12.666 --> 00:09:14.396 A:middle
这就会导致

00:09:14.396 --> 00:09:15.296 A:middle
图像上的模糊

00:09:16.516 --> 00:09:18.626 A:middle
这一系统中

00:09:18.626 --> 00:09:20.926 A:middle
的版本也被称为

00:09:20.926 --> 00:09:21.666 A:middle
视觉里程计

00:09:22.016 --> 00:09:24.276 A:middle
通过对计算机视觉和

00:09:24.276 --> 00:09:26.576 A:middle
动作这两个系统的融合

00:09:26.576 --> 00:09:30.016 A:middle
ARKit 吸收了这两个系统的优势

00:09:30.646 --> 00:09:32.086 A:middle
ARKit 选用了计算机视觉中

00:09:32.086 --> 00:09:34.116 A:middle
长时间间隔的

00:09:34.116 --> 00:09:34.946 A:middle
高准确性

00:09:35.566 --> 00:09:37.576 A:middle
而从运动数据中 它吸收了

00:09:37.576 --> 00:09:39.586 A:middle
短时间间隔的准确性

00:09:39.586 --> 00:09:41.356 A:middle
和测量过程中的

00:09:41.356 --> 00:09:43.446 A:middle
高更新频率以及

00:09:43.446 --> 00:09:44.276 A:middle
以米为测量单位

00:09:44.856 --> 00:09:47.456 A:middle
通过合并这两个系统

00:09:47.456 --> 00:09:49.446 A:middle
在处理某些框架时

00:09:49.586 --> 00:09:51.036 A:middle
世界跟踪可以跳过

00:09:51.246 --> 00:09:52.886 A:middle
计算机视觉这一步骤

00:09:52.886 --> 00:09:54.736 A:middle
但仍保持高效和

00:09:54.776 --> 00:09:55.966 A:middle
高反馈的跟踪

00:09:56.956 --> 00:09:58.856 A:middle
这样子就可以减少 CPU 占用

00:09:58.856 --> 00:10:00.356 A:middle
你可以将多出的 CPU 空间用于

