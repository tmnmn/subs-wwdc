WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.776 --> 00:42:01.066 A:middle
图像跟踪

00:42:01.156 --> 00:42:03.426 A:middle
它们有着高饱和度

00:42:03.426 --> 00:42:04.956 A:middle
高对比度

00:42:04.956 --> 00:42:06.376 A:middle
合理分配的柱形图

00:42:06.376 --> 00:42:08.416 A:middle
并且没有重复的结构

00:42:08.536 --> 00:42:10.486 A:middle
这里也有一些

00:42:10.486 --> 00:42:12.936 A:middle
和系统适配度不高的图像

00:42:13.436 --> 00:42:14.726 A:middle
右边这个图像就是不合适类型

00:42:15.456 --> 00:42:16.176 A:middle
的一个示范

00:42:17.116 --> 00:42:19.606 A:middle
如果我们仔细观察上面

00:42:19.696 --> 00:42:21.596 A:middle
这两个例子 我们会发现

00:42:21.596 --> 00:42:23.466 A:middle
好的图像都有着

00:42:23.466 --> 00:42:25.036 A:middle
许多关键点

00:42:25.536 --> 00:42:26.306 A:middle
图像中的

00:42:26.306 --> 00:42:27.716 A:middle
柱形图在整个

00:42:27.716 --> 00:42:28.686 A:middle
范围内平均分布

00:42:29.316 --> 00:42:30.126 A:middle
而右边的图像

00:42:30.126 --> 00:42:33.096 A:middle
则只有很少的关键点

00:42:33.096 --> 00:42:34.286 A:middle
它们的柱形图也

00:42:34.286 --> 00:42:36.536 A:middle
倾向白色的部分

00:42:37.236 --> 00:42:40.536 A:middle
在 Xcode 中

00:42:40.536 --> 00:42:42.066 A:middle
你可以直观的了解到一张图像

00:42:42.066 --> 00:42:42.916 A:middle
是否适合用于跟踪

00:42:44.076 --> 00:42:46.066 A:middle
你只需要将图像拖放到

00:42:46.066 --> 00:42:48.396 A:middle
Xcode 中 Xcode 就会自动

00:42:48.576 --> 00:42:50.316 A:middle
对图像进行分析 然后界面会以

00:42:50.316 --> 00:42:52.206 A:middle
警告的方式给你及早的反馈

00:42:52.276 --> 00:42:54.516 A:middle
这个反馈甚至还要早于你 运行你的 App

00:42:55.646 --> 00:42:56.666 A:middle
比如说 如果你点击

00:42:56.666 --> 00:42:59.086 A:middle
底部的这张图像

00:42:59.086 --> 00:43:01.836 A:middle
这张图像可能是杂志的某一页

