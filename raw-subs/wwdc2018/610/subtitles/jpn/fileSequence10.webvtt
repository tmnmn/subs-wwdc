WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:56.864 --> 00:10:01.969 align:start position:27% line:-2
CPUが解放されるので
アプリケーションに使えます

00:10:02.803 --> 00:10:08.041 align:start position:25% line:-2
２つを融合した技術を
視覚慣性オドメトリと呼びます

00:10:08.842 --> 00:10:13.046 align:start position:30% line:-2
視覚的なことを
詳しく見ていきましょう

00:10:14.414 --> 00:10:18.919 align:start position:30% line:-2
コンピュータビジョンの
処理において

00:10:19.019 --> 00:10:23.991 align:start position:27% line:-2
興味深いものを抜粋したのが
青とオレンジの点です

00:10:24.391 --> 00:10:27.761 align:start position:38% line:-2
この２つの点は
同じ環境下で

00:10:27.861 --> 00:10:31.965 align:start position:34% line:-2
画像が異なる場合も
確実に抜粋されます

00:10:32.933 --> 00:10:35.802 align:start position:36% line:-2
フィーチャーと
呼ばれる領域です

00:10:36.537 --> 00:10:41.742 align:start position:30% line:-2
フィーチャーは類似性と
外見を基にして

00:10:41.842 --> 00:10:44.912 align:start position:27% line:-1
さまざまな画像と一致します

00:10:45.145 --> 00:10:49.449 align:start position:32% line:-2
すると 3Dとして
見える状態になります

00:10:50.083 --> 00:10:54.788 align:start position:32% line:-2
２つのフィーチャーが
両側に並んでいます

00:10:54.988 --> 00:10:58.225 align:start position:38% line:-2
この２点間の
視差は重要です

00:10:58.325 --> 00:11:02.429 align:start position:36% line:-2
全く異なる視点を
もたらすことで

