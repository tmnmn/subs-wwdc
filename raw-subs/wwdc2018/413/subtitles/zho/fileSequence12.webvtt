WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.086 --> 00:12:00.396 A:middle
我们在这里可以看到

00:12:00.396 --> 00:12:02.366 A:middle
实况视图在分屏模式中

00:12:02.366 --> 00:12:03.866 A:middle
看起来是什么样子的

00:12:03.866 --> 00:12:05.076 A:middle
这与它之后在 Swift Playgrounds 中的

00:12:05.076 --> 00:12:06.476 A:middle
源码编辑器旁展示的样子

00:12:06.476 --> 00:12:06.986 A:middle
很接近

00:12:07.306 --> 00:12:10.276 A:middle
为了模拟向实况视图发送滤镜

00:12:10.276 --> 00:12:11.906 A:middle
我们还添加了几个按钮

00:12:11.906 --> 00:12:13.096 A:middle
你可以在左侧看到它们

00:12:13.416 --> 00:12:15.626 A:middle
这些按钮在我的测试 App 代码中 已经实现了

00:12:15.816 --> 00:12:17.466 A:middle
如果 Grace 轻点其中的一个滤镜

00:12:17.466 --> 00:12:19.566 A:middle
我们就能看到

00:12:19.566 --> 00:12:21.446 A:middle
那个滤镜会应用到实况摄像头输出上

00:12:22.076 --> 00:12:23.216 A:middle
这看起来很棒

00:12:23.576 --> 00:12:26.966 A:middle
我还想试试别的滤镜 Grace 

00:12:26.966 --> 00:12:28.926 A:middle
我真的喜欢 CIPointillize 滤镜

00:12:28.926 --> 00:12:32.576 A:middle
如果它轻点一下这个

00:12:32.576 --> 00:12:34.866 A:middle
这看起来差不多了

00:12:34.866 --> 00:12:37.836 A:middle
但是你可能已经

00:12:37.836 --> 00:12:39.536 A:middle
注意到了之前的粉色滤镜

00:12:39.536 --> 00:12:41.946 A:middle
仍然存在于一些边缘上

00:12:41.946 --> 00:12:43.116 A:middle
并且 Pointillize 滤镜比我们想要的

00:12:43.116 --> 00:12:44.146 A:middle
要小一点

00:12:44.446 --> 00:12:45.536 A:middle
所以我回到 Xcode

00:12:45.536 --> 00:12:47.256 A:middle
因为我认为我们在

00:12:47.256 --> 00:12:49.236 A:middle
我写的一个叫做 Render 的函数中的

00:12:49.236 --> 00:12:51.716 A:middle
滤镜渲染器中有一个 Bug

00:12:52.026 --> 00:12:53.136 A:middle
我使用 Command-Shift-O 来

00:12:53.136 --> 00:12:55.616 A:middle
用 Open Quickly 功能前往那个函数

00:12:56.766 --> 00:12:58.356 A:middle
我还要在这个方法

00:12:58.356 --> 00:13:01.136 A:middle
返回之前设置一个断点

