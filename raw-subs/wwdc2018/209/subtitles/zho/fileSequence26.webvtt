WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.896 --> 00:26:00.536 A:middle
我们就会使用 drawRect 版本

00:26:00.746 --> 00:26:01.996 A:middle
对于 printing 而言

00:26:01.996 --> 00:26:02.556 A:middle
我们也应用了这一点

00:26:02.616 --> 00:26:04.296 A:middle
所以 执行这两点是完全行得通的

00:26:05.056 --> 00:26:06.386 A:middle
如果你的一个图像

00:26:06.386 --> 00:26:07.726 A:middle
是使用 CG drawing API 无法实现的

00:26:07.806 --> 00:26:09.346 A:middle
AppKit drawing API 也无法实现

00:26:09.346 --> 00:26:11.336 A:middle
你需要做的就是

00:26:11.336 --> 00:26:12.406 A:middle
除了要使用更新图层方法外

00:26:12.406 --> 00:26:13.576 A:middle
还要调用代理 wantsUpdateLayer 方法

00:26:13.576 --> 00:26:16.906 A:middle
如果你返回 ture 的话

00:26:16.906 --> 00:26:18.186 A:middle
我们就能够知道你需要一个

00:26:18.186 --> 00:26:20.216 A:middle
显式图层来实现你想要的展示

00:26:22.276 --> 00:26:24.626 A:middle
另一个能够将 AppKit

00:26:24.626 --> 00:26:26.476 A:middle
和其它核心动画特性发挥到极致

00:26:26.476 --> 00:26:27.746 A:middle
的方法是

00:26:27.976 --> 00:26:29.236 A:middle
使用 NSViews 中特别简单的

00:26:29.236 --> 00:26:30.206 A:middle
词汇创建

00:26:30.206 --> 00:26:33.096 A:middle
你自己的 UI

00:26:33.456 --> 00:26:35.166 A:middle
NSImageView NSBox 以及

00:26:35.166 --> 00:26:36.926 A:middle
NSTextField 都是特别好的

00:26:36.926 --> 00:26:38.336 A:middle
创建模块

00:26:38.336 --> 00:26:39.446 A:middle
可以用来创建复杂的 UI

00:26:39.666 --> 00:26:42.286 A:middle
不论你使用何种技术来展示

00:26:42.286 --> 00:26:43.966 A:middle
它们都能适配正确的方式

00:26:45.606 --> 00:26:46.546 A:middle
另外 因为我们对 layer backing

00:26:46.546 --> 00:26:48.376 A:middle
做了一些改动

00:26:48.376 --> 00:26:49.566 A:middle
有一些图案是

00:26:49.566 --> 00:26:51.396 A:middle
不再和 macOS 10.14 适配的

00:26:51.996 --> 00:26:53.616 A:middle
例如你使用 NSView lockFocus

00:26:53.616 --> 00:26:55.106 A:middle
和 unlockFocus

00:26:55.106 --> 00:26:56.566 A:middle
或者试图直接使用窗口的图像内容

00:26:56.566 --> 00:27:00.116 A:middle
实际上有更好的实现方式

