WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.116 --> 00:20:01.976 A:middle
添加了更多的强化颜色供用户来进行选择 

00:20:02.096 --> 00:20:03.336 A:middle
这些强化色彩

00:20:03.336 --> 00:20:04.056 A:middle
看起来确实很惊艳

00:20:04.876 --> 00:20:06.256 A:middle
如果你要定制自己的 UI 元素

00:20:06.256 --> 00:20:07.946 A:middle
好吧 我先暂停下 大家先鼓掌

00:20:08.516 --> 00:20:12.806 A:middle
［ 掌声 ］

00:20:13.306 --> 00:20:14.256 A:middle
感谢强化颜色

00:20:14.906 --> 00:20:16.146 A:middle
所以 如果你要创建自己的

00:20:16.146 --> 00:20:17.156 A:middle
UI 元素的话

00:20:17.156 --> 00:20:18.286 A:middle
你需要自己创建一个主题

00:20:18.286 --> 00:20:20.196 A:middle
再把这些颜色融合进去

00:20:20.516 --> 00:20:21.856 A:middle
如果你之前这样操作过的话

00:20:21.856 --> 00:20:23.366 A:middle
你可能已经使用过

00:20:23.366 --> 00:20:25.266 A:middle
NSColor.currentControlTint 方法了

00:20:25.266 --> 00:20:27.546 A:middle
它会返回一个枚举结果

00:20:27.546 --> 00:20:29.476 A:middle
说明系统的模式是 aqua 还是 graphite

00:20:29.886 --> 00:20:31.666 A:middle
现在我们相比过去加入了更多的颜色

00:20:31.896 --> 00:20:33.616 A:middle
那个枚举结果自然就不够用了

00:20:34.046 --> 00:20:36.386 A:middle
因此在 macOS 10.14 我们请大家

00:20:36.386 --> 00:20:37.776 A:middle
切换到 NSColor 中的

00:20:37.776 --> 00:20:40.316 A:middle
controlAccentColor 这个方法

00:20:41.416 --> 00:20:44.066 A:middle
NSColor 还能帮助你处理

00:20:44.066 --> 00:20:45.196 A:middle
强化颜色

00:20:45.456 --> 00:20:46.836 A:middle
NSColor 还能够帮你做很多其他的操作

00:20:47.386 --> 00:20:48.686 A:middle
如果你要创建一个 UI 元素

00:20:48.906 --> 00:20:50.116 A:middle
很常见的一个特征就是

00:20:50.116 --> 00:20:51.556 A:middle
你需要调整

00:20:51.646 --> 00:20:52.946 A:middle
UI 元素的颜色

00:20:53.016 --> 00:20:54.956 A:middle
来反映用户的互动

00:20:55.416 --> 00:20:56.956 A:middle
在这一点上 NSColor 引进了一种新的方式

00:20:56.956 --> 00:20:58.716 A:middle
就是 withSystemEffect

00:20:59.336 --> 00:21:00.396 A:middle
我们也预先定义了一些

