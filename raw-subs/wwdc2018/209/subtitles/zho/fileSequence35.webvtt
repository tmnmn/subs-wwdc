WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:59.876 --> 00:35:01.206 A:middle
的另一改变是

00:35:01.206 --> 00:35:03.486 A:middle
修改文本的新方法

00:35:04.176 --> 00:35:05.686 A:middle
PerformValidatedReplacement

00:35:06.276 --> 00:35:07.916 A:middle
这个方法背后的想法是

00:35:07.966 --> 00:35:09.186 A:middle
它提供给你一种非常简单的方式

00:35:09.186 --> 00:35:10.866 A:middle
去修改 textView 中的文本

00:35:10.866 --> 00:35:12.936 A:middle
而且还给你一种行为 

00:35:12.936 --> 00:35:14.516 A:middle
就像是用户自己 

00:35:14.516 --> 00:35:15.876 A:middle
做出了这个修改

00:35:16.916 --> 00:35:17.936 A:middle
它控制了所有

00:35:17.936 --> 00:35:20.286 A:middle
适合的你期待的方法

00:35:20.696 --> 00:35:21.936 A:middle
但是 真正有趣的部分是

00:35:21.936 --> 00:35:23.716 A:middle
任何一个属性 当它没有被特定指派给

00:35:23.716 --> 00:35:27.196 A:middle
输入的字符串时 textView 的

00:35:27.196 --> 00:35:28.506 A:middle
typingAttributes 会自动将其

00:35:28.616 --> 00:35:29.296 A:middle
匹配输入

00:35:30.466 --> 00:35:31.976 A:middle
我来给你们举个例子吧

00:35:32.506 --> 00:35:33.856 A:middle
这个窗口有一些格式化文本 

00:35:33.856 --> 00:35:36.196 A:middle
代码中的一个小片段调用 

00:35:36.266 --> 00:35:38.346 A:middle
performValidatedReplacement

00:35:38.346 --> 00:35:40.196 A:middle
去在中间插入 "Developers" 这个单词

00:35:41.266 --> 00:35:42.996 A:middle
如果我们运行这个 这就是我们

00:35:42.996 --> 00:35:43.256 A:middle
获得的内容

00:35:43.256 --> 00:35:45.226 A:middle
单词出现了 而且与周围文本的

00:35:45.226 --> 00:35:46.346 A:middle
格式一致 

00:35:46.406 --> 00:35:48.126 A:middle
我们不必去特别指定

00:35:48.126 --> 00:35:49.436 A:middle
任何一个属性

00:35:50.246 --> 00:35:51.896 A:middle
但是 这里也有一个细微的地方

00:35:51.896 --> 00:35:52.576 A:middle
需要注意

00:35:52.646 --> 00:35:55.236 A:middle
因为后退

00:35:55.236 --> 00:35:56.376 A:middle
属性来自于 

00:35:56.446 --> 00:35:57.316 A:middle
typingAttributes 

00:35:57.426 --> 00:35:59.226 A:middle
因此 如果你开始使用格式化文本来进行

00:35:59.336 --> 00:36:00.436 A:middle
此操作

