WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:56.777 --> 00:23:01.748 align:start position:16% line:-2
Core Animationのレイヤを
使います

00:23:02.416 --> 00:23:06.320 align:start position:30% line:-2
iOSユーザなら
親しみのある機能ですが

00:23:06.420 --> 00:23:08.922 align:start position:30% line:-1
詳しく見ていきましょう

00:23:09.022 --> 00:23:12.392 align:start position:34% line:-2
UIKitでの
ビューの関連図です

00:23:12.493 --> 00:23:15.062 align:start position:32% line:-1
とてもシンプルですね

00:23:15.162 --> 00:23:17.297 align:start position:30% line:-1
各ビューにレイヤが１つ

00:23:17.397 --> 00:23:21.969 align:start position:32% line:-2
ビュー間の親子関係も
表されています

00:23:22.936 --> 00:23:25.239 align:start position:23% line:-1
AppKitでのレイヤ関連図は

00:23:25.339 --> 00:23:29.476 align:start position:30% line:-2
ビュー階層のプロセスで
決められます

00:23:29.843 --> 00:23:35.616 align:start position:27% line:-2
複数のビューに対し
１つのレイヤを選択できます

00:23:35.716 --> 00:23:41.054 align:start position:29% line:-2
するとシステムやGPUの
メモリ消費を減らし

00:23:41.155 --> 00:23:45.425 align:start position:34% line:-2
ウインドウサーバの
負荷も軽減できます

00:23:45.559 --> 00:23:47.461 align:start position:32% line:-1
強調しておきたいのは

00:23:47.561 --> 00:23:51.165 align:start position:32% line:-2
ビュー階層の設定に
基づくということです

00:23:51.265 --> 00:23:53.400 align:start position:30% line:-1
だから変化できるのです

00:23:53.500 --> 00:24:00.040 align:start position:29% line:-2
iOSのような親子関係に
縛られることもありません

