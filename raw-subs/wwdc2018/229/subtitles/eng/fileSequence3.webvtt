WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.736 --> 00:03:00.606 A:middle
Indeed, if we look at the

00:03:00.606 --> 00:03:02.326 A:middle
definition of collection, it's

00:03:02.326 --> 00:03:03.256 A:middle
declared as a sequence of

00:03:03.256 --> 00:03:03.716 A:middle
elements.

00:03:04.836 --> 00:03:05.916 A:middle
It also has an additional

00:03:05.916 --> 00:03:07.736 A:middle
associated type called index,

00:03:07.836 --> 00:03:08.936 A:middle
which must be comparable.

00:03:10.216 --> 00:03:11.656 A:middle
It offers a subscript to

00:03:11.656 --> 00:03:13.316 A:middle
retrieve elements from, or using

00:03:13.316 --> 00:03:15.196 A:middle
that index, and we define a

00:03:15.196 --> 00:03:16.306 A:middle
start and an end index

00:03:16.456 --> 00:03:18.076 A:middle
identifying the bounds of our

00:03:18.076 --> 00:03:18.576 A:middle
collection.

00:03:18.926 --> 00:03:21.076 A:middle
And finally, we have a function

00:03:21.136 --> 00:03:22.766 A:middle
called index after, which lets

00:03:22.766 --> 00:03:24.366 A:middle
us get from one index to

00:03:24.366 --> 00:03:24.656 A:middle
another.

00:03:24.706 --> 00:03:27.096 A:middle
And this last function is so

00:03:27.096 --> 00:03:28.656 A:middle
important because it allows the

00:03:28.656 --> 00:03:30.756 A:middle
standard library to define many

00:03:30.756 --> 00:03:32.136 A:middle
useful and powerful default

00:03:32.136 --> 00:03:33.596 A:middle
behaviors with the incredible

00:03:33.596 --> 00:03:35.006 A:middle
power of protocol extensions.

00:03:35.476 --> 00:03:38.266 A:middle
Let's look at some of these.

00:03:38.426 --> 00:03:39.956 A:middle
When you conform to collection,

00:03:39.956 --> 00:03:41.566 A:middle
you gain access to an incredible

00:03:41.566 --> 00:03:42.916 A:middle
range of functionality with

00:03:42.916 --> 00:03:44.966 A:middle
properties that let you get the

00:03:44.966 --> 00:03:46.296 A:middle
first and the last element or

00:03:46.426 --> 00:03:48.636 A:middle
identify the count or check to

00:03:48.636 --> 00:03:49.706 A:middle
see if a collection is empty.

00:03:50.466 --> 00:03:51.626 A:middle
You also gain API that lets you

00:03:51.626 --> 00:03:52.676 A:middle
iterate through a Collection

00:03:52.776 --> 00:03:54.216 A:middle
using 4N syntax.

00:03:55.216 --> 00:03:56.886 A:middle
And super useful functions like

00:03:56.886 --> 00:03:58.226 A:middle
map, filter, and reduce.

00:03:59.256 --> 00:03:59.976 A:middle
Now let's go ahead and make

00:03:59.976 --> 00:04:01.356 A:middle
Collection even more powerful by

