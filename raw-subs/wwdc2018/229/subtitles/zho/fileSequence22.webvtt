WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.652 --> 00:22:01.755 align:middle line:-2
然后我们通过删除它的第一个元素
来改变集合

00:22:02.656 --> 00:22:05.526 align:middle line:-1
我们继续并打印与该索引关联的元素

00:22:06.360 --> 00:22:07.995 align:middle line:-2
当我们这样做时
不幸的是

00:22:08.996 --> 00:22:10.430 align:middle line:-1
这会产生一个严重错误

00:22:12.032 --> 00:22:13.166 align:middle line:-1
索引不再有效

00:22:13.233 --> 00:22:16.904 align:middle line:-2
实际上当我们改变集合时
索引立即变得无效了

00:22:18.939 --> 00:22:20.040 align:middle line:-1
更安全的方法

00:22:20.340 --> 00:22:24.411 align:middle line:-2
是首先改变我们的集合
然后计算索引

00:22:24.511 --> 00:22:26.446 align:middle line:-1
（避免索引失效）

00:22:26.513 --> 00:22:28.949 align:middle line:-2
值得指出的是
集合改变总会使索引无效

00:22:29.016 --> 00:22:30.651 align:middle line:-1
这不仅适用于数组

00:22:31.118 --> 00:22:34.321 align:middle line:-2
我们来看看这个问题
如何在字典中体现出来

00:22:34.988 --> 00:22:38.225 align:middle line:-2
我们假设有一个字典
其存储了一些熊最喜欢的东西

00:22:39.092 --> 00:22:41.195 align:middle line:-1
我们获取熊最喜爱的食物的索引

00:22:41.361 --> 00:22:44.031 align:middle line:-2
并打印出来
它的确是“salmon”

00:22:45.199 --> 00:22:47.835 align:middle line:0
接下来我们将添加更多
这只熊喜欢的东西

00:22:48.602 --> 00:22:50.938 align:middle line:0
然后我们会确保熊最喜欢的食物
仍然是“salmon”

00:22:51.104 --> 00:22:52.639 align:middle line:0
我们会看到…等一下

00:22:52.706 --> 00:22:55.209 align:middle line:0
熊最喜欢的食物不是“hibernation”
而是"salmon"

00:22:57.077 --> 00:22:58.078 align:middle line:0
就像数组一样

00:22:58.145 --> 00:23:00.948 align:middle line:0
在我们改变字典的那一刻
我们使索引无效了

