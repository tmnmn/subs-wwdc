WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.846 --> 00:33:01.215 align:middle line:-2
假设我正在写一本
关于儿童故事的手稿

00:33:01.515 --> 00:33:02.749 align:middle line:-1
但它非常长

00:33:02.816 --> 00:33:04.351 align:middle line:-1
所以我只会在这里展示一部分

00:33:04.418 --> 00:33:05.953 align:middle line:-1
但为了让它受欢迎

00:33:07.154 --> 00:33:10.324 align:middle line:-1
我想让每个单词“brown”

00:33:10.390 --> 00:33:11.725 align:middle line:-1
都真的显示为棕色

00:33:12.092 --> 00:33:13.126 align:middle line:-1
为了节省空间

00:33:13.193 --> 00:33:15.495 align:middle line:-1
我将只突出显示第一个单词

00:33:16.330 --> 00:33:18.732 align:middle line:-2
为此 我将使用
NSMutableAttributedString

00:33:18.799 --> 00:33:20.067 align:middle line:-1
我把我的故事传进去

00:33:20.968 --> 00:33:24.738 align:middle line:-2
然后使用属性字符串的
string属性

00:33:25.005 --> 00:33:27.274 align:middle line:-2
我要得到Swift字符串
“Brown”的范围

00:33:27.541 --> 00:33:30.077 align:middle line:-2
这将产生一个
字符串本地索引类型范围

00:33:31.311 --> 00:33:32.980 align:middle line:-2
因为可变字符串
能与NSRange协同工作

00:33:33.046 --> 00:33:34.515 align:middle line:-1
所以我会使用我们去年

00:33:34.581 --> 00:33:35.816 align:middle line:-1
推出的便捷初始化器

00:33:36.216 --> 00:33:38.151 align:middle line:-1
来将其转换为NSRange

00:33:38.218 --> 00:33:42.489 align:middle line:-2
在这里我再次调用
属性字符串的string属性

00:33:43.090 --> 00:33:44.091 align:middle line:-1
来进行转换

00:33:44.391 --> 00:33:47.060 align:middle line:-2
然后我们将为“brown”
这个词的第一个实例着色

00:33:47.194 --> 00:33:49.696 align:middle line:-2
当我运行这段代码时
我发现它有点慢

00:33:50.898 --> 00:33:51.899 align:middle line:-1
所以我对其进行分析

00:33:52.266 --> 00:33:54.468 align:middle line:-1
我看到 令我惊讶的是

00:33:54.535 --> 00:33:56.336 align:middle line:-2
我以为大部分时间都会花在
为单词“brown”着色上

00:33:56.403 --> 00:33:57.938 align:middle line:-1
但它实际上是在计算索引

00:33:58.005 --> 00:33:59.006 align:middle line:-1
为什么会这样

