WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.859 --> 00:11:00.394 align:middle line:-1
即一个叫做切片的东西

00:11:00.627 --> 00:11:02.229 align:middle line:-2
但在展示如何使用切片
做到这点之前

00:11:02.296 --> 00:11:05.365 align:middle line:-2
我想谈谈什么是切片
以及它们如何工作

00:11:06.934 --> 00:11:08.202 align:middle line:-1
（构造一个切片）

00:11:08.268 --> 00:11:11.872 align:middle line:-1
切片是仅描述集合的一部分的类型

00:11:13.207 --> 00:11:16.376 align:middle line:-1
每个切片都有自己的起始和结束索引

00:11:17.077 --> 00:11:20.881 align:middle line:-1
并且切片与其原始集合分开存在

00:11:21.481 --> 00:11:24.484 align:middle line:-2
切片如此高效的原因是
它们不占用额外的存储空间

00:11:24.551 --> 00:11:26.854 align:middle line:-1
它们只是引用原始集合

00:11:27.788 --> 00:11:31.592 align:middle line:0
当使用切片下标时
它将读出原始缓冲区中的数据

00:11:32.726 --> 00:11:33.994 align:middle line:-1
它们可以这样做是因为

00:11:34.728 --> 00:11:37.264 align:middle line:-1
它们与其原始集合共享同样的索引

00:11:37.497 --> 00:11:39.833 align:middle line:-2
我们来看看这是如何工作的
我们可以证明这一点

00:11:40.133 --> 00:11:41.335 align:middle line:-1
我们将从一个数组开始

00:11:41.869 --> 00:11:43.704 align:middle line:0
我们丢弃该数组的第一个元素

00:11:43.770 --> 00:11:46.273 align:middle line:0
以生成一个少了一个元素的切片

00:11:47.107 --> 00:11:49.309 align:middle line:0
由于我们想要证明索引

00:11:49.376 --> 00:11:51.411 align:middle line:0
我们需要得到数组的第二个索引

00:11:51.745 --> 00:11:54.281 align:middle line:0
即得到起始索引之后的一个索引

00:11:54.515 --> 00:11:55.415 align:middle line:0
然后比较它们

00:11:55.482 --> 00:11:57.184 align:middle line:0
它们的确是一样的

00:11:58.485 --> 00:11:59.620 align:middle line:-1
这个dropFirst函数

00:11:59.686 --> 00:12:02.890 align:middle line:-2
看起来就是我们得到集合中
第二个元素的简便方法

