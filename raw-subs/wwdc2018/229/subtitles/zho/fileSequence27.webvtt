WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.753 --> 00:27:03.490 align:middle line:-2
第一个是如果你可以避免它
就尽量不要使用可变状态

00:27:04.391 --> 00:27:06.193 align:middle line:-1
到目前为止我所描述的所有困难

00:27:06.260 --> 00:27:08.562 align:middle line:-1
都是因为我们一直在使用可变状态

00:27:08.862 --> 00:27:10.697 align:middle line:-1
你可以通过避免使用可变集合

00:27:10.764 --> 00:27:13.133 align:middle line:-1
来从一开始就杜绝各种可能的复杂性

00:27:13.834 --> 00:27:16.803 align:middle line:-2
很多时候 你可以通过使用切片
或惰性包装器

00:27:17.004 --> 00:27:20.207 align:middle line:-1
来模拟你想要执行的改变

00:27:20.641 --> 00:27:23.744 align:middle line:-1
而且理解不可变数据几乎总是更容易

00:27:24.178 --> 00:27:26.380 align:middle line:-1
多亏Swift内置的可变性

00:27:26.513 --> 00:27:27.648 align:middle line:-1
若在你没有改变状态时

00:27:27.714 --> 00:27:30.551 align:middle line:-2
却试图留下可变的状态
则编译器会帮助你进行处理

00:27:30.617 --> 00:27:32.619 align:middle line:-1
（建议：首选不可变集合）

00:27:32.686 --> 00:27:34.288 align:middle line:-1
现在我还有一条建议

00:27:34.788 --> 00:27:37.858 align:middle line:-2
关于如何在必要时
最好地使用可变状态

00:27:38.825 --> 00:27:40.494 align:middle line:-1
那就是当你正在构造新的集合时

00:27:40.561 --> 00:27:41.495 align:middle line:-1
你可以改善性能

00:27:41.562 --> 00:27:43.964 align:middle line:-2
如果你碰巧知道
你所需要元素的

00:27:44.531 --> 00:27:45.699 align:middle line:-1
确切数量

00:27:45.766 --> 00:27:47.634 align:middle line:-1
或者非常好的近似值的话

00:27:47.734 --> 00:27:50.804 align:middle line:-2
大多数集合API都能够
提供这种提示

00:27:51.171 --> 00:27:52.973 align:middle line:-2
当你这样做时
会得到所需的确切大小

00:27:53.040 --> 00:27:54.041 align:middle line:-1
而且没有额外开销

00:27:54.441 --> 00:27:57.344 align:middle line:-2
如果你不这样做
我们的集合就是通用工具

00:27:57.978 --> 00:27:59.713 align:middle line:-1
它们可以在各种情况下工作

00:27:59.780 --> 00:28:01.448 align:middle line:-1
随着你逐步添加元素

