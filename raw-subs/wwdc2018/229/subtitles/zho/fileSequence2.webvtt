WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:57.584 --> 00:02:01.021 align:middle line:-2
集合非常普遍并且共享如此多的
常见特性和算法

00:02:01.088 --> 00:02:03.490 align:middle line:-2
因此在Swift中
它们都遵守一个通用协议

00:02:05.058 --> 00:02:07.027 align:middle line:-2
毫不奇怪
它叫Collection

00:02:08.161 --> 00:02:09.795 align:middle line:-1
在Swift中 集合就是序列

00:02:09.863 --> 00:02:12.199 align:middle line:-1
其中的元素可以以非破坏性的方式

00:02:12.366 --> 00:02:13.367 align:middle line:-1
多次遍历

00:02:13.534 --> 00:02:15.802 align:middle line:-1
并且其元素可以通过下标访问

00:02:16.103 --> 00:02:17.771 align:middle line:-1
（COLLECTION协议）

00:02:17.838 --> 00:02:19.139 align:middle line:-1
我们看看这是如何做到的

00:02:19.206 --> 00:02:21.808 align:middle line:-1
考虑一下集合的抽象表示

00:02:21.875 --> 00:02:22.876 align:middle line:-1
（集合存储元素）

00:02:22.943 --> 00:02:25.445 align:middle line:-2
这可能是一个在连续内存中
定义的数组

00:02:25.646 --> 00:02:27.681 align:middle line:-1
哈希表 红黑树

00:02:28.815 --> 00:02:30.918 align:middle line:-2
链接、列表或你可以想象的
任何其它东西

00:02:31.451 --> 00:02:34.154 align:middle line:-1
重要的是它支持初始索引的概念

00:02:34.221 --> 00:02:35.489 align:middle line:-1
其被称为起始索引

00:02:35.556 --> 00:02:36.723 align:middle line:-1
（起始索引）

00:02:36.790 --> 00:02:39.726 align:middle line:-1
它可以用来访问集合的初始元素

00:02:40.561 --> 00:02:41.562 align:middle line:-1
它还有一个结束索引

00:02:41.628 --> 00:02:43.230 align:middle line:-1
其标识集合的结束

00:02:43.297 --> 00:02:44.131 align:middle line:-1
（结束索引）

00:02:44.198 --> 00:02:45.999 align:middle line:-1
集合支持从其起始索引

00:02:46.133 --> 00:02:48.302 align:middle line:-1
到结束索引之间遍历元素的能力

00:02:49.436 --> 00:02:51.038 align:middle line:-1
它们可以多次进行这种遍历

00:02:51.438 --> 00:02:54.474 align:middle line:-1
它们也支持使用下标来获取

00:02:54.541 --> 00:02:56.043 align:middle line:-1
集合中的元素

00:02:56.109 --> 00:02:57.377 align:middle line:-1
（SUBSCRIPT[INDEX]）

00:02:57.444 --> 00:02:58.812 align:middle line:-1
我们看看它在代码中的样子

00:02:59.680 --> 00:03:01.715 align:middle line:-1
的确 如果我们看一下集合的定义

