WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:57.551 --> 00:02:01.488 align:start position:23% line:-2
コレクションは
Swiftの共通のプロトコルに

00:02:01.588 --> 00:02:03.857 align:start position:32% line:-1
すべて適合しています

00:02:04.992 --> 00:02:07.294 align:start position:32% line:-1
その名もコレクション

00:02:08.127 --> 00:02:12.266 align:start position:29% line:-2
要素が複数回 走査できる
シーケンスで

00:02:12.366 --> 00:02:16.036 align:start position:30% line:-2
サブスクリプトによって
アクセスできます

00:02:17.771 --> 00:02:21.942 align:start position:27% line:-2
どのように使うか
イメージで見ていきましょう

00:02:22.943 --> 00:02:27.948 align:start position:27% line:-2
これを ハッシュテーブルや
赤黒木などで定義された―

00:02:28.782 --> 00:02:31.118 align:start position:36% line:-1
配列としましょう

00:02:31.418 --> 00:02:35.856 align:start position:29% line:-2
これは開始インデックスの
サポートをします

00:02:36.757 --> 00:02:40.027 align:start position:27% line:-1
最初の要素にアクセスします

00:02:40.494 --> 00:02:43.630 align:start position:30% line:-2
終わりを示す
終了インデックスがあり

00:02:44.131 --> 00:02:48.602 align:start position:29% line:-2
最初から最後までの
反復機能をサポートします

00:02:49.403 --> 00:02:51.338 align:start position:34% line:-1
何度も使えるのです

00:02:51.438 --> 00:02:56.276 align:start position:29% line:-2
コレクションの要素を
検索するのにも役立ちます

00:02:57.411 --> 00:02:58.812 align:start position:30% line:-1
コードを見てみましょう

00:02:59.680 --> 00:03:04.117 align:start position:30% line:-2
要素のシーケンスとして
宣言されています

