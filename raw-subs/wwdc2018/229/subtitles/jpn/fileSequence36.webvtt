WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:55.422 --> 00:36:00.728 align:start position:30% line:-2
しかし わずかですが
まだブリッジしています

00:36:01.361 --> 00:36:04.264 align:start position:23% line:-1
この茶色はSwiftの値型です

00:36:04.965 --> 00:36:09.670 align:start position:29% line:-2
Objective-Cの
APIレンジを呼ぶたびに

00:36:09.770 --> 00:36:14.074 align:start position:20% line:-2
その文字列を
NSStringに再変換しています

00:36:14.875 --> 00:36:17.077 align:start position:29% line:-1
１度でいいので低負荷です

00:36:17.177 --> 00:36:21.348 align:start position:29% line:-2
しかしループでは
小規模でも何度も行います

00:36:21.849 --> 00:36:25.352 align:start position:32% line:-2
小さくてもブリッジは
避けて―

00:36:25.452 --> 00:36:28.489 align:start position:34% line:-2
最適化を行う前に
必ず計算しましょう

00:36:29.690 --> 00:36:34.528 align:start position:30% line:-2
ブリッジ変換の詳細を
理解した上での助言です

00:36:35.596 --> 00:36:39.833 align:start position:32% line:-2
参照セマンティクスに
明示的に使いましょう

00:36:40.500 --> 00:36:43.837 align:start position:34% line:-2
自分で書かなくても
多数そろっています

00:36:44.238 --> 00:36:46.874 align:start position:23% line:-1
また 参照型の時に使いましょう

00:36:46.974 --> 00:36:49.943 align:start position:14% line:-2
NSプロキシや
Core Data管理のオブジェクトです

00:36:51.078 --> 00:36:57.084 align:start position:21% line:-2
Objective-Cの
ラウンドトリップ時にもお勧めです

00:36:57.317 --> 00:37:02.289 align:start position:29% line:-2
ブリッジが原因で
遅くなっている場合はです

