WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.160 --> 00:26:03.430 align:middle line:-1
然后继续 请求允许向锁屏发送通知

00:26:04.298 --> 00:26:05.766 align:middle line:-1
如果你发送的是

00:26:05.832 --> 00:26:08.168 align:middle line:-1
不需要立即响应的被动内容的话

00:26:08.435 --> 00:26:09.436 align:middle line:-1
那么就发送…

00:26:09.636 --> 00:26:12.172 align:middle line:-2
然后直接发送到
Notification Center

00:26:12.239 --> 00:26:13.440 align:middle line:-1
这可能是正确的方

00:26:14.141 --> 00:26:16.176 align:middle line:-1
但不管怎样这是由你决定的

00:26:16.243 --> 00:26:18.645 align:middle line:-1
它应该基于你的app的需求

00:26:21.081 --> 00:26:23.684 align:middle line:-1
接下来我们需要确保我们的通知内容

00:26:23.750 --> 00:26:25.285 align:middle line:-1
真的提供了有价值的东西

00:26:25.352 --> 00:26:28.121 align:middle line:-1
并像发送高质量的通知一样发送

00:26:29.122 --> 00:26:32.726 align:middle line:-2
所以它们需要是有意义的内容
我们应该发送有具体内容的信息

00:26:33.594 --> 00:26:36.763 align:middle line:-1
通知不仅仅是进入app的一个原因

00:26:38.065 --> 00:26:39.833 align:middle line:-1
我们还必须有一个设计良好的设置

00:26:39.900 --> 00:26:40.868 align:middle line:-1
和配置UI

00:26:40.934 --> 00:26:43.470 align:middle line:-1
这样人们就可以很容易地在app中

00:26:43.637 --> 00:26:45.005 align:middle line:-1
定制他们的通知体验

00:26:46.373 --> 00:26:47.808 align:middle line:-1
通知分组

00:26:47.875 --> 00:26:49.910 align:middle line:-1
这是一个组织你的内容的好方法

00:26:49.977 --> 00:26:53.247 align:middle line:-2
因此默认情况下
来自app的所有通知都将分组

00:26:53.947 --> 00:26:56.583 align:middle line:-1
如果需要更细致的分组

00:26:56.650 --> 00:26:58.819 align:middle line:-1
你可以使用线程标识符来创建线程

00:26:59.453 --> 00:27:00.320 align:middle line:-1
但是请记住…

