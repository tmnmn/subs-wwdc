WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.433 --> 00:20:02.069 align:middle line:-1
在每一个组上敲击 然后打开它

00:20:02.135 --> 00:20:05.105 align:middle line:-1
你可以单独地与每个通知进行交互

00:20:05.506 --> 00:20:08.742 align:middle line:-2
默认情况下
通知将由app分组在一起

00:20:09.142 --> 00:20:10.444 align:middle line:-1
大多数情况下

00:20:10.811 --> 00:20:11.845 align:middle line:-1
这是有意义的

00:20:12.179 --> 00:20:13.080 align:middle line:-1
但是…

00:20:13.146 --> 00:20:15.115 align:middle line:-1
你知道在某些情况下用更详细的方式

00:20:15.182 --> 00:20:17.317 align:middle line:-1
把它们分类会很有帮助的

00:20:17.885 --> 00:20:19.786 align:middle line:-1
Messages就是一个很好的例

00:20:20.387 --> 00:20:22.022 align:middle line:-1
我不认为将所有的对话线程

00:20:22.089 --> 00:20:24.992 align:middle line:-1
和群组聊天中丢失的信息

00:20:25.058 --> 00:20:28.295 align:middle line:-1
集中到一个组中是最有用的

00:20:29.129 --> 00:20:30.931 align:middle line:-1
因此为了更清晰地组织每件事

00:20:30.998 --> 00:20:33.467 align:middle line:-1
我们为每一次对话创建一个新的组

00:20:33.767 --> 00:20:36.103 align:middle line:-1
我们把每个组称为一个线程

00:20:37.571 --> 00:20:40.340 align:middle line:-1
因此我们花点时间讨论一下通知线程

00:20:40.407 --> 00:20:42.910 align:middle line:-1
以及组织你的内容的最佳方式

00:20:43.377 --> 00:20:46.713 align:middle line:-2
因此通知分组是使用
现有的线程标识符API

00:20:47.181 --> 00:20:51.185 align:middle line:-2
这个API是作为
通知内容扩展的一部分引入的

00:20:51.251 --> 00:20:54.421 align:middle line:-1
我们扩展了它的使用以创建通知组

00:20:54.988 --> 00:20:57.724 align:middle line:-2
线程标识符可以是
你希望的任何字符串

00:20:58.058 --> 00:21:00.761 align:middle line:-1
并且具有相同线程标识符的通知

