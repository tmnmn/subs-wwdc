WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:56.236 --> 00:29:02.876 align:start position:27% line:-2
クロスオリジン攻撃に対する
セキュリティは終了です

00:29:02.976 --> 00:29:07.347 align:start position:36% line:-2
次は新しく珍しい
攻撃の話をします

00:29:07.448 --> 00:29:11.051 align:start position:25% line:-1
投機的実行攻撃というものです

00:29:13.554 --> 00:29:18.725 align:start position:29% line:-2
ここでは投機的実行攻撃が
何かを説明し―

00:29:19.059 --> 00:29:23.997 align:start position:27% line:-2
その攻撃の手口と
対処法について取り上げます

00:29:25.199 --> 00:29:29.503 align:start position:30% line:-2
まずはCPUを
深く掘り下げていきます

00:29:29.603 --> 00:29:34.107 align:start position:16% line:-1
これがexecuting codeです

00:29:34.208 --> 00:29:38.278 align:start position:34% line:-2
様々な事柄に
条件付きで応じます

00:29:38.378 --> 00:29:43.016 align:start position:21% line:-2
“このxと呼ばれる
Array indexは安全か”

00:29:43.116 --> 00:29:47.221 align:start position:27% line:-1
“配列の範囲内か範囲外か”

00:29:47.321 --> 00:29:51.758 align:start position:29% line:-2
“範囲外であれば
エラー処理をするべきか”

00:29:51.859 --> 00:29:55.829 align:start position:29% line:-2
“範囲内なら 配列の中に
データを読み込もう”

00:29:56.964 --> 00:30:03.403 align:start position:27% line:-2
現在のCPUには学習能力が
備わっているので―

