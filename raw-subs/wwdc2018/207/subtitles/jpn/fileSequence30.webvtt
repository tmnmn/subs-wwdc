WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:56.964 --> 00:30:03.403 align:start position:27% line:-2
現在のCPUには学習能力が
備わっているので―

00:30:03.504 --> 00:30:09.743 align:start position:29% line:-2
範囲内の場合 この配列を
読み込むのは安全だと判断

00:30:10.344 --> 00:30:16.517 align:start position:29% line:-2
安全かどうか判断する前に
推測から読み込むのです

00:30:16.617 --> 00:30:18.185 align:start position:38% line:-1
こんな感じです

00:30:18.285 --> 00:30:22.189 align:start position:34% line:-2
コードを見て
安全だろうと推測し

00:30:22.289 --> 00:30:26.126 align:start position:27% line:-1
そしてデータを読み込みます

00:30:26.226 --> 00:30:27.694 align:start position:36% line:-1
しかしこの場合―

00:30:27.795 --> 00:30:32.833 align:start position:32% line:-2
xは安全でなく
読み込みは誤りでした

00:30:32.933 --> 00:30:36.603 align:start position:27% line:-1
そこで正しく軌道修正します

00:30:38.005 --> 00:30:43.577 align:start position:30% line:-2
なぜこれでＯＫなのか？
あくまで予想だからです

00:30:43.677 --> 00:30:49.416 align:start position:29% line:-2
先取りして仕事を
進めておき 結論が出たら

00:30:49.516 --> 00:30:54.621 align:start position:32% line:-2
軌道修正すればいい
これが投機的実行です

00:30:55.589 --> 00:30:58.225 align:start position:30% line:-2
これが
どう攻撃に変わるのか？

00:30:58.325 --> 00:31:04.198 align:start position:30% line:-2
投機的実行の結果である
キャッシュ効果を―

