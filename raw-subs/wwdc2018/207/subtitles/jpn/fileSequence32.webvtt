WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:53.113 --> 00:32:00.521 align:start position:29% line:-2
投機的実行攻撃の際に
コンテンツを読み取れます

00:32:01.455 --> 00:32:04.458 align:start position:32% line:-2
ウェブ上の
大きな課題と言えます

00:32:04.591 --> 00:32:08.128 align:start position:29% line:-2
私はブラウザのベンダーと
一緒に

00:32:08.228 --> 00:32:13.767 align:start position:27% line:-2
デフォルトでこの問題を
解決するため尽力しています

00:32:13.867 --> 00:32:18.205 align:start position:30% line:-2
しかし皆さんのご協力が
必要なのです

00:32:18.305 --> 00:32:22.443 align:start position:30% line:-2
今まで見てきた防衛策に
皆さんがオプトインし

00:32:22.543 --> 00:32:28.015 align:start position:27% line:-2
より良いデフォルトが
欲しいと我々に伝えてほしい

00:32:28.115 --> 00:32:31.118 align:start position:29% line:-2
“古いAPIのサポートは
不要”とも

00:32:31.218 --> 00:32:33.287 align:start position:32% line:-1
我々はより積極的に―

00:32:33.387 --> 00:32:36.757 align:start position:36% line:-2
投機的実行攻撃に
立ち向えます

00:32:37.391 --> 00:32:41.795 align:start position:30% line:-2
さて 基本的な
対処法を見てみましょう

00:32:42.029 --> 00:32:47.134 align:start position:14% line:-1
evil.exampleのフレームとして

00:32:47.234 --> 00:32:53.106 align:start position:25% line:-2
ウェブコンテンツプロセスを
実行しないようにすることです

00:32:53.273 --> 00:32:56.944 align:start position:27% line:-2
evil.exampleの
フレームがあれば―

00:32:57.044 --> 00:33:02.616 align:start position:23% line:-2
同じプロセスを利用して
ウェブコンテンツを読み取れます

