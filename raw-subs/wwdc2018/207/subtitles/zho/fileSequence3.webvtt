WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:58.306 --> 00:03:00.386 A:middle
这种纯文本等价物的

00:03:00.386 --> 00:03:02.916 A:middle
持续存在并不是

00:03:02.986 --> 00:03:03.796 A:middle
继续使用它们的借口

00:03:04.296 --> 00:03:05.686 A:middle
你需要转移到安全传输

00:03:05.686 --> 00:03:07.866 A:middle
因为这将

00:03:08.016 --> 00:03:09.936 A:middle
确保你在浏览器

00:03:09.936 --> 00:03:11.396 A:middle
或 App 中

00:03:11.396 --> 00:03:13.686 A:middle
呈现的内容

00:03:13.686 --> 00:03:15.606 A:middle
来自预期的服务器

00:03:15.606 --> 00:03:19.696 A:middle
而且没有在传输中混淆内容

00:03:20.316 --> 00:03:22.876 A:middle
因此 为使主要内容

00:03:22.876 --> 00:03:23.576 A:middle
转移到 HTTPS

00:03:23.946 --> 00:03:24.626 A:middle
这里有几项技术

00:03:24.626 --> 00:03:26.636 A:middle
可以为你提供帮助

00:03:27.496 --> 00:03:28.756 A:middle
你首先要做的

00:03:29.176 --> 00:03:31.116 A:middle
除了主要内容移动到 HTTPS

00:03:31.256 --> 00:03:33.526 A:middle
还有绝对的传输安全

00:03:33.526 --> 00:03:35.236 A:middle
或 HSTS

00:03:35.236 --> 00:03:39.076 A:middle
这是一个 HTTP 响应头

00:03:39.076 --> 00:03:40.636 A:middle
可以传送到呈现引擎

00:03:40.636 --> 00:03:43.136 A:middle
比如 WebKit 告诉它

00:03:43.136 --> 00:03:45.666 A:middle
嘿 我的域名应一直

00:03:45.666 --> 00:03:47.296 A:middle
通过 HTTPS 加载

00:03:47.816 --> 00:03:50.636 A:middle
如果有来自我的 HTTP 请求

00:03:50.636 --> 00:03:52.436 A:middle
只需自动为我

00:03:52.436 --> 00:03:54.306 A:middle
升级到 HTTPS 即可

00:03:54.616 --> 00:03:56.066 A:middle
请勿将纯文本

00:03:56.206 --> 00:03:57.996 A:middle
连接到我的服务器

00:03:59.216 --> 00:04:00.756 A:middle
另外你可以

