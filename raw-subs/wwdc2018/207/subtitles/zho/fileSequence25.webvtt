WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:58.956 --> 00:25:00.966 A:middle
现在没有办法将脚本

00:25:00.966 --> 00:25:03.006 A:middle
加入到你的网页中

00:25:03.006 --> 00:25:04.796 A:middle
并让它们执行

00:25:04.796 --> 00:25:06.326 A:middle
因为你在页面设置了策略

00:25:08.326 --> 00:25:12.096 A:middle
好 如果你的 CDN 受到威胁怎么办

00:25:12.526 --> 00:25:14.186 A:middle
这会很糟糕 我们只能希望

00:25:14.186 --> 00:25:17.266 A:middle
它不会发生 但它有可能发生

00:25:17.816 --> 00:25:19.216 A:middle
所以你真的要依靠这个

00:25:19.216 --> 00:25:22.486 A:middle
从 CDN 加载框架

00:25:22.486 --> 00:25:25.406 A:middle
因为它可以执行与你自己脚本

00:25:25.406 --> 00:25:26.516 A:middle
相同的权力

00:25:28.136 --> 00:25:30.016 A:middle
现在 如果它们

00:25:30.016 --> 00:25:31.656 A:middle
已经破解并将脚本请求

00:25:31.656 --> 00:25:33.416 A:middle
重新定向到 evil.example

00:25:33.456 --> 00:25:35.666 A:middle
加载攻击代码怎么办

00:25:36.526 --> 00:25:38.126 A:middle
突然间你感觉自己得到了

00:25:38.126 --> 00:25:40.146 A:middle
一个框架 也许已经好到

00:25:40.146 --> 00:25:41.406 A:middle
足以捆绑在框架结构中

00:25:41.406 --> 00:25:44.156 A:middle
但它仍然做些令人讨厌的事情

00:25:44.866 --> 00:25:46.836 A:middle
那么你该怎么做

00:25:47.546 --> 00:25:49.426 A:middle
在内容安全策略中

00:25:49.426 --> 00:25:50.966 A:middle
将脚本源添加到白名单中

00:25:50.966 --> 00:25:53.626 A:middle
这样浏览器就可以

00:25:53.626 --> 00:25:55.396 A:middle
拒绝执行来自

00:25:55.396 --> 00:25:56.736 A:middle
evil.example 的任何代码

00:25:58.246 --> 00:26:01.026 A:middle
好了 现在攻击者需要

