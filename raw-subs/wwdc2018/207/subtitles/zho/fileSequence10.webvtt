WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.826 --> 00:10:01.916 A:middle
这个脚本标签只包含

00:10:01.966 --> 00:10:04.666 A:middle
URL 来获取脚本 对吗

00:10:05.446 --> 00:10:06.536 A:middle
正如我所提到的 

00:10:06.536 --> 00:10:09.686 A:middle
你现在正在依靠 CDN 来提供

00:10:09.686 --> 00:10:10.956 A:middle
正确的脚本

00:10:10.956 --> 00:10:12.546 A:middle
这保证你的网页内容

00:10:12.546 --> 00:10:13.806 A:middle
按预期方式运行

00:10:14.846 --> 00:10:16.346 A:middle
但实际上 你要知道

00:10:16.346 --> 00:10:17.966 A:middle
如果它们决定碰撞该版本

00:10:17.966 --> 00:10:19.066 A:middle
或是服务器出了问题

00:10:19.066 --> 00:10:20.296 A:middle
它们将会给你

00:10:20.296 --> 00:10:21.256 A:middle
发送错误脚本

00:10:21.256 --> 00:10:24.016 A:middle
你的网页内容可能会瘫痪

00:10:24.646 --> 00:10:25.896 A:middle
有可能出错

00:10:25.896 --> 00:10:27.576 A:middle
也有可能无法按照预期方式工作

00:10:28.026 --> 00:10:29.646 A:middle
你知道自己期待什么脚本

00:10:29.646 --> 00:10:31.626 A:middle
但是当你只是像这样

00:10:31.626 --> 00:10:32.716 A:middle
发送一个脚本标签时

00:10:32.716 --> 00:10:34.186 A:middle
就像这样

00:10:35.006 --> 00:10:36.756 A:middle
你的行为就只是

00:10:36.756 --> 00:10:39.436 A:middle
告诉浏览器

00:10:39.436 --> 00:10:42.336 A:middle
回到 JavaScript 中执行它

00:10:43.036 --> 00:10:45.056 A:middle
换种更好的方式说就是

00:10:45.376 --> 00:10:46.526 A:middle
不 我想确保这是我

00:10:46.526 --> 00:10:47.986 A:middle
期待的脚本

00:10:48.546 --> 00:10:49.996 A:middle
不过 你可以在脚本标记中

00:10:49.996 --> 00:10:52.766 A:middle
使用完整性属性

00:10:53.366 --> 00:10:54.916 A:middle
在这里 你提供了一个校验和

00:10:54.916 --> 00:10:56.496 A:middle
这种情况下

00:10:56.496 --> 00:10:59.466 A:middle
用算法 sha256 表示

00:10:59.466 --> 00:11:01.316 A:middle
这是我希望从我的 CDN 里

