WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.426 --> 00:16:00.476 A:middle
它真的很神奇

00:16:00.476 --> 00:16:01.666 A:middle
可以用来做很多事情

00:16:02.286 --> 00:16:03.746 A:middle
也许最敏感的是它们对

00:16:03.746 --> 00:16:06.126 A:middle
用户进行认证

00:16:06.126 --> 00:16:08.196 A:middle
一旦认证登录

00:16:08.196 --> 00:16:09.266 A:middle
你就会得到一个

00:16:09.266 --> 00:16:11.296 A:middle
Cookie 保存会话

00:16:11.666 --> 00:16:13.806 A:middle
这个程序 如果它被移动

00:16:13.806 --> 00:16:15.476 A:middle
或被盗 并且被移动到

00:16:15.476 --> 00:16:17.366 A:middle
另一个浏览器引擎中

00:16:17.366 --> 00:16:19.446 A:middle
很多时候可以模仿该用户

00:16:19.886 --> 00:16:21.636 A:middle
所以说 你真的需要保护好你的 Cookie

00:16:22.156 --> 00:16:23.686 A:middle
就像我提过的

00:16:23.686 --> 00:16:25.376 A:middle
你应该标记其安全

00:16:25.376 --> 00:16:26.796 A:middle
以便于永远不会泄露

00:16:26.796 --> 00:16:27.706 A:middle
纯文本请求

00:16:28.216 --> 00:16:29.636 A:middle
不过 还有更多的事要做 对吗

00:16:30.576 --> 00:16:34.436 A:middle
来看 HttpOnly Cookie

00:16:34.706 --> 00:16:36.736 A:middle
这是个相当古老的技术

00:16:37.316 --> 00:16:38.936 A:middle
我想它已经有至少

00:16:38.936 --> 00:16:42.496 A:middle
15 年左右的历史了

00:16:42.696 --> 00:16:45.376 A:middle
你可能很熟悉

00:16:45.376 --> 00:16:47.236 A:middle
web API document.Cookie

00:16:47.876 --> 00:16:50.146 A:middle
这是 JavaScript

00:16:50.496 --> 00:16:51.826 A:middle
读取和写入 Cookie 的一种方式

00:16:53.016 --> 00:16:55.206 A:middle
JavaScript 功能强大

00:16:55.336 --> 00:16:56.606 A:middle
而且 就像我提到的

00:16:56.606 --> 00:16:57.976 A:middle
如果你从其他服务器加载 JavaScript

00:16:58.026 --> 00:16:59.896 A:middle
就可以通过这个 API

00:16:59.896 --> 00:17:01.886 A:middle
访问所有用户的 Cookie

