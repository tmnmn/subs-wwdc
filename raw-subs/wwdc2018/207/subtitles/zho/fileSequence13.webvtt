WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.716 --> 00:13:00.636 A:middle
正如你们看到的

00:13:00.636 --> 00:13:01.206 A:middle
我在这儿做了注释

00:13:01.206 --> 00:13:02.016 A:middle
没有内联

00:13:02.136 --> 00:13:04.526 A:middle
这也是默认行为的一部分

00:13:04.776 --> 00:13:06.086 A:middle
一旦你这样设置

00:13:06.086 --> 00:13:08.496 A:middle
也就是说没有内联脚本

00:13:08.726 --> 00:13:10.726 A:middle
只从文件加载脚本

00:13:11.276 --> 00:13:12.606 A:middle
这就是为什么我一直认为

00:13:12.606 --> 00:13:14.116 A:middle
它是一个架构策略

00:13:14.366 --> 00:13:15.976 A:middle
因为你将逻辑分为文件

00:13:15.976 --> 00:13:21.246 A:middle
与标记和样式化分开来

00:13:21.316 --> 00:13:23.946 A:middle
这些样式也在文件中

00:13:24.166 --> 00:13:25.046 A:middle
CSS 文件

00:13:26.066 --> 00:13:29.636 A:middle
好的 现在你想从 cdn.example 中

00:13:29.636 --> 00:13:31.686 A:middle
加载脚本

00:13:31.686 --> 00:13:33.176 A:middle
如果只使用默认源自带

00:13:33.176 --> 00:13:35.976 A:middle
那么这将会被锁定

00:13:35.976 --> 00:13:37.776 A:middle
对吗 就无法进行远程脚本加载

00:13:38.126 --> 00:13:39.776 A:middle
在内容安全策略中

00:13:39.776 --> 00:13:41.856 A:middle
有个白名单机制

00:13:42.396 --> 00:13:44.356 A:middle
你只要说 嘿 脚本源

00:13:44.566 --> 00:13:47.256 A:middle
打开 can.example

00:13:47.366 --> 00:13:49.246 A:middle
因为我想从那里加载脚本

00:13:49.786 --> 00:13:51.066 A:middle
现在你可以从自己的服务器

00:13:51.066 --> 00:13:53.716 A:middle
和 cdn.example 中加载

00:13:53.716 --> 00:13:54.466 A:middle
但在其他地方无法加载

00:13:55.866 --> 00:13:57.206 A:middle
你可能想要在 iframe 中

00:13:57.206 --> 00:14:00.326 A:middle
有社交媒体插件

