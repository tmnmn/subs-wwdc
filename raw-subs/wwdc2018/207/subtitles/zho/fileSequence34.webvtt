WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:58.346 --> 00:34:00.796 A:middle
同一个网页内容过程中

00:34:00.796 --> 00:34:02.516 A:middle
进行推测

00:34:02.516 --> 00:34:04.386 A:middle
试图读取

00:34:04.386 --> 00:34:06.246 A:middle
攻击者不应该

00:34:06.246 --> 00:34:07.136 A:middle
读取的内容

00:34:07.136 --> 00:34:08.496 A:middle
如果你把事情

00:34:08.496 --> 00:34:09.956 A:middle
划分成了不同的进程

00:34:10.696 --> 00:34:12.036 A:middle
那这个攻击就不起作用了 对吧

00:34:12.636 --> 00:34:13.956 A:middle
你不能跨进程界限

00:34:14.025 --> 00:34:16.196 A:middle
来进行预测执行攻击

00:34:16.196 --> 00:34:18.286 A:middle
因此这已经成为一种防御措施

00:34:18.286 --> 00:34:20.626 A:middle
防御措施 当然

00:34:20.626 --> 00:34:22.686 A:middl
非常重要的一点是

00:34:22.686 --> 00:34:24.886 A:middle
网页内容进程不能

00:34:24.916 --> 00:34:26.666 A:middle
触及网络进程

00:34:26.666 --> 00:34:28.396 A:middle
不能在这里预测执行攻击

00:34:30.056 --> 00:34:32.076 A:middle
但是如果你仍然在使用

00:34:32.076 --> 00:34:34.396 A:middle
UIWebView 那么

00:34:34.396 --> 00:34:36.196 A:middle
你可能不太对

00:34:37.306 --> 00:34:39.275 A:middle
我们不赞成这版本

00:34:40.485 --> 00:34:42.436 A:middle
现在 假设你有 evil.example

00:34:43.206 --> 00:34:44.686 A:middle
有网页内容

00:34:45.315 --> 00:34:46.686 A:middle
以及网络堆栈

00:34:47.496 --> 00:34:48.826 A:middle
然后你将这些全部

00:34:48.826 --> 00:34:51.946 A:middle
放入你的 App 中

00:34:51.946 --> 00:34:53.596 A:middle
那么从预测执行攻击的角度看

00:34:54.315 --> 00:34:55.505 A:middle
一切都融合在一起

00:34:56.306 --> 00:34:58.346 A:middle
这是完全相同的进程空间

00:34:59.026 --> 00:35:00.666 A:middle
在这种情况下

