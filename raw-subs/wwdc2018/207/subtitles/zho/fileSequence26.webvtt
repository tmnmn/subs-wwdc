WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.246 --> 00:26:01.026 A:middle
好了 现在攻击者需要

00:26:01.026 --> 00:26:02.586 A:middle
变得更加狡猾

00:26:03.426 --> 00:26:05.066 A:middle
他很可能

00:26:05.126 --> 00:26:07.306 A:middle
会更改 CDN 服务器的脚本

00:26:07.306 --> 00:26:08.796 A:middle
而不是将其重新定向到

00:26:08.936 --> 00:26:10.666 A:middle
evil.example 服务器

00:26:11.206 --> 00:26:12.626 A:middle
所以 它在你的白名单上

00:26:12.626 --> 00:26:15.036 A:middle
你要加载并执行这一脚本

00:26:16.056 --> 00:26:19.256 A:middle
不过 你有子资源完整性

00:26:19.256 --> 00:26:20.566 A:middle
来帮助你

00:26:21.206 --> 00:26:22.576 A:middle
你可以控制

00:26:22.576 --> 00:26:24.356 A:middle
其他服务器脚本

00:26:24.356 --> 00:26:26.126 A:middle
的完整性

00:26:26.806 --> 00:26:28.096 A:middle
如果校验和不匹配

00:26:28.196 --> 00:26:29.566 A:middle
那么你将会从

00:26:29.566 --> 00:26:31.206 A:middle
自己的服务器上加载

00:26:32.186 --> 00:26:33.926 A:middle
因此 这种攻击也失败了

00:26:35.746 --> 00:26:37.566 A:middle
好的 这个就是破解 CDN

00:26:37.756 --> 00:26:39.686 A:middle
最后的跨域

00:26:39.686 --> 00:26:42.736 A:middle
攻击 即跨站点请求伪造

00:26:43.316 --> 00:26:46.206 A:middle
这与最后一个单词相关联即伪造

00:26:46.206 --> 00:26:48.926 A:middle
意思是攻击者

00:26:48.926 --> 00:26:50.936 A:middle
试图伪造一个请求

00:26:50.936 --> 00:26:52.906 A:middle
看起来好像你的

00:26:52.906 --> 00:26:55.156 A:middle
用户正在做些什么

00:26:55.156 --> 00:26:58.046 A:middle
但事实上他们并没有

00:26:59.156 --> 00:27:00.786 A:middle
我们回到信息 App

