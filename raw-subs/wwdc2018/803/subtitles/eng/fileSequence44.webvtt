WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:58.756 --> 00:44:00.386 A:middle
momentum of the PIP, and its

00:44:00.386 --> 00:44:02.236 A:middle
velocity when it's thrown.

00:44:03.446 --> 00:44:05.486 A:middle
So, how can we incorporate

00:44:06.306 --> 00:44:08.696 A:middle
momentum into deciding which

00:44:08.696 --> 00:44:09.646 A:middle
endpoint we go to?

00:44:10.256 --> 00:44:13.396 A:middle
So, to think about this, I think

00:44:13.396 --> 00:44:15.346 A:middle
we can set aside endpoints for a

00:44:15.346 --> 00:44:16.896 A:middle
moment, and take a step back.

00:44:17.816 --> 00:44:20.986 A:middle
And, just really simplify the

00:44:22.096 --> 00:44:22.326 A:middle
problem.

00:44:22.386 --> 00:44:23.686 A:middle
Ultimately, what I'm trying to

00:44:23.736 --> 00:44:26.186 A:middle
do here is move content around

00:44:26.186 --> 00:44:27.026 A:middle
on the screen.

00:44:27.796 --> 00:44:29.206 A:middle
And, I actually already have a

00:44:29.206 --> 00:44:31.126 A:middle
lot of muscle memory for doing

00:44:31.436 --> 00:44:35.466 A:middle
exactly that with scrolling.

00:44:35.876 --> 00:44:37.186 A:middle
So, why don't we use that here?

00:44:38.616 --> 00:44:40.326 A:middle
We use scrolling behaviors all

00:44:40.326 --> 00:44:41.496 A:middle
the time, so we have this

00:44:41.496 --> 00:44:44.596 A:middle
natural intuition for how far

00:44:44.596 --> 00:44:45.936 A:middle
content goes when I scroll.

00:44:47.366 --> 00:44:50.096 A:middle
So, here you can see that when I

00:44:50.096 --> 00:44:52.706 A:middle
scroll the PIP instead, it

00:44:52.706 --> 00:44:54.586 A:middle
coasts along, and it slows down,

00:44:54.866 --> 00:44:57.536 A:middle
using this familiar deceleration

00:44:58.176 --> 00:44:59.206 A:middle
that we're familiar with from

00:44:59.206 --> 00:44:59.796 A:middle
scrolling.

