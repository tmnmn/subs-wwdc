WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:54.695 --> 00:45:00.033 align:start position:29% line:-2
スクロールと同じ
減速の方法を使っています

00:45:00.834 --> 00:45:04.338 align:start position:34% line:-2
他で習得した特徴を
適用するという

00:45:04.638 --> 00:45:07.941 align:start position:29% line:-1
メリットを利用しています

00:45:08.042 --> 00:45:12.079 align:start position:29% line:-2
同一システムで
同じビヘイビアを用いる―

00:45:12.646 --> 00:45:13.814 align:start position:38% line:-1
メリットですね

00:45:15.382 --> 00:45:21.355 align:start position:27% line:-2
このPIPの位置の話は
実際の話ではありませんから

00:45:21.455 --> 00:45:23.991 align:start position:34% line:-2
インターフェイスを
お見せしません

00:45:24.091 --> 00:45:26.160 align:start position:27% line:-1
ここでは“予測”を行います

00:45:26.894 --> 00:45:29.196 align:start position:29% line:-1
PIPがフリックされると

00:45:29.296 --> 00:45:33.567 align:start position:34% line:-2
その速度と減速率を
掛け合わせます

00:45:33.667 --> 00:45:38.972 align:start position:29% line:-2
スクロールで進むであろう
位置を予測するのです

00:45:40.974 --> 00:45:44.745 align:start position:38% line:-2
１番近い終点を
探すのではなく

00:45:44.845 --> 00:45:50.350 align:start position:29% line:-2
予測される位置を計算し
移動する方法を使いました

00:45:51.652 --> 00:45:56.523 align:start position:29% line:-2
これにより対角の区画へも
軽いフリックで

00:45:57.124 --> 00:46:00.027 align:start position:32% line:-1
期待通りに移動します

