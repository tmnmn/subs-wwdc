WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:00.647 --> 00:03:03.584 align:start position:27% line:-1
タイムラインを見てください

00:03:06.920 --> 00:03:11.225 align:start position:34% line:-2
各ターゲットが
順番に処理されます

00:03:11.325 --> 00:03:14.795 align:start position:34% line:-2
１つが終わってから
次へ進みます

00:03:15.295 --> 00:03:18.031 align:start position:30% line:-1
何の問題もないのですが

00:03:18.332 --> 00:03:22.236 align:start position:32% line:-2
ハードウェア利用率に
無駄が生じます

00:03:22.469 --> 00:03:26.206 align:start position:29% line:-2
マルチコアのマシンなどは
特にそうです

00:03:26.707 --> 00:03:30.010 align:start position:25% line:-1
貴重な開発時間が奪われますね

00:03:30.944 --> 00:03:34.181 align:start position:29% line:-1
そこで 次を見てください

00:03:37.718 --> 00:03:40.721 align:start position:30% line:-1
これを見て気付くことは

00:03:40.888 --> 00:03:45.792 align:start position:30% line:-2
まず ビルドの処理量は
変わっていません

00:03:46.627 --> 00:03:49.730 align:start position:25% line:-1
しかし 時間は短縮されました

00:03:50.130 --> 00:03:53.767 align:start position:34% line:-2
この例では
大幅に減っています

00:03:54.868 --> 00:03:58.539 align:start position:36% line:-2
ハードウェアを
最大限に活用して

00:03:58.639 --> 00:04:00.941 align:start position:32% line:-1
時間を削減できました

