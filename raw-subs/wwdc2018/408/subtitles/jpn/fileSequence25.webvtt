WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.600 --> 00:25:02.903 align:start position:36% line:-2
コンパイル時間を
短くもできます

00:25:04.938 --> 00:25:07.474 align:start position:32% line:-1
最後にお見せする例は

00:25:07.574 --> 00:25:11.111 align:start position:34% line:-2
前の２つほどは
広く応用できません

00:25:11.378 --> 00:25:13.781 align:start position:27% line:-1
AnyObjectの話です

00:25:14.715 --> 00:25:20.621 align:start position:18% line:-2
AnyObjectはあらゆるクラス型
インスタンスを記述できます

00:25:20.721 --> 00:25:25.025 align:start position:30% line:-2
構造体や列挙型ではなく
１つのクラスです

00:25:25.659 --> 00:25:30.697 align:start position:20% line:-2
Objective-Cのid型から
持ち越した特長もあります

00:25:31.131 --> 00:25:33.934 align:start position:29% line:-2
それが この
メソッド呼び出し構文です

00:25:34.034 --> 00:25:39.573 align:start position:27% line:-2
AnyObject型の値の
メソッドを呼び出すと

00:25:40.307 --> 00:25:44.278 align:start position:18% line:-2
Objective-Cランタイムから
見える限り―

00:25:44.378 --> 00:25:48.549 align:start position:27% line:-1
Swiftはそれを許します

00:25:49.383 --> 00:25:51.852 align:start position:30% line:-1
しかし 代償があります

00:25:52.286 --> 00:25:56.156 align:start position:25% line:-2
コンパイラは 何が呼ばれるか
分からないため

00:25:56.256 --> 00:25:59.626 align:start position:32% line:-2
あらゆる可能性を探す
必要があります

00:25:59.726 --> 00:26:02.529 align:start position:38% line:-2
プロジェクトや
フレームワーク

