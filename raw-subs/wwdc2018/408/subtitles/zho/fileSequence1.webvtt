WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:34.916 --> 00:01:38.386 A:middle
构建时间的新性能
 
00:01:38.566 --> 00:01:39.446 A:middle
现在 Jordan 将给我们介绍
 
00:01:39.446 --> 00:01:40.556 A:middle
一些我们可以
 
00:01:40.626 --> 00:01:41.716 A:middle
为我们的项目带来的
 
00:01:41.716 --> 00:01:43.056 A:middle
源级的提升
 
00:01:43.516 --> 00:01:44.636 A:middle
包括使用 Swift 来
 
00:01:44.636 --> 00:01:45.756 A:middle
理解我们的依赖性
 
00:01:46.486 --> 00:01:48.486 A:middle
在 Swift 中处理复杂的表达式
 
00:01:49.436 --> 00:01:50.416 A:middle
以及如何将
 
00:01:50.416 --> 00:01:52.436 A:middle
Objective-C 限制到 Swift 界面
 
00:01:54.016 --> 00:01:55.126 A:middle
现在让我们来讨论一下
 
00:01:55.126 --> 00:01:56.056 A:middle
并行你的构建
 
00:01:56.676 --> 00:01:58.816 A:middle
Xcode 通过使用目标
 
00:01:58.816 --> 00:02:00.736 A:middle
来配置你的项目
 
00:02:01.606 --> 00:02:04.016 A:middle
目标指定了你想要构建的
 
00:02:04.016 --> 00:02:05.566 A:middle
产品或者输出
 
00:02:06.226 --> 00:02:07.916 A:middle
有一些例子是 iOS App
 
00:02:08.756 --> 00:02:10.546 A:middle
框架和单位测试
 
00:02:11.276 --> 00:02:12.776 A:middle
还有另一个信息
 
00:02:12.776 --> 00:02:13.846 A:middle
那就是
 
00:02:13.846 --> 00:02:15.696 A:middle
目标之间的依赖性
 
00:02:16.226 --> 00:02:17.886 A:middle
Xcode 为定义我们的依赖性
 
00:02:18.326 --> 00:02:19.526 A:middle
提供了两种方法
 
00:02:19.816 --> 00:02:21.556 A:middle
有一种很清楚的方法
 
00:02:21.556 --> 00:02:22.396 A:middle
就是通过
 
00:02:22.396 --> 00:02:23.436 A:middle
目标依赖性阶段
 
00:02:24.046 --> 00:02:25.276 A:middle
还有一种隐含的方法
 
00:02:25.336 --> 00:02:26.586 A:middle
就是通过函数库阶段的
 
00:02:26.586 --> 00:02:28.526 A:middle
连接的二进制

