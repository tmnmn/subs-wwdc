WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:20.066 --> 00:36:21.386 A:middle
Objective-C 代码也同样会
 
00:36:21.386 --> 00:36:23.596 A:middle
造成重新构建
 
00:36:24.656 --> 00:36:25.846 A:middle
一个桥接头文件一般看起来
 
00:36:25.846 --> 00:36:27.186 A:middle
是这样的
 
00:36:27.186 --> 00:36:28.556 A:middle
它拥有很多在项目中
 
00:36:28.556 --> 00:36:29.996 A:middle
你想要展示给
 
00:36:29.996 --> 00:36:31.386 A:middle
Swift 的其他头文件
 
00:36:32.616 --> 00:36:34.016 A:middle
我们可以放大显示
 
00:36:34.016 --> 00:36:34.886 A:middle
这些头文件中的一个
 
00:36:34.886 --> 00:36:37.436 A:middle
MyViewController 头文件
 
00:36:37.436 --> 00:36:38.716 A:middle
可以看到 它视图控制器的
 
00:36:38.716 --> 00:36:40.086 A:middle
一个非常正常的声明

00:36:40.616 --> 00:36:42.476 A:middle
它自己本身还包含了
 
00:36:42.476 --> 00:36:43.196 A:middle
其他头文件
 
00:36:44.376 --> 00:36:46.006 A:middle
这意味着如果
 
00:36:46.006 --> 00:36:48.126 A:middle
这些头文件中的任意一个变化了
 
00:36:48.126 --> 00:36:49.886 A:middle
你目标中的 Swift 代码
 
00:36:49.886 --> 00:36:51.866 A:middle
需要重新编译 
 
00:36:51.866 --> 00:36:53.356 A:middle
因为它可能依赖于 某些已经变化的东西
 
00:36:54.616 --> 00:36:56.206 A:middle
这并不是最理想的
 
00:36:56.466 --> 00:36:59.886 A:middle
在这个例子中我们可以注意
 
00:36:59.886 --> 00:37:01.656 A:middle
我们引入 MyNetwork Manager 头文件的
 
00:37:01.656 --> 00:37:03.096 A:middle
唯一理由就是
 
00:37:03.096 --> 00:37:04.986 A:middle
声明这个属性
 
00:37:04.986 --> 00:37:06.436 A:middle
这个视图控制器上的
 
00:37:06.436 --> 00:37:08.176 A:middle
网络管理属性
 
00:37:09.576 --> 00:37:11.986 A:middle
很有可能
 
00:37:11.986 --> 00:37:14.816 A:middle
该属性从来没在 Swift 中被使用过
 
00:37:15.436 --> 00:37:17.876 A:middle
在这种情况下
 
00:37:17.876 --> 00:37:19.376 A:middle
我们就不需要在这里声明它
 
00:37:20.346 --> 00:37:21.976 A:middle
你能做的就是使用分类
 
00:37:21.976 --> 00:37:23.886 A:middle
Objective-C 的等价
 
00:37:23.886 --> 00:37:25.486 A:middle
拓展包
 
00:37:25.486 --> 00:37:26.866 A:middle
来将这个接口分解
 
00:37:27.606 --> 00:37:28.566 A:middle
我将在这里定义
 
00:37:28.566 --> 00:37:30.186 A:middle
一个新的文件  MyViewController
 
00:37:30.186 --> 00:37:32.526 A:middle
Internal 并使用特别的
 
00:37:32.526 --> 00:37:34.586 A:middle
无名的语法 来让我们可以
 
00:37:34.586 --> 00:37:36.116 A:middle
声明附加的属性并
 
00:37:36.116 --> 00:37:37.896 A:middle
依旧可以使用
 
00:37:37.896 --> 00:37:41.276 A:middle
我的主要区块 Add Implementation 中的
 
00:37:41.276 --> 00:37:42.326 A:middle
属性整合功能
 
00:37:42.436 --> 00:37:47.066 A:middle
现在我可以将引入代码
 
00:37:47.066 --> 00:37:48.696 A:middle
和属性移入到的这个类别
 
00:37:49.426 --> 00:37:50.066 A:middle
看
 
00:37:50.796 --> 00:37:52.316 A:middle
引入到 Swift 的头文件
 
00:37:52.316 --> 00:37:54.636 A:middle
变得更小了
 
00:37:54.636 --> 00:37:56.536 A:middle
而且被改变的可能更小
 
00:37:56.536 --> 00:37:58.246 A:middle
同时也不会造成
 
00:37:58.246 --> 00:37:59.506 A:middle
不必要的重新构建
 
00:38:00.476 --> 00:38:01.566 A:middle
还有一点要注意的是
 
00:38:02.636 --> 00:38:04.206 A:middle
我刚刚定义的文件
 
00:38:04.796 --> 00:38:06.626 A:middle
很有可能在我的 Objective-C 代码中的
 
00:38:06.626 --> 00:38:08.256 A:middle
所有代码都不需要
 
00:38:08.256 --> 00:38:09.966 A:middle
访问这个属性

