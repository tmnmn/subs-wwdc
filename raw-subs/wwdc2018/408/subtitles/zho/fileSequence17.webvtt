WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:16.196 --> 00:35:17.086 A:middle
当你更新到 Swift 4 时
 
00:35:17.086 --> 00:35:19.316 A:middle
这是一个你可以选择的选项
 
00:35:19.316 --> 00:35:22.176 A:middle
它可以保持 Swift 3 中
 
00:35:22.176 --> 00:35:23.686 A:middle
在 NS 对象的任何子类中
 
00:35:23.736 --> 00:35:26.416 A:middle
自动向 Objective-C 展示内置方法和性能
 
00:35:26.416 --> 00:35:30.096 A:middle
的规则
 
00:35:30.236 --> 00:35:31.626 A:middle
如果你在 Swift 3 中编写程序
 
00:35:31.666 --> 00:35:33.846 A:middle
你可能会依赖这个性能
 
00:35:34.196 --> 00:35:35.936 A:middle
但是还有很多种情况
 
00:35:36.086 --> 00:35:37.626 A:middle
你们可能根本不需要
 
00:35:37.626 --> 00:35:38.806 A:middle
依赖于此
 
00:35:39.446 --> 00:35:40.586 A:middle
在运行时间
 
00:35:40.746 --> 00:35:42.616 A:middle
编译时间都不需要
 
00:35:43.666 --> 00:35:45.466 A:middle
一旦你合适的
 
00:35:45.816 --> 00:35:47.256 A:middle
将你的 Objective-C 依赖性明确地
 
00:35:47.256 --> 00:35:48.176 A:middle
标注为 @objc 
 
00:35:48.176 --> 00:35:51.506 A:middle
或者 IBOutlet 
 
00:35:52.016 --> 00:35:54.116 A:middle
或者 IBAction 
 
00:35:54.116 --> 00:35:56.096 A:middle
你就可以选择这些
 
00:35:56.096 --> 00:35:57.826 A:middle
构建设置并点击
 
00:35:57.826 --> 00:35:59.186 A:middle
删除来回到
 
00:35:59.186 --> 00:36:01.176 A:middle
默认模式 
 
00:36:01.176 --> 00:36:02.866 A:middle
在该模式下 OB-C 属性只会从
 
00:36:03.566 --> 00:36:05.316 A:middle
遵循协议要求的方法
 
00:36:05.316 --> 00:36:08.176 A:middle
和性能或者
 
00:36:08.176 --> 00:36:09.716 A:middle
那些重写自 Objective-C 的
 
00:36:09.716 --> 00:36:10.806 A:middle
方法推导出来
 
00:36:11.306 --> 00:36:14.576 A:middle
我们谈论了很多关于
 
00:36:14.576 --> 00:36:15.856 A:middle
生成的头文件和对你的 Swift 代码
 
00:36:15.856 --> 00:36:17.026 A:middle
可以做的事情
 
00:36:17.416 --> 00:36:19.816 A:middle
但是你也有 Objective-C 代码

