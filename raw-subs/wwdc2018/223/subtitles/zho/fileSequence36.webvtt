WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:58.806 --> 00:36:01.016 A:middle
现在 它们不会总是

00:36:01.016 --> 00:36:03.126 A:middle
和在这个例子中一样长

00:36:03.126 --> 00:36:06.716 A:middle
幸运的是

00:36:06.716 --> 00:36:07.986 A:middle
“有一个算法可以使用”

00:36:08.906 --> 00:36:10.636 A:middle
我们叫它 rotate()

00:36:11.176 --> 00:36:11.276 A:middle
好的

00:36:14.466 --> 00:36:16.496 A:middle
我不打算在这里深入讨论 rotate 算法

00:36:16.496 --> 00:36:18.226 A:middle
但是它真的很漂亮

00:36:18.256 --> 00:36:19.156 A:middle
如果你感兴趣

00:36:19.156 --> 00:36:22.446 A:middle
你可以在与 stablePartition 同样的文件中

00:36:22.446 --> 00:36:23.436 A:middle
找到它的实现方法

00:36:24.116 --> 00:36:24.216 A:middle
好的

00:36:25.596 --> 00:36:27.146 A:middle
回到图形

00:36:28.186 --> 00:36:32.486 A:middle
现在 这个烂摊子实现了

00:36:32.696 --> 00:36:34.706 A:middle
在图形列表中拖放

00:36:34.706 --> 00:36:36.626 A:middle
这一直是我最复杂

00:36:36.626 --> 00:36:39.326 A:middle
和 Bug 最多的运算之一

00:36:40.336 --> 00:36:41.616 A:middle
我的策略是

00:36:41.616 --> 00:36:43.246 A:middle
分配临时缓冲区

00:36:44.536 --> 00:36:46.486 A:middle
然后在插入点之前

00:36:47.076 --> 00:36:48.506 A:middle
对 shapes 进行循环

00:36:48.736 --> 00:36:50.196 A:middle
提取选定的图形

00:36:50.196 --> 00:36:51.576 A:middle
并调整插入点

00:36:52.526 --> 00:36:54.086 A:middle
然后在不调整插入点的情况下

00:36:54.086 --> 00:36:55.896 A:middle
分别对其余的图形

00:36:55.896 --> 00:36:57.236 A:middle
进行循环

00:36:57.236 --> 00:36:58.596 A:middle
提取选定的图形

00:36:59.126 --> 00:37:02.916 A:middle
最后 重新插入它们

