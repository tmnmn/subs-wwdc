WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:58.186 --> 00:38:01.126 A:middle
现在 让我们把它放在

00:38:01.126 --> 00:38:02.426 A:middle
旧代码旁边看看

00:38:04.456 --> 00:38:07.886 A:middle
还不错 但是我们得到了

00:38:07.886 --> 00:38:10.396 A:middle
一个可重复使用的

00:38:10.766 --> 00:38:12.346 A:middle
高效文档化的通用算法

00:38:12.346 --> 00:38:13.846 A:middle
这是非常棒的

00:38:14.446 --> 00:38:21.846 A:middle
好的 这是一种需要习得的技能

00:38:21.846 --> 00:38:23.746 A:middle
审视特定于你的 App

00:38:23.746 --> 00:38:25.086 A:middle
领域的细节

00:38:25.086 --> 00:38:27.056 A:middle
了解你的代码从根本上在做什么

00:38:27.056 --> 00:38:29.126 A:middle
并在可重复使用的通用代码中

00:38:29.126 --> 00:38:31.416 A:middle
捕获这些细节

00:38:32.276 --> 00:38:33.776 A:middle
这需要实践

00:38:34.966 --> 00:38:35.636 A:middle
但是 为什么要那么麻烦呢

00:38:36.536 --> 00:38:38.636 A:middle
实践得到的答案是

00:38:38.636 --> 00:38:39.966 A:middle
因为它们是从无关的细节中

00:38:39.966 --> 00:38:41.896 A:middle
解耦出来的

00:38:42.336 --> 00:38:44.126 A:middle
通用的算法更加

00:38:44.126 --> 00:38:46.296 A:middle
可重复使用 经得起考验

00:38:46.296 --> 00:38:47.976 A:middle
甚至比对应的非通用代码

00:38:47.976 --> 00:38:48.706 A:middle
更加简洁

00:38:49.676 --> 00:38:51.336 A:middle
但我也认为

00:38:51.586 --> 00:38:53.156 A:middle
对于任何真正喜欢编程的人来说

00:38:53.296 --> 00:38:54.446 A:middle
这都是非常有益的

00:38:55.646 --> 00:38:56.996 A:middle
它是对真与美的追求

00:38:56.996 --> 00:38:59.406 A:middle
而不是抽象的

00:38:59.406 --> 00:39:01.266 A:middle
不可触及的真理

