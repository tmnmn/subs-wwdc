WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.266 --> 00:13:00.776 A:middle
现在 我注意到的第一件事

00:13:00.776 --> 00:13:03.106 A:middle
便是点注释

00:13:03.136 --> 00:13:04.456 A:middle
它是所有 “Quick Help” 的来源

00:13:04.456 --> 00:13:09.136 A:middle
描述了算法的功能以及复杂度

00:13:09.596 --> 00:13:14.046 A:middle
接下来 结果是

00:13:14.046 --> 00:13:15.946 A:middle
removeAll(where) 不是什么

00:13:15.946 --> 00:13:18.486 A:middle
常规的方法

00:13:18.486 --> 00:13:20.466 A:middle
它是一个通用的算法

00:13:20.466 --> 00:13:22.126 A:middle
这意味着

00:13:22.126 --> 00:13:22.926 A:middle
它可以在各种不同的集合上运行

00:13:24.286 --> 00:13:25.296 A:middle
这取决于很多因素

00:13:25.296 --> 00:13:28.376 A:middle
重新排列元素的能力

00:13:28.376 --> 00:13:29.556 A:middle
它来自于

00:13:29.556 --> 00:13:31.636 A:middle
MutableCollection

00:13:31.966 --> 00:13:34.626 A:middle
改变长度和结构的能力

00:13:34.626 --> 00:13:36.506 A:middle
它来自于

00:13:36.506 --> 00:13:37.656 A:middle
RangeReplaceableCollection

00:13:38.186 --> 00:13:41.606 A:middle
它是由一些其他的

00:13:41.606 --> 00:13:43.206 A:middle
O(n) 算法构成的

00:13:44.016 --> 00:13:46.126 A:middle
第一个是 halfStablePartition

00:13:46.126 --> 00:13:48.096 A:middle
它将所有

00:13:48.096 --> 00:13:49.416 A:middle
满足某些谓词的元素

00:13:49.416 --> 00:13:53.456 A:middle
移动到末尾

00:13:53.456 --> 00:13:54.846 A:middle
并告诉我们后缀从哪里开始

00:13:56.136 --> 00:13:57.786 A:middle
halfStable 正如其名

00:13:58.186 --> 00:14:00.196 A:middle
表明了

