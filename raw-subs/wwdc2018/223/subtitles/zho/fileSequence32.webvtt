WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:56.616 --> 00:32:00.866 A:middle
“predecessor 就是第一个

00:32:00.866 --> 00:32:02.416 A:middle
在谓词被满足之前的元素

00:32:02.416 --> 00:32:04.286 A:middle
前面的索引

00:32:05.346 --> 00:32:06.656 A:middle
现在 快来看看这读起来

00:32:06.656 --> 00:32:07.046 A:middle
多么动人”

00:32:08.486 --> 00:32:10.946 A:middle
如果你看到了这个代码

00:32:10.946 --> 00:32:11.706 A:middle
你就会发现他是对的

00:32:13.116 --> 00:32:15.006 A:middle
删除所有无关的细节

00:32:15.006 --> 00:32:17.436 A:middle
包括图形 选择

00:32:17.546 --> 00:32:20.066 A:middle
数据以及整数

00:32:20.066 --> 00:32:22.006 A:middle
给我留下更清晰的代码

00:32:22.006 --> 00:32:23.626 A:middle
因为它只处理

00:32:23.696 --> 00:32:24.356 A:middle
问题的本质

00:32:24.926 --> 00:32:27.496 A:middle
“我已经向你展示了

00:32:27.496 --> 00:32:28.956 A:middle
indexBeforeFirst 是如何工作的

00:32:29.266 --> 00:32:32.236 A:middle
试一试你能不能写出来” 他说

00:32:32.706 --> 00:32:34.036 A:middle
所以 我想我现在开始

00:32:34.036 --> 00:32:36.016 A:middle
跟得上他了

00:32:36.016 --> 00:32:37.036 A:middle
因为我第一次做对了

00:32:37.666 --> 00:32:40.996 A:middle
我说过 我是个手速超快的打字员

00:32:41.466 --> 00:32:41.726 A:middle
好吧

00:32:42.236 --> 00:32:45.436 A:middle
所以 返回第一个

00:32:45.436 --> 00:32:48.536 A:middle
successor 与谓词匹配的索引

00:32:49.206 --> 00:32:51.556 A:middle
我非常兴奋地看到

00:32:51.556 --> 00:32:52.396 A:middle
这进展得有多么顺利

00:32:53.436 --> 00:32:54.456 A:middle
“好吧 Crusty” 我说

00:32:54.766 --> 00:32:55.726 A:middle
“让我们做下一个”

00:32:57.516 --> 00:32:58.946 A:middle
“你难道没有忘记什么事吗

00:32:58.946 --> 00:33:00.586 A:middle
豆包” 他问道

