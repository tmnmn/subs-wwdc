WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:57.716 --> 00:20:00.186 A:middle
remove(at:)  insert(at:)

00:20:00.186 --> 00:20:02.756 A:middle
这就产生了

00:20:03.246 --> 00:20:04.786 A:middle
没错 n 的二次方

00:20:06.246 --> 00:20:08.526 A:middle
事实上 同样的问题

00:20:08.526 --> 00:20:10.076 A:middle
出现在每一个

00:20:10.076 --> 00:20:11.076 A:middle
我其他的四个命令中

00:20:12.516 --> 00:20:14.046 A:middle
这里的所有执行

00:20:14.386 --> 00:20:16.196 A:middle
都对数组进行循环

00:20:16.196 --> 00:20:17.936 A:middle
执行插入和删除操作

00:20:17.936 --> 00:20:19.126 A:middle
这意味着它们都是二次的

00:20:19.626 --> 00:20:23.096 A:middle
现在 我有点气馁

00:20:23.096 --> 00:20:24.996 A:middle
所以我问 Crusty

00:20:24.996 --> 00:20:26.106 A:middle
他是否愿意和我一起看

00:20:27.406 --> 00:20:29.106 A:middle
他说 “我不能待太晚”

00:20:29.186 --> 00:20:31.156 A:middle
他说 “我今晚有一个

00:20:31.156 --> 00:20:33.096 A:middle
交际舞聚会 但是我想

00:20:33.226 --> 00:20:34.546 A:middle
我们还是抓紧继续吧”

00:20:35.306 --> 00:20:37.486 A:middle
我在 bringToFront() 这里停下来

00:20:38.686 --> 00:20:40.946 A:middle
Crusty 的第一个问题是

00:20:42.156 --> 00:20:44.546 A:middle
“它到底是做什么的”

00:20:45.846 --> 00:20:47.566 A:middle
“好吧” 我说 “这是个 while 循环

00:20:47.566 --> 00:20:49.426 A:middle
j 跟踪插入点

00:20:49.426 --> 00:20:51.266 A:middle
i 跟踪我们正在

00:20:51.266 --> 00:20:51.906 A:middle
查看的元素

00:20:52.226 --> 00:20:54.216 A:middle
“用语言 而不是用代码”

00:20:54.246 --> 00:20:57.126 A:middle
Crusty 说“描述它”

00:20:58.146 --> 00:20:59.286 A:middle
“好吧 我们来看看

00:20:59.776 --> 00:21:01.616 A:middle
它将选定的图形移动到前面

