WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.006 --> 00:34:01.208 align:start position:25% line:-1
アプリケーション開発者として

00:34:01.375 --> 00:34:06.680 align:start position:30% line:-2
あなたは 塔の最上階で
働いているとしましょう

00:34:06.780 --> 00:34:11.652 align:start position:27% line:-2
ハードウェア基盤から伸び
フレームワークを貫く塔です

00:34:12.686 --> 00:34:17.324 align:start position:27% line:-2
そうした中で
独自のメソッドを使う場合は

00:34:17.891 --> 00:34:19.393 align:start position:36% line:-1
文書化しましょう

00:34:20.460 --> 00:34:23.330 align:start position:21% line:-1
面接の彼は採用され そこにいます

00:34:26.500 --> 00:34:30.771 align:start position:27% line:-2
私は 新しいアルゴリズムを
文書化しました

00:34:31.804 --> 00:34:34.875 align:start position:23% line:-1
これで実装のことは忘れられます

00:34:36.076 --> 00:34:39.746 align:start position:25% line:-1
疑問点にはクイックヘルプです

00:34:41.148 --> 00:34:43.851 align:start position:16% line:-1
“bringForward”も文書化を

00:34:46.186 --> 00:34:46.987 align:start position:41% line:-1
いいですね

00:34:48.054 --> 00:34:51.324 align:start position:25% line:-1
問題はすべて解決できましたが

00:34:51.425 --> 00:34:56.996 align:start position:12% line:-2
ここで“stablePartition”の
中身を見たくなりました

00:34:57.698 --> 00:35:02.836 align:start position:27% line:-2
結果 美しく建設的な
アルゴリズムでひと安心です

