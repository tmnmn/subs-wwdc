WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.433 --> 00:15:02.402 align:start position:30% line:-1
ループインデックスｊが

00:15:02.970 --> 00:15:07.040 align:start position:23% line:-1
反復ごとに１つを前に動かします

00:15:07.541 --> 00:15:11.111 align:start position:21% line:-1
ｊが要素を１回 通過するわけです

00:15:12.679 --> 00:15:15.782 align:start position:27% line:-1
順序と計算量が見てとれます

00:15:20.420 --> 00:15:26.059 align:start position:21% line:-2
最後に このメソッドは
長さを変えず要素を再配置するため

00:15:26.159 --> 00:15:29.163 align:start position:34% line:-2
可変コレクションの
適合性に依存します

00:15:31.031 --> 00:15:33.100 align:start position:34% line:-1
これが私の学んだ―

00:15:33.534 --> 00:15:36.603 align:start position:23% line:-1
Swiftの標準ライブラリです

00:15:37.070 --> 00:15:39.506 align:start position:29% line:-1
性能特性が文書化された―

00:15:39.640 --> 00:15:42.676 align:start position:32% line:-2
一連のアルゴリズムが
含まれています

00:15:43.310 --> 00:15:46.213 align:start position:27% line:-1
実装についても触れましたが

00:15:46.847 --> 00:15:51.318 align:start position:30% line:-2
それなしでも使えるよう
設計されています

00:15:52.319 --> 00:15:58.392 align:start position:25% line:-2
ライブラリを効率的に使うには
公式ドキュメントが便利です

00:15:58.892 --> 00:16:01.261 align:start position:14% line:-1
“Playground”の解説もあります

