WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:58.186 --> 00:38:01.126 A:middle
Now, let's just see that next to

00:38:01.126 --> 00:38:02.426 A:middle
the old code.

00:38:04.456 --> 00:38:07.886 A:middle
That's not bad, but we got a

00:38:07.886 --> 00:38:10.396 A:middle
reusable efficient documented

00:38:10.766 --> 00:38:12.346 A:middle
general purpose algorithm out of

00:38:12.346 --> 00:38:13.846 A:middle
it, which is spectacular.

00:38:14.446 --> 00:38:14.556 A:middle
Okay.

00:38:17.916 --> 00:38:21.846 A:middle
So, this is a learned skill to

00:38:21.846 --> 00:38:23.746 A:middle
look past the details that are

00:38:23.746 --> 00:38:25.086 A:middle
specific to your application

00:38:25.086 --> 00:38:27.056 A:middle
domain, see what your code is

00:38:27.056 --> 00:38:29.126 A:middle
doing fundamentally, and capture

00:38:29.126 --> 00:38:31.416 A:middle
that in reusable generic code.

00:38:32.276 --> 00:38:33.776 A:middle
It takes practice.

00:38:34.966 --> 00:38:35.636 A:middle
So, why bother?

00:38:36.536 --> 00:38:38.636 A:middle
Well, the practical answer is

00:38:38.636 --> 00:38:39.966 A:middle
that because they're decoupled

00:38:39.966 --> 00:38:41.896 A:middle
from those irrelevant details,

00:38:42.336 --> 00:38:44.126 A:middle
generic algorithms are more

00:38:44.126 --> 00:38:46.296 A:middle
reusable, testable, and even

00:38:46.296 --> 00:38:47.976 A:middle
clearer than their non-generic

00:38:47.976 --> 00:38:48.706 A:middle
counterparts.

00:38:49.676 --> 00:38:51.336 A:middle
But I also think it's just

00:38:51.586 --> 00:38:53.156 A:middle
deeply rewarding for anyone that

00:38:53.296 --> 00:38:54.446 A:middle
really loves programming.

00:38:55.646 --> 00:38:56.996 A:middle
It's a search for truth and

00:38:56.996 --> 00:38:59.406 A:middle
beauty but not some abstract

00:38:59.406 --> 00:39:01.266 A:middle
untouchable truth because the

