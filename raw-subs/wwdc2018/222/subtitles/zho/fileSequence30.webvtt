WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:58.098 --> 00:30:00.634 align:middle line:-2
我们可以使用CocoaError
上的便利内容

00:30:00.701 --> 00:30:03.237 align:middle line:-2
来返回一个包含好的
本地化描述的有意义错误

00:30:03.303 --> 00:30:05.339 align:middle line:-1
让我们的用户知道出现了什么问题

00:30:06.840 --> 00:30:09.276 align:middle line:-1
如果需要的话 我们可以给自己

00:30:09.343 --> 00:30:10.944 align:middle line:-2
后面日志上
添加debug描述

00:30:11.011 --> 00:30:12.079 align:middle line:-1
但这个是核心

00:30:12.145 --> 00:30:14.481 align:middle line:-2
返回空之前 我们想用
failWithError方法

00:30:17.017 --> 00:30:20.020 align:middle line:-1
随后我们解码了购买日期

00:30:20.921 --> 00:30:24.224 align:middle line:-1
这里也是个好机会 让我们添加

00:30:24.291 --> 00:30:25.526 align:middle line:-1
之前没有进行的验证

00:30:26.627 --> 00:30:30.063 align:middle line:-2
如果我们可以解码日期的话
我储存这个属性就可以了

00:30:30.497 --> 00:30:33.100 align:middle line:-1
但我想保证这个日期是有效的

00:30:33.433 --> 00:30:35.669 align:middle line:-1
例如 购买是不可能在

00:30:35.736 --> 00:30:37.771 align:middle line:-2
我的app在App Store
上架前就发生的

00:30:38.038 --> 00:30:39.173 align:middle line:-1
这些是你可以检查的内容

00:30:39.239 --> 00:30:43.343 align:middle line:-2
若这里出现问题 我们想在失败时
获得一个有意义的错误

00:30:44.311 --> 00:30:46.079 align:middle line:-1
在本例中 数据没有丢失

00:30:46.146 --> 00:30:48.582 align:middle line:-2
而是数据被损坏了
或者说在某种程度上是无效的

00:30:48.649 --> 00:30:50.217 align:middle line:-1
我们会表明这一点

00:30:51.952 --> 00:30:53.220 align:middle line:-2
（NSSECURECODING
的采用清单）

00:30:53.287 --> 00:30:56.356 align:middle line:-2
现在我们已经
在我们的类型上这么做了

00:30:56.790 --> 00:31:00.160 align:middle line:-2
我们就可以声明
它是支持安全编码的了

