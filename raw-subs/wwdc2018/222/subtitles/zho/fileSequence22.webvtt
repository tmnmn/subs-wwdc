WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.918 --> 00:22:01.421 align:middle line:-1
其目标就是为了防止这类攻击

00:22:01.488 --> 00:22:02.890 align:middle line:-2
（NSSECURECODING
的目标）

00:22:02.956 --> 00:22:06.426 align:middle line:-1
通过让你提前传入类型信息

00:22:06.994 --> 00:22:10.964 align:middle line:-2
它会防止验证归档内容
随意的代码执行

00:22:11.031 --> 00:22:13.834 align:middle line:-1
以确保它只包含你想要的类型

00:22:15.969 --> 00:22:18.138 align:middle line:-2
NSSecureCoding
的标志性内容

00:22:18.205 --> 00:22:21.141 align:middle line:-2
为键解码对象
的两种替代方法

00:22:21.208 --> 00:22:23.844 align:middle line:-1
它可以让你提前传入类型信息

00:22:24.711 --> 00:22:27.681 align:middle line:-2
通过使用该类型信息
NSKeyedUnarchiver可以保证你的安全

00:22:27.748 --> 00:22:28.916 align:middle line:-2
（NSSECURECODING中
的对象解码）

00:22:28.982 --> 00:22:30.584 align:middle line:-1
让我们来看下目前应对键调用

00:22:30.651 --> 00:22:32.052 align:middle line:-1
的解码对象

00:22:32.119 --> 00:22:33.487 align:middle line:-1
这个最上层解码

00:22:34.721 --> 00:22:36.657 align:middle line:-1
如果我们使用变量

00:22:36.723 --> 00:22:38.825 align:middle line:-1
让我们提前传入这个类

00:22:38.892 --> 00:22:40.794 align:middle line:-1
在本例中 我们想解码购买记录

00:22:41.528 --> 00:22:44.932 align:middle line:-2
不用执行整个过程
以及归档中的内容

00:22:45.699 --> 00:22:47.935 align:middle line:-1
你可以先进行类检查

00:22:49.169 --> 00:22:50.971 align:middle line:0
让我们看下这个类检查

00:22:52.906 --> 00:22:55.542 align:middle line:0
在解码的每个阶段
如果开启了安全编码

00:22:55.609 --> 00:22:58.045 align:middle line:0
NSKeyedUnarchiver
会维护一个可以有效解码的

00:22:58.111 --> 00:22:59.580 align:middle line:0
类的列表

