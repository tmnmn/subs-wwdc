WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:57.858 --> 00:11:02.329 align:middle line:-2
向下转型这个标签列表会失败
因为它们不是字符串

00:11:02.396 --> 00:11:05.299 align:middle line:-2
而且我们在进行转型前
从来没有检查过是不是可以转型

00:11:05.933 --> 00:11:06.967 align:middle line:-1
（先验证 再执行）

00:11:07.034 --> 00:11:08.869 align:middle line:-2
为了避免该问题
我们今天会一直强调

00:11:08.936 --> 00:11:12.139 align:middle line:-1
要先验证 再执行

00:11:13.173 --> 00:11:15.976 align:middle line:-1
不要妄下断言你知道数据是什么结构

00:11:16.043 --> 00:11:17.044 align:middle line:-1
先检查一下

00:11:17.411 --> 00:11:18.712 align:middle line:-1
不要盲目假设

00:11:19.546 --> 00:11:20.714 align:middle line:-1
看看如何进行检查

00:11:21.381 --> 00:11:24.184 align:middle line:-1
这里又是第一个强制向下转型

00:11:24.251 --> 00:11:26.820 align:middle line:-1
不要强制向下转型这些值

00:11:27.421 --> 00:11:28.922 align:middle line:-1
我在这里会有条件地向下转型

00:11:32.659 --> 00:11:34.728 align:middle line:-1
这可以让我验证

00:11:35.596 --> 00:11:38.065 align:middle line:-1
该数据是不是包含我真正想要的内容

00:11:38.298 --> 00:11:39.833 align:middle line:-1
如果转型失败的话

00:11:40.667 --> 00:11:43.270 align:middle line:-2
我就可以对错误进行处理
而不是得到致命错误

00:11:44.505 --> 00:11:48.175 align:middle line:-2
同样地 接下来向下转型
那个字符串列表时

00:11:48.242 --> 00:11:52.279 align:middle line:-2
不要强制向下转型
我会进行有条件地向下转型

00:11:52.579 --> 00:11:54.681 align:middle line:-1
在本例中 不会抛出错误

00:11:54.982 --> 00:11:57.985 align:middle line:-2
而是我会给出一个默认值
来让执行继续

00:11:58.185 --> 00:12:00.587 align:middle line:-1
在本例中 我会忽略掉所有

