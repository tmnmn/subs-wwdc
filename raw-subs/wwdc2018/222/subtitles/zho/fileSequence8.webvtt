WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.779 --> 00:08:03.350 align:middle line:-2
当他们有人打开我的app时
我的app会向服务器发一个请求

00:08:03.717 --> 00:08:07.754 align:middle line:-1
它会请求一个目前可以卖给

00:08:07.821 --> 00:08:08.689 align:middle line:-1
我的朋友和家人的物品列表

00:08:08.755 --> 00:08:10.157 align:middle line:-1
（我的app）

00:08:10.224 --> 00:08:12.960 align:middle line:-2
当服务器收到这个请求时
它会回应一个JSON文件

00:08:13.026 --> 00:08:15.562 align:middle line:-2
这就表明
这里就是要卖的产品

00:08:17.297 --> 00:08:20.701 align:middle line:-2
从我的服务器
返回的API就是这样的

00:08:21.568 --> 00:08:24.471 align:middle line:-2
它是一个产品列表的数组
其中有些有意思的字段

00:08:24.538 --> 00:08:25.739 align:middle line:-1
你值得去看一下

00:08:25.806 --> 00:08:27.274 align:middle line:-1
（API响应示例）

00:08:27.341 --> 00:08:30.177 align:middle line:-1
例如 每个列表中有个产品ID

00:08:30.244 --> 00:08:33.013 align:middle line:-1
这是个用来标识产品的唯一正整数

00:08:33.080 --> 00:08:36.216 align:middle line:-2
在本例中
它们是些顺序的整数ID

00:08:37.384 --> 00:08:40.320 align:middle line:-1
每个列表还有字符串型的名字和描述

00:08:40.386 --> 00:08:41.788 align:middle line:-1
还有另外一些有类型的字段

00:08:41.855 --> 00:08:43.056 align:middle line:-1
值得我们看一下

00:08:44.124 --> 00:08:45.959 align:middle line:-1
例如 有一个字段是一个布林值

00:08:46.026 --> 00:08:48.462 align:middle line:-2
它表明了这个列表项
是不是已经被卖掉了

00:08:50.030 --> 00:08:51.398 align:middle line:-1
在其中还有一些内部结构

00:08:51.465 --> 00:08:54.234 align:middle line:-2
我们可能会用到
这个字符串型的标签列表

00:08:56.069 --> 00:08:58.739 align:middle line:-1
还有一些字符串型的字段

00:08:58.805 --> 00:09:01.909 align:middle line:-1
呈现的是我们想看的其他数据形式

