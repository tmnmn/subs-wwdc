WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:57.184 --> 00:37:01.021 align:middle line:-1
通过验证那些主要值的内容和结构

00:37:01.088 --> 00:37:02.956 align:middle line:-1
我们可以确保这些值是有效的

00:37:03.023 --> 00:37:05.192 align:middle line:-1
并将其转换为我们自己的模型类型

00:37:06.460 --> 00:37:07.761 align:middle line:-1
通过验证这些模型类型间的语义

00:37:07.828 --> 00:37:09.930 align:middle line:-1
和关系

00:37:10.130 --> 00:37:12.065 align:middle line:-1
我们保证了这些数据是有效的

00:37:12.132 --> 00:37:13.667 align:middle line:-1
并且是可以被信任的数据

00:37:15.903 --> 00:37:17.070 align:middle line:-1
然后呢？

00:37:17.137 --> 00:37:18.138 align:middle line:-1
（下一步）

00:37:18.205 --> 00:37:19.273 align:middle line:-1
你已了解这些内容

00:37:19.339 --> 00:37:22.442 align:middle line:-2
我鼓励你们去看看你们的代码
并且就这么去做

00:37:23.410 --> 00:37:25.412 align:middle line:-1
在每个生命周期验证数据

00:37:25.779 --> 00:37:27.781 align:middle line:-1
在该数据生命周期的每个阶段

00:37:28.048 --> 00:37:29.583 align:middle line:-1
检查类型和可空性

00:37:29.650 --> 00:37:33.120 align:middle line:-2
更重要的是 范围和长度
以及域名专属的app

00:37:34.855 --> 00:37:37.124 align:middle line:-2
如果你有NSCoding类型
审计这些类型

00:37:37.191 --> 00:37:38.959 align:middle line:-2
来获得
NSSecureCoding徽章

00:37:39.026 --> 00:37:40.194 align:middle line:-2
不要只是获得这个徽章
你要使用它

00:37:40.260 --> 00:37:42.262 align:middle line:-2
在任何能用的地方
开启安全编码

00:37:43.630 --> 00:37:47.301 align:middle line:-2
最后 在所有可以的地方
采用可编码来处理新的数据类型

00:37:47.367 --> 00:37:49.703 align:middle line:-1
并且保证执行该验证

00:37:50.237 --> 00:37:53.373 align:middle line:-1
保证你只用能信任的数据

00:37:54.374 --> 00:37:55.209 align:middle line:-1
（更多信息）

00:37:55.275 --> 00:37:57.311 align:middle line:-1
有关可编码的更多内容

00:37:57.511 --> 00:37:59.713 align:middle line:-2
请参见去年关于Foundation新特性
这个演讲

