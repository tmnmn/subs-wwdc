WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:57.758 --> 00:36:00.060 align:middle line:-2
然后将这些字符串映射到了
我自己的类型上

00:36:00.127 --> 00:36:02.296 align:middle line:-1
以供后面的验证所用

00:36:04.064 --> 00:36:05.432 align:middle line:-1
有了可编码

00:36:05.499 --> 00:36:08.101 align:middle line:-2
我就可以利用
标签也是遵从可编码的优势

00:36:08.168 --> 00:36:11.138 align:middle line:-1
所以我就可以直接解码一个标签数组

00:36:11.672 --> 00:36:13.173 align:middle line:-1
这是自动发生的

00:36:13.240 --> 00:36:14.975 align:middle line:-1
这样我就可以不用关注类型转化

00:36:15.042 --> 00:36:17.711 align:middle line:-1
而是关注对我来说重要的验证了

00:36:18.212 --> 00:36:20.848 align:middle line:-2
这可以让我确保
该数据是我能信任的数据

00:36:24.451 --> 00:36:26.253 align:middle line:-1
我们今天介绍了很多内容

00:36:27.187 --> 00:36:28.388 align:middle line:-1
我们从原始数据开始介绍

00:36:28.455 --> 00:36:31.291 align:middle line:-1
然后围绕着抽象范围介绍到

00:36:31.358 --> 00:36:32.292 align:middle line:-1
我们自己的模型类型

00:36:33.393 --> 00:36:36.330 align:middle line:-2
接着我们看了下如何通过验证校验和
或是原始数据的长度

00:36:38.665 --> 00:36:41.568 align:middle line:-1
来建立对于该数据的信任

00:36:41.635 --> 00:36:44.304 align:middle line:-2
我们保证了是通过检查
来证明它是有效的

00:36:44.638 --> 00:36:47.274 align:middle line:-1
甚至检查了它是否遵从于某些格式

00:36:47.341 --> 00:36:49.943 align:middle line:-1
在我们确保它遵从于一个已知格式后

00:36:50.611 --> 00:36:53.914 align:middle line:-2
我们就知道了
那个格式化数据是有效的

00:36:53.981 --> 00:36:55.682 align:middle line:-1
并且得到了主要值

00:36:56.216 --> 00:36:57.117 align:middle line:-1
（总结）

00:36:57.184 --> 00:37:01.021 align:middle line:-1
通过验证那些主要值的内容和结构

