WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:58.559 --> 00:06:00.360 align:middle line:-1
如果数据有任何的变化

00:06:00.427 --> 00:06:03.063 align:middle line:-1
不管是由于潜在的第三方恶意破坏

00:06:03.130 --> 00:06:04.731 align:middle line:-1
还是常规的数据损坏

00:06:04.798 --> 00:06:07.134 align:middle line:-2
磁盘的坏道
糟糕的网络连接…

00:06:07.734 --> 00:06:11.505 align:middle line:-2
如果数据的任何一个比特变化的话
就会让校验和

00:06:11.572 --> 00:06:12.573 align:middle line:-1
或签名无效

00:06:12.639 --> 00:06:14.875 align:middle line:-1
我们会在读取这些字节之前就知道

00:06:14.942 --> 00:06:17.411 align:middle line:-2
数据是不正确的
你不应该信任它

00:06:19.379 --> 00:06:21.615 align:middle line:-1
我们不总有一个检验和

00:06:21.682 --> 00:06:24.484 align:middle line:-2
可能这个数据不是我们所有的
我们不能提前得到它

00:06:24.551 --> 00:06:27.421 align:middle line:-2
所以在这个阶段
除了读取并且检查数据

00:06:27.788 --> 00:06:29.489 align:middle line:-1
我们不能对它进行更多处理了

00:06:30.657 --> 00:06:33.493 align:middle line:-2
在我们处理完原始数据后
就得到了主要数据

00:06:34.728 --> 00:06:37.431 align:middle line:-2
正如我们之前提到的
我们获取原始数据后

00:06:37.497 --> 00:06:39.566 align:middle line:-2
将其传过
通常会将它去序列化

00:06:39.633 --> 00:06:41.568 align:middle line:-2
像是foundations
JSON序列化

00:06:42.803 --> 00:06:45.372 align:middle line:-2
当我们完成操作时
我们会得到不活跃的字符串和字典

00:06:45.439 --> 00:06:47.774 align:middle line:-2
数字数组
以供我们使用

00:06:48.141 --> 00:06:50.677 align:middle line:-2
若这个过程成功了
我们就能了解该数据两方面内容

00:06:50.744 --> 00:06:52.246 align:middle line:-1
（主要数据）

00:06:52.312 --> 00:06:55.282 align:middle line:-2
第一点就是
该数据确实是我们所期望的正确格式

00:06:55.349 --> 00:06:58.185 align:middle line:-2
例如
XML数据不会通过JSON序列化

00:06:59.720 --> 00:07:01.822 align:middle line:-2
第二点就是
如果我们信任去序列化器

