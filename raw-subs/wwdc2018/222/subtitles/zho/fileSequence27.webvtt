WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.319 --> 00:27:00.354 align:middle line:-1
如果你在写Swift app

00:27:00.420 --> 00:27:01.855 align:middle line:-1
这是你需要留心的东西

00:27:02.422 --> 00:27:05.259 align:middle line:-2
Swift不能捕捉
Objective-C或C++异常

00:27:05.325 --> 00:27:07.628 align:middle line:-2
所以这可能会导致
你的app出现致命错误

00:27:07.895 --> 00:27:11.532 align:middle line:-2
这会导致出现崩溃
并给用户带来糟糕的体验

00:27:13.367 --> 00:27:16.370 align:middle line:-2
如果解码失败政策
是设定错误并返回的话

00:27:16.436 --> 00:27:19.006 align:middle line:-2
该错误会被分配到
Unarchiver的错误属性

00:27:19.506 --> 00:27:21.074 align:middle line:-1
然后会继续执行

00:27:21.742 --> 00:27:24.144 align:middle line:-1
在本例中 因为会继续执行

00:27:24.211 --> 00:27:26.547 align:middle line:-1
解码调用必须得返回某些内容

00:27:26.613 --> 00:27:29.917 align:middle line:-2
所以它会返回空
来表明没有任何内容可以被解码

00:27:31.818 --> 00:27:33.987 align:middle line:-2
如我们所提过的
如果你要解码一个主要类型

00:27:34.054 --> 00:27:37.824 align:middle line:-2
而且我们找到一个
不兼容的对象或是主要类型

00:27:38.225 --> 00:27:39.960 align:middle line:-1
那么就会出现一系列相同的步骤

00:27:40.027 --> 00:27:41.929 align:middle line:-1
本例中 就会不返回空

00:27:41.995 --> 00:27:43.897 align:middle line:-1
我们就返回零

00:27:47.634 --> 00:27:50.204 align:middle line:-2
failWithError是
NSKeyedUnarchiver上的API

00:27:50.270 --> 00:27:53.707 align:middle line:-2
我鼓励你们使用自己的代码
来表明失败的出现

00:27:53.774 --> 00:27:55.142 align:middle line:-1
以及出现了什么问题

00:27:55.609 --> 00:27:57.211 align:middle line:-1
这里不会返回空

00:27:57.277 --> 00:27:59.913 align:middle line:-2
failWithError
首先会记录该信息

00:27:59.980 --> 00:28:01.348 align:middle line:-1
（失败得有意义）

