WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:59.907 --> 00:29:01.508 align:middle line:-1
让我们将其提炼成一个清单

00:29:01.575 --> 00:29:04.278 align:middle line:-2
看看如何在我们自己的类型上
采用NSSecureCoding

00:29:05.412 --> 00:29:08.348 align:middle line:-2
开始时我们会将
所有键调用的解码对象

00:29:08.415 --> 00:29:11.151 align:middle line:-2
转变成允许我们
提前传入类型信息的变量

00:29:11.218 --> 00:29:12.619 align:middle line:-2
（采用
NSSECURECODING的清单）

00:29:12.686 --> 00:29:15.055 align:middle line:-2
随后如果出现了问题
不要只是返回空

00:29:15.122 --> 00:29:17.191 align:middle line:-2
用failWithError
来表明出现了什么问题

00:29:18.659 --> 00:29:21.995 align:middle line:-2
最后 这是个审计
未来失败点的好机会

00:29:22.062 --> 00:29:24.264 align:middle line:-1
我们还没有对这些点进行过验证

00:29:24.798 --> 00:29:26.033 align:middle line:-1
让我们这么做吧

00:29:27.267 --> 00:29:30.304 align:middle line:-1
这里有个解码调用来解码列表项

00:29:30.504 --> 00:29:33.507 align:middle line:-2
你会发现如果我们
提前传入类型信息的话

00:29:33.574 --> 00:29:35.742 align:middle line:-2
有条件地向下转型
随后会消失

00:29:36.910 --> 00:29:38.745 align:middle line:-1
这个方法有个一般覆盖

00:29:38.812 --> 00:29:41.148 align:middle line:-1
在静态地给出类型信息时

00:29:41.215 --> 00:29:44.084 align:middle line:-1
会让你没法再有条件地向下转型

00:29:44.151 --> 00:29:46.119 align:middle line:-1
你可以一直获得该类的对象

00:29:47.554 --> 00:29:50.657 align:middle line:-1
不要在失败时返回空

00:29:50.724 --> 00:29:52.259 align:middle line:-1
我们想要失败得有意义

00:29:52.492 --> 00:29:56.096 align:middle line:-2
我们可以在失败时 创建一个
表明在哪出现了什么问题的错误

00:29:57.197 --> 00:29:58.031 align:middle line:-1
在本例中

00:29:58.098 --> 00:30:00.634 align:middle line:-2
我们可以使用CocoaError
上的便利内容

