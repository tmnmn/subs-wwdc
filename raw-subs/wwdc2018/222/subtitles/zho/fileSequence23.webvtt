WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.114 --> 00:23:03.884 align:middle line:0
当我们进行这么一个调用时
NSKeyedUnarchiver

00:23:03.951 --> 00:23:06.753 align:middle line:0
会利用我们使用的对象
也就是这个类

00:23:07.054 --> 00:23:09.323 align:middle line:0
并从这个类
构造一个允许的类的列表

00:23:10.924 --> 00:23:14.027 align:middle line:0
当我们接着
从归档中解码一个对象时

00:23:14.094 --> 00:23:17.130 align:middle line:0
允许的类列表
会首先检查这个类

00:23:17.431 --> 00:23:18.732 align:middle line:0
如果它没有出现在列表中

00:23:19.499 --> 00:23:21.201 align:middle line:0
这个解码调用就会被拒绝

00:23:22.803 --> 00:23:25.639 align:middle line:0
如果我们在归档中
找到的类的对象

00:23:25.706 --> 00:23:27.074 align:middle line:0
出现在允许的类列表中

00:23:27.608 --> 00:23:29.376 align:middle line:0
我们需要执行几个检查

00:23:30.577 --> 00:23:32.913 align:middle line:0
我们需要保证这个类本身

00:23:32.980 --> 00:23:34.915 align:middle line:0
也遵从于
NSSecureCoding

00:23:35.883 --> 00:23:38.285 align:middle line:0
如果它不遵从的话
我们就没法保证它本身

00:23:38.352 --> 00:23:41.054 align:middle line:0
会在后面安全地
解码它自己的内容

00:23:41.488 --> 00:23:43.991 align:middle line:0
那样的话我们就不能
安全地解码其中的对象了

00:23:44.992 --> 00:23:46.760 align:middle line:0
在我们的例子中
这个购买记录类遵从于该协议

00:23:46.827 --> 00:23:48.595 align:middle line:0
所以它可以安全地解码并追踪

00:23:50.030 --> 00:23:51.031 align:middle line:0
还有其他两种检查

00:23:51.098 --> 00:23:54.301 align:middle line:0
是跟超类、子类关系有关的

00:23:55.669 --> 00:23:58.505 align:middle line:0
如果你有两个类
一个是另一个的子类

00:23:58.572 --> 00:24:00.207 align:middle line:0
两个类都遵从NSCoding

