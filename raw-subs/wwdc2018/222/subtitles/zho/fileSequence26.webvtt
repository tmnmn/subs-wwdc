WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.692 --> 00:26:00.460 align:middle line:-1
（解码失败）

00:26:00.527 --> 00:26:02.896 align:middle line:-1
这里还有可能出现另一个形式的失败

00:26:02.963 --> 00:26:04.097 align:middle line:-1
那就是归档损坏

00:26:04.164 --> 00:26:05.899 align:middle line:-1
如果归档本身损坏严重

00:26:05.966 --> 00:26:09.369 align:middle line:-2
而且不符合
NSKeyedUnarchiver所期望的格式

00:26:09.436 --> 00:26:11.171 align:middle line:-1
我们就不能解码任何内容

00:26:11.238 --> 00:26:12.806 align:middle line:-1
因此你就会得到相同类型的失败

00:26:14.908 --> 00:26:16.743 align:middle line:-1
出现失败时会发生什么

00:26:16.810 --> 00:26:20.447 align:middle line:-2
是取决于Unarchiver上的
解码失败政策的

00:26:20.848 --> 00:26:21.949 align:middle line:-1
这里有两个选项

00:26:22.850 --> 00:26:24.818 align:middle line:-2
在失败的时候
我们可以抛出一个异常

00:26:25.752 --> 00:26:29.156 align:middle line:-2
或是储存出现问题的有关信息
并继续执行

00:26:29.923 --> 00:26:32.125 align:middle line:-1
抛出异常是当前的默认选项

00:26:34.027 --> 00:26:36.730 align:middle line:-1
如果我们有个来自前面的调用

00:26:36.797 --> 00:26:38.165 align:middle line:-1
试图解码一个列表项

00:26:38.465 --> 00:26:41.468 align:middle line:-2
我们会在归档中
找到一个不想要的类的对象

00:26:42.135 --> 00:26:44.505 align:middle line:-2
它会在底层调用
failWithError这个方法

00:26:44.571 --> 00:26:45.572 align:middle line:-1
这个方法在Unarchiver中

00:26:46.106 --> 00:26:49.343 align:middle line:-2
并会传入一个表明了
在哪出现了什么问题的错误

00:26:50.577 --> 00:26:53.380 align:middle line:-2
在底层 failWithError
要做个决定

00:26:54.314 --> 00:26:56.683 align:middle line:-2
如果解码失败政策
是抛出异常的话

00:26:56.750 --> 00:26:58.619 align:middle line:-1
它就会抛出异常

00:26:59.319 --> 00:27:00.354 align:middle line:-1
如果你在写Swift app

