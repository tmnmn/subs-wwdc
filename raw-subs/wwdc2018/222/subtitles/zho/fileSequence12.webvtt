WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.185 --> 00:12:00.587 align:middle line:-1
在本例中 我会忽略掉所有

00:12:00.654 --> 00:12:02.656 align:middle line:-1
无有效标签列表的产品列表项

00:12:03.190 --> 00:12:05.792 align:middle line:-2
我可以抛出一个错误
但是在这里 我不会这么做

00:12:07.828 --> 00:12:10.797 align:middle line:-1
类型验证不是你能在这个阶段所用的

00:12:10.864 --> 00:12:12.766 align:middle line:-1
唯一验证形式

00:12:13.467 --> 00:12:15.936 align:middle line:-1
例如 如果被替换成空的话

00:12:16.003 --> 00:12:17.504 align:middle line:-1
在JSON中是完全有效的

00:12:17.571 --> 00:12:19.039 align:middle line:-1
（可空性验证）

00:12:19.106 --> 00:12:20.674 align:middle line:-1
我看到过一个类似的崩溃

00:12:22.142 --> 00:12:25.712 align:middle line:-2
在Swift中 强静态类型
系统可空性是类型的一部分

00:12:25.913 --> 00:12:28.382 align:middle line:-1
而且你不能将空向下转型成字符串

00:12:28.582 --> 00:12:30.551 align:middle line:-1
所以这个转型是会失败的

00:12:32.886 --> 00:12:36.323 align:middle line:-1
即使所有值都有正确的类型和可空性

00:12:36.390 --> 00:12:39.026 align:middle line:-1
我们还应该注意其他的验证形式

00:12:39.960 --> 00:12:41.895 align:middle line:-1
例如 我说过每个产品列表项

00:12:41.962 --> 00:12:43.397 align:middle line:-1
都有一个正整数ID

00:12:43.463 --> 00:12:45.465 align:middle line:-1
在我的例子中 它们是顺序的整数

00:12:46.033 --> 00:12:48.468 align:middle line:-1
若这些ID中有负数的话有意义吗？

00:12:49.203 --> 00:12:50.204 align:middle line:-1
是没有意义的

00:12:50.270 --> 00:12:52.840 align:middle line:-1
即使它一直是正数

00:12:52.906 --> 00:12:55.409 align:middle line:-1
如果是很大的正整数值有意义吗？

00:12:56.577 --> 00:12:57.978 align:middle line:-1
我卖不了那么多东西

00:12:58.045 --> 00:12:59.346 align:middle line:-1
所以在本例中是没意义的

00:12:59.413 --> 00:13:02.883 align:middle line:-2
这可能是有人想在我的app中
引起溢出

