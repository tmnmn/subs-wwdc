WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:00.133 --> 00:05:02.069 align:middle line:-1
让我们从原始数据开始讲起

00:05:02.836 --> 00:05:04.505 align:middle line:-1
正如我们刚才所说的

00:05:04.571 --> 00:05:07.541 align:middle line:-2
原始数据就是进入你app的
一个字节流

00:05:08.475 --> 00:05:11.211 align:middle line:-1
在你检查了该数据并赋予其意义之前

00:05:11.278 --> 00:05:12.379 align:middle line:-1
你用它干不了什么

00:05:12.446 --> 00:05:13.714 align:middle line:-1
（原始数据）

00:05:13.780 --> 00:05:16.750 align:middle line:-1
现在我们或许想知道

00:05:16.817 --> 00:05:18.986 align:middle line:-2
在我们开始检查这个数据前
能看到什么内容

00:05:19.386 --> 00:05:20.721 align:middle line:-1
这样做是不是安全呢？

00:05:22.022 --> 00:05:25.359 align:middle line:-2
我们在用该数据之前
所能验证的一个内容就是它的长度

00:05:26.293 --> 00:05:29.196 align:middle line:-2
比如 你的app
要从磁盘加载1字节的文件

00:05:29.263 --> 00:05:31.231 align:middle line:-1
但是在磁盘中找到了十亿字节的文件

00:05:32.199 --> 00:05:34.401 align:middle line:-1
你是不是应该加载这个数据

00:05:34.468 --> 00:05:35.469 align:middle line:-1
并且开始读取它呢？

00:05:35.969 --> 00:05:37.137 align:middle line:-1
当然不是了

00:05:38.605 --> 00:05:41.175 align:middle line:-1
有时候我们或许不能确定

00:05:41.241 --> 00:05:42.176 align:middle line:-1
数据的长度

00:05:42.242 --> 00:05:43.944 align:middle line:-1
可能它是不被我们拥有的外部数据

00:05:44.011 --> 00:05:45.679 align:middle line:-1
我们不知道会有多少数据

00:05:46.880 --> 00:05:47.714 align:middle line:-1
但是在某些情况下

00:05:47.781 --> 00:05:49.816 align:middle line:-1
我们可以验证校验和

00:05:49.883 --> 00:05:51.418 align:middle line:-1
或是加密签名

00:05:51.718 --> 00:05:53.654 align:middle line:-1
这样就呈现了数据看起来是什么样子

00:05:53.720 --> 00:05:55.189 align:middle line:-1
即使我们不知道内部什么样

00:05:56.056 --> 00:05:58.225 align:middle line:-1
校验和就是对所有数据进行哈希处理

00:05:58.559 --> 00:06:00.360 align:middle line:-1
如果数据有任何的变化

