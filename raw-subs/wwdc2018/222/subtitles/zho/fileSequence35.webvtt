WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.198 --> 00:35:01.268 align:middle line:-2
我在这个验证方法中
添加的自己的验证

00:35:02.102 --> 00:35:04.705 align:middle line:-1
这里我想执行相同的验证

00:35:04.771 --> 00:35:06.507 align:middle line:-1
以保证ID是有效的

00:35:06.573 --> 00:35:09.209 align:middle line:-2
这里我可以用一个便利方法
来抛出一个有意义的错误

00:35:09.276 --> 00:35:10.777 align:middle line:-1
来表明所出现的问题

00:35:13.480 --> 00:35:15.182 align:middle line:-1
然后在该验证函数中

00:35:15.249 --> 00:35:18.185 align:middle line:-1
我会以字符串调出创建日期

00:35:18.252 --> 00:35:20.687 align:middle line:-1
然后将其传入日期格式化器

00:35:21.522 --> 00:35:23.524 align:middle line:-1
来获取一个有效的日期

00:35:25.526 --> 00:35:29.763 align:middle line:-2
因为我们使用的是JSON解码器
我们只要直接解码日期就可以了

00:35:29.830 --> 00:35:32.099 align:middle line:-1
我们不需要担心类型转换

00:35:32.733 --> 00:35:35.536 align:middle line:-2
我们可以用JSON解码器
的日期解码政策

00:35:35.602 --> 00:35:38.071 align:middle line:-1
来表明会进行哪种转换

00:35:38.739 --> 00:35:41.875 align:middle line:-2
这样很不错
因为这个转换一行代码就能实现

00:35:42.776 --> 00:35:43.610 align:middle line:-1
而且…

00:35:43.677 --> 00:35:45.646 align:middle line:-1
其他的解码调用也是一行就能实现

00:35:45.712 --> 00:35:47.214 align:middle line:-1
这样我就可以更容易地关注

00:35:47.281 --> 00:35:49.183 align:middle line:-1
我所关心的类型验证

00:35:51.685 --> 00:35:52.986 align:middle line:-1
在这个验证函数中

00:35:53.053 --> 00:35:56.056 align:middle line:-1
我可能已经以字符串数组的形式

00:35:56.123 --> 00:35:57.257 align:middle line:-1
调出了标签的子结构

00:35:57.758 --> 00:36:00.060 align:middle line:-2
然后将这些字符串映射到了
我自己的类型上

