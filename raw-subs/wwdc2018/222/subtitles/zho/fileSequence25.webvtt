WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.366 --> 00:25:00.968 align:middle line:-2
（利用NSSECURECODING
来解码对象）

00:25:01.034 --> 00:25:03.003 align:middle line:-2
当它这么做的时候
NSKeyedUnarchiver

00:25:03.070 --> 00:25:05.873 align:middle line:-2
会使用这个类
来构造一个新的允许类列表

00:25:06.340 --> 00:25:08.675 align:middle line:-2
这个新版本的列表的
所有内容都会被检查

00:25:09.877 --> 00:25:12.679 align:middle line:-2
我们解码一个对象时
会执行相同的检查

00:25:12.746 --> 00:25:14.982 align:middle line:-2
在本例中
列表项仍然是可以有效编码的

00:25:17.851 --> 00:25:18.785 align:middle line:-1
但是…

00:25:18.852 --> 00:25:21.488 align:middle line:-1
如果我们试图解码一个不在列表中的

00:25:21.555 --> 00:25:23.390 align:middle line:-2
不想要的类的对象的话
它会被拒绝

00:25:25.726 --> 00:25:28.495 align:middle line:-2
让我们看下
这样的拒绝是什么样的

00:25:28.929 --> 00:25:30.564 align:middle line:-1
这叫做解码失败

00:25:30.631 --> 00:25:32.032 align:middle line:-1
还有几种类型的失败

00:25:32.099 --> 00:25:33.300 align:middle line:-1
我们应该留意一下

00:25:33.734 --> 00:25:35.235 align:middle line:-1
当开启了安全编码时

00:25:35.302 --> 00:25:37.004 align:middle line:-1
我们可以看到像是这样的

00:25:37.070 --> 00:25:38.138 align:middle line:-1
违反安全解码

00:25:38.205 --> 00:25:40.007 align:middle line:-1
还有其他的失败形式

00:25:41.375 --> 00:25:43.677 align:middle line:-1
例如 如果你试图解码对象的话

00:25:43.744 --> 00:25:46.413 align:middle line:-2
可能会出现类型的不匹配
出现在这个位置的归档中

00:25:46.480 --> 00:25:48.715 align:middle line:-1
有一个像是整数的主要值

00:25:49.116 --> 00:25:52.186 align:middle line:-2
或者你试图解码一个
像是整数的主要值

00:25:52.252 --> 00:25:53.754 align:middle line:-1
但我们找到一个

00:25:53.820 --> 00:25:56.256 align:middle line:-2
不兼容类型的对象或是主要值
像是双整形

00:25:57.024 --> 00:25:58.625 align:middle line:-1
这就会导致解码失败

00:25:58.692 --> 00:26:00.460 align:middle line:-1
（解码失败）

