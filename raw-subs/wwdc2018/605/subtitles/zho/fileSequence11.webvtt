WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.559 --> 00:11:01.728 align:middle line:-2
比如在零售环境
或博物馆中的固定安装

00:11:02.763 --> 00:11:06.400 align:middle line:-2
楼下游戏室内 我们用了
iBeacon 因此设备就知道

00:11:06.466 --> 00:11:11.772 align:middle line:-2
它们相邻的桌子是哪个并为该区域
加载正确的WorldMap

00:11:12.272 --> 00:11:14.007 align:middle line:-1
那真的会让体验变得很魔幻

00:11:16.577 --> 00:11:17.911 align:middle line:-1
SwiftShot的一个特性

00:11:17.978 --> 00:11:19.746 align:middle line:-2
你可能用过
如果你自己创建过app

00:11:19.813 --> 00:11:24.451 align:middle line:-2
即允许玩家把游戏板
放在虚拟世界中的能力

00:11:24.885 --> 00:11:27.354 align:middle line:-2
在楼下的桌子上
我们使用了预加载地图

00:11:27.421 --> 00:11:29.756 align:middle line:-2
但这里有一个例子
关于创建你自己的游戏板

00:11:29.823 --> 00:11:31.425 align:middle line:-1
并把它放在虚拟世界中

00:11:33.894 --> 00:11:35.028 align:middle line:-1
这是如何创建

00:11:36.029 --> 00:11:38.799 align:middle line:-2
正如你在视频中所看到的
你从扫描表面开始

00:11:38.866 --> 00:11:40.934 align:middle line:-1
让ARKit创建该区域的地图

00:11:42.603 --> 00:11:44.872 align:middle line:-1
然后你可以把那个地图序列化为数据

00:11:44.938 --> 00:11:46.507 align:middle line:-1
并把它转换到另一台设备上

00:11:47.975 --> 00:11:51.178 align:middle line:-2
目标设备就会把地图加载到
ARKit中并使用它

00:11:51.245 --> 00:11:52.880 align:middle line:-1
来识别同一个表面

00:11:53.247 --> 00:11:56.416 align:middle line:-2
在那点上
我们拥有现实世界中的共享基准点

00:11:56.483 --> 00:12:00.687 align:middle line:-2
两台设备都可以把游戏板
渲染到那个世界中的同一个位置

