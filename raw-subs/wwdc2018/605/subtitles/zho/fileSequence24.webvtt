WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:57.704 --> 00:24:00.741 align:middle line:-2
这是因为我们并不是发送
游戏中每一个对象的信息

00:24:01.074 --> 00:24:04.511 align:middle line:-2
只发送那些与游戏设置相关的
对象的信息 比如方框

00:24:04.578 --> 00:24:06.413 align:middle line:-1
落弹数和弹弩

00:24:06.914 --> 00:24:11.018 align:middle line:-2
还有一些东西
比如模拟绳子和投石器的摇摆

00:24:11.084 --> 00:24:16.089 align:middle line:-2
微粒等等
这些只是在每台设备上本地实现的

00:24:16.156 --> 00:24:19.660 align:middle line:-2
因为它对于游戏来说并不是关键因素
它们可出现在每台设备上的同一位置

00:24:24.031 --> 00:24:26.867 align:middle line:-2
现在在我们的实现过程中
我们发现的其中一件事就是

00:24:26.934 --> 00:24:29.870 align:middle line:-1
物理引擎的响应很不一样

00:24:29.937 --> 00:24:31.572 align:middle line:-1
取决于对象的比例

00:24:32.206 --> 00:24:34.107 align:middle line:-1
那么物理模拟认为

00:24:34.174 --> 00:24:37.678 align:middle line:-2
对象比你在现实世界中看到的尺寸
要大十倍

00:24:38.278 --> 00:24:41.181 align:middle line:-2
我们发现
那会提供最佳的游戏设置体验

00:24:41.248 --> 00:24:42.416 align:middle line:-1
和最好的性能

00:24:43.150 --> 00:24:44.685 align:middle line:-1
我们需要改善一些物理定律

00:24:44.751 --> 00:24:47.988 align:middle line:-2
让一切看起来都正常 但是你知道的
当你创建游戏时

00:24:48.055 --> 00:24:50.357 align:middle line:-2
若看起来还不错 感觉也不错
而且它还有意思

00:24:50.691 --> 00:24:51.558 align:middle line:-1
那就对了

00:24:53.760 --> 00:24:56.930 align:middle line:-2
现在要共享那个物理状态
并确保一切看起来都正常

00:24:56.997 --> 00:24:59.166 align:middle line:-1
我们需要共享四个信息：

00:24:59.633 --> 00:25:00.501 align:middle line:-1
位置

