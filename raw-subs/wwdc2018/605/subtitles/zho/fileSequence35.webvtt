WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.865 --> 00:35:00.234 align:middle line:-2
SceneKit提供一系列
内置物理实体类型

00:35:00.300 --> 00:35:02.603 align:middle line:-1
比如立方体、球体、圆柱体

00:35:03.303 --> 00:35:06.073 align:middle line:-2
如果你使用这些
你就会获得最佳性能

00:35:06.807 --> 00:35:08.475 align:middle line:-1
如果你不指定其中一个

00:35:08.542 --> 00:35:12.579 align:middle line:-2
SceneKit将自动为你创建
一个凸壳 你就得用那个

00:35:12.913 --> 00:35:16.850 align:middle line:-1
但可能会得到较慢的性能实施

00:35:17.150 --> 00:35:19.953 align:middle line:-1
通过添加这些对象 当它们可用

00:35:20.020 --> 00:35:23.023 align:middle line:-2
并且当它们的存在有意义时
我们真的会加速游戏的性能

00:35:25.959 --> 00:35:28.762 align:middle line:-1
那么这是一些关于物理成品的示例

00:35:29.329 --> 00:35:30.898 align:middle line:-1
第一个是游戏中的一个组块

00:35:30.964 --> 00:35:34.034 align:middle line:-2
在本例中 一个带纹理的圆柱体
营造了一种木纹效果

00:35:35.068 --> 00:35:37.237 align:middle line:-1
接下来是弹弓 悬带是松弛的

00:35:37.905 --> 00:35:40.474 align:middle line:-2
我们在RunTime时
用着色器添加了团队颜色

00:35:40.541 --> 00:35:43.477 align:middle line:-2
并针对弹弓在游戏设置中的动作
创建了一些自定义动画

00:35:44.912 --> 00:35:48.415 align:middle line:-2
最后我们引入了一些额外的资产
并不包含在游戏设置中

00:35:48.749 --> 00:35:50.284 align:middle line:-1
即便我们要牺牲掉它们

00:35:50.350 --> 00:35:53.153 align:middle line:-2
我们希望你拥有它们
并在你自己的示例代码中使用它们

00:35:56.190 --> 00:35:59.493 align:middle line:-2
因此我们包括在内的另一个
有意思的东西是这个旗子动画

00:35:59.726 --> 00:36:01.828 align:middle line:-2
它很好地改善了
游戏环境中的沉浸体验

