WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:57.311 --> 00:18:00.681 align:middle line:-2
如果你计划在不同app之间
移动WorldMap

00:18:01.048 --> 00:18:03.517 align:middle line:-2
NSKeyedArchiver
可以帮助你调整

00:18:05.185 --> 00:18:09.056 align:middle line:-2
那么这是WorldMap共享
它是iOS 12中的新特性

00:18:09.122 --> 00:18:11.992 align:middle line:-2
我们真的期待看到你们大家
能用它做出来什么东西

00:18:14.494 --> 00:18:16.763 align:middle line:-2
接下来让我们谈谈
我们嵌入到游戏中的网络

00:18:17.798 --> 00:18:20.701 align:middle line:-2
我们使用了iOS的
多点连通性API

00:18:20.767 --> 00:18:23.837 align:middle line:-2
自从iOS 7开始就存在于
系统中了 目的是嵌入网络

00:18:24.638 --> 00:18:25.806 align:middle line:-1
多点连通性

00:18:25.873 --> 00:18:29.276 align:middle line:-2
允许我们在本地网络上设置一个
点对点会话

00:18:29.543 --> 00:18:31.812 align:middle line:-1
允许会话中的设备进行通讯

00:18:31.879 --> 00:18:33.647 align:middle line:-1
而无需通过专用服务器

00:18:34.481 --> 00:18:37.851 align:middle line:-2
现在在我们的app中
我们指定其中一台设备作为服务器

00:18:38.051 --> 00:18:40.187 align:middle line:-1
但是我们为我们的app所做的事

00:18:40.254 --> 00:18:41.688 align:middle line:-1
它并不是协议所固有的

00:18:43.023 --> 00:18:46.326 align:middle line:-1
加密和验证内嵌到多点连通性中

00:18:46.860 --> 00:18:48.695 align:middle line:-1
在我们的例子中 我们没有使用验证

00:18:48.762 --> 00:18:51.465 align:middle line:-2
因为我们想得到非常迅速地
进入和退出的体验

00:18:51.532 --> 00:18:53.066 align:middle line:-1
但我们使用了加密

00:18:53.767 --> 00:18:57.604 align:middle line:-1
我们发现打开加密真的不会影响性能

00:18:57.671 --> 00:19:01.542 align:middle line:-1
无论是在网络数据尺寸还是计算方面

