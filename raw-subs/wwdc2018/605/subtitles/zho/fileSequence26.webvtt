WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.625 --> 00:26:03.096 align:middle line:0
当我们写代码时
那么我们就能消除信号位

00:26:03.530 --> 00:26:06.867 align:middle line:0
通过把那个正常化到0和80米之间

00:26:06.934 --> 00:26:08.669 align:middle line:0
即使我们的原始位置在桌子的中心

00:26:09.403 --> 00:26:10.704 align:middle line:0
现在所有值都是正值

00:26:12.172 --> 00:26:15.108 align:middle line:0
然后我们把那个值削减到0和1之间

00:26:15.676 --> 00:26:17.578 align:middle line:0
那样我们就不需要指数信息

00:26:17.644 --> 00:26:20.747 align:middle line:0
协议内固有的指数信息

00:26:22.649 --> 00:26:24.484 align:middle line:-1
最后 我们把这个数

00:26:24.551 --> 00:26:26.453 align:middle line:-1
按比例缩减为可用的位数

00:26:26.954 --> 00:26:32.926 align:middle line:0
从而所有值都是一个浮点值
并且所有的0都是浮点0

00:26:34.094 --> 00:26:38.532 align:middle line:0
这就给我们提供了毫米比例精度
我们发现它已经足够

00:26:38.966 --> 00:26:41.735 align:middle line:0
用于实现游戏中流畅、同步的体验

00:26:43.403 --> 00:26:46.607 align:middle line:-2
现在我们对你所看到的其它值
应用了一个类似的技巧

00:26:46.673 --> 00:26:49.543 align:middle line:-1
速度、角速度和定向

00:26:51.078 --> 00:26:53.680 align:middle line:-1
缩减范围和位数

00:26:53.747 --> 00:26:56.183 align:middle line:-1
以便确保我们对信息的传输

00:26:56.250 --> 00:26:57.551 align:middle line:-1
保持了最小的数据量

00:26:58.051 --> 00:27:02.589 align:middle line:-2
总之 我们对每个对象
减少了半数以上的位数

