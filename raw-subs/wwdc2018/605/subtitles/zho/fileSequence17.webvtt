WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:56.283 --> 00:17:00.287 align:middle line:-2
决定他们是否在 你知道的
一张小桌子顶部和表面上玩

00:17:00.354 --> 00:17:03.757 align:middle line:-2
或者他们想把游戏板
变成篮球场那么大的尺寸

00:17:06.627 --> 00:17:09.096 align:middle line:-2
我们思考了一下
把那个添加到我们的网络协议中

00:17:09.162 --> 00:17:12.266 align:middle line:-2
和WorldMap一起
但是我们遇到了一个更好的方案

00:17:13.200 --> 00:17:17.171 align:middle line:-2
我们创建了ARAnchor
的自定义子类 称其为游戏板锚点

00:17:17.871 --> 00:17:21.040 align:middle line:-2
并把那个信息添加到那个类中
即游戏板的尺寸

00:17:22.175 --> 00:17:25.546 align:middle line:-1
然后我们确保我们实施了

00:17:25.945 --> 00:17:28.916 align:middle line:-2
NSCoding所需的类
或覆盖它们

00:17:29.183 --> 00:17:32.819 align:middle line:-2
当对象被序列化时
以便包含那个信息

00:17:33.387 --> 00:17:36.590 align:middle line:-2
现在信息被直接包含在
WorldMap内

00:17:36.790 --> 00:17:38.825 align:middle line:-1
当我们把它迁移到另一台设备上时

00:17:39.193 --> 00:17:40.861 align:middle line:-1
这样很简单 也很直截了当

00:17:42.095 --> 00:17:44.998 align:middle line:-2
有一件事需要记住
这给我们增加了一点困扰

00:17:45.465 --> 00:17:51.305 align:middle line:-2
当你用Swift来做这样的子类时
当你序列化子类时

00:17:51.672 --> 00:17:52.773 align:middle line:-1
模块的名称

00:17:52.840 --> 00:17:55.609 align:middle line:-1
或app的名称会包含在类的名称之中

00:17:55.976 --> 00:17:57.244 align:middle line:-1
你要引起注意

00:17:57.311 --> 00:18:00.681 align:middle line:-2
如果你计划在不同app之间
移动WorldMap

