WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:56.483 --> 00:12:00.687 align:middle line:-2
两台设备都可以把游戏板
渲染到那个世界中的同一个位置

00:12:02.856 --> 00:12:04.458 align:middle line:-1
实施的第一个步骤

00:12:04.525 --> 00:12:07.294 align:middle line:-2
从第一台设备上的
ARSession中获取世界地图

00:12:08.161 --> 00:12:12.866 align:middle line:0
这就是iOS 12在ARSession中
对一个新API的调用 getCurrentWorldMap

00:12:13.367 --> 00:12:15.135 align:middle line:0
它创建了一个
ARWorldMap对象

00:12:15.202 --> 00:12:17.771 align:middle line:0
根据会话当前对你周围世界的了解

00:12:18.172 --> 00:12:20.340 align:middle line:0
然后把它返回到一个异步回调中

00:12:20.941 --> 00:12:22.776 align:middle line:0
然后我们使用
NSKeyedArchiver

00:12:23.677 --> 00:12:25.879 align:middle line:0
把它序列化为数据对象

00:12:26.380 --> 00:12:28.882 align:middle line:0
然后你可以保存数据
或把它发送到网络上

00:12:31.585 --> 00:12:33.187 align:middle line:-1
一旦你拥有那个数据对象

00:12:33.520 --> 00:12:36.056 align:middle line:-2
然后你要决定如何把它
从一台设备转到另台设备上

00:12:36.557 --> 00:12:39.026 align:middle line:-2
对于特设游戏
比如你在视频中看到的游戏

00:12:39.459 --> 00:12:41.595 align:middle line:-2
SwiftShot使用
点对点网络连接

00:12:41.662 --> 00:12:43.497 align:middle line:-1
我们会在立刻获得更多细节

00:12:44.565 --> 00:12:46.567 align:middle line:-1
当第二胎设备连接到网络会话中时

00:12:47.000 --> 00:12:50.370 align:middle line:-2
第一台设备序列化WorldMap
并把它发送到网络上

00:12:50.838 --> 00:12:52.806 align:middle line:-1
这对于博弈游戏的情况来说很棒

00:12:52.873 --> 00:12:56.243 align:middle line:-2
用户在任何拥有一个表面的地方
都能玩游戏

00:12:58.846 --> 00:13:01.615 align:middle line:-2
对于楼下的游戏桌而言
我们用了一个不同的方式

