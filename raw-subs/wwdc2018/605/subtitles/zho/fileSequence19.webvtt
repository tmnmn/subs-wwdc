WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:57.671 --> 00:19:01.542 align:middle line:-1
无论是在网络数据尺寸还是计算方面

00:19:01.608 --> 00:19:03.277 align:middle line:-1
因此没有什么原因让我们不使用它

00:19:05.078 --> 00:19:09.483 align:middle line:-2
多点连通性
还给API提供了广告和发现

00:19:10.217 --> 00:19:12.052 align:middle line:-1
我们用它来推广可用的游戏

00:19:12.119 --> 00:19:13.854 align:middle line:-1
并允许玩家选择一个游戏加入

00:19:15.255 --> 00:19:16.790 align:middle line:-1
这就是我们如何设置会话的

00:19:17.524 --> 00:19:18.725 align:middle line:-1
首先在一台设备上

00:19:18.792 --> 00:19:22.162 align:middle line:-1
用户决定把自己设置为app的主机

00:19:23.330 --> 00:19:26.033 align:middle line:-2
他们可以扫描世界
把游戏板放在那个世界中

00:19:27.234 --> 00:19:31.538 align:middle line:-2
然后设备就开启一个新会话
一个多点连通性会话

00:19:31.605 --> 00:19:34.374 align:middle line:-2
并开始在本地网络上
把它推广到其它设备

00:19:36.109 --> 00:19:39.179 align:middle line:-2
另一台设备上的用户
查看了一个可用游戏列表

00:19:39.980 --> 00:19:43.817 align:middle line:-2
当他选择了某个游戏时 他的设备
就发送一个请求 请求加入现有会话

00:19:45.552 --> 00:19:47.888 align:middle line:-1
一旦第一台设备接受请求

00:19:47.955 --> 00:19:50.657 align:middle line:-2
多点连通性就设置一个
真正的点对点网络

00:19:51.058 --> 00:19:52.993 align:middle line:-1
网络中的任何设备

00:19:53.060 --> 00:19:55.229 align:middle line:-1
都可以向网络中的任意设备发送信息

00:19:55.929 --> 00:19:59.499 align:middle line:-2
在SwiftShot中
我们指定了开启会话的设备

00:19:59.566 --> 00:20:01.468 align:middle line:-1
作为游戏状态的事实来源

