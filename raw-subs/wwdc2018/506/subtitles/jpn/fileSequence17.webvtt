WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:56.350 --> 00:17:00.487 align:start position:32% line:-2
これら３つのコールを
バッチで実行できます

00:17:00.687 --> 00:17:05.592 align:start position:23% line:-2
最初の例と同じ４つのアイテムを
１つのコールで処理します

00:17:08.694 --> 00:17:10.297 align:start position:36% line:-1
次はイベントです

00:17:11.531 --> 00:17:15.002 align:start position:21% line:-2
MusicKitはイベントを発し
これはUIの駆動に使用されます

00:17:15.135 --> 00:17:17.671 align:start position:25% line:-2
このように設定するのは
MusicKitはフル再生に

00:17:17.771 --> 00:17:20.641 align:start position:27% line:-2
オーディオ要素を
保有する必要があるためです

00:17:21.675 --> 00:17:25.779 align:start position:9% line:-2
“addEventListener”を使います
DOM記述の経験があれば

00:17:25.878 --> 00:17:28.048 align:start position:32% line:-2
馴染み深いパターンと
なるでしょう

00:17:28.782 --> 00:17:32.186 align:start position:25% line:-2
ここではいくつかのイベントを
例として取り上げます

00:17:34.955 --> 00:17:38.392 align:start position:11% line:-2
“mediaItemWillChange”と
“mediaItemDidChange”が

00:17:38.525 --> 00:17:40.661 align:start position:27% line:-2
キューの
「再生中」アイテムが変わり

00:17:40.794 --> 00:17:43.730 align:start position:34% line:-2
曲が次に移行すると
発信されます

00:17:44.198 --> 00:17:46.867 align:start position:32% line:-2
これを再生中の楽曲を
表示するUIへの―

00:17:47.067 --> 00:17:49.369 align:start position:30% line:-2
アップデートのトリガに
利用できます

00:17:52.339 --> 00:17:53.640 align:start position:38% line:-1
再生を始めると

00:17:53.740 --> 00:17:56.076 align:start position:21% line:-2
“playbackState”の
変化イベントが発信

00:17:56.176 --> 00:17:58.679 align:start position:25% line:-2
ここでは再び
“Will”と“Did”です

00:17:59.847 --> 00:18:05.152 align:start position:21% line:-2
例えば楽曲がロードされたり
再生や一時停止したことを認知でき

