WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.486 --> 00:14:00.756 A:middle
向你展示那首歌曲的属性

00:14:00.756 --> 00:14:02.906 A:middle
以及任何相关信息

00:14:03.216 --> 00:14:05.826 A:middle
例如艺术家和专辑

00:14:06.116 --> 00:14:10.806 A:middle
就像 Betim 之前提到过的

00:14:10.806 --> 00:14:11.806 A:middle
如果你没有内容 ID

00:14:11.806 --> 00:14:13.716 A:middle
使用 ISRC 查询筛选器

00:14:14.216 --> 00:14:16.936 A:middle
你也能完成同样的查找

00:14:17.766 --> 00:14:19.056 A:middle
返回的对象与之前的例子

00:14:19.376 --> 00:14:20.926 A:middle
是一模一样的

00:14:24.596 --> 00:14:27.176 A:middle
如果你想要用一次网络请求

00:14:27.586 --> 00:14:29.766 A:middle
返回一组歌曲对象

00:14:29.766 --> 00:14:30.896 A:middle
我们有一个批处理 API

00:14:30.896 --> 00:14:33.156 A:middle
对于专辑和播放列表也

00:14:33.156 --> 00:14:35.000 A:middle
同样生效

00:14:39.756 --> 00:14:41.146 A:middle
我们可以让用户从他们的

00:14:41.146 --> 00:14:43.156 A:middle
iCloud 音乐资料库选择播放内容

00:14:44.436 --> 00:14:46.246 A:middle
因此 这些 API 是在资料库

00:14:46.246 --> 00:14:47.306 A:middle
范围内运行的

00:14:47.976 --> 00:14:49.506 A:middle
你可以得到歌曲列表

00:14:49.876 --> 00:14:51.166 A:middle
专辑和播放列表

00:14:52.356 --> 00:14:54.206 A:middle
这些 API 都是分页的

00:14:54.206 --> 00:14:56.346 A:middle
所以你可以像常见做法那样

00:14:56.466 --> 00:14:57.846 A:middle
仅获取一个子集

00:14:57.846 --> 00:15:00.066 A:middle
然后你可以在用户翻页

