WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.366 --> 00:12:01.536 A:middle
我可以暂停播放

00:12:01.886 --> 00:12:03.136 A:middle
可以跳至下一首

00:12:05.516 --> 00:12:09.186 A:middle
[ 音乐 ]

00:12:09.686 --> 00:12:16.606 A:middle
甚至可以回到那一首

00:12:18.166 --> 00:12:21.076 A:middle
现在 MusicKit JS 提供了

00:12:21.076 --> 00:12:22.256 A:middle
用声明式标记语言的解决办法

00:12:22.256 --> 00:12:24.086 A:middle
它也提供了

00:12:24.086 --> 00:12:26.306 A:middle
完整的 JavaScript API

00:12:26.306 --> 00:12:28.406 A:middle
所以我想请 DJ 回到台上

00:12:29.046 --> 00:12:30.306 A:middle
来和你们讲讲 JavaScript API

00:12:30.736 --> 00:12:30.996 A:middle
谢谢大家

00:12:32.516 --> 00:12:38.236 A:middle
[ 掌声 ]

00:12:38.736 --> 00:12:39.556 A:middle
&gt;&gt; 谢谢你 Jae

00:12:40.156 --> 00:12:43.686 A:middle
用声明式标记语言来实现基础功能

00:12:43.686 --> 00:12:46.646 A:middle
是一种非常直接的方式

00:12:47.436 --> 00:12:48.326 A:middle
让我们再来谈谈更加

00:12:48.326 --> 00:12:49.246 A:middle
高级的用法

00:12:49.246 --> 00:12:50.836 A:middle
让我们来写一些 JavaScript

00:12:50.836 --> 00:12:52.016 A:middle
来与 MusicKit 交互

00:12:52.016 --> 00:12:53.646 A:middle
现在我们先

00:12:53.646 --> 00:12:54.496 A:middle
来看几个例子

00:12:55.746 --> 00:12:58.626 A:middle
用 ID 可以从目录获取到元数据

00:12:59.156 --> 00:13:03.206 A:middle
我们可以在 Apple Music 目录内

