WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.156 --> 00:13:03.206 A:middle
我们可以在 Apple Music 目录内

00:13:03.206 --> 00:13:04.156 A:middle
搜索内容

00:13:04.796 --> 00:13:08.276 A:middle
我们可以为已登录的用户

00:13:08.276 --> 00:13:09.876 A:middle
浏览 iCloud 音乐资料库

00:13:10.306 --> 00:13:12.856 A:middle
搜索也可以在资料库范围内进行

00:13:13.286 --> 00:13:16.196 A:middle
我们可以直接设置和控制

00:13:16.196 --> 00:13:17.206 A:middle
歌曲队列

00:13:17.266 --> 00:13:20.576 A:middle
而且我们可以响应播放事件

00:13:20.576 --> 00:13:25.936 A:middle
相应地绘制 UI

00:13:26.146 --> 00:13:28.876 A:middle
那么 我们来看一些代码

00:13:28.876 --> 00:13:29.836 A:middle
首先 我们会用

00:13:29.836 --> 00:13:33.366 A:middle
MusicKit.getInstant 方法

00:13:33.506 --> 00:13:34.776 A:middle
MusicKit 是单件模式

00:13:34.776 --> 00:13:35.986 A:middle
因为你同时只能播放一首歌曲

00:13:35.986 --> 00:13:37.886 A:middle
所以我们把

00:13:37.886 --> 00:13:39.026 A:middle
这个赋值给 music 变量

00:13:39.026 --> 00:13:40.896 A:middle
然后会在剩下所有例子里

00:13:40.896 --> 00:13:42.246 A:middle
都使用 music 来代替

00:13:42.756 --> 00:13:46.486 A:middle
你可以用 ID 来查找一首歌

00:13:47.376 --> 00:13:49.406 A:middle
api.song 方法拿到这个 ID

00:13:49.406 --> 00:13:50.866 A:middle
然后你需要提供一个回调

00:13:50.866 --> 00:13:52.006 A:middle
这就是一个 promise

00:13:52.406 --> 00:13:53.516 A:middle
你会看到这个 promise 模型

00:13:53.516 --> 00:13:54.476 A:middle
贯穿了 MusicKit

00:13:54.996 --> 00:13:58.086 A:middle
然后会返回给你一个内容对象

00:13:58.086 --> 00:13:59.486 A:middle
该内容对象

00:13:59.486 --> 00:14:00.756 A:middle
向你展示那首歌曲的属性

