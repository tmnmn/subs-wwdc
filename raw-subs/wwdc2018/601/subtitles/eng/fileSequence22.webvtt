WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:59.016 --> 00:22:00.986 A:middle
uploading your buffered video

00:22:00.986 --> 00:22:02.876 A:middle
and [inaudible] your media

00:22:02.946 --> 00:22:04.616 A:middle
engine or anything else that you

00:22:04.616 --> 00:22:04.976 A:middle
need to release.

00:22:10.176 --> 00:22:13.386 A:middle
So this is how the broadcast

00:22:13.386 --> 00:22:15.546 A:middle
life cycle usually goes.

00:22:15.676 --> 00:22:17.296 A:middle
And there's one more point that

00:22:17.296 --> 00:22:18.556 A:middle
I would like to mention here.

00:22:18.646 --> 00:22:23.886 A:middle
As we discussed, everything

00:22:23.886 --> 00:22:25.606 A:middle
required to set up the broadcast

00:22:26.236 --> 00:22:28.396 A:middle
should happen in the application

00:22:29.296 --> 00:22:31.256 A:middle
and you would get the login

00:22:31.256 --> 00:22:33.806 A:middle
credentials using the app or you

00:22:33.806 --> 00:22:35.046 A:middle
could get the name for the

00:22:35.046 --> 00:22:36.666 A:middle
broadcast in the application,

00:22:37.156 --> 00:22:40.166 A:middle
and we have a state for this,

00:22:40.166 --> 00:22:41.676 A:middle
this green square on the left

00:22:41.676 --> 00:22:41.946 A:middle
side.

00:22:42.986 --> 00:22:44.896 A:middle
However, this could be the case

00:22:44.896 --> 00:22:46.966 A:middle
that when the broadcast has

00:22:46.966 --> 00:22:48.836 A:middle
started, your extension is

00:22:48.836 --> 00:22:50.426 A:middle
missing something to proceed as

00:22:50.426 --> 00:22:51.086 A:middle
a broadcast.

00:22:51.126 --> 00:22:53.656 A:middle
For example, the login process

00:22:53.686 --> 00:22:55.816 A:middle
could have failed or something

00:22:55.856 --> 00:22:57.346 A:middle
else is needed, and I want to

00:22:57.346 --> 00:23:00.066 A:middle
show you how you can handle this

