WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.439 --> 00:04:01.141 align:middle line:-1
并且它由App Store生成

00:04:02.342 --> 00:04:04.845 align:middle line:-2
我们还使用数字证书
对此文档进行签名

00:04:04.912 --> 00:04:07.581 align:middle line:-1
以便你可以检查以确保它

00:04:07.648 --> 00:04:09.349 align:middle line:-1
是由Apple发布的真实文档

00:04:10.551 --> 00:04:13.954 align:middle line:-2
最后 该文档仅适用于
你的设备上的该app

00:04:14.188 --> 00:04:16.156 align:middle line:-1
如果你之前使用过订阅服务

00:04:16.223 --> 00:04:18.959 align:middle line:-1
你会注意到拥有多台设备的用户

00:04:19.493 --> 00:04:22.095 align:middle line:-2
他们的收据在每台设备上
看起来略有不同

00:04:23.964 --> 00:04:26.033 align:middle line:-1
当涉及到验证你的app

00:04:26.099 --> 00:04:27.467 align:middle line:-1
所获悉的交易时

00:04:27.534 --> 00:04:29.269 align:middle line:-1
你需要做的第一步是验证该文档

00:04:29.336 --> 00:04:32.339 align:middle line:-2
也就是App Store收据
是真实的

00:04:32.406 --> 00:04:33.407 align:middle line:-1
你怎么做到呢？

00:04:35.142 --> 00:04:36.143 align:middle line:-1
通过两种方式完成此操作

00:04:36.210 --> 00:04:38.345 align:middle line:-1
首先 你可以使用设备上验证

00:04:38.412 --> 00:04:40.681 align:middle line:-1
它直接发生在用户的设备上

00:04:40.747 --> 00:04:43.483 align:middle line:-2
你可以通过一系列检查
来校验用来签发该app的证书

00:04:43.550 --> 00:04:45.752 align:middle line:-1
并验证其是否可信

00:04:46.220 --> 00:04:49.056 align:middle line:-2
或你可使用被称为
“服务器到服务器验证”的技术

00:04:49.690 --> 00:04:52.960 align:middle line:-2
第二种技术是将
二进制编码的收据数据

00:04:53.427 --> 00:04:54.761 align:middle line:-1
发送到你自己的服务器

00:04:55.095 --> 00:04:57.831 align:middle line:-2
再从你的服务器发送到
App Store进行处理

00:04:58.031 --> 00:05:00.367 align:middle line:-2
App Store
将为你做这些检查

