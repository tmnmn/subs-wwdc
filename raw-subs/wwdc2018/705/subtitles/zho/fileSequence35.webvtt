WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.031 --> 00:35:01.134 align:middle line:0
这时你可以更新你服务器上的

00:35:01.201 --> 00:35:04.538 align:middle line:0
数据库中的用户表
并将该客户归类为

00:35:04.605 --> 00:35:07.140 align:middle line:0
潜在自愿流失客户

00:35:10.010 --> 00:35:13.313 align:middle line:0
如果回到我们刚才的示例订阅
我们执行了状态轮询

00:35:13.380 --> 00:35:16.550 align:middle line:0
我们了解到这位顾客可能会离开

00:35:16.617 --> 00:35:17.784 align:middle line:0
那我们该怎么办？

00:35:18.652 --> 00:35:21.088 align:middle line:0
作为开发者
这是你在同一个订阅组中展示

00:35:21.154 --> 00:35:24.758 align:middle line:0
更具吸引力的降级优惠的机会

00:35:25.526 --> 00:35:28.328 align:middle line:-2
在这里 我们可以看到
Peak正试图留住该用户

00:35:28.395 --> 00:35:30.697 align:middle line:-1
通过向他们提供更短的使用期

00:35:30.764 --> 00:35:33.700 align:middle line:-1
或更低价的订阅期

00:35:33.767 --> 00:35:35.335 align:middle line:-1
或是另一个不同的产品

00:35:37.771 --> 00:35:40.841 align:middle line:-1
如果该用户决定接受这些

00:35:40.908 --> 00:35:42.509 align:middle line:-1
就像Pete向你展示的

00:35:42.576 --> 00:35:45.612 align:middle line:-2
通过在你的app中
显示升级和降级一样

00:35:46.346 --> 00:35:49.416 align:middle line:-1
我们想让你知道他们在接下来

00:35:49.483 --> 00:35:50.751 align:middle line:-1
将续订的产品

00:35:52.920 --> 00:35:56.356 align:middle line:-2
我们通过JSON响应中的
auto_renew_product_id字段来完成此操作

00:35:57.224 --> 00:35:59.026 align:middle line:-1
这与产品ID不同

00:35:59.092 --> 00:36:03.263 align:middle line:-2
因为这将是订阅者续订后的
下一个产品

