WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.505 --> 00:19:00.574 align:middle line:-1
将能够立即被解锁

00:19:00.807 --> 00:19:04.111 align:middle line:-2
因为你的服务器直接从
App Store收到该推送

00:19:05.846 --> 00:19:08.815 align:middle line:-2
当这种事情发生时
快速解锁用户非常重要

00:19:08.882 --> 00:19:11.151 align:middle line:-1
尤其是当他们付出巨大努力

00:19:11.218 --> 00:19:13.487 align:middle line:-1
去手动更新他们的信用卡信息

00:19:13.554 --> 00:19:15.289 align:middle line:-1
并等待访问服务器时

00:19:15.589 --> 00:19:18.559 align:middle line:-2
但是这里有一点需要注意
那就是只有当订阅确实

00:19:18.625 --> 00:19:21.161 align:middle line:-2
如我们刚刚看到的那样失效时
这个通知才会被发送

00:19:22.029 --> 00:19:24.198 align:middle line:-1
为了发现成功的续订交易

00:19:24.364 --> 00:19:26.300 align:middle line:-2
你仍然需要依赖
我们刚刚介绍的

00:19:26.366 --> 00:19:27.668 align:middle line:-1
状态轮询技术

00:19:28.569 --> 00:19:31.772 align:middle line:-2
但设置并使用
服务器到服务器通知非常简单

00:19:31.839 --> 00:19:34.608 align:middle line:-2
你所要做的只是在
App Store Connect中输入一个网址

00:19:35.275 --> 00:19:37.311 align:middle line:-1
这只是你自己服务器上的一个端点

00:19:37.377 --> 00:19:39.179 align:middle line:-2
如果你将其输入到
App Store Connect

00:19:39.513 --> 00:19:42.349 align:middle line:-2
App Store将开始向
服务器发送有关这些状态变更事件的

00:19:42.583 --> 00:19:44.117 align:middle line:-1
HTTPS POST请求

00:19:44.384 --> 00:19:47.754 align:middle line:-2
正如我们在POST请求中
看到的那样 请求中包含了

00:19:48.021 --> 00:19:49.957 align:middle line:-2
触发该请求的交易的
latest_transaction_info字段

00:19:50.624 --> 00:19:53.894 align:middle line:-2
你需要确保你的服务器
符合ATS要求以便接收这些信息

00:19:54.061 --> 00:19:56.196 align:middle line:-1
但这是一个非常简单的步骤

00:19:56.263 --> 00:19:58.131 align:middle line:-1
它却可以给很多用户带来更好的体验

