WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.206 --> 00:14:00.040 align:middle line:-1
（状态轮询）

00:14:00.107 --> 00:14:02.242 align:middle line:-1
你可以使用这种称为状态轮询的技术

00:14:02.309 --> 00:14:04.378 align:middle line:-1
这可以让你在你的服务器中

00:14:04.444 --> 00:14:05.679 align:middle line:-1
直接发现这些交易

00:14:06.446 --> 00:14:09.416 align:middle line:-2
为了设置为能够从你的服务器
进行状态轮询

00:14:09.716 --> 00:14:12.920 align:middle line:-1
你只需保存编码收据数据的最新版本

00:14:12.986 --> 00:14:15.489 align:middle line:-2
即你发送的
与每个用户相关联的那个数据

00:14:16.190 --> 00:14:19.826 align:middle line:-1
你可以将该编码数据视为一个令牌

00:14:20.594 --> 00:14:23.764 align:middle line:-2
你能够像对待令牌一样对待它
是因为每次你将该编码收据数据

00:14:23.830 --> 00:14:26.934 align:middle line:-1
发给/verifyReceipt端点时

00:14:27.167 --> 00:14:29.369 align:middle line:-2
/verifyReceipt端点
不仅会返回

00:14:29.436 --> 00:14:32.139 align:middle line:-1
该收据数据的解码版本

00:14:32.206 --> 00:14:34.942 align:middle line:-1
它还包含与该用户订阅相关的

00:14:35.309 --> 00:14:37.477 align:middle line:-1
所有发生过的新交易

00:14:37.544 --> 00:14:40.514 align:middle line:-1
它位于那个JSON响应中称为

00:14:40.781 --> 00:14:41.915 align:middle line:-1
latestReceiptInfo的字段中

00:14:42.850 --> 00:14:45.786 align:middle line:-2
你可以使用该信息为用户
解锁这些新的订阅期

00:14:46.019 --> 00:14:49.189 align:middle line:-1
而无需启动该app

00:14:50.023 --> 00:14:52.759 align:middle line:-2
让我们看看它是如何工作的
当你验证交易时

00:14:52.826 --> 00:14:55.395 align:middle line:-2
就像我们之前看到的
你实际上在上传这个收据数据

00:14:55.462 --> 00:14:56.563 align:middle line:-1
（验证续订交易）

00:14:56.630 --> 00:14:59.700 align:middle line:-1
现在 一旦你确定这个交易

00:14:59.766 --> 00:15:02.102 align:middle line:-1
通过了与你以前一样的检查过程后

