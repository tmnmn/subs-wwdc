WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:59.576 --> 00:11:01.156 A:middle
make use of the new dependency

00:11:02.016 --> 00:11:03.496 A:middle
before this demo.

00:11:03.876 --> 00:11:06.716 A:middle
So, we can just run it to see

00:11:06.716 --> 00:11:07.226 A:middle
the result.

00:11:07.716 --> 00:11:09.926 A:middle
And as you can see, we have the

00:11:09.926 --> 00:11:11.346 A:middle
same output, but now it's a

00:11:11.346 --> 00:11:12.946 A:middle
little bit more fun with some

00:11:12.946 --> 00:11:13.346 A:middle
colors.

00:11:19.096 --> 00:11:20.856 A:middle
I want to show you one last demo

00:11:22.656 --> 00:11:24.746 A:middle
which is how SwiftPM can run

00:11:24.746 --> 00:11:24.986 A:middle
tests.

00:11:25.526 --> 00:11:27.606 A:middle
For this, we're using the Swift

00:11:27.606 --> 00:11:28.566 A:middle
Neo package.

00:11:29.096 --> 00:11:30.636 A:middle
A networking library that Apple

00:11:31.006 --> 00:11:32.286 A:middle
open source earlier in the

00:11:32.286 --> 00:11:32.686 A:middle
spring.

00:11:33.236 --> 00:11:37.986 A:middle
We will run Swift Test with a

00:11:38.226 --> 00:11:39.366 A:middle
parallel option.

00:11:40.806 --> 00:11:42.006 A:middle
This allows us to run tests in

00:11:42.006 --> 00:11:42.576 A:middle
parallel.

00:11:42.656 --> 00:11:44.186 A:middle
So, you get your test results

00:11:44.186 --> 00:11:44.656 A:middle
faster.

00:11:45.216 --> 00:11:46.586 A:middle
And we also pass the filter

00:11:46.586 --> 00:11:47.036 A:middle
option.

00:11:49.396 --> 00:11:51.156 A:middle
This allows you to run a subset

00:11:51.156 --> 00:11:53.186 A:middle
of tests to you can iterate on a

00:11:53.186 --> 00:11:53.926 A:middle
single future.

00:11:57.736 --> 00:12:00.356 A:middle
This will now again compile our

