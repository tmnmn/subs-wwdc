WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.086 --> 00:20:01.076 A:middle
团队其他人或者 

00:20:01.576 --> 00:20:03.496 A:middle
继续集成基础结构

00:20:03.496 --> 00:20:05.896 A:middle
这样你就可以得到 可依赖的构建结果

00:20:05.896 --> 00:20:07.436 A:middle
并且你可以选择

00:20:07.436 --> 00:20:10.976 A:middle
什么时候更新依赖

00:20:11.046 --> 00:20:12.536 A:middle
当你想更新时

00:20:12.536 --> 00:20:14.406 A:middle
运行 Swift Package Update 就可以

00:20:15.366 --> 00:20:19.896 A:middle
请注意 包含 package.resolved 的

00:20:19.936 --> 00:20:21.286 A:middle
是最顶层的包

00:20:22.176 --> 00:20:24.626 A:middle
如果有传递依赖包含

00:20:24.626 --> 00:20:26.606 A:middle
package.resolve 文件

00:20:26.606 --> 00:20:28.506 A:middle
它会被依赖解析忽略

00:20:30.776 --> 00:20:32.206 A:middle
接下来让我们看一下

00:20:32.206 --> 00:20:36.796 A:middle
包的构建

00:20:36.796 --> 00:20:38.446 A:middle
SwiftPM 使用 llbuild

00:20:38.446 --> 00:20:39.846 A:middle
作为基础构建引擎

00:20:40.526 --> 00:20:42.146 A:middle
llbuild 是一套构建 

00:20:42.146 --> 00:20:43.156 A:middle
构建系统的库

00:20:43.726 --> 00:20:45.146 A:middle
建立在通用目标和

00:20:45.146 --> 00:20:47.546 A:middle
可重复利用的构建引擎之上

00:20:47.956 --> 00:20:49.836 A:middle
这样我们可以进行

00:20:49.836 --> 00:20:52.206 A:middle
更快也更准确的增量构建

00:20:53.056 --> 00:20:54.926 A:middle
Xcode 的新构建系统

00:20:54.926 --> 00:20:55.536 A:middle
也使用该引擎

00:20:56.096 --> 00:21:00.606 A:middle
这也是 Swift 开源项目的一部分

