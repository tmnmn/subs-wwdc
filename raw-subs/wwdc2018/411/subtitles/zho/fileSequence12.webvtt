WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:57.736 --> 00:12:00.356 A:middle
现在需要在几秒内

00:12:01.166 --> 00:12:05.236 A:middle
再次编译我们的包并运行测试

00:12:09.136 --> 00:12:10.716 A:middle
如你所见

00:12:10.716 --> 00:12:13.236 A:middle
进度条很好

00:12:13.286 --> 00:12:14.536 A:middle
测试结束的很快

00:12:14.536 --> 00:12:15.636 A:middle
因为我们在平行运行它们

00:12:18.026 --> 00:12:19.836 A:middle
让我们再次回到幻灯片

00:12:26.536 --> 00:12:27.776 A:middle
接下来 我要讲一下 

00:12:27.776 --> 00:12:29.936 A:middle
Swift 包管理器的设计

00:12:36.216 --> 00:12:38.606 A:middle
SwiftPM 遵循 Swift 的理念

00:12:38.986 --> 00:12:40.706 A:middle
快速 安全

00:12:40.706 --> 00:12:41.146 A:middle
表达能力强

00:12:41.816 --> 00:12:44.736 A:middle
它很安全

00:12:44.736 --> 00:12:46.426 A:middle
因为构建环境是独立的

00:12:46.426 --> 00:12:48.546 A:middle
而且构建项目不能运行任意指令

00:12:49.256 --> 00:12:52.116 A:middle
而快速得益于

00:12:52.116 --> 00:12:53.896 A:middle
使用了对大型依赖图

00:12:53.896 --> 00:12:54.886 A:middle
可扩展的构建引擎

00:12:55.416 --> 00:12:58.526 A:middle
表达能力强是因为 

00:12:58.636 --> 00:13:00.716 A:middle
包清单文件使用的是 Swift 语言

