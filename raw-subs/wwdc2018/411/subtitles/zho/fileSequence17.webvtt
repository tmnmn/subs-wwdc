WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.456 --> 00:17:00.106 A:middle
方法或者类型

00:17:00.996 --> 00:17:02.896 A:middle
最后 补丁版本是指

00:17:02.896 --> 00:17:04.465 A:middle
当你做反向兼容错误修补时

00:17:04.465 --> 00:17:06.736 A:middle
需要增加的数字

00:17:08.276 --> 00:17:10.776 A:middle
这让客户可以

00:17:10.776 --> 00:17:13.536 A:middle
可以得到错误修复

00:17:13.536 --> 00:17:17.695 A:middle
而不用担心破坏源代码

00:17:17.816 --> 00:17:21.296 A:middle
SwiftPM 在开始构建前

00:17:21.296 --> 00:17:23.246 A:middle
需要确定包图中所有包的

00:17:23.246 --> 00:17:24.056 A:middle
具体版本

00:17:24.705 --> 00:17:26.526 A:middle
我们要使用叫

00:17:26.526 --> 00:17:27.756 A:middle
依赖解析的过程

00:17:28.716 --> 00:17:30.796 A:middle
它可以让 SwiftPM 

00:17:30.796 --> 00:17:32.376 A:middle
查看所有对包的指定要求

00:17:33.456 --> 00:17:37.516 A:middle
并找出和它们兼容的

00:17:37.516 --> 00:17:40.146 A:middle
最新版本

00:17:40.216 --> 00:17:41.396 A:middle
让我们再来看一下

00:17:41.396 --> 00:17:42.926 A:middle
SwiftPM 在这个过程中

00:17:42.926 --> 00:17:44.836 A:middle
都做了些什么

00:17:44.836 --> 00:17:45.306 A:middle
还用刚才的演示

00:17:47.136 --> 00:17:49.676 A:middle
dealer 包有两个

00:17:49.676 --> 00:17:51.066 A:middle
直接的依赖

00:17:51.476 --> 00:17:53.796 A:middle
一个是 SwiftPM 本身

00:17:53.796 --> 00:17:58.136 A:middle
另外一个是 DeckOfPlayingCards

00:17:58.276 --> 00:17:59.666 A:middle
SwiftPM 会分析

00:17:59.666 --> 00:18:01.456 A:middle
这些直接依赖的版本 

