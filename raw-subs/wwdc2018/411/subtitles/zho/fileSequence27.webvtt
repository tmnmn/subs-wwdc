WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.166 --> 00:27:00.536 A:middle
支持这个是可行的 

00:27:00.876 --> 00:27:03.196 A:middle
可能会通过使用 libSyntax 实现

00:27:04.056 --> 00:27:05.926 A:middle
libSyntax 是一个 

00:27:05.926 --> 00:27:07.296 A:middle
在 Swift 开源项目中

00:27:07.296 --> 00:27:08.856 A:middle
开发的库

00:27:08.856 --> 00:27:11.256 A:middle
让你更容易的

00:27:11.256 --> 00:27:13.536 A:middle
在别的工具上理解和使用 

00:27:13.536 --> 00:27:14.336 A:middle
Swift 语法

00:27:15.476 --> 00:27:17.546 A:middle
Boris 刚才讲到过

00:27:17.546 --> 00:27:19.556 A:middle
你应该为 package.swift 清单

00:27:19.636 --> 00:27:21.236 A:middle
采用声明式语法

00:27:21.526 --> 00:27:22.986 A:middle
这是另外一个原因

00:27:22.986 --> 00:27:25.006 A:middle
这会让 SwiftPM 可以 

00:27:25.006 --> 00:27:26.526 A:middle
更容易的

00:27:26.526 --> 00:27:28.076 A:middle
理解你的清单

00:27:28.076 --> 00:27:29.706 A:middle
并作出自动调整

00:27:29.706 --> 00:27:31.106 A:middle
比如添加新的依赖

00:27:31.106 --> 00:27:32.486 A:middle
或者目标

00:27:32.996 --> 00:27:36.286 A:middle
SwiftPM 还有很多空间

00:27:36.286 --> 00:27:39.016 A:middle
来添加新的功能 帮助

00:27:39.016 --> 00:27:40.176 A:middle
你发布新版本

00:27:40.176 --> 00:27:42.596 A:middle
并部署它们的产品

00:27:43.916 --> 00:27:45.776 A:middle
现在 如果你想

00:27:45.776 --> 00:27:46.996 A:middle
发布一个包的新版本

00:27:47.346 --> 00:27:49.056 A:middle
你需要手动用 Git 标注 

00:27:49.056 --> 00:27:52.976 A:middle
如果你想检查发布的标签

00:27:52.976 --> 00:27:54.096 A:middle
也要直接使用Git

00:27:55.356 --> 00:27:56.986 A:middle
我们可以添加新功能

00:27:57.146 --> 00:27:58.956 A:middle
来自动化这一过程

00:27:58.956 --> 00:28:00.786 A:middle
执行额外的杂务工作

