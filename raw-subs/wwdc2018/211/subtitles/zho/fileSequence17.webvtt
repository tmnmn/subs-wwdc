WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.966 --> 00:17:01.736 A:middle
首先要在 Xcode 项目中创建一个新目标

00:17:01.736 --> 00:17:03.366 A:middle
然后选择 “Intents Extension

00:17:03.416 --> 00:17:03.806 A:middle
（Intent 扩展）”模板

00:17:04.326 --> 00:17:07.836 A:middle
确保你的 Intent Handler

00:17:07.925 --> 00:17:09.445 A:middle
遵循 Intent 处理协议

00:17:09.836 --> 00:17:10.636 A:middle
在我的例子中

00:17:10.876 --> 00:17:12.766 A:middle
就是 OrderSoupIntent 这个处理方式

00:17:12.766 --> 00:17:14.076 A:middle
然后再执行这些方法

00:17:14.076 --> 00:17:15.876 A:middle
也就是 confirm() 和 handle()

00:17:16.425 --> 00:17:17.566 A:middle
需要注意的是

00:17:17.566 --> 00:17:19.356 A:middle
和传统的 SiriKit 不同的是

00:17:19.356 --> 00:17:20.846 A:middle
你不需要执行 resolve() 方法

00:17:20.846 --> 00:17:22.876 A:middle
因为你的 Intent

00:17:22.996 --> 00:17:24.346 A:middle
不需要任何

00:17:24.486 --> 00:17:25.866 A:middle
用户定制或

00:17:25.866 --> 00:17:26.965 A:middle
用户的任何后续动作

00:17:27.346 --> 00:17:29.676 A:middle
所以 你应该检查

00:17:29.676 --> 00:17:30.906 A:middle
你 Intent 的属性的

00:17:30.906 --> 00:17:32.126 A:middle
所有数值以保证

00:17:32.126 --> 00:17:33.056 A:middle
它们是有效的

00:17:33.396 --> 00:17:34.596 A:middle
如果不是

00:17:34.596 --> 00:17:36.066 A:middle
在你认为你不能处理

00:17:36.066 --> 00:17:36.906 A:middle
这个 Intent 的情况下

00:17:36.906 --> 00:17:38.096 A:middle
你应该返回一个错误代码

00:17:38.716 --> 00:17:40.866 A:middle
然后处理 准确地说是

00:17:40.916 --> 00:17:42.726 A:middle
执行你的捷径

00:17:43.086 --> 00:17:44.106 A:middle
在我的例子中

00:17:44.106 --> 00:17:45.786 A:middle
这意味着为汤下订单

00:17:46.136 --> 00:17:47.996 A:middle
接着你要返回一个

00:17:47.996 --> 00:17:49.756 A:middle
能够指明结果

00:17:49.756 --> 00:17:51.266 A:middle
如 “Success（成功）”的响应对象

00:17:52.926 --> 00:17:54.596 A:middle
你应该为每一个 Target

00:17:54.596 --> 00:17:56.816 A:middle
在后台运行的捷径

00:17:56.816 --> 00:17:58.476 A:middle
执行一个 Intent 拓展包

00:17:58.476 --> 00:18:00.046 A:middle
因为它们会

