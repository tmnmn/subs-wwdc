WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.667 --> 00:15:02.503 align:middle line:-1
所以如果一个线程做了很多工作

00:15:02.970 --> 00:15:05.339 align:middle line:-1
其优先级将随时间的推移而降低

00:15:05.772 --> 00:15:07.441 align:middle line:-1
以让其它线程有机会运行

00:15:08.242 --> 00:15:10.511 align:middle line:-1
这就是优先级衰减的概念

00:15:11.979 --> 00:15:13.847 align:middle line:-1
另外 在我身后的幻灯片上可看到

00:15:14.615 --> 00:15:15.682 align:middle line:-1
优先级倒置

00:15:16.116 --> 00:15:19.887 align:middle line:-2
这是另一类
以非常类似的方式表现出来的问题

00:15:20.521 --> 00:15:23.257 align:middle line:-1
当生成线程依赖于来自同一引擎的

00:15:23.323 --> 00:15:27.194 align:middle line:-1
较低优先级的工作线程以完成工作时

00:15:28.028 --> 00:15:30.564 align:middle line:-1
在这种情况下 发生优先级倒置

00:15:31.298 --> 00:15:32.466 align:middle line:-1
我们看看它是怎么样的

00:15:32.533 --> 00:15:34.401 align:middle line:-1
与我们之前看到的时间表相同

00:15:35.802 --> 00:15:36.770 align:middle line:-1
在这种情况下

00:15:36.837 --> 00:15:38.906 align:middle line:-1
我们开始以每秒30帧的速度生成

00:15:39.273 --> 00:15:40.107 align:middle line:-1
很轻松

00:15:41.041 --> 00:15:43.844 align:middle line:-1
但是 有一些背景工作

00:15:44.678 --> 00:15:47.347 align:middle line:-2
iOS做很多东西
也许现在正在检查电子邮件

00:15:48.715 --> 00:15:49.950 align:middle line:-1
若我们的线程配置不正确

00:15:50.017 --> 00:15:52.286 align:middle line:-1
那问题就来了

00:15:53.487 --> 00:15:55.556 align:middle line:-1
你可能会被该后台工作抢占

00:15:55.989 --> 00:15:59.760 align:middle line:-2
你可能无法完成GPU上
所有工作安排

