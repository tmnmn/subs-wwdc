WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.453 --> 00:12:02.122 align:middle line:-2
我们刚刚看到了这个问题
及它在现实世界中的发生

00:12:02.389 --> 00:12:04.258 align:middle line:-1
模式基本相同

00:12:04.691 --> 00:12:06.393 align:middle line:-1
那我们该怎么做呢？

00:12:07.928 --> 00:12:11.498 align:middle line:-2
最佳做实践
是确定游戏可以达到的帧速率

00:12:12.165 --> 00:12:13.800 align:middle line:-1
所以在最小帧持续时间

00:12:14.401 --> 00:12:16.703 align:middle line:-1
长于帧生成时间

00:12:17.938 --> 00:12:20.674 align:middle line:-1
为此 有很多API可以帮助你

00:12:21.241 --> 00:12:24.111 align:middle line:-2
例如 MTLDrawable
addPresentedHandler

00:12:24.578 --> 00:12:27.781 align:middle line:-1
一旦可绘图出现 会给你一个回调

00:12:27.848 --> 00:12:30.851 align:middle line:-2
这样一旦微型口吃发生
你就可以识别

00:12:31.919 --> 00:12:35.355 align:middle line:-1
其它两个API会帮你解决这个问题

00:12:35.822 --> 00:12:39.793 align:middle line:-1
它们将允许你明确控制帧速

00:12:40.394 --> 00:12:42.863 align:middle line:-2
在这种情况下
我们提供了afterMinimumDuration

00:12:43.163 --> 00:12:44.231 align:middle line:-1
和atTime

00:12:45.165 --> 00:12:46.333 align:middle line:-1
我们这里的目的

00:12:46.867 --> 00:12:50.704 align:middle line:-2
是把帧的最小持续时间
设置得比生成时间长

00:12:51.839 --> 00:12:54.208 align:middle line:-2
这正是我们要做的
让我们看看

00:12:55.943 --> 00:12:57.778 align:middle line:-1
注意 当我们开始生成时

00:12:58.712 --> 00:13:00.714 align:middle line:-1
我们从一开始就保持一致

