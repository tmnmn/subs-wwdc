WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.366 --> 00:25:01.702 align:middle line:-1
都提供了一系列最佳实践

00:25:02.102 --> 00:25:03.136 align:middle line:-1
我们不会介绍这些

00:25:03.370 --> 00:25:07.107 align:middle line:-2
相反 我们将专注于
如何判断生成的内容是否昂贵

00:25:08.041 --> 00:25:11.078 align:middle line:-1
正如我们今天已经对CPU多次做的

00:25:11.712 --> 00:25:15.449 align:middle line:-1
这最佳实践是对GPU进行分析

00:25:17.217 --> 00:25:19.753 align:middle line:-1
我们GPU的强大功能可以隐藏许多

00:25:19.820 --> 00:25:22.089 align:middle line:-1
内容或算法上的效率

00:25:22.689 --> 00:25:26.527 align:middle line:-2
你需要对工作量计时
但也要了解

00:25:26.593 --> 00:25:28.495 align:middle line:-1
你启用的每种生成技术

00:25:29.096 --> 00:25:33.100 align:middle line:-2
并只保留那些
明显增加游戏视觉质量的技术

00:25:34.268 --> 00:25:36.403 align:middle line:-1
但是你怎么发现效率问题？

00:25:37.070 --> 00:25:40.474 align:middle line:-2
你如何确定过程的
哪些部分完全不必要？

00:25:40.707 --> 00:25:43.544 align:middle line:-1
这当然让我们回到了工具

00:25:44.878 --> 00:25:47.414 align:middle line:-2
与往常一样 你的第一站
应该是Instruments

00:25:48.015 --> 00:25:49.983 align:middle line:-1
我们在这里看看Metal系统跟踪

00:25:50.517 --> 00:25:54.154 align:middle line:-1
它将为你提供精确的时间：

00:25:54.354 --> 00:25:56.023 align:middle line:-1
顶点、片段及计算工作

00:25:57.224 --> 00:26:00.394 align:middle line:-2
但是测量GPU时间
只是一半的工作

