WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:57.224 --> 00:26:00.394 align:middle line:-2
但是测量GPU时间
只是一半的工作

00:26:00.894 --> 00:26:05.599 align:middle line:-2
接下来 你想要真正了解
每一步正在做什么

00:26:07.000 --> 00:26:11.071 align:middle line:-2
为此我们今年为Metal系统跟踪
添加了一个新工具

00:26:11.371 --> 00:26:12.806 align:middle line:-1
这是依赖关系图

00:26:15.175 --> 00:26:18.912 align:middle line:0
依赖关系图是一个单帧的故事

00:26:20.080 --> 00:26:21.815 align:middle line:0
它由节点和边组成

00:26:21.882 --> 00:26:24.651 align:middle line:0
每一个都讲述了故事的不同部分

00:26:25.719 --> 00:26:29.590 align:middle line:0
边表示步与步之间的依赖关系

00:26:29.857 --> 00:26:31.525 align:middle line:0
当你从上到下跟踪它们时

00:26:31.758 --> 00:26:34.528 align:middle line:0
你将看到每一步
在哪里可嵌入你的生成管道

00:26:34.761 --> 00:26:37.598 align:middle line:0
以及它们如何协同工作来创建框架

00:26:39.032 --> 00:26:42.703 align:middle line:0
另一方面 节点是单个步的故事

00:26:44.271 --> 00:26:46.139 align:middle line:-1
它们由三个主要组成部分组成

00:26:46.440 --> 00:26:50.310 align:middle line:-1
首先 title元素将给出步名称

00:26:50.711 --> 00:26:52.346 align:middle line:-1
我想确实强调这一点

00:26:52.613 --> 00:26:53.714 align:middle line:-1
命名标记一切

00:26:54.114 --> 00:26:56.316 align:middle line:-2
这不仅有助于
Dependency查看器

00:26:56.383 --> 00:26:58.485 align:middle line:-1
也有助于我们的整个工具套件

00:26:59.586 --> 00:27:00.420 align:middle line:-1
其次

