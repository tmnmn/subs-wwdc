WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.413 --> 00:08:01.548 align:middle line:-1
我们的目标是每秒60帧 对吗？

00:08:03.350 --> 00:08:06.620 align:middle line:-1
还有另一类问题会导致微型口吃

00:08:06.687 --> 00:08:11.425 align:middle line:-1
有些游戏已经设定较低的帧率

00:08:12.392 --> 00:08:14.995 align:middle line:-1
但我们也发现了很多这样的游戏

00:08:15.495 --> 00:08:18.298 align:middle line:-2
在主线程或
图像生成线程上用usleep

00:08:18.365 --> 00:08:19.333 align:middle line:-2
（勿用usleep()
控制帧速！）

00:08:19.399 --> 00:08:21.168 align:middle line:-1
这在iOS中是一种很糟糕的做法

00:08:21.235 --> 00:08:22.936 align:middle line:-1
所以请不要那样做

00:08:23.737 --> 00:08:25.706 align:middle line:-1
耐心等我几分钟

00:08:25.772 --> 00:08:28.442 align:middle line:-1
我会告诉你在iOS中的正确方法

00:08:30.577 --> 00:08:31.411 align:middle line:-1
现在…

00:08:32.145 --> 00:08:36.350 align:middle line:-1
让我们深入了解系统中发生了什么

00:08:36.416 --> 00:08:38.118 align:middle line:-1
微型口吃是可见的

00:08:39.119 --> 00:08:40.888 align:middle line:-1
在这种情况下 我们在这里看到

00:08:40.953 --> 00:08:42.956 align:middle line:-1
生成中涉及的所有组件的时间表

00:08:43.924 --> 00:08:47.160 align:middle line:-1
我们开始正常生成我们的游戏

00:08:47.761 --> 00:08:51.298 align:middle line:-2
注意 这是一个三重缓冲区
在iOS中常见

00:08:51.532 --> 00:08:52.366 align:middle line:-1
在这种情况下

00:08:52.699 --> 00:08:55.769 align:middle line:-1
每个可绘图都用字母和颜色表示

00:08:56.670 --> 00:08:58.372 align:middle line:-1
注意这里的前提

00:08:58.972 --> 00:09:00.474 align:middle line:-1
生成可绘图B

