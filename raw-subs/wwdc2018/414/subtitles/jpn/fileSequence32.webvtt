WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:55.048 --> 00:32:00.187 align:start position:23% line:-2
実行ファイルやシンボルを見つけ
ロードします

00:32:00.988 --> 00:32:03.757 align:start position:32% line:-2
クラッシュスレッドの
スタックトレースや―

00:32:03.857 --> 00:32:07.194 align:start position:21% line:-1
ファイルや行番号の情報があります

00:32:07.294 --> 00:32:08.962 align:start position:32% line:-1
これで準備できました

00:32:09.062 --> 00:32:14.501 align:start position:11% line:-2
ivar destroyer関数のアドレスを
見つけ 逆アセンブルしましょう

00:32:15.469 --> 00:32:19.039 align:start position:21% line:-1
これは関数のアセンブリコードです

00:32:20.040 --> 00:32:24.444 align:start position:23% line:-2
アセンブリコードの読み方ですが
幸い―

00:32:24.545 --> 00:32:30.517 align:start position:27% line:-2
アセンブリコードを完璧に
読めなくても問題ありません

00:32:30.617 --> 00:32:36.423 align:start position:29% line:-2
ざっと読んで おおまかな
流れをつかめれば十分です

00:32:36.523 --> 00:32:42.529 align:start position:23% line:-2
クラッシュログの作業では
全部 理解する必要はありません

00:32:44.064 --> 00:32:45.899 align:start position:36% line:-1
この関数を見ると

00:32:45.999 --> 00:32:50.737 align:start position:27% line:-2
呼び出し命令と
ジャンプ命令は分かりますね

00:32:50.838 --> 00:32:53.440 align:start position:30% line:-1
関数を呼び出すものです

00:32:53.640 --> 00:32:56.910 align:start position:29% line:-2
このコードは
３ブロックに分けられます

00:32:57.411 --> 00:33:00.247 align:start position:30% line:-1
一番上のセクションは―

