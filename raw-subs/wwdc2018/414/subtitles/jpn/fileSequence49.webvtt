WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:58.839 --> 00:49:01.341 align:start position:25% line:-1
どう実行されるか見てましょう

00:49:01.575 --> 00:49:05.712 align:start position:27% line:-2
ストレージにジャンプして
スレッドセーフか確認します

00:49:06.346 --> 00:49:10.284 align:start position:27% line:-2
画像キャッシュのソースが
ファイルの一番上にあります

00:49:10.384 --> 00:49:12.553 align:start position:30% line:-1
すぐ問題が分かりますね

00:49:12.653 --> 00:49:16.290 align:start position:23% line:-2
これは単なる
Swiftの辞書なのでダメです

00:49:16.390 --> 00:49:19.459 align:start position:25% line:-2
Swiftの辞書は
スレッドセーフじゃありません

00:49:19.560 --> 00:49:24.231 align:start position:21% line:-2
複数のスレッドで
Swiftの辞書を共有するには―

00:49:24.431 --> 00:49:27.201 align:start position:25% line:-1
同期により守る必要があります

00:49:27.434 --> 00:49:31.572 align:start position:27% line:-2
複数のスレッドが同時に
アクセスしないようにします

00:49:31.772 --> 00:49:36.343 align:start position:27% line:-2
ではクラスを
スレッドセーフにしましょう

00:49:36.643 --> 00:49:37.978 align:start position:38% line:-1
ステップは２つ

00:49:38.078 --> 00:49:41.982 align:start position:32% line:-2
まずコードを少し
リファクタリングし―

00:49:42.082 --> 00:49:44.318 align:start position:30% line:-1
ストレージを制御します

00:49:44.418 --> 00:49:49.089 align:start position:23% line:-2
次にディスパッチキューで
クラスをスレッドセーフにします

00:49:50.390 --> 00:49:55.229 align:start position:29% line:-2
まず 問題はストレージが
パブリック変数であること

00:49:55.329 --> 00:49:59.399 align:start position:25% line:-2
どのコードも
アクセス可能だということです

00:49:59.500 --> 00:50:04.004 align:start position:30% line:-2
コードを完璧にするのは
かなり大変なので―

