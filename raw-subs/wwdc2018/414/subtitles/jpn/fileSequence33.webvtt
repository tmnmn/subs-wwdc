WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:57.411 --> 00:33:00.247 align:start position:30% line:-1
一番上のセクションは―

00:33:00.347 --> 00:33:05.586 align:start position:30% line:-2
参照カウント解放関数を
関数に呼び出させます

00:33:05.719 --> 00:33:08.989 align:start position:27% line:-2
これはユーザ名の
プロパティを解放しています

00:33:10.357 --> 00:33:13.861 align:start position:23% line:-2
次の領域は
データベースのプロパティを解放

00:33:14.128 --> 00:33:18.332 align:start position:27% line:-2
次は ビューのプロパティを
解放しています

00:33:18.866 --> 00:33:22.469 align:start position:25% line:-1
各命令の意味は分かりませんが

00:33:22.569 --> 00:33:26.173 align:start position:27% line:-2
各領域の
おおまかな働きは分かります

00:33:26.273 --> 00:33:30.944 align:start position:21% line:-2
コードに関連する行番号があるのと
少し似ていますね

00:33:32.012 --> 00:33:35.315 align:start position:23% line:-1
クラッシュログの情報に戻ります

00:33:35.449 --> 00:33:42.256 align:start position:11% line:-2
ivar destroyer関数 + 42が
objc releaseを呼び出している

00:33:43.657 --> 00:33:46.827 align:start position:20% line:-1
だから“+ 42”に命令があります

00:33:47.194 --> 00:33:49.329 align:start position:32% line:-1
ただ注意点がもう１つ

00:33:49.429 --> 00:33:51.999 align:start position:27% line:-1
スタックトレースの中では―

00:33:52.099 --> 00:33:57.137 align:start position:21% line:-2
大半のスタックフレームの
オフセットがリターンアドレスです

00:33:57.237 --> 00:34:00.707 align:start position:29% line:-1
関数呼び出し後の命令です

