WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:57.151 --> 00:17:03.023 align:start position:21% line:-2
Swiftランタイムが表示した
エラーメッセージが含まれています

00:17:03.190 --> 00:17:07.861 align:start position:25% line:-2
オプション値がアンラップ中
“nil”となったとあります

00:17:08.694 --> 00:17:09.695 align:start position:39% line:-1
いいことです

00:17:09.797 --> 00:17:12.733 align:start position:25% line:-1
コードと一致しているからです

00:17:12.833 --> 00:17:16.002 align:start position:23% line:-1
26行目に強制アンラップ演算子

00:17:16.170 --> 00:17:18.271 align:start position:34% line:-1
クラッシュログに―

00:17:18.372 --> 00:17:21.875 align:start position:21% line:-2
オプション値をアンラップしていた
というエラーメッセージがある

00:17:21.974 --> 00:17:25.913 align:start position:30% line:-2
クラッシュの原因として
つじつまが合っています

00:17:28.982 --> 00:17:33.687 align:start position:25% line:-2
強制アンラップのエラーは
コード内の前提条件 または―

00:17:33.787 --> 00:17:35.923 align:start position:32% line:-1
アサーションの例です

00:17:36.323 --> 00:17:38.058 align:start position:27% line:-1
前提条件やアサーションは―

00:17:38.158 --> 00:17:42.596 align:start position:25% line:-2
エラーが起きた際 プロセスを
止めるエラーチェックです

00:17:43.831 --> 00:17:48.368 align:start position:27% line:-2
今見た オプション値の
強制アンラップがその例です

00:17:48.602 --> 00:17:52.673 align:start position:18% line:-2
Swiftランタイムが オプションは
“nil”ではないとアサートし―

00:17:53.273 --> 00:17:54.808 align:start position:23% line:-1
“nil”ならクラッシュします

00:17:55.642 --> 00:17:59.213 align:start position:14% line:-2
Swift.Arrayの範囲外アクセスも
例の１つです

00:17:59.580 --> 00:18:03.550 align:start position:25% line:-2
配列にアクセスして
インデックスが範囲を超えると

