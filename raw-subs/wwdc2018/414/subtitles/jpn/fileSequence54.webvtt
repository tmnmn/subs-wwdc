WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:53:58.472 --> 00:54:00.407 align:start position:32% line:-1
覚えておいてください

00:54:00.507 --> 00:54:04.545 align:start position:9% line:-2
テストでは
Thread Sanitizerを使いましょう

00:54:04.645 --> 00:54:08.148 align:start position:23% line:-2
スレッドやGCDを使うコードは
特にです

00:54:09.016 --> 00:54:10.551 align:start position:36% line:-1
さらなる情報は―

00:54:10.651 --> 00:54:15.055 align:start position:25% line:-2
WWDC 2016での
私のセッションの動画をどうぞ

00:54:15.155 --> 00:54:17.658 align:start position:12% line:-2
“Thread Sanitizer and
Static Analysis”です

00:54:17.758 --> 00:54:22.896 align:start position:30% line:-2
このツールを紹介し
その効果を説明しました

00:54:23.831 --> 00:54:27.701 align:start position:25% line:-2
復習すると
スキームエディタのツールです

00:54:27.801 --> 00:54:30.037 align:start position:11% line:-1
“Product”から“Scheme”を選び

00:54:30.137 --> 00:54:32.873 align:start position:20% line:-2
“Edit Scheme...”で
立ち上がります

00:54:32.973 --> 00:54:35.542 align:start position:20% line:-1
Diagnosticsタブを開くと

00:54:35.642 --> 00:54:40.614 align:start position:9% line:-2
診断ツールの中に
Thread Sanitizerが並んでいます

00:54:41.782 --> 00:54:44.485 align:start position:29% line:-1
もう１つデバッグのコツを

00:54:44.585 --> 00:54:47.421 align:start position:25% line:-1
マルチスレッドバグに有効です

00:54:48.021 --> 00:54:53.594 align:start position:21% line:-2
ディスパッチキューを作成する際
イニシャライザでラベルを使えます

00:54:54.528 --> 00:54:57.898 align:start position:29% line:-2
オペレーションキューに
カスタム名をアサインでき

00:54:58.198 --> 00:55:02.436 align:start position:23% line:-2
スレッドにも
カスタム名を使うことができます

