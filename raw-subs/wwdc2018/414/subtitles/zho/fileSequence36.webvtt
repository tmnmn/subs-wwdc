WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.259 --> 00:36:02.729 align:middle line:-2
在这个例子中
我们使用了内存错误的错误地址

00:36:02.863 --> 00:36:06.033 align:middle line:-1
我们使用了崩溃函数的反汇编代码

00:36:08.669 --> 00:36:14.208 align:middle line:-1
内存错误能导致类型广泛的崩溃

00:36:14.274 --> 00:36:17.110 align:middle line:-1
崩溃日志中有许多不同的签名

00:36:17.177 --> 00:36:19.046 align:middle line:-1
都可能是由内存错误引起的

00:36:20.180 --> 00:36:21.949 align:middle line:-1
以下是一些例子

00:36:22.716 --> 00:36:25.886 align:middle line:-1
在Objective-C的objc_msgSend函数中

00:36:26.186 --> 00:36:28.188 align:middle line:-1
或在引用计数机制中

00:36:28.255 --> 00:36:32.092 align:middle line:-2
或Swift和
Objective-C的释放机制

00:36:32.392 --> 00:36:35.495 align:middle line:-2
它们所发生的崩溃
通常是由内存错误引起的

00:36:37.064 --> 00:36:42.269 align:middle line:0
另一种常见的内存错误症状是
无法识别的选择器异常

00:36:43.136 --> 00:36:47.508 align:middle line:0
这通常发生在
当你有某种类型的对象时

00:36:47.574 --> 00:36:49.943 align:middle line:0
一段代码正在使用该对象

00:36:50.410 --> 00:36:53.580 align:middle line:0
然后对象被释放并再次被使用

00:36:54.314 --> 00:36:57.451 align:middle line:0
但与我们在前一个崩溃日志中看到的

00:36:57.518 --> 00:36:59.820 align:middle line:0
malloc释放列表签名不同

00:36:59.887 --> 00:37:04.591 align:middle line:-1
这次是在同一地址分配了一个新对象

