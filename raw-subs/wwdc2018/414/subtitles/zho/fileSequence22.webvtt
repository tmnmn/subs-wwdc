WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.885 --> 00:22:00.521 align:middle line:-1
这也可能是这个进程终止的原因

00:22:04.057 --> 00:22:06.860 align:middle line:-1
启动超时 你如何能避免呢

00:22:07.261 --> 00:22:10.864 align:middle line:-2
我们希望你能避免它们
启动超时是无法通过

00:22:10.931 --> 00:22:14.535 align:middle line:-2
Apple app审核流程的
一个常见原因

00:22:16.003 --> 00:22:17.171 align:middle line:-1
那你该怎么避免它呢？

00:22:17.237 --> 00:22:19.173 align:middle line:-1
首先当然是请测试你的app

00:22:19.573 --> 00:22:21.175 align:middle line:-1
但是有一个问题

00:22:22.342 --> 00:22:26.880 align:middle line:-1
即模拟器中禁用了启动超时监视程序

00:22:26.947 --> 00:22:28.815 align:middle line:-1
并且它在调试器中也被禁用了

00:22:29.316 --> 00:22:31.919 align:middle line:-2
所以如果你在模拟器和调试器中
进行所有测试

00:22:31.985 --> 00:22:33.987 align:middle line:-1
你永远不会看到超时警报

00:22:35.122 --> 00:22:39.893 align:middle line:-2
因此在测试app时
请确保在没有调试器的情况下进行

00:22:40.260 --> 00:22:43.397 align:middle line:-2
如果是macOS app
请在Finder中启动你的app

00:22:43.664 --> 00:22:47.367 align:middle line:-2
如果是iOS app
请在TestFlight中运行

00:22:47.434 --> 00:22:50.737 align:middle line:-1
或使用iOS app启动器来启动

00:22:51.004 --> 00:22:54.007 align:middle line:-2
所有这些方法都将在调试器外
运行你的app

00:22:54.074 --> 00:22:57.010 align:middle line:-2
并会启用且强制执行
对启动超时的监控

00:22:58.312 --> 00:23:02.382 align:middle line:-2
当你测试时 请在真实设备上进行
即在模拟器之外进行测试

