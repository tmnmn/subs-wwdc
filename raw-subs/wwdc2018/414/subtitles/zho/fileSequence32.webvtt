WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:00.954 --> 00:32:03.490 align:middle line:-2
我们在这里可以看到
崩溃线程的堆栈跟踪

00:32:03.790 --> 00:32:06.960 align:middle line:-1
我们可以看到文件和行号信息

00:32:07.261 --> 00:32:08.595 align:middle line:-1
现在我们可以开始工作了

00:32:09.029 --> 00:32:12.466 align:middle line:-2
现在我们可以找到
__ivar_destroyer函数的地址

00:32:12.866 --> 00:32:14.301 align:middle line:-1
并对其进行反汇编

00:32:15.402 --> 00:32:18.639 align:middle line:-1
这向我们展示了该函数的汇编代码

00:32:20.007 --> 00:32:23.277 align:middle line:-1
我没有时间教你如何阅读汇编代码

00:32:23.343 --> 00:32:26.847 align:middle line:-2
但幸运的是 对于崩溃日志
你实际上并不需要

00:32:26.914 --> 00:32:30.484 align:middle line:-1
能够完全流利地阅读汇编代码

00:32:30.551 --> 00:32:33.921 align:middle line:-1
通常只需要简单浏览汇编代码

00:32:33.987 --> 00:32:36.456 align:middle line:-1
并大致了解发生了什么就足够了

00:32:36.523 --> 00:32:39.159 align:middle line:-1
你不必理解每一条指令

00:32:39.226 --> 00:32:42.296 align:middle line:-1
来从崩溃日志中获取有用的信息

00:32:44.031 --> 00:32:45.866 align:middle line:-1
如果我们浏览这个函数

00:32:45.933 --> 00:32:50.771 align:middle line:-1
并且我们知道调用指令和跳转指令

00:32:50.838 --> 00:32:56.610 align:middle line:-2
它们是你调用函数的方式
我们可以将这段代码分成三个部分

00:32:57.377 --> 00:33:00.214 align:middle line:-1
这是顶部

