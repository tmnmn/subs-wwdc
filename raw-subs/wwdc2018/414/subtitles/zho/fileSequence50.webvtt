WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:59.466 --> 00:50:01.301 align:middle line:-1
而且很难确保

00:50:01.368 --> 00:50:03.737 align:middle line:-2
app中的所有代码
都能以正确的方式访问

00:50:04.238 --> 00:50:06.673 align:middle line:-1
所以让我们将其改为私有

00:50:07.140 --> 00:50:11.111 align:middle line:-2
我还要引入另一种
访问imageCache的方法

00:50:11.512 --> 00:50:13.914 align:middle line:-2
我将通过引入subscript
来做到这一点

00:50:15.048 --> 00:50:16.984 align:middle line:-2
这意味着
imageCache的用户

00:50:17.050 --> 00:50:20.220 align:middle line:-2
可以使用括号
从缓存中加载和存储数据

00:50:21.421 --> 00:50:27.094 align:middle line:-2
创建下标需一个这样的getter
以及一个setter

00:50:28.328 --> 00:50:30.197 align:middle line:-1
现在暂时让我们通过

00:50:30.264 --> 00:50:32.900 align:middle line:-1
直接访问底层存储来实现它

00:50:34.501 --> 00:50:37.471 align:middle line:-2
为了让这个文件的其它部分
能够成功构建

00:50:37.538 --> 00:50:38.839 align:middle line:-1
我还需要更新其用户

00:50:38.906 --> 00:50:41.942 align:middle line:-2
这里不能再直接访问
storage属性

00:50:42.009 --> 00:50:43.477 align:middle line:-1
我们该在imageCache上

00:50:43.544 --> 00:50:45.779 align:middle line:-2
直接使用括号和索引
就像这样

00:50:47.381 --> 00:50:49.249 align:middle line:-1
如果我点击“Build Now”

00:50:49.583 --> 00:50:52.319 align:middle line:-1
你会看到代码现在能够正常编译

00:50:52.386 --> 00:50:54.421 align:middle line:-1
但我目前还没有修复任何漏洞

00:50:54.888 --> 00:50:56.423 align:middle line:-1
但我确实取得了一些成就

00:50:56.490 --> 00:51:00.961 align:middle line:-2
我现在可以直接控制
所有访问storage的代码

