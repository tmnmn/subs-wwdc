WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:56.543 --> 00:43:00.981 align:middle line:-2
因此你可能会发现崩溃发生在
稍微不同的代码行上

00:43:01.048 --> 00:43:02.683 align:middle line:-1
或稍微不同的地址

00:43:02.749 --> 00:43:04.051 align:middle line:-1
正如Greg所说

00:43:04.117 --> 00:43:09.323 align:middle line:-2
你可以看到它们在Xcode中
显示为不同的崩溃点

00:43:09.389 --> 00:43:11.058 align:middle line:-1
尽管它们属于同一个漏洞

00:43:11.925 --> 00:43:15.562 align:middle line:-2
并且崩溃的线程可能并不是
该漏洞的罪魁祸首

00:43:15.629 --> 00:43:18.232 align:middle line:-1
所以查看崩溃日志中其它线程的

00:43:18.298 --> 00:43:20.234 align:middle line:-1
堆栈跟踪很重要

00:43:20.634 --> 00:43:24.271 align:middle line:-2
现在让我们看一下
多线程漏洞的例子

00:43:24.338 --> 00:43:26.340 align:middle line:-2
并且我会向你展示
如何诊断这样的漏洞

00:43:26.406 --> 00:43:29.877 align:middle line:-2
通过使用名为Thread Sanitizer的工具
它是Xcode的一部分

00:43:38.852 --> 00:43:42.789 align:middle line:-2
让我们再看看Chris和我写的
饼干配方app

00:43:42.856 --> 00:43:46.193 align:middle line:-2
这里有从用户那里收到的
更多崩溃日志

00:43:46.994 --> 00:43:50.531 align:middle line:-2
我们关注一下排名第二的崩溃
就是这个

00:43:51.999 --> 00:43:54.601 align:middle line:-1
此崩溃日志显示

00:43:54.668 --> 00:43:57.638 align:middle line:-2
当我们使用一个名为LazyImageView的类时
发生了错误

00:43:57.704 --> 00:44:01.141 align:middle line:-1
这是我写的一个类 我们稍后再看它

