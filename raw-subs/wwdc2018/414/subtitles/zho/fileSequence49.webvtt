WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:58.872 --> 00:49:00.607 align:middle line:-1
我们来看看它是如何实现的

00:49:00.674 --> 00:49:03.210 align:middle line:-2
让我们跳到这里的storage
即我们正使用的变量

00:49:03.277 --> 00:49:05.345 align:middle line:-1
让我们看看它是否真的是线程安全的

00:49:06.313 --> 00:49:10.217 align:middle line:-2
这是ImageCache的源码
就在这个文件顶部

00:49:10.284 --> 00:49:12.519 align:middle line:-1
我们可以立即发现错误

00:49:12.586 --> 00:49:16.290 align:middle line:-2
这只是一个普通的Swift字典
所以这并不好

00:49:16.356 --> 00:49:19.159 align:middle line:-1
Swift字典默认不是线程安全的

00:49:19.526 --> 00:49:23.730 align:middle line:-2
所以如果我们想在多个线程之间
共享一个可变的Swift字典

00:49:24.398 --> 00:49:26.834 align:middle line:-1
我们必须使用同步来保护它

00:49:27.234 --> 00:49:28.635 align:middle line:-1
这意味着我们必须确保

00:49:28.702 --> 00:49:31.004 align:middle line:-1
一次只能有一个线程访问它

00:49:31.805 --> 00:49:34.107 align:middle line:-1
现在让我们真正解决这个问题

00:49:34.174 --> 00:49:35.776 align:middle line:-1
从而使该类成为线程安全的类

00:49:36.543 --> 00:49:37.978 align:middle line:-1
我将分两步完成

00:49:38.045 --> 00:49:41.615 align:middle line:-1
首先我将稍微重构一下这段代码

00:49:42.015 --> 00:49:44.251 align:middle line:-2
以便我们可以更好地
控制storage变量

00:49:44.318 --> 00:49:46.954 align:middle line:-2
然后在第二步中
我将使用调度队列

00:49:47.020 --> 00:49:48.922 align:middle line:-1
来使这个类线程安全

00:49:50.324 --> 00:49:52.492 align:middle line:-1
首先我不喜欢的是

00:49:52.559 --> 00:49:54.928 align:middle line:-1
storage被声明为公有变量

00:49:55.295 --> 00:49:59.166 align:middle line:-2
这意味着我的app中的任何代码
都可以访问它

00:49:59.466 --> 00:50:01.301 align:middle line:-1
而且很难确保

