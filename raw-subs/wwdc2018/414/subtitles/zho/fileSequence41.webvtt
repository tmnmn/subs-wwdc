WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:57.424 --> 00:41:00.160 align:middle line:-2
你可以使用
如Address Sanitizer

00:41:00.227 --> 00:41:01.862 align:middle line:-1
和Zombies等工具

00:41:01.929 --> 00:41:03.830 align:middle line:-1
来尝试重现崩溃

00:41:04.231 --> 00:41:08.836 align:middle line:-2
因为尽管我们在
malloc释放列表崩溃日志中

00:41:08.902 --> 00:41:10.838 align:middle line:-1
缩小问题范围时做得很好

00:41:10.904 --> 00:41:14.741 align:middle line:-2
但调试在调试器中发生的崩溃
要容易得多

00:41:14.808 --> 00:41:19.546 align:middle line:-2
你可以在测试中使用Sanitization
错误消息来告诉你发生了什么

00:41:21.515 --> 00:41:25.085 align:middle line:-2
刚才我提到
应该查看多个堆栈跟踪

00:41:25.152 --> 00:41:26.920 align:middle line:-1
多个线程堆栈

00:41:26.987 --> 00:41:29.523 align:middle line:-1
以诊断多线程错误

00:41:29.957 --> 00:41:33.694 align:middle line:-1
为了详细讨论调试多线程错误

00:41:33.760 --> 00:41:35.329 align:middle line:-1
有请Kuba

00:41:35.395 --> 00:41:40.567 align:middle line:-1
（多线程问题）

00:41:41.134 --> 00:41:42.135 align:middle line:-1
谢谢

00:41:43.537 --> 00:41:44.371 align:middle line:-1
谢谢！

00:41:45.138 --> 00:41:46.607 align:middle line:-1
正如Greg所说

00:41:46.673 --> 00:41:50.110 align:middle line:0
多线程问题可能导致一些内存损坏

00:41:51.044 --> 00:41:54.581 align:middle line:0
多线程错误通常是最难诊断和重现的

00:41:54.648 --> 00:41:56.250 align:middle line:-1
错误类型之一

00:41:57.117 --> 00:41:58.819 align:middle line:-1
它们特别难以重现

00:41:58.886 --> 00:42:01.488 align:middle line:-1
因为它们只是偶尔会导致崩溃

