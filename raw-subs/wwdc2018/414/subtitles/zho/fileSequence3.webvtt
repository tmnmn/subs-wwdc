WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:57.544 --> 00:03:00.380 align:middle line:0
以及函数之间的互相调用

00:03:00.547 --> 00:03:04.618 align:middle line:-1
最终我们到达了你的代码中的这一点

00:03:04.685 --> 00:03:08.355 align:middle line:-2
在该处app除了崩溃别无他法
这里出现了一些问题

00:03:09.022 --> 00:03:11.525 align:middle line:-1
最后调试器收到一个信号

00:03:11.592 --> 00:03:14.428 align:middle line:-1
即此app即将崩溃并暂停app

00:03:16.263 --> 00:03:17.598 align:middle line:-1
有时候

00:03:17.664 --> 00:03:21.034 align:middle line:-2
你并不总能很方便地绑定调试器
就像我们这里做的一样

00:03:21.835 --> 00:03:23.737 align:middle line:-1
当你没有绑定调试器时

00:03:24.104 --> 00:03:28.041 align:middle line:-1
操作系统将以纯文本格式捕获此回溯

00:03:28.208 --> 00:03:31.044 align:middle line:-2
并将其保存到磁盘中的
人类可读的崩溃日志中

00:03:32.813 --> 00:03:36.149 align:middle line:-2
实际上如果是你的app的
发布版本崩溃了

00:03:36.216 --> 00:03:37.951 align:middle line:-1
其崩溃日志看来并不这么清晰明了

00:03:38.385 --> 00:03:42.155 align:middle line:-2
其中实际包含的是
二进制名称和地址列表

00:03:42.256 --> 00:03:44.892 align:middle line:-1
这是一个非符号化崩溃日志的片段

00:03:45.993 --> 00:03:48.896 align:middle line:-2
幸运的是 Xcode负责
对崩溃日志进行符号化处理

00:03:48.962 --> 00:03:51.431 align:middle line:-1
所以你会看到那些你熟悉的函数名

00:03:51.498 --> 00:03:54.334 align:middle line:-1
文件名和行号

00:03:56.837 --> 00:04:00.474 align:middle line:-1
有很多方法可以访问这些崩溃日志

