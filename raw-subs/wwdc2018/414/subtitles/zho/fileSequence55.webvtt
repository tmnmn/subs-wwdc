WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:54:59.633 --> 00:55:01.869 align:middle line:-1
你也可以在线程中使用自定义名称

00:55:03.036 --> 00:55:05.405 align:middle line:-1
这些名称和标签将显示在调试器中

00:55:05.472 --> 00:55:08.342 align:middle line:0
但它们也出现在
某些类型的崩溃日志中

00:55:08.809 --> 00:55:12.880 align:middle line:0
这可以帮助你缩小
多线程漏洞的可能原因的范围

00:55:15.482 --> 00:55:19.786 align:middle line:0
对于崩溃 我这里准备了三个要点

00:55:20.487 --> 00:55:24.858 align:middle line:-2
第一 在将你的app
提交到App Store之前

00:55:24.925 --> 00:55:26.960 align:middle line:-1
总是在真实设备上对其进行测试

00:55:27.227 --> 00:55:30.497 align:middle line:-2
这可以帮助你避免
在app审核过程中被拒绝

00:55:31.698 --> 00:55:35.135 align:middle line:-1
第二 当你的用户崩溃时

00:55:35.202 --> 00:55:37.271 align:middle line:-1
你应该总是尝试重现它们

00:55:37.437 --> 00:55:39.773 align:middle line:-1
查看崩溃日志和堆栈跟踪

00:55:39.840 --> 00:55:42.009 align:middle line:-1
并尝试找出你需要执行

00:55:42.075 --> 00:55:44.711 align:middle line:-2
app中的哪些部分
才能触发崩溃

00:55:44.778 --> 00:55:46.613 align:middle line:-1
或尝试重现崩溃

00:55:46.680 --> 00:55:50.417 align:middle line:-1
最后 对于难以重现的崩溃

00:55:50.717 --> 00:55:52.719 align:middle line:-1
我建议使用漏洞查找工具

00:55:52.786 --> 00:55:55.355 align:middle line:-2
比如Address Sanitizer
或Thread Sanitizer

00:55:55.856 --> 00:55:58.392 align:middle line:-2
它们分别可用于处理
内存损坏错误

00:55:58.458 --> 00:55:59.893 align:middle line:-1
和多线程问题

