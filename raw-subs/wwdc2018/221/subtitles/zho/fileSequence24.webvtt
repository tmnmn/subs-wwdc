WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.866 --> 00:24:00.376 A:middle
现在我们有两个文本视图

00:24:00.376 --> 00:24:01.596 A:middle
虽然我们希望它们显示

00:24:01.696 --> 00:24:03.546 A:middle
相同的内容 但我们还希望

00:24:03.546 --> 00:24:04.286 A:middle
右边视图能够看起来不太一样

00:24:05.916 --> 00:24:07.176 A:middle
所以我们需要一个像这样的配置

00:24:07.176 --> 00:24:08.806 A:middle
两个视图的文本存储器相同

00:24:08.806 --> 00:24:11.666 A:middle
而所有其他都不同

00:24:14.096 --> 00:24:16.506 A:middle
为此 我们

00:24:16.506 --> 00:24:17.996 A:middle
将用左侧的文本存储

00:24:18.066 --> 00:24:19.106 A:middle
把右侧的替换掉

00:24:20.616 --> 00:24:21.506 A:middle
现在让我们看看

00:24:21.536 --> 00:24:21.766 A:middle
这是什么样子

00:24:22.286 --> 00:24:25.326 A:middle
现在这真的很酷

00:24:25.526 --> 00:24:26.626 A:middle
如果我们在左侧添加任何字符

00:24:26.626 --> 00:24:28.826 A:middle
它们将立即显示在右侧

00:24:29.726 --> 00:24:31.056 A:middle
现在通常右手边

00:24:31.906 --> 00:24:33.166 A:middle
并没有真正显示 Markdown 字符

00:24:33.166 --> 00:24:35.406 A:middle
但由于这是一个

00:24:35.406 --> 00:24:38.036 A:middle
共享文本存储 这意味着我们

00:24:38.036 --> 00:24:39.196 A:middle
必须隐藏字符

00:24:39.406 --> 00:24:40.486 A:middle
在布局过程中

00:24:40.486 --> 00:24:44.236 A:middle
因为我们需要这样做

00:24:44.236 --> 00:24:45.846 A:middle
所以我们实际上只有一个选择

00:24:45.916 --> 00:24:48.486 A:middle
那就是实现

00:24:49.016 --> 00:24:50.746 A:middle
NSLayoutManager 委托上的

00:24:51.176 --> 00:24:52.746 A:middle
shouldGenerateGlyphs() 方法

00:24:53.796 --> 00:24:55.196 A:middle
这将允许我们介入

00:24:55.316 --> 00:24:57.446 A:middle
字形生成过程

00:24:58.036 --> 00:24:59.776 A:middle
因此 我们可以

00:24:59.776 --> 00:25:01.986 A:middle
获取即将布局的字形

