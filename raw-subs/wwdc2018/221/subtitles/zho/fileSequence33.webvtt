WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.586 --> 00:33:00.106 A:middle
才能生效

00:33:01.266 --> 00:33:02.776 A:middle
这是因为当你禁用滚动时

00:33:02.776 --> 00:33:04.366 A:middle
询求你的文本视图

00:33:04.366 --> 00:33:06.086 A:middle
所包含的内容大小

00:33:06.086 --> 00:33:07.116 A:middle
需要布局

00:33:07.116 --> 00:33:08.376 A:middle
所有的文本

00:33:08.906 --> 00:33:09.776 A:middle
所以你根本

00:33:09.776 --> 00:33:10.716 A:middle
不会获得

00:33:10.716 --> 00:33:11.726 A:middle
非连续布局的

00:33:11.726 --> 00:33:12.156 A:middle
性能优势

00:33:12.816 --> 00:33:15.636 A:middle
这把我们引导了一个

00:33:15.636 --> 00:33:16.376 A:middle
很重要的问题上

00:33:17.186 --> 00:33:18.236 A:middle
当你使用非连续布局时

00:33:18.236 --> 00:33:19.696 A:middle
你应该避免一次

00:33:19.696 --> 00:33:20.916 A:middle
请求全部或者大多数文本的布局

00:33:20.916 --> 00:33:23.136 A:middle
因为这样做

00:33:23.136 --> 00:33:24.116 A:middle
从根本上就

00:33:24.116 --> 00:33:25.026 A:middle
违背了我们的初衷

00:33:25.086 --> 00:33:27.516 A:middle
所以如果你只有一个文本容器

00:33:27.516 --> 00:33:28.926 A:middle
不要要求

00:33:28.926 --> 00:33:29.956 A:middle
整个容器的布局

00:33:30.796 --> 00:33:31.866 A:middle
并且不要要求

00:33:31.866 --> 00:33:33.196 A:middle
包含文本结尾的大范围字符

00:33:33.196 --> 00:33:37.106 A:middle
或字形的布局

00:33:37.366 --> 00:33:38.526 A:middle
我们并没有深入

00:33:38.526 --> 00:33:39.406 A:middle
研究文本性能的主题

00:33:39.406 --> 00:33:42.076 A:middle
因为 我在去年的 WWDC 2017 上针对这一点

00:33:42.386 --> 00:33:44.826 A:middle
进行了一次非常棒的演讲

00:33:44.826 --> 00:33:45.766 A:middle
那就是框架效率的不完整性

00:33:46.186 --> 00:33:47.226 A:middle
你可以在讨论会结束时

00:33:47.226 --> 00:33:48.576 A:middle
通过更多信息链接

00:33:48.576 --> 00:33:49.306 A:middle
访问该视频

00:33:49.306 --> 00:33:50.026 A:middle
好的

00:33:51.396 --> 00:33:53.876 A:middle
现在是时候谈论

00:33:53.876 --> 00:33:55.006 A:middle
每个人最喜欢的话题

00:33:55.206 --> 00:33:55.666 A:middle
安全

00:33:56.406 --> 00:33:59.486 A:middle
你可能已经注意到

00:33:59.486 --> 00:34:00.526 A:middle
最近有一些事件发生在互联网上

