WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.216 --> 00:31:00.146 A:middle
会根据环境用正确的

00:31:00.316 --> 00:31:03.116 A:middle
颜色绘制

00:31:03.216 --> 00:31:03.786 A:middle
继续

00:31:04.316 --> 00:31:05.416 A:middle
下一个话题是性能

00:31:06.306 --> 00:31:07.116 A:middle
如果你使用大量文本

00:31:07.116 --> 00:31:08.656 A:middle
一个提高 App 性能的

00:31:08.656 --> 00:31:10.046 A:middle
好方法是

00:31:10.046 --> 00:31:11.636 A:middle
使用非连续布局

00:31:11.636 --> 00:31:14.076 A:middle
为了明白这意味着什么

00:31:14.076 --> 00:31:15.276 A:middle
让我们重新回顾

00:31:15.336 --> 00:31:16.766 A:middle
布局过程

00:31:17.826 --> 00:31:18.856 A:middle
我们说过布局过程

00:31:18.896 --> 00:31:20.436 A:middle
包括字形生成

00:31:20.526 --> 00:31:21.386 A:middle
和字形布局

00:31:22.806 --> 00:31:24.046 A:middle
所以对于连续布局

00:31:24.266 --> 00:31:25.416 A:middle
布局管理器

00:31:25.416 --> 00:31:26.716 A:middle
在文本存储开头就开始

00:31:26.716 --> 00:31:27.946 A:middle
执行字形生成和

00:31:27.986 --> 00:31:29.496 A:middle
字形布局了

00:31:30.286 --> 00:31:32.426 A:middle
它以从头到尾的顺序进行

00:31:33.786 --> 00:31:34.986 A:middle
所以如果有人使用你的 App

00:31:35.026 --> 00:31:37.556 A:middle
滚动到文本视图中间的某个点

00:31:37.556 --> 00:31:38.966 A:middle
那么布局管理器

00:31:38.966 --> 00:31:41.056 A:middle
必须为红色矩形

00:31:41.056 --> 00:31:42.316 A:middle
所指示区域之前的所有字形

00:31:42.316 --> 00:31:44.596 A:middle
生成并布局字形

00:31:45.166 --> 00:31:46.726 A:middle
并且请注意

00:31:46.726 --> 00:31:47.846 A:middle
这还包括你从

00:31:47.846 --> 00:31:49.016 A:middle
屏幕顶部滚动回到

00:31:49.016 --> 00:31:50.116 A:middle
文本存储起点之间

00:31:50.176 --> 00:31:51.596 A:middle
所有你看不见的文本

00:31:52.696 --> 00:31:54.186 A:middle
所以如果你有很多文本

00:31:54.236 --> 00:31:56.406 A:middle
那么这个可怜的用户

00:31:56.406 --> 00:31:57.756 A:middle
可能需要等待你的 App 一段时间

00:31:57.756 --> 00:31:59.946 A:middle
让它完成布局

00:31:59.946 --> 00:32:01.626 A:middle
但幸运的是

