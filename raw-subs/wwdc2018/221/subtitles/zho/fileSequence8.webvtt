WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.296 --> 00:08:00.546 A:middle
布局过程是怎样进行的

00:08:01.426 --> 00:08:03.166 A:middle
文字布局发生在

00:08:03.216 --> 00:08:04.596 A:middle
系统修复文本存储的属性之后

00:08:04.596 --> 00:08:06.006 A:middle
来消除不一致

00:08:06.006 --> 00:08:08.206 A:middle
比如确定字符串中

00:08:08.206 --> 00:08:09.626 A:middle
所有的字符

00:08:09.626 --> 00:08:11.206 A:middle
都使用支持

00:08:11.246 --> 00:08:12.626 A:middle
显示该字符的字体

00:08:13.086 --> 00:08:14.906 A:middle
所以在这个例子中

00:08:14.906 --> 00:08:15.996 A:middle
Times New Roman 被指定到

00:08:16.056 --> 00:08:17.566 A:middle
整个字符串

00:08:18.096 --> 00:08:19.486 A:middle
但是这个字体并不支持

00:08:19.936 --> 00:08:21.906 A:middle
显示日文汉字或者表情符号

00:08:23.136 --> 00:08:24.536 A:middle
因此在属性修正后

00:08:24.536 --> 00:08:25.446 A:middle
你的文本存储

00:08:25.476 --> 00:08:26.876 A:middle
看起来会像这样

00:08:26.876 --> 00:08:28.146 A:middle
日文字符被

00:08:28.376 --> 00:08:29.346 A:middle
分配了适当的日文字体

00:08:29.346 --> 00:08:31.186 A:middle
表情符号被

00:08:31.186 --> 00:08:32.476 A:middle
分配了的表情符号字体

00:08:32.476 --> 00:08:33.145 A:middle
好的

00:08:33.856 --> 00:08:36.006 A:middle
一旦属性被修正了

00:08:36.006 --> 00:08:37.666 A:middle
布局过程就开始了

00:08:37.666 --> 00:08:39.606 A:middle
我们可以认为布局

00:08:39.666 --> 00:08:42.866 A:middle
分为两步 字形生成和字形布局

00:08:44.256 --> 00:08:45.366 A:middle
一旦它们被布局好了

00:08:45.646 --> 00:08:46.456 A:middle
就可以显示了

00:08:47.086 --> 00:08:48.606 A:middle
但是 等一下

00:08:48.946 --> 00:08:49.356 A:middle
什么是字形

00:08:50.206 --> 00:08:51.226 A:middle
让我们回顾一下

00:08:52.146 --> 00:08:53.296 A:middle
字形是一种代表一个

00:08:53.296 --> 00:08:54.536 A:middle
或多个字符的

00:08:54.536 --> 00:08:55.046 A:middle
视觉符号

00:08:55.536 --> 00:08:56.916 A:middle
正如你在这里看到的那样

00:08:56.916 --> 00:08:58.056 A:middle
字符与字形之间的映射

00:08:58.056 --> 00:09:00.066 A:middle
并不总是一对一的

