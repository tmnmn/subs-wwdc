WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.776 --> 00:25:01.986 A:middle
获取即将布局的字形

00:25:01.986 --> 00:25:03.446 A:middle
并且如果它们表示 Markdown

00:25:03.446 --> 00:25:05.446 A:middle
命令字符 我们可以将

00:25:05.446 --> 00:25:07.356 A:middle
.null 属性应用于该字形

00:25:08.096 --> 00:25:09.216 A:middle
现在 这将让字形

00:25:09.216 --> 00:25:10.516 A:middle
在布局过程中被

00:25:10.516 --> 00:25:12.526 A:middle
彻底消除 而不会更改

00:25:12.526 --> 00:25:13.756 A:middle
底层的文本存储

00:25:14.306 --> 00:25:19.096 A:middle
然后 我们将使用新的字形

00:25:19.096 --> 00:25:20.686 A:middle
并告诉布局管理器

00:25:20.686 --> 00:25:22.046 A:middle
我们想要用这些新的属性

00:25:22.106 --> 00:25:23.116 A:middle
来呈现这些字形

00:25:27.096 --> 00:25:29.106 A:middle
这真的很酷

00:25:29.106 --> 00:25:30.416 A:middle
所以左侧显示了

00:25:30.416 --> 00:25:31.436 A:middle
可编辑版本

00:25:31.436 --> 00:25:32.626 A:middle
包含所有 Markdown 字符

00:25:32.956 --> 00:25:34.576 A:middle
而右侧没有显示

00:25:34.576 --> 00:25:36.306 A:middle
任何 Markdown 字符

00:25:36.306 --> 00:25:37.686 A:middle
全部使用相同的文本存储

00:25:38.286 --> 00:25:40.836 A:middle
现在构建一个并排的

00:25:40.836 --> 00:25:42.046 A:middle
Markdown 编辑器 并不是

00:25:42.096 --> 00:25:44.256 A:middle
我们每天都在做的事情

00:25:44.256 --> 00:25:45.536 A:middle
但是很开心看到

00:25:45.536 --> 00:25:47.856 A:middle
TextKit 的可自定义度是多么高

00:25:47.856 --> 00:25:48.816 A:middle
以及它是如何与现实的例子结合的

00:25:49.536 --> 00:25:51.626 A:middle
如果你想了解更多

00:25:51.626 --> 00:25:53.026 A:middle
关于如何使用和自定义

00:25:53.066 --> 00:25:54.816 A:middle
TextKit 的信息 请查看我们出色的

00:25:54.816 --> 00:25:55.576 A:middle
编程指南

00:25:56.286 --> 00:25:58.186 A:middle
然后 我要把现场交给 Donna

00:25:59.516 --> 00:26:06.066 A:middle
[ 掌声 ]

