WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.966 --> 00:11:00.416 A:middle
CPU performance to the needs of

00:11:00.416 --> 00:11:01.546 A:middle
your application during this

00:11:01.616 --> 00:11:03.396 A:middle
period but the best thing that

00:11:03.396 --> 00:11:04.996 A:middle
you can do will always remain to

00:11:04.996 --> 00:11:06.016 A:middle
reduce the amount of work that

00:11:06.016 --> 00:11:07.646 A:middle
you have to do to make sure that

00:11:07.646 --> 00:11:09.076 A:middle
you give your customers a really

00:11:09.146 --> 00:11:10.336 A:middle
smooth scrolling experience.

00:11:11.676 --> 00:11:13.416 A:middle
So that's scrolling in iOS 12.

00:11:14.396 --> 00:11:16.056 A:middle
Next, let's turn our attention

00:11:16.096 --> 00:11:17.416 A:middle
to our next performance topic:

00:11:18.006 --> 00:11:18.416 A:middle
memory.

00:11:19.626 --> 00:11:21.166 A:middle
Now, you might wonder why memory

00:11:21.166 --> 00:11:22.206 A:middle
is showing up right here in the

00:11:22.206 --> 00:11:23.176 A:middle
middle of a performance

00:11:23.226 --> 00:11:25.726 A:middle
discussion, but I assure you

00:11:25.726 --> 00:11:26.966 A:middle
that that actually makes a lot

00:11:26.966 --> 00:11:28.746 A:middle
of sense and, in fact, the

00:11:28.746 --> 00:11:30.816 A:middle
reason is because memory really

00:11:30.816 --> 00:11:32.026 A:middle
is performance.

00:11:32.746 --> 00:11:34.106 A:middle
The more memory that your app is

00:11:34.196 --> 00:11:36.066 A:middle
going to use, the more that it

00:11:36.066 --> 00:11:37.386 A:middle
will have an impact on the

00:11:37.386 --> 00:11:38.896 A:middle
performance of your application.

00:11:39.626 --> 00:11:41.756 A:middle
So to understand why, let's take

00:11:41.756 --> 00:11:43.756 A:middle
a look at a really high-level

00:11:43.756 --> 00:11:45.326 A:middle
overview of what the overall

00:11:45.326 --> 00:11:46.996 A:middle
memory on the system might look

00:11:46.996 --> 00:11:48.296 A:middle
like in a common situation.

00:11:49.136 --> 00:11:50.576 A:middle
So, of course, you can see here,

00:11:50.576 --> 00:11:52.186 A:middle
a lot of the system's memory is

00:11:52.186 --> 00:11:54.536 A:middle
being used by other applications

00:11:54.536 --> 00:11:55.666 A:middle
and the system itself.

00:11:56.276 --> 00:11:57.706 A:middle
Your app is using some amount

00:11:57.736 --> 00:11:58.246 A:middle
for the moment.

00:11:58.676 --> 00:11:59.906 A:middle
And there's some that's being

00:11:59.906 --> 00:12:02.136 A:middle
kept free to service new

