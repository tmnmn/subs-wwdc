WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:57.070 --> 00:19:00.240 align:start position:36% line:-2
互いの制約はなく
独立しています

00:19:00.607 --> 00:19:04.044 align:start position:30% line:-2
iOS 11では
ビューの数を増やすほど

00:19:04.144 --> 00:19:07.080 align:start position:29% line:-1
コストは増えていきました

00:19:07.481 --> 00:19:12.186 align:start position:34% line:-2
これは当然のことで
想像しうる事態です

00:19:12.286 --> 00:19:15.722 align:start position:30% line:-2
基本的に
固定負荷がかかりますし

00:19:15.823 --> 00:19:19.026 align:start position:30% line:-2
独立した新たなビューを
追加するたびに

00:19:19.126 --> 00:19:21.662 align:start position:29% line:-1
固定負荷がかかるからです

00:19:22.496 --> 00:19:28.268 align:start position:23% line:-2
予測どおりの状態が
iOS 12でも続くはずでした

00:19:28.535 --> 00:19:32.773 align:start position:32% line:-2
しかし担当チームが
固定負荷の減少を試み

00:19:32.873 --> 00:19:36.343 align:start position:36% line:-2
ビューを低負荷に
追加できたのです

00:19:37.311 --> 00:19:39.880 align:start position:32% line:-1
さらに興味深い例です

00:19:39.980 --> 00:19:43.083 align:start position:36% line:-2
こちらは依存した
兄弟ビューです

00:19:43.283 --> 00:19:46.520 align:start position:36% line:-1
複数の子ビューが

00:19:46.620 --> 00:19:49.156 align:start position:30% line:-1
お互いを制約しています

00:19:49.256 --> 00:19:52.059 align:start position:30% line:-1
依存したレイアウトです

00:19:52.659 --> 00:19:57.664 align:start position:29% line:-2
残念ながらiOS 11の
漸近線は良くありません

00:19:58.131 --> 00:20:00.500 align:start position:34% line:-1
急増しているのです

