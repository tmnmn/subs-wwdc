WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.812 --> 00:18:03.717 align:start position:30% line:-2
そしてたくさんの
欠陥が見つかったのです

00:18:03.951 --> 00:18:09.723 align:start position:29% line:-2
ここでは最適化のための
最良の方法をお見せします

00:18:10.724 --> 00:18:15.696 align:start position:29% line:-2
Auto Layoutの
速さを実感してください

00:18:16.230 --> 00:18:18.799 align:start position:27% line:-2
一般的なビューを追加して
Auto Layoutの―

00:18:18.899 --> 00:18:20.534 align:start position:36% line:-1
漸近特性を見ます

00:18:20.634 --> 00:18:24.738 align:start position:32% line:-2
一般的なユーザに対し
ビューを追加しました

00:18:25.606 --> 00:18:29.476 align:start position:34% line:-2
ビューの数を
劇的に増やすことで

00:18:29.576 --> 00:18:32.246 align:start position:27% line:-1
何が起きるかを見るためです

00:18:32.346 --> 00:18:34.615 align:start position:30% line:-1
膨大な数のビューにより

00:18:34.715 --> 00:18:38.452 align:start position:27% line:-2
パフォーマンスへの悪影響が
明らかになるのです

00:18:38.852 --> 00:18:41.655 align:start position:36% line:-2
その結果をもとに
最適化を行えば

00:18:41.755 --> 00:18:45.058 align:start position:29% line:-2
ビューの数が少なくても
高速化が実現できるのです

00:18:45.292 --> 00:18:49.162 align:start position:34% line:-2
最も単純なケースを
見てみましょう

00:18:49.263 --> 00:18:52.833 align:start position:32% line:-2
枠の中に
兄弟ビューがあります

00:18:53.000 --> 00:18:56.970 align:start position:30% line:-2
外枠や他のビューからの
制約はありますが

00:18:57.070 --> 00:19:00.240 align:start position:36% line:-2
互いの制約はなく
独立しています

