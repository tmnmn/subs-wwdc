WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.716 --> 00:10:00.346 A:middle
当加载开始

00:10:00.346 --> 00:10:02.066 A:middle
我们就可以发现

00:10:02.066 --> 00:10:03.676 A:middle
我们更频繁更快地

00:10:03.676 --> 00:10:05.746 A:middle
让 CPU 提升到

00:10:05.806 --> 00:10:07.206 A:middle
需要的程度

00:10:07.206 --> 00:10:08.736 A:middle
来赶上截止时间

00:10:08.736 --> 00:10:10.976 A:middle
以防丢帧出现

00:10:12.286 --> 00:10:14.976 A:middle
这一改变让很多 iOS 的

00:10:14.976 --> 00:10:16.226 A:middle
滚动场景

00:10:16.226 --> 00:10:16.976 A:middle
得到了极大提升

00:10:20.956 --> 00:10:24.086 A:middle
你所有的 App

00:10:24.086 --> 00:10:27.146 A:middle
都可以免费得到提升

00:10:27.146 --> 00:10:28.526 A:middle
而且你不需要

00:10:28.526 --> 00:10:29.686 A:middle
进行任何更多操作

00:10:30.156 --> 00:10:31.266 A:middle
但是还有几件事情

00:10:31.266 --> 00:10:32.466 A:middle
你可以做 来确保

00:10:32.466 --> 00:10:34.136 A:middle
你充分利用了这些特性

00:10:34.996 --> 00:10:37.666 A:middle
首先如果你还没有采用这个

00:10:37.666 --> 00:10:39.116 A:middle
tableView Cell 预读取 API

00:10:39.116 --> 00:10:40.596 A:middle
或者 CollectionView 的 API

00:10:40.596 --> 00:10:42.096 A:middle
一定要先做这个

00:10:42.096 --> 00:10:43.336 A:middle
因为预先准备好数据

00:10:43.336 --> 00:10:44.596 A:middle
是能确保尽快

00:10:44.596 --> 00:10:46.836 A:middle
加载 Cell 的重要步骤

00:10:47.406 --> 00:10:50.506 A:middle
当然 分析

00:10:50.506 --> 00:10:51.856 A:middle
加载 Cell 的

00:10:51.856 --> 00:10:53.116 A:middle
整个临界区域

00:10:53.116 --> 00:10:55.186 A:middle
并尽量减少需求

00:10:55.186 --> 00:10:56.076 A:middle
也是很重要的

00:10:56.076 --> 00:10:58.966 A:middle
iOS 12 会尽力

00:10:58.966 --> 00:11:00.416 A:middle
让 CPU 性能在此期间匹配

