WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.636 --> 00:19:02.846 A:middle
在 iOS 11 里

00:19:02.846 --> 00:19:06.246 A:middle
添加这些 Independent Siblings 的成本

00:19:06.246 --> 00:19:06.816 A:middle
线性上升

00:19:07.526 --> 00:19:08.996 A:middle
这很棒

00:19:08.996 --> 00:19:10.536 A:middle
这应该正是

00:19:10.536 --> 00:19:11.906 A:middle
你所预料到的

00:19:12.306 --> 00:19:13.706 A:middle
也就是说

00:19:13.706 --> 00:19:15.116 A:middle
每添加一个

00:19:15.116 --> 00:19:17.046 A:middle
独立于其他视图的层级的

00:19:17.046 --> 00:19:18.326 A:middle
新的视图

00:19:18.326 --> 00:19:19.876 A:middle
增加的成本

00:19:19.876 --> 00:19:21.336 A:middle
都是固定的

00:19:22.516 --> 00:19:23.406 A:middle
因为这已经

00:19:23.506 --> 00:19:24.896 A:middle
和我们期待的

00:19:24.896 --> 00:19:26.746 A:middle
增长指数一样

00:19:26.746 --> 00:19:28.976 A:middle
所以在 iOS 12 里依旧如此

00:19:29.096 --> 00:19:30.966 A:middle
但是我们的团队很努力地

00:19:30.966 --> 00:19:33.386 A:middle
想减少这个固定成本

00:19:33.386 --> 00:19:34.956 A:middle
希望使添加视图变得

00:19:35.146 --> 00:19:36.076 A:middle
更加容易

00:19:37.376 --> 00:19:38.326 A:middle
让我们来看一个

00:19:38.326 --> 00:19:39.596 A:middle
更有趣的例子

00:19:39.986 --> 00:19:42.236 A:middle
这次让我们看一下

00:19:42.236 --> 00:19:42.846 A:middle
Dependent Siblings

00:19:43.326 --> 00:19:46.826 A:middle
这里有好几个子视图

00:19:46.826 --> 00:19:47.676 A:middle
它们彼此之间

00:19:47.726 --> 00:19:49.296 A:middle
相互约束

00:19:49.296 --> 00:19:51.616 A:middle
他们的布局相互影响

00:19:52.666 --> 00:19:54.536 A:middle
在 iOS 11 里

00:19:54.896 --> 00:19:56.226 A:middle
渐近性的表现

00:19:56.226 --> 00:19:58.206 A:middle
并不很好

00:19:58.206 --> 00:20:00.316 A:middle
实际上是以指数级增长的

