WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.496 --> 00:03:01.476 A:middle
但可能包含很多

00:03:01.476 --> 00:03:02.856 A:middle
高耗的操作

00:03:02.896 --> 00:03:05.416 A:middle
比如读取文件

00:03:05.416 --> 00:03:06.916 A:middle
从数据库加载数据

00:03:06.916 --> 00:03:07.516 A:middle
或其他类似的事情

00:03:07.936 --> 00:03:09.056 A:middle
所以你应该

00:03:09.056 --> 00:03:10.536 A:middle
看一下你的 App 里

00:03:10.536 --> 00:03:13.396 A:middle
在这一方面的消耗

00:03:13.396 --> 00:03:14.616 A:middle
一般来说很大一部分

00:03:14.926 --> 00:03:15.686 A:middle
会在这里

00:03:17.276 --> 00:03:18.956 A:middle
看到这里

00:03:18.956 --> 00:03:19.936 A:middle
你可能以为

00:03:19.936 --> 00:03:21.766 A:middle
高耗工作就此结束

00:03:21.766 --> 00:03:23.006 A:middle
但是当你从这个方法返回

00:03:23.006 --> 00:03:24.316 A:middle
为了让 Cell

00:03:24.376 --> 00:03:25.956 A:middle
显示在屏幕上

00:03:25.956 --> 00:03:27.506 A:middle
其实有更多的工作要做

00:03:28.206 --> 00:03:29.786 A:middle
所以 接下来

00:03:29.786 --> 00:03:31.306 A:middle
我们要把所有内容

00:03:31.306 --> 00:03:31.836 A:middle
布局到 Cell 中

00:03:32.336 --> 00:03:33.936 A:middle
我们要调整视图大小

00:03:33.936 --> 00:03:35.686 A:middle
并把它们放到正确的位置

00:03:36.086 --> 00:03:37.276 A:middle
这一步可能会

00:03:37.276 --> 00:03:38.476 A:middle
消耗我们的

00:03:38.476 --> 00:03:39.736 A:middle
很多时间

00:03:39.736 --> 00:03:41.176 A:middle
因为它包含一些

00:03:41.176 --> 00:03:42.946 A:middle
其他的高耗操作

00:03:43.036 --> 00:03:44.666 A:middle
比如 测量文本

00:03:45.296 --> 00:03:46.886 A:middle
当大小和位置

00:03:46.886 --> 00:03:48.666 A:middle
都调整好之后

00:03:48.666 --> 00:03:50.736 A:middle
就要使用绘制命令

00:03:50.736 --> 00:03:52.276 A:middle
来生成所有

00:03:52.276 --> 00:03:54.116 A:middle
需要被绘制的内容

00:03:54.116 --> 00:03:55.606 A:middle
我们要调用这个 Cell 里

00:03:55.606 --> 00:03:57.746 A:middle
所有的子视图的 draw Rect

00:03:58.276 --> 00:03:59.816 A:middle
重申一下

00:03:59.816 --> 00:04:01.216 A:middle
这一步可能很费时

