WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:59.816 --> 00:04:01.216 A:middle
这一步可能很费时

00:04:01.216 --> 00:04:03.036 A:middle
因为我们需要做

00:04:03.036 --> 00:04:04.426 A:middle
像绘制文本这样的工作

00:04:05.536 --> 00:04:08.506 A:middle
总体而言 在整个代码中

00:04:08.646 --> 00:04:11.436 A:middle
有很多要做的工作

00:04:11.436 --> 00:04:13.696 A:middle
而且都需要在短时间里完成

00:04:14.126 --> 00:04:15.656 A:middle
在我们 60 赫兹的设备上

00:04:15.656 --> 00:04:17.565 A:middle
你只有 16 毫秒

00:04:17.565 --> 00:04:19.046 A:middle
来完成所有的工作

00:04:19.046 --> 00:04:20.726 A:middle
确保不会丢帧

00:04:20.726 --> 00:04:22.296 A:middle
并流畅滑动

00:04:23.056 --> 00:04:25.346 A:middle
在 120 赫兹的 iPad

00:04:25.346 --> 00:04:27.836 A:middle
iPad Pro 上

00:04:27.836 --> 00:04:29.696 A:middle
你只有 8 毫秒来完成所有工作

00:04:30.166 --> 00:04:31.736 A:middle
所以真的是

00:04:31.816 --> 00:04:32.956 A:middle
越快越好

00:04:34.226 --> 00:04:36.126 A:middle
为此在 iOS 10 里

00:04:36.326 --> 00:04:37.796 A:middle
我们引入了

00:04:37.836 --> 00:04:40.096 A:middle
Cell 预读取 API

00:04:40.096 --> 00:04:42.186 A:middle
这个预读取 API

00:04:42.256 --> 00:04:43.906 A:middle
就是帮助做一些工作

00:04:43.906 --> 00:04:45.756 A:middle
用模型数据生成 Cell

00:04:45.826 --> 00:04:47.086 A:middle
并把需要在

00:04:47.086 --> 00:04:48.746 A:middle
短时间里做到的

00:04:48.746 --> 00:04:50.916 A:middle
这个部分的内容

00:04:50.916 --> 00:04:52.646 A:middle
更早地开始

00:04:52.646 --> 00:04:53.796 A:middle
并在后台线程做

00:04:53.796 --> 00:04:55.386 A:middle
这样可以和其他工作

00:04:55.386 --> 00:04:57.036 A:middle
异步进行

00:04:57.036 --> 00:04:58.656 A:middle
尤其是我们提到过的

00:04:58.656 --> 00:04:59.286 A:middle
低耗滚动帧

