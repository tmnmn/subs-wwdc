WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:58.686 --> 00:14:00.036 A:middle
分解这些大块需求

00:14:00.036 --> 00:14:01.376 A:middle
或者减少整体需求高峰

00:14:01.376 --> 00:14:03.376 A:middle
的方法 实际上

00:14:03.496 --> 00:14:05.186 A:middle
对提升你的 App 的性能

00:14:05.186 --> 00:14:07.236 A:middle
以及客户接下来

00:14:07.236 --> 00:14:08.816 A:middle
使用其他 App 的体验

00:14:08.816 --> 00:14:10.716 A:middle
都有很大影响

00:14:12.716 --> 00:14:14.006 A:middle
有很多方法

00:14:14.006 --> 00:14:17.806 A:middle
可以减少 APP 内存使用量

00:14:17.806 --> 00:14:19.146 A:middle
其中一个很好的方法

00:14:19.146 --> 00:14:20.326 A:middle
就是用 profile 和 instruments

00:14:20.746 --> 00:14:21.886 A:middle
不过今天上午 

00:14:21.886 --> 00:14:23.496 A:middle
我们要了解一个

00:14:23.496 --> 00:14:25.306 A:middle
iOS 12 里

00:14:25.306 --> 00:14:29.216 A:middle
帮助减少 App 使用内存的新技术

00:14:29.216 --> 00:14:30.786 A:middle
这就是 Automatic Backing Stores

00:14:31.856 --> 00:14:32.966 A:middle
打个比方

00:14:32.966 --> 00:14:34.616 A:middle
我们要在 iPhone X 里

00:14:34.656 --> 00:14:36.356 A:middle
让这个土拨鼠变成肖像模式

00:14:37.266 --> 00:14:38.893 A:middle
这会是多大呢？

00:14:39.436 --> 00:14:41.666 A:middle
iPhone X 的肖像模式

00:14:41.736 --> 00:14:43.376 A:middle
宽 375 点

00:14:43.376 --> 00:14:45.346 A:middle
为保持相同比例

00:14:45.346 --> 00:14:46.176 A:middle
就是 250 点高

00:14:46.706 --> 00:14:48.646 A:middle
这样会占用

00:14:48.646 --> 00:14:48.896 A:middle
多少内存呢

00:14:49.536 --> 00:14:54.956 A:middle
375 乘 250 乘 @3x

00:14:54.956 --> 00:14:56.346 A:middle
再乘上 64 位每像素

00:14:56.346 --> 00:14:58.226 A:middle
因为这是一个色深设备

00:14:58.226 --> 00:15:00.406 A:middle
等于 2.2 M

