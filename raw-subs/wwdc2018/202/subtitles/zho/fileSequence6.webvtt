WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.936 --> 00:06:01.096 A:middle
替换的帧

00:06:01.096 --> 00:06:03.556 A:middle
那个两格的浅蓝色区域

00:06:03.556 --> 00:06:08.386 A:middle
就表示 我们在两帧时间中

00:06:08.436 --> 00:06:09.196 A:middle
绘制了同一帧

00:06:09.946 --> 00:06:11.306 A:middle
在个性化定制的设备上

00:06:11.306 --> 00:06:12.556 A:middle
一但这种情况发生

00:06:12.556 --> 00:06:14.156 A:middle
看起来就像丢帧

00:06:14.246 --> 00:06:15.456 A:middle
或者滚动故障

00:06:15.456 --> 00:06:16.916 A:middle
这当然是我们试图避免的

00:06:18.276 --> 00:06:19.386 A:middle
那么到底发生什么了呢

00:06:20.276 --> 00:06:22.296 A:middle
这个红色部分

00:06:22.426 --> 00:06:23.996 A:middle
表示我们花费在

00:06:23.996 --> 00:06:24.716 A:middle
刚刚提到的

00:06:24.716 --> 00:06:26.126 A:middle
临界区域上的时间

00:06:26.126 --> 00:06:29.646 A:middle
所有的索引路径 布局和绘制

00:06:30.206 --> 00:06:31.396 A:middle
绘制这一帧

00:06:31.396 --> 00:06:33.166 A:middle
实际花费时间

00:06:33.166 --> 00:06:34.206 A:middle
比 16 毫秒要长

00:06:34.946 --> 00:06:36.456 A:middle
因为这个设备

00:06:36.456 --> 00:06:39.216 A:middle
只能在固定时间内

00:06:39.216 --> 00:06:41.966 A:middle
把新的一帧替换到屏幕上

00:06:41.966 --> 00:06:43.376 A:middle
一旦错过截止时间

00:06:43.376 --> 00:06:45.196 A:middle
我们只能把同一帧

00:06:45.196 --> 00:06:46.776 A:middle
显示两帧的时长

00:06:46.776 --> 00:06:47.526 A:middle
这可不太好

00:06:48.206 --> 00:06:49.746 A:middle
为什么会这样呢

00:06:49.746 --> 00:06:50.696 A:middle
在这个例子中

00:06:50.696 --> 00:06:52.136 A:middle
我们已经安装了

00:06:52.136 --> 00:06:53.706 A:middle
Cell 预读取方法

00:06:53.706 --> 00:06:55.106 A:middle
因此我们的数据应该

00:06:55.106 --> 00:06:55.606 A:middle
已经准备好了

00:06:55.806 --> 00:06:56.956 A:middle
理想状态下 这一步应该

00:06:56.956 --> 00:06:57.466 A:middle
完成得更快才对

00:06:58.346 --> 00:06:59.256 A:middle
如果我们再仔细

00:06:59.256 --> 00:07:00.286 A:middle
看一下这个记录

