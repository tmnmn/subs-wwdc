WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.516 --> 00:33:02.226 A:middle
请查看 2016 年的

00:33:02.226 --> 00:33:08.086 A:middle
有关部分

00:33:08.086 --> 00:33:09.736 A:middle
去年我们介绍了

00:33:09.736 --> 00:33:11.556 A:middle
URLSession 自适应

00:33:11.556 --> 00:33:12.896 A:middle
连接 API

00:33:13.376 --> 00:33:14.596 A:middle
waitsForConnectivity

00:33:15.976 --> 00:33:18.106 A:middle
waitsForConnectivity 会一直等待

00:33:18.106 --> 00:33:20.736 A:middle
而不是在你的任务没有

00:33:21.176 --> 00:33:22.616 A:middle
连接的时候

00:33:22.666 --> 00:33:23.246 A:middle
直接加载失败

00:33:24.606 --> 00:33:26.006 A:middle
过去 你们一直在用

00:33:26.006 --> 00:33:28.016 A:middle
STNeworkReachability

00:33:28.016 --> 00:33:30.426 A:middle
来完成发送请求前的预先检查

00:33:31.126 --> 00:33:32.486 A:middle
但是正如 Stuart 刚指出的

00:33:32.486 --> 00:33:34.296 A:middle
这其实是一场赛跑

00:33:34.296 --> 00:33:37.046 A:middle
因为系统可能告诉你

00:33:37.046 --> 00:33:39.186 A:middle
你连上了一个服务器

00:33:39.186 --> 00:33:40.406 A:middle
但是当你创建并发出请求的时候

00:33:40.406 --> 00:33:41.946 A:middle
你已经失去了机会

00:33:41.946 --> 00:33:45.826 A:middle
你不再与服务器连接着了

00:33:45.826 --> 00:33:46.776 A:middle
我们推荐使用

00:33:46.776 --> 00:33:48.406 A:middle
waitsForConnectivity

00:33:48.406 --> 00:33:50.316 A:middle
它会在连接一旦可用时

00:33:50.316 --> 00:33:52.496 A:middle
把你的请求发出去

00:33:53.946 --> 00:33:58.066 A:middle
你也可以执行 taskIsWaitigForConnectivity

00:33:58.066 --> 00:33:59.786 A:middle
Delegate 方法

00:33:59.786 --> 00:34:01.896 A:middle
它会在你的任务无连接时被调用

