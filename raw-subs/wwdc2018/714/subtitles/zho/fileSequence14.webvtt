WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.896 --> 00:14:01.776 A:middle
一张签名的宣誓书

00:14:02.146 --> 00:14:03.656 A:middle
证明它的证书已经

00:14:03.656 --> 00:14:04.646 A:middle
被公开记录

00:14:04.926 --> 00:14:06.076 A:middle
然后当客户端连接时

00:14:06.166 --> 00:14:08.066 A:middle
服务器可以把这些信息

00:14:08.066 --> 00:14:09.096 A:middle
提供给客户端

00:14:09.096 --> 00:14:11.046 A:middle
客户端就能够确认

00:14:11.046 --> 00:14:12.256 A:middle
这不仅是签名证书

00:14:12.256 --> 00:14:14.236 A:middle
更是一个被公开记录了的

00:14:14.236 --> 00:14:15.786 A:middle
签名证书

00:14:16.916 --> 00:14:18.156 A:middle
现在假设有一个

00:14:18.156 --> 00:14:20.226 A:middle
资质较差的证书颁发机构

00:14:20.326 --> 00:14:23.836 A:middle
不公开它颁发的异常证书

00:14:24.726 --> 00:14:26.426 A:middle
客户端就会拒绝它

00:14:26.426 --> 00:14:27.916 A:middle
因为它没有宣誓书

00:14:27.916 --> 00:14:30.386 A:middle
能够证明

00:14:30.476 --> 00:14:31.826 A:middle
这张证书存在于公开记录

00:14:33.006 --> 00:14:34.286 A:middle
今年晚些时候起

00:14:34.596 --> 00:14:35.896 A:middle
我们会强制实施这个机制

00:14:37.456 --> 00:14:39.806 A:middle
所有新颁发的 TLS

00:14:39.806 --> 00:14:41.726 A:middle
证书必须包含

00:14:41.726 --> 00:14:44.096 A:middle
确认他们被公开记录的证明

00:14:44.486 --> 00:14:46.036 A:middle
那么如果他们没有被记录

00:14:46.036 --> 00:14:47.056 A:middle
客户端就会拒绝它

00:14:47.536 --> 00:14:49.686 A:middle
你的 App 不需要做任何改动

00:14:49.686 --> 00:14:51.926 A:middle
但是如果你的

00:14:51.926 --> 00:14:53.006 A:middle
服务器有专门的证书

00:14:53.006 --> 00:14:56.686 A:middle
确保你的证书颁发机构

00:14:56.686 --> 00:14:58.186 A:middle
在公开的证书透明日志中

00:14:58.306 --> 00:14:59.906 A:middle
留下了记录

