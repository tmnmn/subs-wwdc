WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:56.766 --> 00:20:00.746 A:middle
的支持是一流的

00:20:02.056 --> 00:20:04.136 A:middle
如果你的 App 不使用 HTTP

00:20:04.136 --> 00:20:05.966 A:middle
我们也支持

00:20:06.066 --> 00:20:09.226 A:middle
URLSessionStreamTask

00:20:09.226 --> 00:20:11.056 A:middle
这个 API 让你确保

00:20:11.056 --> 00:20:12.946 A:middle
你可以在与服务器的 TCP 连接中

00:20:13.256 --> 00:20:15.796 A:middle
建立任意的协议

00:20:17.136 --> 00:20:18.656 A:middle
这是 URLSession

00:20:19.716 --> 00:20:20.866 A:middle
我们来说说第一项

00:20:20.866 --> 00:20:23.926 A:middle
减少延迟

00:20:25.296 --> 00:20:26.246 A:middle
假设你和你的朋友

00:20:26.246 --> 00:20:28.096 A:middle
去一个餐馆

00:20:28.226 --> 00:20:29.706 A:middle
服务员走向你们 

00:20:29.706 --> 00:20:31.866 A:middle
你说 “请给我一杯水可以吗？”

00:20:32.746 --> 00:20:34.576 A:middle
服务员说 “没问题” 后离开

00:20:34.576 --> 00:20:36.196 A:middle
然后给你拿了一杯水

00:20:37.016 --> 00:20:38.366 A:middle
你的朋友说 

00:20:38.366 --> 00:20:39.406 A:middle
“也请给我一杯水 可以吗？”

00:20:40.066 --> 00:20:41.386 A:middle
服务员说 “没问题” 后离开

00:20:41.386 --> 00:20:43.876 A:middle
然后给你的朋友拿了一杯水

00:20:44.526 --> 00:20:45.576 A:middle
如果服务员一次性获知

00:20:45.576 --> 00:20:46.836 A:middle
每个人想要的东西

00:20:46.836 --> 00:20:48.556 A:middle
从而减少来回当趟数

00:20:48.556 --> 00:20:49.486 A:middle
不是会更快吗

00:20:50.816 --> 00:20:52.746 A:middle
减少延迟的方法很简单

00:20:53.536 --> 00:20:54.966 A:middle
当你获取一项资源时

00:20:54.966 --> 00:20:56.696 A:middle
减少往返的次数即可

00:20:57.626 --> 00:21:01.936 A:middle
现在我们看看你的 App 如何做到这点

