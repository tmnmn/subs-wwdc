WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.246 --> 00:10:02.296 A:middle
很多开发者

00:10:02.446 --> 00:10:04.426 A:middle
都把 SCNetworkReachability

00:10:04.556 --> 00:10:05.326 A:middle
用作预检查

00:10:06.396 --> 00:10:07.686 A:middle
他们想要预测将来

00:10:07.916 --> 00:10:09.076 A:middle
他们想知道

00:10:09.076 --> 00:10:10.936 A:middle
下一个要做的网络操作

00:10:10.936 --> 00:10:12.096 A:middle
会成功还是会失败

00:10:12.626 --> 00:10:14.956 A:middle
然后 不幸的是

00:10:14.956 --> 00:10:16.116 A:middle
预测将来总是

00:10:16.116 --> 00:10:16.666 A:middle
一件困难的事情

00:10:17.216 --> 00:10:18.786 A:middle
现在你可能连着网

00:10:19.476 --> 00:10:20.966 A:middle
但是两秒后

00:10:21.026 --> 00:10:22.366 A:middle
用户走出了这栋建筑

00:10:22.366 --> 00:10:24.496 A:middle
就没有 Wi-Fi 信号了

00:10:24.886 --> 00:10:27.656 A:middle
所以并没有一种方式

00:10:27.656 --> 00:10:29.566 A:middle
可以保证下一个操作能成功

00:10:30.486 --> 00:10:32.356 A:middle
我们常常会看到这样的情况

00:10:32.356 --> 00:10:34.326 A:middle
他们检查预检成功

00:10:34.406 --> 00:10:35.686 A:middle
于是他们去做 结果失败了

00:10:36.126 --> 00:10:37.716 A:middle
他们又回来重新检查

00:10:38.526 --> 00:10:41.016 A:middle
这也有很多工作量

00:10:41.016 --> 00:10:42.546 A:middle
很多临界情况

00:10:42.546 --> 00:10:44.026 A:middle
很多麻烦的事情要处理

00:10:44.606 --> 00:10:46.426 A:middle
比如使用代理的网络

00:10:47.606 --> 00:10:48.776 A:middle
我们可以帮你搞定

00:10:50.506 --> 00:10:53.746 A:middle
只需要使用

00:10:53.746 --> 00:10:56.006 A:middle
waitsForConnectivity 选项来

00:10:56.006 --> 00:10:58.616 A:middle
建立连接就行

00:10:58.816 --> 00:11:00.326 A:middle
你可以从去年的视频中

