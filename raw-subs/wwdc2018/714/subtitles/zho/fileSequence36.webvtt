WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:01.076 --> 00:36:02.746 A:middle
请不要缓存唯一的信息

00:36:04.196 --> 00:36:05.166 A:middle
举个例子

00:36:06.096 --> 00:36:08.246 A:middle
假设你有个 App

00:36:08.246 --> 00:36:09.856 A:middle
约会的 App

00:36:09.856 --> 00:36:11.076 A:middle
而你负责其中

00:36:11.076 --> 00:36:13.086 A:middle
网络部分的代码

00:36:13.086 --> 00:36:15.136 A:middle
这个 App 加载高分辨率的

00:36:15.486 --> 00:36:17.356 A:middle
用户照片

00:36:18.516 --> 00:36:20.206 A:middle
缓存这些高分辨率图像

00:36:20.206 --> 00:36:21.826 A:middle
可能有些浪费

00:36:22.346 --> 00:36:23.636 A:middle
因为用户会向左滑动

00:36:23.666 --> 00:36:25.286 A:middle
去看下一个

00:36:25.286 --> 00:36:28.786 A:middle
意味着你刚才缓存的图像

00:36:28.846 --> 00:36:30.756 A:middle
可能再也不会被请求到

00:36:32.076 --> 00:36:33.446 A:middle
请考虑做些

00:36:33.476 --> 00:36:35.396 A:middle
客户端侧的修改 比如

00:36:35.396 --> 00:36:37.296 A:middle
采用 willChacheResponse Delegate 方法

00:36:37.296 --> 00:36:39.596 A:middle
来决定哪些资源

00:36:39.596 --> 00:36:40.396 A:middle
应该被缓存

00:36:41.886 --> 00:36:43.896 A:middle
如果你拥有服务器的话

00:36:43.896 --> 00:36:45.436 A:middle
请考虑在请求头中使用缓存控制

00:36:45.436 --> 00:36:48.016 A:middle
来决定哪些资源

00:36:48.016 --> 00:36:48.826 A:middle
可以被缓存

00:36:49.346 --> 00:36:53.006 A:middle
我们迅速地过一遍

00:36:53.006 --> 00:36:54.506 A:middle
今天讨论过的关键点

00:36:55.346 --> 00:36:57.286 A:middle
第一点 当你去餐馆时

00:36:57.286 --> 00:36:58.836 A:middle
一次性把所有要点的菜都点完

00:36:59.166 --> 00:37:00.766 A:middle
我开个玩笑

