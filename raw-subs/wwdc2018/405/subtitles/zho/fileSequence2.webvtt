WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.196 --> 00:02:02.596 A:middle
但最酷的是

00:02:02.736 --> 00:02:04.936 A:middle
我们将它整合进了 Instruments

00:02:05.466 --> 00:02:06.606 A:middle
这意味着 Instruments 可以

00:02:06.606 --> 00:02:07.766 A:middle
获得 Signposts 产生的数据

00:02:07.766 --> 00:02:12.136 A:middle
让你对程序的行为 有更深的理解

00:02:13.496 --> 00:02:15.476 A:middle
首先简单讲下历史

00:02:16.556 --> 00:02:18.926 A:middle
我们在几年前就推出了 OSLog

00:02:19.696 --> 00:02:21.826 A:middle
这是我们关于日志设备

00:02:21.826 --> 00:02:22.746 A:middle
的新想法

00:02:23.006 --> 00:02:26.076 A:middle
这是我们从系统中 获取调试信息的方式

00:02:26.456 --> 00:02:29.186 A:middle
我们是怀着提升效率的目标

00:02:29.356 --> 00:02:31.586 A:middle
并牢记着隐私的重要性 来开发它的

00:02:32.696 --> 00:02:34.146 A:middle
这里你可以看到一段

00:02:34.146 --> 00:02:35.796 A:middle
OSLog 的代码示例

00:02:35.796 --> 00:02:37.256 A:middle
我刚刚创建了一个简单的日志句柄

00:02:37.256 --> 00:02:39.566 A:middle
并把 “hello world” 传给了它

00:02:40.326 --> 00:02:43.016 A:middle
Signposts 继承了 OSLog 的 API

00:02:43.796 --> 00:02:44.536 A:middle
但它是为了描述

00:02:44.536 --> 00:02:45.576 A:middle
性能使用的情况

00:02:45.816 --> 00:02:46.486 A:middle
这意味着它们在传达

00:02:46.486 --> 00:02:48.156 A:middle
和性能有关的信息

00:02:48.156 --> 00:02:49.676 A:middle
并且我们把它

00:02:49.756 --> 00:02:51.026 A:middle
整合进了我们的开发者工具中

00:02:51.026 --> 00:02:52.846 A:middle
也就是说你可以

00:02:52.936 --> 00:02:53.876 A:middle
用 Signposts 来给你的

00:02:53.876 --> 00:02:55.486 A:middle
代码加上注释然后打开

00:02:55.486 --> 00:02:57.176 A:middle
Instruments 就能看到这个

00:02:58.526 --> 00:02:59.866 A:middle
在这里 Instruments 向你展示了

