WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:00.256 --> 00:08:02.196 A:middle
signpost ID 会告诉系统

00:08:02.196 --> 00:08:04.076 A:middle
这些是同一类型的操作

00:08:04.076 --> 00:08:06.516 A:middle
但是它们之间

00:08:06.546 --> 00:08:07.586 A:middle
又互相不一样

00:08:08.366 --> 00:08:11.276 A:middle
所以如果两项操作重叠了

00:08:11.276 --> 00:08:12.376 A:middle
但它们有着不同的 signpost ID 

00:08:12.376 --> 00:08:13.446 A:middle
系统就会知道

00:08:13.486 --> 00:08:14.686 A:middle
它们是不同的时间段

00:08:15.096 --> 00:08:16.516 A:middle
只要你将相同的

00:08:16.516 --> 00:08:18.046 A:middle
signpost ID 传给了开始调用点

00:08:18.046 --> 00:08:19.196 A:middle
和结束调用点

00:08:19.626 --> 00:08:21.096 A:middle
这两个 signpost 就会

00:08:21.316 --> 00:08:22.546 A:middle
相互关联

00:08:23.596 --> 00:08:25.936 A:middle
你可以通过这个构造函数

00:08:25.936 --> 00:08:27.196 A:middle
使用一个日志句柄

00:08:27.196 --> 00:08:29.666 A:middle
来创建 signpost ID 但你也可以

00:08:29.666 --> 00:08:31.736 A:middle
通过对象来创建

00:08:32.606 --> 00:08:33.765 A:middle
如果你有一些对象

00:08:33.765 --> 00:08:35.226 A:middle
代表你想做的事

00:08:35.226 --> 00:08:36.426 A:middle
那么这样就很方便

00:08:36.895 --> 00:08:38.515 A:middle
只要你使用了

00:08:38.515 --> 00:08:39.736 A:middle
对象的同一实例

00:08:39.736 --> 00:08:41.456 A:middle
就会生成同样的 signpost ID

00:08:41.826 --> 00:08:42.756 A:middle
这意味着你不需要

00:08:42.806 --> 00:08:44.876 A:middle
到处携带和存储 signpost ID

00:08:44.876 --> 00:08:46.756 A:middle
你可以直接使用对象

00:08:48.966 --> 00:08:51.646 A:middle
直观上你可以将

00:08:51.646 --> 00:08:53.616 A:middle
signpost ID 想成允许我们

00:08:53.616 --> 00:08:55.086 A:middle
向每次 signpost 调用

00:08:55.086 --> 00:08:56.926 A:middle
传递一点额外的背景信息

00:08:57.926 --> 00:09:00.576 A:middle
对于一段特定的操作

