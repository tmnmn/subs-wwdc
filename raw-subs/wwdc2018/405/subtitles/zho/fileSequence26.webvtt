WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.996 --> 00:26:01.026 A:middle
然后是它的大小

00:26:01.026 --> 00:26:02.516 A:middle
如果我们能把这些参数加起来

00:26:02.576 --> 00:26:04.536 A:middle
那就太棒了

00:26:05.266 --> 00:26:06.546 A:middle
所以，如果你想这么做

00:26:06.546 --> 00:26:07.256 A:middle
你可以在这里选择

00:26:07.256 --> 00:26:09.286 A:middle
“summary of metadata statistics”

00:26:10.616 --> 00:26:11.696 A:middle
你可以看到

00:26:11.696 --> 00:26:13.276 A:middle
我们将它分解成了子系统

00:26:13.826 --> 00:26:17.076 A:middle
种类和格式化字符串

00:26:17.076 --> 00:26:18.636 A:middle
在格式化字符串下面

00:26:18.636 --> 00:26:19.606 A:middle
是它的参数

00:26:19.816 --> 00:26:20.996 A:middle
由于我们的格式化字符串

00:26:20.996 --> 00:26:22.926 A:middle
只有一个参数 所以就是 arg0

00:26:22.926 --> 00:26:26.416 A:middle
现在 Instruments 已经将这些加在一起了

00:26:26.416 --> 00:26:27.896 A:middle
并且它知道这是一个

00:26:27.896 --> 00:26:28.776 A:middle
以字节计的大小

00:26:28.776 --> 00:26:29.866 A:middle
它给了我们一个精准的计算

00:26:29.866 --> 00:26:31.986 A:middle
结果为 80MB

00:26:32.036 --> 00:26:33.626 A:middle
所以我们一共下载了

00:26:33.656 --> 00:26:34.856 A:middle
80MB 的图像数据

00:26:35.046 --> 00:26:37.666 A:middle
现在你在这里可以

00:26:37.666 --> 00:26:38.186 A:middle
看到不同的列

00:26:38.186 --> 00:26:39.196 A:middle
有最小值 最大值 平均值

00:26:39.196 --> 00:26:40.166 A:middle
还有标准差

00:26:40.256 --> 00:26:41.776 A:middle
所以这是一个很好的方式

00:26:41.846 --> 00:26:43.976 A:middle
来查看你通过

00:26:43.976 --> 00:26:47.706 A:middle
元数据传递的值的统计分析

00:26:48.306 --> 00:26:49.296 A:middle
Shane 刚刚提到

00:26:49.296 --> 00:26:51.766 A:middle
signposts 非常轻量

00:26:52.056 --> 00:26:54.596 A:middle
这是完全正确的

00:26:54.806 --> 00:26:55.916 A:middle
除非你像我 刚刚跑 Instruments

00:26:55.916 --> 00:26:56.816 A:middle
那样运行 Instruments

00:26:57.016 --> 00:27:00.056 A:middle
在 immediate 模式下

