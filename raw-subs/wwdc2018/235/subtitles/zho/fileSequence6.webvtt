WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:58.158 --> 00:06:00.494 align:middle line:-1
它占据了它重叠的部分

00:06:01.094 --> 00:06:03.664 align:middle line:-1
在那里在延伸它的父视图安全区之外

00:06:04.164 --> 00:06:07.634 align:middle line:-1
当我们靠近边缘时 它继续延伸

00:06:08.502 --> 00:06:09.837 align:middle line:-2
若我们继续将这个视图
移离它的父视图的底部边缘

00:06:09.903 --> 00:06:12.806 align:middle line:-1
你想它将会发生什么呢？

00:06:14.842 --> 00:06:15.809 align:middle line:-1
好吧 你觉得怎么样？

00:06:16.410 --> 00:06:20.948 align:middle line:-2
当视图移出父视图时
安全区没有进一步扩展

00:06:21.615 --> 00:06:24.918 align:middle line:-1
不论那个视图移开距离父视图有多远

00:06:25.719 --> 00:06:28.722 align:middle line:-2
现在你可能会自问
“我们为什么要这么做？”

00:06:28.922 --> 00:06:32.593 align:middle line:-1
“其目的是什么？” 答案是动画

00:06:33.193 --> 00:06:36.363 align:middle line:-2
在这个特殊的例子中
我们将子视图移出它的父视图

00:06:36.797 --> 00:06:39.666 align:middle line:-1
我们不希望内容停留在安全区内

00:06:39.733 --> 00:06:41.969 align:middle line:-2
因为那样它就不会
和自己的父视图一起移动了

00:06:42.402 --> 00:06:44.638 align:middle line:-1
我们可以看到这个app的例子

00:06:45.172 --> 00:06:48.308 align:middle line:-1
我们从它的底部拉出一个视图

00:06:49.543 --> 00:06:53.213 align:middle line:-1
若这个视图是针对其父安全区展开的

00:06:53.614 --> 00:06:56.216 align:middle line:-2
那么随着这个视图
从屏幕底部生长的越远

00:06:56.283 --> 00:06:58.552 align:middle line:-1
其父安全区将随着扩展

00:06:59.119 --> 00:07:04.258 align:middle line:-2
那么这个区域就会在整个过渡期间
停留在屏幕上

