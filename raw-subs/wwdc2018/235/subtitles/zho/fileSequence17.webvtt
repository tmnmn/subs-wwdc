WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:00.921 --> 00:17:05.157 align:middle line:-2
如果我们现在继续往回滚动
一直到最上面

00:17:05.425 --> 00:17:08.395 align:middle line:-2
我们实际上会得到一个为负值的
contentOffset

00:17:09.663 --> 00:17:13.934 align:middle line:-2
这是因为我们现在的滚动
可以超出我们的内容的顶部边缘

00:17:14.201 --> 00:17:17.570 align:middle line:-1
这样我们就可以滚动到顶部边缘的

00:17:17.637 --> 00:17:18.704 align:middle line:-1
负值contentInset

00:17:20.339 --> 00:17:21.909 align:middle line:-1
现在我们从iOS 7开始

00:17:22.509 --> 00:17:24.978 align:middle line:-2
contentInset
技术已变得很重要了

00:17:25.045 --> 00:17:27.814 align:middle line:-2
这是因为在iOS 7中
半透明滚动条

00:17:27.881 --> 00:17:30.217 align:middle line:-1
在整个系统中变得非常普遍了

00:17:30.284 --> 00:17:33.620 align:middle line:-2
这个想法是
将你的内容从边到边都展示出来

00:17:33.787 --> 00:17:37.791 align:middle line:-2
它会从下面露出滚动条
这样你就可以使你的内容

00:17:37.858 --> 00:17:41.895 align:middle line:-2
通过滚动条获得漂亮的彩色框
对吧？工具栏、导航栏等等

00:17:42.496 --> 00:17:46.066 align:middle line:-2
因为这很常见
所以我们想要一种方法来帮助

00:17:46.133 --> 00:17:50.003 align:middle line:-2
自动设置滚动视图上的contentInset
以便在你的app中更容易实现

00:17:50.604 --> 00:17:53.407 align:middle line:-2
为此我们在
UIViewController上有一个属性

00:17:54.208 --> 00:17:57.344 align:middle line:-1
这被称为自动调整滚动视图嵌入

00:17:57.744 --> 00:18:02.883 align:middle line:-2
其目的是当滚动视图上
有来自导航栏或工具栏的

