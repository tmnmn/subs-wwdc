WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:54.815 --> 00:37:01.355 align:start position:18% line:-2
コンテナビューはSafe Areaを
認識していないコンテンツを

00:37:01.455 --> 00:37:06.193 align:start position:11% line:-2
safeAreaInsetsを分析することで
Safe Area内に置きます

00:37:06.293 --> 00:37:10.330 align:start position:30% line:-2
また 背景を
与えることもできるので

00:37:10.998 --> 00:37:16.236 align:start position:14% line:-2
Safe Areaの外にある画面の縁まで
拡大することもできます

00:37:18.272 --> 00:37:23.577 align:start position:12% line:-2
Safe Areaと 画面の縁に近い要素に
関連したテクニックはまだあります

00:37:23.677 --> 00:37:28.048 align:start position:21% line:-2
コントロールやボタンがある場合を
考えてください

00:37:28.148 --> 00:37:32.653 align:start position:14% line:-2
あるデバイスでは
Safe Areaの辺に沿って置きますが

00:37:32.753 --> 00:37:37.424 align:start position:9% line:-2
safeAreaInsetsが0のデバイスでは
余白が欲しいかもしれません

00:37:37.524 --> 00:37:43.897 align:start position:11% line:-2
safeAreaInsetsは見えない空白を
取り込んでいる場合があるからです

00:37:43.997 --> 00:37:50.804 align:start position:21% line:-2
そこで どちらのケースにおいても
使える１つの解決法をご紹介します

00:37:51.205 --> 00:37:56.343 align:start position:21% line:-2
ダイアグラムを使って
レイアウト制約を２つお見せします

00:37:56.443 --> 00:37:59.513 align:start position:25% line:-1
生まれる結果は次のとおりです

00:37:59.847 --> 00:38:06.687 align:start position:21% line:-2
１つ目の制約が表しているのは
一般的に加えられるような余白です

