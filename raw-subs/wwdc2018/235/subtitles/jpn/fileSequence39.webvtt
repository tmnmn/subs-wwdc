WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:58.705 --> 00:39:02.476 align:start position:21% line:-2
safeAreaInsetsは
ビューが見えなくなるのを防ぎます

00:39:03.377 --> 00:39:07.481 align:start position:21% line:-1
可読領域はテキストを読みやすくし

00:39:07.648 --> 00:39:13.821 align:start position:21% line:-2
サイズのクラスはより大きな構造を
実装すべき時を教えてくれます

00:39:15.122 --> 00:39:17.524 align:start position:21% line:-1
これらのAPIはフレームワークに

00:39:17.624 --> 00:39:22.062 align:start position:21% line:-2
よりハイレベルなコンポーネントを
実装するために使います

00:39:22.162 --> 00:39:24.498 align:start position:21% line:-1
スクロールビューやテーブルビュー

00:39:24.598 --> 00:39:26.967 align:start position:27% line:-2
コンテナビューコントローラ
などです

00:39:27.067 --> 00:39:31.238 align:start position:23% line:-2
他にご紹介したことも
ハイレベルなコンポーネントを―

00:39:31.338 --> 00:39:37.311 align:start position:23% line:-2
単純な方法ですべてのデバイスに
適応させることに役立つでしょう

00:39:37.978 --> 00:39:41.915 align:start position:21% line:-2
これで きっと皆さんは
“アダプティブ”という原点に返り

00:39:42.015 --> 00:39:45.219 align:start position:30% line:-2
アプリケーションを
デザインできるはずです

00:39:45.853 --> 00:39:50.290 align:start position:25% line:-2
デバイスごとのコーディングは
不要になります

00:39:50.691 --> 00:39:53.260 align:start position:34% line:-2
コードはシンプルで
フレキシブルになり

00:39:53.360 --> 00:39:58.765 align:start position:23% line:-2
異なる環境でも長く使える
アプリケーションになるでしょう

