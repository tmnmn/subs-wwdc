WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:57.844 --> 00:23:00.547 align:start position:34% line:-2
ウェイトのサイズは
量子化で縮小可能

00:23:00.647 --> 00:23:02.549 align:start position:30% line:-1
しかしウェイトの数は？

00:23:03.217 --> 00:23:08.889 align:start position:21% line:-2
Core MLは
様々なアーキテクチャをサポートし

00:23:08.989 --> 00:23:14.495 align:start position:21% line:-2
機械学習に適したサイズのモデルを
選択します

00:23:14.595 --> 00:23:18.298 align:start position:21% line:-1
Core MLはAppのサイズを

00:23:18.398 --> 00:23:21.368 align:start position:34% line:-2
これら３要素を使い
最適化します

00:23:21.468 --> 00:23:24.571 align:start position:27% line:-1
いつでも推論は超高性能です

00:23:24.738 --> 00:23:27.975 align:start position:29% line:-2
パフォーマンスと
カスタマイズの新機能は―

00:23:28.075 --> 00:23:29.710 align:start position:36% line:-1
ビルが説明します

00:23:29.810 --> 00:23:30.377 align:start position:41% line:-1
ありがとう

00:23:30.477 --> 00:23:36.283 align:start position:43% line:-1
(拍手)

00:23:37.985 --> 00:23:38.719 align:start position:32% line:-1
ありがとうございます

00:23:39.786 --> 00:23:43.123 align:start position:29% line:-2
Core MLの基本的な
設計原則の１つは

00:23:43.223 --> 00:23:46.727 align:start position:21% line:-2
Appに
最高のパフォーマンスを与えること

00:23:46.827 --> 00:23:53.934 align:start position:20% line:-2
そのゴールに沿ったCore MLの
新たな機能をご紹介します

00:23:54.902 --> 00:23:58.205 align:start position:23% line:-2
先ほどフランチェスコが
使ったサンプルを見てみましょう

00:23:58.305 --> 00:24:04.077 align:start position:23% line:-2
App上では 入力された画像を
図案化します

