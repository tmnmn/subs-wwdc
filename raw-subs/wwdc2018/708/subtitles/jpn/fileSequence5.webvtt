WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:57.064 --> 00:05:00.767 align:start position:30% line:-2
サーバの保守や
支払いも必要ありません

00:05:01.335 --> 00:05:05.239 align:start position:27% line:-2
Core MLの推論が
いつでも どこでも可能です

00:05:05.506 --> 00:05:07.474 align:start position:36% line:-2
ネット接続環境に
左右されません

00:05:07.975 --> 00:05:09.943 align:start position:27% line:-1
これらのメリットを得るには

00:05:10.043 --> 00:05:13.480 align:start position:27% line:-2
機械学習モデルの
デバイスへの保存が必要です

00:05:14.014 --> 00:05:19.119 align:start position:23% line:-2
モデルのサイズが大きいと
Appのサイズも大きくなります

00:05:19.753 --> 00:05:24.324 align:start position:23% line:-2
例えば機能が充実した
すばらしいAppがあるとします

00:05:24.424 --> 00:05:26.693 align:start position:32% line:-1
ユーザの満足度も高い

00:05:26.860 --> 00:05:30.597 align:start position:32% line:-2
そこで デバイス上の
機械学習を利用し

00:05:30.697 --> 00:05:34.735 align:start position:34% line:-2
すばらしい機能を
加えることにします

00:05:34.902 --> 00:05:39.106 align:start position:20% line:-2
そのために
Core MLモデルに学習させます

00:05:39.773 --> 00:05:44.311 align:start position:32% line:-2
ユーザはさらに満足し
幸せを感じるでしょう

00:05:45.078 --> 00:05:49.616 align:start position:23% line:-2
ただAppのサイズは
増加してしまいます

00:05:49.950 --> 00:05:52.119 align:start position:29% line:-1
機械学習機能の追加により

00:05:52.219 --> 00:05:56.390 align:start position:30% line:-2
数十から数百メガバイト
増えることもあります

00:05:57.524 --> 00:06:00.260 align:start position:29% line:-1
さらに新機能を追加すれば

