WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:00.334 --> 00:30:02.369 align:start position:36% line:-1
さらに時が過ぎて

00:30:02.469 --> 00:30:06.073 align:start position:30% line:-2
Appleに勤務し
再び見解が変化しました

00:30:06.440 --> 00:30:09.543 align:start position:25% line:-2
今であれば
Create MLを使います

00:30:09.643 --> 00:30:12.813 align:start position:23% line:-2
UIは最高で すぐに馬の種類も
判別できるでしょう

00:30:13.313 --> 00:30:15.883 align:start position:29% line:-1
機械学習の専門家であれば

00:30:15.983 --> 00:30:19.052 align:start position:29% line:-2
“何を言ってるんだ？”と
思うでしょう

00:30:19.153 --> 00:30:21.288 align:start position:32% line:-2
“2007年の時点で
この問題を解けたし”

00:30:21.388 --> 00:30:24.158 align:start position:27% line:-2
“2012年には
100回は判別できた”とね

00:30:24.491 --> 00:30:25.626 align:start position:38% line:-1
それはさておき

00:30:25.726 --> 00:30:31.565 align:start position:21% line:-2
長持ちする高品質のソフトウェアを
望むなら 緊張するでしょう

00:30:31.665 --> 00:30:35.536 align:start position:32% line:-2
11年後 この問題の
全体像が変わりました

00:30:36.203 --> 00:30:40.607 align:start position:25% line:-2
安心のためにCore MLの
機能を見てみましょう

00:30:41.575 --> 00:30:46.513 align:start position:27% line:-2
再び 写真に馬がいるか探す
モデルを例にとります

00:30:46.613 --> 00:30:49.249 align:start position:21% line:-1
これはニューラルネットワークです

00:30:49.716 --> 00:30:54.621 align:start position:21% line:-2
前述のとおり 高度に最適化された
レイヤから成ります

00:30:54.721 --> 00:31:00.160 align:start position:27% line:-2
推論エンジンで 各レイヤが
高度に最適化されています

