WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.545 --> 00:28:01.415 align:start position:29% line:-1
早速 動かしてみましょう

00:28:03.817 --> 00:28:05.652 align:start position:34% line:-1
右側は既に処理完了

00:28:05.752 --> 00:28:09.356 align:start position:34% line:-2
左側はまだ処理中…
やっと完了です

00:28:09.456 --> 00:28:15.162 align:start position:43% line:-1
(拍手)

00:28:15.262 --> 00:28:18.999 align:start position:29% line:-2
新しいAPIには
明らかな改善が見られます

00:28:19.399 --> 00:28:24.872 align:start position:21% line:-2
その改善はモデルやデバイスなどに
左右されるでしょうが

00:28:24.972 --> 00:28:27.274 align:start position:32% line:-1
予測が大量にある場合

00:28:27.374 --> 00:28:32.179 align:start position:20% line:-2
新しいAPIを使用し
Core MLに計算させてください

00:28:35.682 --> 00:28:39.620 align:start position:32% line:-2
ユーザに役立つ機能が
ない場合は―

00:28:39.720 --> 00:28:42.756 align:start position:27% line:-1
世界一高性能でも無意味です

00:28:43.624 --> 00:28:46.460 align:start position:29% line:-1
その役立つ機能が何であれ

00:28:46.560 --> 00:28:51.832 align:start position:29% line:-2
Core MLを高性能で
簡単なものにしたいです

00:28:52.466 --> 00:28:56.437 align:start position:32% line:-2
機械学習の分野は
急速に拡大しています

00:28:56.737 --> 00:28:58.071 align:start position:39% line:-1
その速さは？

00:28:58.172 --> 00:29:01.241 align:start position:30% line:-1
少し私の話をしましょう

