WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.940 --> 00:14:00.807 align:start position:45% line:-1
ガラス

00:14:02.309 --> 00:14:03.210 align:start position:46% line:-1
油絵

00:14:04.845 --> 00:14:05.946 align:start position:43% line:-1
そして波

00:14:07.414 --> 00:14:09.917 align:start position:27% line:-1
Xcodeを見てみましょう

00:14:10.984 --> 00:14:15.722 align:start position:16% line:-2
Core MLとVision APIを
使用しています

00:14:16.190 --> 00:14:20.260 align:start position:12% line:-2
Xcodeには４つのCore MLモデルが
バンドルされています

00:14:20.360 --> 00:14:23.864 align:start position:25% line:-2
先ほどの
シティ ガラス 油絵 波です

00:14:24.464 --> 00:14:26.667 align:start position:30% line:-1
ここで確認ができますが

00:14:26.767 --> 00:14:32.306 align:start position:25% line:-2
これらは量子化モデルのため
それぞれ6.7メガバイトです

00:14:33.040 --> 00:14:36.343 align:start position:34% line:-2
ある解像度の
入力画像を取り込み

00:14:36.577 --> 00:14:40.047 align:start position:25% line:-2
同じ解像度の図案化した画像を
生成するのです

00:14:40.981 --> 00:14:42.850 align:start position:34% line:-1
ここで調べたいのは

00:14:42.950 --> 00:14:48.489 align:start position:23% line:-2
量子化への切り替えで節約できた
ストレージとメモリスペースです

00:14:48.589 --> 00:14:51.425 align:start position:14% line:-1
Core ML Toolsを使いましょう

00:14:51.525 --> 00:14:55.729 align:start position:29% line:-2
これらのモデルの
量子化表現を取得しました

00:14:56.196 --> 00:14:58.899 align:start position:34% line:-2
モデル入手のための
チュートリアルは

00:14:58.999 --> 00:15:03.637 align:start position:16% line:-2
パート２でCore ML Toolsの
詳細を説明します

