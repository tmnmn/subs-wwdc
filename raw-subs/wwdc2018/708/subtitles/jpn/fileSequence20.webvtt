WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.000 --> 00:20:04.705 align:start position:23% line:-2
デベロッパとしては
解像度を落として取り込んだ後―

00:20:04.805 --> 00:20:07.474 align:start position:32% line:-2
再び解像度を
上げるしかありません

00:20:07.741 --> 00:20:10.611 align:start position:27% line:-1
ユーザは感心しないでしょう

00:20:11.778 --> 00:20:13.180 align:start position:36% line:-1
従来のモデルでも

00:20:14.014 --> 00:20:19.052 align:start position:21% line:-2
Core ML Toolsを使い
高解像度の画像を

00:20:19.486 --> 00:20:22.222 align:start position:29% line:-1
取り込むことができました

00:20:23.290 --> 00:20:25.993 align:start position:29% line:-2
つまり今までも
Core MLモデルに―

00:20:26.093 --> 00:20:32.065 align:start position:25% line:-2
高解像度の画像を直接取り込み
処理できていたのです

00:20:33.534 --> 00:20:39.606 align:start position:29% line:-2
ユーザは最終的な画像に
多くの処理を追加するため

00:20:40.107 --> 00:20:44.912 align:start position:29% line:-2
ズームインした際の画像は
繊細にしたかったのです

00:20:46.513 --> 00:20:48.715 align:start position:36% line:-1
ただし今までは―

00:20:48.816 --> 00:20:52.953 align:start position:23% line:-2
２つの異なるモデルを作ることで
それを可能にしていました

00:20:53.053 --> 00:20:56.256 align:start position:38% line:-2
通常解像度版と
高解像度版です

00:20:56.557 --> 00:21:00.327 align:start position:23% line:-2
ネットワークですべての解像度を
サポートすると

