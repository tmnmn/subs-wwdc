WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:57.524 --> 00:06:00.260 align:start position:29% line:-1
さらに新機能を追加すれば

00:06:00.928 --> 00:06:03.697 align:start position:27% line:-1
サイズの増加は止まりません

00:06:04.631 --> 00:06:06.833 align:start position:32% line:-1
できることがあります

00:06:06.934 --> 00:06:11.205 align:start position:27% line:-2
機械学習モデルが
Appの他の機能をサポートするのなら

00:06:11.638 --> 00:06:14.341 align:start position:27% line:-1
それをバンドル外に保てます

00:06:15.275 --> 00:06:21.315 align:start position:23% line:-2
ユーザは必要時にダウンロードし
デバイス上でコンパイルできます

00:06:21.715 --> 00:06:27.120 align:start position:27% line:-2
この場合 サイズ変更はなく
最初は問題ありません

00:06:27.221 --> 00:06:31.358 align:start position:30% line:-2
ただ ダウンロードして
すべての機能を使おうとすると

00:06:32.059 --> 00:06:35.529 align:start position:27% line:-2
最終的にAppの
サイズは増えます

00:06:36.196 --> 00:06:38.866 align:start position:27% line:-1
もしモデル自体のサイズを―

00:06:40.000 --> 00:06:45.005 align:start position:25% line:-2
小さくすれば
問題は解決するのでしょうか？

00:06:46.306 --> 00:06:50.344 align:start position:23% line:-2
App内にそのモデルを含めれば
バンドルが小さくなります

00:06:51.378 --> 00:06:56.483 align:start position:21% line:-2
小さいモデルを含めることで
スムーズなダウンロードが可能です

00:06:57.084 --> 00:07:00.521 align:start position:30% line:-2
Appのメモリ使用量は
少なくなります

