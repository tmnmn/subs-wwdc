WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:57.084 --> 00:07:00.521 align:start position:30% line:-2
Appのメモリ使用量は
少なくなります

00:07:00.888 --> 00:07:05.759 align:start position:25% line:-2
メモリの節約は 一般的に
Appとシステムに好都合です

00:07:06.894 --> 00:07:12.299 align:start position:25% line:-2
Core MLのサイズ問題に
どう取り組むかを見ましょう

00:07:13.400 --> 00:07:14.801 align:start position:36% line:-1
まずはモデルの数

00:07:14.902 --> 00:07:18.939 align:start position:27% line:-2
これは
機械学習機能の数によります

00:07:19.273 --> 00:07:21.041 align:start position:34% line:-1
そしてウェイトの数

00:07:21.441 --> 00:07:26.146 align:start position:23% line:-2
ウェイトの数は選択した
アーキテクチャにより異なります

00:07:26.513 --> 00:07:28.115 align:start position:32% line:-1
マイケルの言及どおり

00:07:28.882 --> 00:07:32.619 align:start position:25% line:-1
ウェイトとは機械学習モデルが

00:07:32.719 --> 00:07:35.989 align:start position:23% line:-1
習得した情報を記憶する場所です

00:07:36.290 --> 00:07:39.860 align:start position:32% line:-2
複雑なタスクの実行を
習得すれば

00:07:39.960 --> 00:07:44.164 align:start position:32% line:-2
何千万ものウェイトに
なることもあります

00:07:45.532 --> 00:07:47.334 align:start position:30% line:-1
最後はウェイトのサイズ

00:07:47.434 --> 00:07:51.004 align:start position:32% line:-2
習得中のパラメータの
格納方法は？

00:07:51.805 --> 00:07:53.540 align:start position:36% line:-1
ここは注目点です

00:07:54.408 --> 00:07:58.445 align:start position:27% line:-2
ニューラルネットワークには
いくつかの方法があります

00:07:59.746 --> 00:08:02.950 align:start position:18% line:-1
iOS 11のCore MLの場合は

