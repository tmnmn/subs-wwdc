WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.047 --> 00:13:03.417 align:middle line:-1
并将其与原来的浮点数版本进行比较

00:13:04.017 --> 00:13:07.855 align:middle line:0
你应在检查中使用相关的测试数据
以及适用于你的app和用例的指标

00:13:08.956 --> 00:13:11.792 align:middle line:-1
现在让我们看一个如何采用量化模型

00:13:12.259 --> 00:13:15.062 align:middle line:-1
来减小app大小的演示

00:13:25.172 --> 00:13:27.174 align:middle line:-1
我想向你展示一款风格转换app

00:13:28.075 --> 00:13:32.579 align:middle line:-2
在风格转换app中 有一个训练好的
神经网络被用来渲染用户图像

00:13:32.646 --> 00:13:36.149 align:middle line:-2
该网络使用通过观看绘画或其他图像
学习到的风格来对用户的图像渲染

00:13:36.550 --> 00:13:37.618 align:middle line:-1
首先加载app

00:13:39.186 --> 00:13:40.287 align:middle line:-1
我们可以看到

00:13:40.587 --> 00:13:42.656 align:middle line:-1
我的app中内置了四种风格

00:13:42.723 --> 00:13:45.259 align:middle line:-1
城市 玻璃 油画和波浪

00:13:45.626 --> 00:13:49.296 align:middle line:-2
然后我可以从用户的照片库中
选择图片

00:13:49.863 --> 00:13:53.400 align:middle line:-2
然后通过在设备上
以不同风格渲染来处理它们

00:13:53.934 --> 00:13:57.838 align:middle line:-2
这是原始图像
我将其渲染为城市风格

00:13:59.940 --> 00:14:01.008 align:middle line:-1
玻璃风格

