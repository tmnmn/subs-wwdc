WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.218 --> 00:12:01.622 align:middle line:-2
你可以使用Core ML工具
来获得它的量化表示

00:12:01.688 --> 00:12:04.291 align:middle line:-1
Core ML工具会自动替你量化

00:12:05.492 --> 00:12:07.928 align:middle line:0
或者你可以直接训练量化模型

00:12:09.263 --> 00:12:11.732 align:middle line:0
你可以使用量化约束
从零开始进行量化训练

00:12:11.798 --> 00:12:15.402 align:middle line:0
或者用量化约束重新训练现有模型

00:12:16.403 --> 00:12:17.971 align:middle line:-1
在你获得量化模型和训练工具后

00:12:18.038 --> 00:12:19.973 align:middle line:-1
你可以像平常一样

00:12:20.040 --> 00:12:21.608 align:middle line:-1
将其转换为Core ML

00:12:22.209 --> 00:12:25.012 align:middle line:-2
在app中
使用模型的方式不会改变

00:12:25.579 --> 00:12:27.447 align:middle line:-1
在模型中

00:12:27.514 --> 00:12:29.483 align:middle line:-1
数字将以不同的精度进行存储

00:12:29.550 --> 00:12:33.120 align:middle line:-1
但使用该模型的接口完全不会改变

00:12:35.489 --> 00:12:38.559 align:middle line:-2
但我们总是需要考虑到
量化模型

00:12:38.959 --> 00:12:40.727 align:middle line:-1
只是原始浮点模型的

00:12:40.794 --> 00:12:43.597 align:middle line:-1
较低精度的近似

00:12:44.231 --> 00:12:45.933 align:middle line:-1
这意味着量化模型

00:12:45.999 --> 00:12:48.902 align:middle line:-1
具有精确性与模型大小的折衷

00:12:49.703 --> 00:12:53.073 align:middle line:-1
这种折衷取决于模型和用例

00:12:53.740 --> 00:12:55.943 align:middle line:-1
这也是一个非常活跃的研究领域

00:12:56.410 --> 00:12:59.613 align:middle line:-1
因此总是建议检查量化模型的准确性

