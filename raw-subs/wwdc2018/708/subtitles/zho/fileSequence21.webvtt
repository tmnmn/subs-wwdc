WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:56.490 --> 00:21:00.327 align:middle line:-2
这当然意味着我们的app大小
变为原来的两倍

00:21:00.394 --> 00:21:01.695 align:middle line:-1
尽管这个网络

00:21:01.762 --> 00:21:03.830 align:middle line:-1
是被训练为处理任何分辨率的

00:21:04.498 --> 00:21:07.401 align:middle line:-2
现在不再是这样了
我们推出了弹性形状

00:21:07.768 --> 00:21:11.505 align:middle line:-2
通过使用弹性形状
你可以用单一的模型

00:21:11.772 --> 00:21:14.508 align:middle line:-1
来处理更多的分辨率种类

00:21:15.609 --> 00:21:16.743 align:middle line:-1
现在在Xcode中…

00:21:21.348 --> 00:21:23.517 align:middle line:-1
在Xcode中 你会看到

00:21:24.284 --> 00:21:26.687 align:middle line:-1
输入仍然是图像

00:21:27.187 --> 00:21:31.959 align:middle line:-2
但除了默认分辨率
模型也接受弹性分辨率

00:21:32.025 --> 00:21:35.362 align:middle line:-2
在这个简单的例子中
它们分别是标清和高清

00:21:36.330 --> 00:21:38.832 align:middle line:0
这意味着现在你只需安装一个模型

00:21:40.400 --> 00:21:42.302 align:middle line:0
你不必写任何冗余代码

00:21:43.270 --> 00:21:46.306 align:middle line:0
如果你需要在标清和高清之间切换

00:21:46.373 --> 00:21:48.408 align:middle line:0
其速度非常快 因为我们不需要

00:21:48.475 --> 00:21:51.044 align:middle line:0
重新加载模型
我们只需要调整它的大小

00:21:52.513 --> 00:21:55.716 align:middle line:-1
你有两种方法来指定模型的弹性

00:21:56.984 --> 00:21:59.286 align:middle line:-1
你可以为其维度定义一个范围

00:21:59.586 --> 00:22:01.722 align:middle line:-1
你可以定义一个最小的宽度和高度

