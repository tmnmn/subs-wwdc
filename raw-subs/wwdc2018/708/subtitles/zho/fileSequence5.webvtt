WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:57.097 --> 00:05:00.434 align:middle line:-2
此外 你不必维护互联网服务器
并为其支付费用

00:05:01.335 --> 00:05:05.005 align:middle line:-2
最后 Core ML的推理过程
随时随地可用

00:05:05.539 --> 00:05:07.241 align:middle line:-1
而不需考虑连接问题

00:05:07.941 --> 00:05:09.843 align:middle line:-1
所有这些好处都伴随着这个事实

00:05:10.077 --> 00:05:13.180 align:middle line:-2
即你现在需要将机器学习模型
存储在设备上

00:05:14.014 --> 00:05:17.751 align:middle line:0
如果机器学习模型很大
那么你可能会担心

00:05:17.818 --> 00:05:19.119 align:middle line:0
你的app的大小

00:05:19.786 --> 00:05:24.024 align:middle line:-2
假设你有一个很棒的app
它具有很多很酷的功能

00:05:24.391 --> 00:05:26.393 align:middle line:-1
你的用户非常喜欢这个app

00:05:26.860 --> 00:05:29.630 align:middle line:-1
现在你想利用设备上的机器学习

00:05:29.696 --> 00:05:31.999 align:middle line:-1
所提供的新机会

00:05:32.065 --> 00:05:34.368 align:middle line:-1
来为你的app添加超酷的新功能

00:05:34.902 --> 00:05:37.437 align:middle line:-2
那么你怎么做呢
你训练了一些Core ML模型

00:05:37.504 --> 00:05:38.772 align:middle line:-1
然后将它们添加到你的app中

00:05:39.773 --> 00:05:42.309 align:middle line:-1
这意味着 你的app变得更棒了

00:05:42.376 --> 00:05:43.977 align:middle line:-1
并且你的用户也更加开心

00:05:45.145 --> 00:05:46.680 align:middle line:-1
但其中一些用户可能会注意到

00:05:47.014 --> 00:05:49.349 align:middle line:-1
你的app大小有所增加

00:05:49.917 --> 00:05:52.152 align:middle line:-1
app在添加机器学习能力之后

00:05:52.219 --> 00:05:54.621 align:middle line:-1
变大数十或数百兆字节

00:05:54.688 --> 00:05:56.290 align:middle line:-1
并不罕见

00:05:57.491 --> 00:06:00.127 align:middle line:-2
随着你不断向app
添加越来越多的功能

