WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.000 --> 00:20:05.472 align:middle line:-2
作为开发者我们能做的只有
缩小图片的尺寸 处理它

00:20:06.106 --> 00:20:10.410 align:middle line:-2
然后再将其放大
这实际上并不会让用户感到满意

00:20:11.778 --> 00:20:13.113 align:middle line:-1
即便在过去

00:20:14.014 --> 00:20:16.917 align:middle line:-2
我们也可使用Corel ML Tools
重新安装此模型

00:20:16.984 --> 00:20:18.819 align:middle line:-1
并让它接受任何分辨率的图像

00:20:19.486 --> 00:20:21.889 align:middle line:-1
特别是高分辨率图像

00:20:23.223 --> 00:20:27.027 align:middle line:-2
因此即使在过去
我们也可以实现此功能

00:20:27.094 --> 00:20:29.596 align:middle line:-2
并将高分辨率图像
直接传给Corel ML模型

00:20:29.830 --> 00:20:31.798 align:middle line:-1
然后产生一个高分辨率的结果

00:20:33.534 --> 00:20:37.037 align:middle line:-2
这是因为我们想要在风格化中
引入更精细的细节

00:20:37.104 --> 00:20:41.708 align:middle line:-2
并有更精细的笔触
使得放大时的效果非常好

00:20:41.775 --> 00:20:44.645 align:middle line:-2
因为它们在最终图像中
进行了大量的工作

00:20:46.513 --> 00:20:49.416 align:middle line:-2
过去我们的确可以做到
但我们使用的方式是

00:20:49.483 --> 00:20:52.753 align:middle line:-1
复制模型并创建两个不同的版本

00:20:53.053 --> 00:20:56.089 align:middle line:-2
一个用于标准画质
一个用于高清画质

00:20:56.490 --> 00:21:00.327 align:middle line:-2
这当然意味着我们的app大小
变为原来的两倍

