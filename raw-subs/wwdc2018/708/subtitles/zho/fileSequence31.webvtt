WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:00.827 --> 00:31:03.830 align:middle line:-2
我们支持的操作列表很庞大
而且一直在增长

00:31:04.264 --> 00:31:06.633 align:middle line:-1
试图跟上这一领域的新发展

00:31:07.668 --> 00:31:10.737 align:middle line:-2
但是如果在Core ML中
有一层不再得到支持了呢？

00:31:12.272 --> 00:31:13.173 align:middle line:-1
过去

00:31:13.707 --> 00:31:16.643 align:middle line:-2
你要么等待
要么需要一个不同的模型

00:31:17.411 --> 00:31:20.747 align:middle line:-1
但如果这层是关键的马匹识别层呢？

00:31:21.048 --> 00:31:23.684 align:middle line:-2
这是你的马匹识别app
正在等待的突破

00:31:23.984 --> 00:31:24.985 align:middle line:-1
你等得起吗？

00:31:26.687 --> 00:31:29.590 align:middle line:-2
鉴于机器学习的发展速度
这可能是一个严重的障碍

00:31:31.191 --> 00:31:34.695 align:middle line:0
因此 我们为神经网络模型
引入了自定义层

00:31:35.028 --> 00:31:39.499 align:middle line:0
现在 如果缺少某个神经网络层
你可以提供一个实现

00:31:39.566 --> 00:31:43.237 align:middle line:0
它将与Core ML
模型的其余部分无缝衔接

00:31:44.004 --> 00:31:47.941 align:middle line:0
在模型中
自定义层存储了实现类的名称

00:31:48.008 --> 00:31:50.277 align:middle line:0
在这里是
AAPLCustomHorseLayer

00:31:51.078 --> 00:31:54.248 align:middle line:0
实现类在推理引擎中

00:31:54.314 --> 00:31:55.516 align:middle line:0
充当所缺失实现的角色

00:31:55.849 --> 00:31:57.885 align:middle line:0
就像这个层
内置于Core ML一样

00:31:57.951 --> 00:32:01.455 align:middle line:0
这里提供的实现应该是通用的

