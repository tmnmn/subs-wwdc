WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.406 --> 00:34:02.809 align:middle line:-1
给那些并不总能完成跑步目标的人

00:34:04.878 --> 00:34:08.447 align:middle line:-2
甚至是一种我们甚至还没有想到的
能为你的用户提供新颖的体验的

00:34:08.514 --> 00:34:10.583 align:middle line:-1
全新模型类型

00:34:10.984 --> 00:34:12.452 align:middle line:-1
在所有这些情况下

00:34:12.518 --> 00:34:15.222 align:middle line:-2
如果我们可以拥有Core ML的
简单性和可移植性

00:34:15.656 --> 00:34:19.226 align:middle line:-2
而不必牺牲灵活性来跟上领域的发展
将是很棒的一件事

00:34:20.827 --> 00:34:22.529 align:middle line:-1
所以我们推出了自定义模型

00:34:23.496 --> 00:34:26.699 align:middle line:-1
Core ML自定义模型允许你

00:34:26.766 --> 00:34:29.735 align:middle line:0
封装Core ML中缺少的
部分计算实现

00:34:30.404 --> 00:34:31.871 align:middle line:0
就像自定义层一样

00:34:31.938 --> 00:34:34.440 align:middle line:0
该模型存储了实现类的名称

00:34:34.975 --> 00:34:37.244 align:middle line:0
这个类则充当了这类模型的

00:34:37.311 --> 00:34:38.645 align:middle line:0
通用推理引擎的角色

00:34:39.079 --> 00:34:42.748 align:middle line:0
而参数像以前一样
存储在MLModel中

00:34:43.550 --> 00:34:46.219 align:middle line:0
这允许将模型
作为app中的资源进行更新

00:34:46.286 --> 00:34:47.754 align:middle line:0
而无需接触代码

00:34:50.424 --> 00:34:52.659 align:middle line:-1
并且实现自定义模型也很简单

00:34:52.726 --> 00:34:55.094 align:middle line:-2
我们暴露了一个协议
MLCustomModel

00:34:55.429 --> 00:34:59.099 align:middle line:-2
你根据存储在MLModel中
的数据提供初始化的方法

