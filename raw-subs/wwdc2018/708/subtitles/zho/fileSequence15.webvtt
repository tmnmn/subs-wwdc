WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:58.999 --> 00:15:03.403 align:middle line:-2
参见稍后第二部分 其将详细介绍
Core ML Tools的量化过程细节

00:15:04.104 --> 00:15:06.173 align:middle line:-1
我想先关注玻璃风格

00:15:06.874 --> 00:15:09.576 align:middle line:-1
并查看不同的量化版本

00:15:09.643 --> 00:15:10.911 align:middle line:-1
对这些风格的效果影响如何

00:15:11.845 --> 00:15:15.782 align:middle line:-2
我所要做的就是
将这些新模型拖入Xcode项目中

00:15:17.951 --> 00:15:20.921 align:middle line:-2
并重新运行该app
然后我们再看看这些模型的表现

00:15:22.523 --> 00:15:25.826 align:middle line:-2
首先我们可以看到app大小
现在大幅缩小了

00:15:25.893 --> 00:15:29.997 align:middle line:-2
例如 8位版本已经
从原来的6.7兆字节

00:15:30.063 --> 00:15:31.665 align:middle line:0
缩小到1.7兆字节

00:15:37.037 --> 00:15:39.306 align:middle line:-1
在4位版本中 我们可以节省更多

00:15:39.373 --> 00:15:41.441 align:middle line:-1
现在模型少于1兆字节

00:15:41.875 --> 00:15:46.046 align:middle line:-2
在3位版本中 它是649千字节
等等

00:15:46.980 --> 00:15:48.749 align:middle line:-1
现在让我们回到app

00:15:51.151 --> 00:15:53.287 align:middle line:-1
让我们选择相同的图像作为参考

00:15:53.520 --> 00:15:56.390 align:middle line:-1
并在原始版本中应用玻璃风格

00:15:57.124 --> 00:15:58.325 align:middle line:-1
仍然像以前一样

00:15:58.959 --> 00:16:01.762 align:middle line:-2
现在我们可以将它
与8位版本进行比较

