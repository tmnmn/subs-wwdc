WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:54.021 --> 00:16:00.427 align:start position:25% line:-2
プロトコル要件の実行と
オーバーロード追加の違いです

00:16:01.028 --> 00:16:06.099 align:start position:23% line:-2
今のところ この新バージョンは
単にオーバーロードです

00:16:06.567 --> 00:16:12.873 align:start position:25% line:-2
つまり ディクショナリには
改良されたカウントがあります

00:16:13.440 --> 00:16:16.276 align:start position:27% line:-2
では 汎用アルゴリズム内の
呼び出しは？

00:16:18.512 --> 00:16:22.883 align:start position:29% line:-2
例えば 標準ライブラリの
マップを書くとします

00:16:23.016 --> 00:16:26.487 align:start position:32% line:-2
ご存じない場合
これはとても便利です

00:16:26.587 --> 00:16:31.892 align:start position:23% line:-2
要素を変形して
新しい配列に戻してくれるのです

00:16:33.160 --> 00:16:34.828 align:start position:34% line:-1
実装はシンプルです

00:16:34.928 --> 00:16:38.799 align:start position:32% line:-2
新しい配列を作成して
コレクションに動かし

00:16:38.932 --> 00:16:41.935 align:start position:25% line:-1
要素を変形して配列に加えます

00:16:42.970 --> 00:16:48.175 align:start position:25% line:-2
要素を配列に加える際
配列は自動的に大きくなります

00:16:48.542 --> 00:16:49.810 align:start position:39% line:-1
それに伴い―

00:16:49.910 --> 00:16:55.883 align:start position:29% line:-2
内部メモリの再割り当てが
必要になる場合もあります

00:16:56.450 --> 00:17:00.954 align:start position:27% line:-2
大きくなる度合いによっては
数回必要になり―

