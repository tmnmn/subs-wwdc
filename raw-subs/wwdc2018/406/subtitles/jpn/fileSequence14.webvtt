WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:57.538 --> 00:14:00.440 align:start position:21% line:-1
使いやすいプロトコルが欲しいのに

00:14:00.541 --> 00:14:04.945 align:start position:29% line:-2
拡張を書く度に
制約を入れるのは面倒です

00:14:05.712 --> 00:14:09.716 align:start position:30% line:-2
インデックス比較が
常に必要になるからです

00:14:10.184 --> 00:14:14.555 align:start position:25% line:-2
プロトコル要件として表す方が
いいでしょう

00:14:16.023 --> 00:14:19.426 align:start position:32% line:-2
インデックス関連型の
制約としてです

00:14:20.294 --> 00:14:21.995 align:start position:32% line:-1
プロトコル制約を行い

00:14:22.095 --> 00:14:27.334 align:start position:20% line:-2
プロトコル準拠の型すべてに
Equatable型を提供させます

00:14:28.502 --> 00:14:32.406 align:start position:32% line:-2
これで拡張の度に
特定しなくて済みます

00:14:34.575 --> 00:14:37.778 align:start position:32% line:-2
これもプロトコルとの
取り決めの例です

00:14:38.712 --> 00:14:44.284 align:start position:25% line:-2
プロトコルユーザには
インデックス比較の必要があり

00:14:44.718 --> 00:14:49.957 align:start position:25% line:-2
準拠型は 柔軟性を多く失わず
対応できるかでした

00:14:50.991 --> 00:14:52.893 align:start position:34% line:-1
どちらもかないます

00:14:53.427 --> 00:14:56.497 align:start position:27% line:-2
Intやデータ 配列は
既にEquatableです

00:14:56.597 --> 00:15:00.501 align:start position:20% line:-2
Swift 4.2の新しい
Equatable準拠自動合成で―

