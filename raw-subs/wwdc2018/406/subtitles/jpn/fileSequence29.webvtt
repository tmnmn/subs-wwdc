WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:00.407 --> 00:29:03.177 align:start position:30% line:-1
今書いた２つの拡張は―

00:29:03.710 --> 00:29:05.879 align:start position:25% line:-1
良いSwiftのスタイルです

00:29:05.979 --> 00:29:11.251 align:start position:23% line:-2
拡張してプロトコル準拠させれば
その意味が分かります

00:29:11.351 --> 00:29:16.123 align:start position:27% line:-2
これは条件付き準拠にとって
特に重要です

00:29:16.223 --> 00:29:19.960 align:start position:23% line:-1
拡張に様々な要件があるからです

00:29:21.261 --> 00:29:22.729 align:start position:36% line:-1
構成の幅も広がり

00:29:22.830 --> 00:29:27.668 align:start position:18% line:-2
Slice型は土台の基本コレクション
と同じことができます

00:29:30.470 --> 00:29:35.342 align:start position:25% line:-2
次は 条件付き準拠の
別のアプリケーションについて

00:29:35.442 --> 00:29:37.478 align:start position:23% line:-1
RangeはSwiftの常連で

00:29:37.578 --> 00:29:41.181 align:start position:30% line:-2
例えば“..<”演算で
範囲を形成します

00:29:41.348 --> 00:29:45.752 align:start position:32% line:-2
ダブルや整数の範囲も
形成できます

00:29:45.853 --> 00:29:48.222 align:start position:25% line:-1
もっとパワフルなRangeは

00:29:48.322 --> 00:29:52.593 align:start position:34% line:-2
整数の範囲内の
要素に反復できます

00:29:52.960 --> 00:29:57.130 align:start position:21% line:-2
intRangeはコレクションに
準拠するからです

00:29:58.198 --> 00:30:02.135 align:start position:23% line:-1
“..<”演算子で作られた型は

