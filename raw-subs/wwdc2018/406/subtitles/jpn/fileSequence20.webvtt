WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.132 --> 00:20:01.635 align:start position:27% line:-1
最適化が適する時に限ります

00:20:02.503 --> 00:20:05.272 align:start position:25% line:-1
例えば 先程のマップ操作です

00:20:05.372 --> 00:20:11.778 align:start position:23% line:-2
あらゆるコレクションに
実装を良くできる方法がないので

00:20:11.945 --> 00:20:15.048 align:start position:30% line:-1
追加の意味はありません

00:20:15.149 --> 00:20:17.317 align:start position:32% line:-1
拡張のままで結構です

00:20:18.752 --> 00:20:23.357 align:start position:23% line:-2
さて 作成したコレクション型は
十分な機能を備え―

00:20:23.624 --> 00:20:28.095 align:start position:25% line:-2
多くの準拠型と
便利なアルゴリズムがあります

00:20:28.529 --> 00:20:33.901 align:start position:23% line:-2
しかし型の分類には
時に複数のプロトコルが必要です

00:20:34.535 --> 00:20:36.570 align:start position:34% line:-1
プロトコル継承です

00:20:36.904 --> 00:20:39.373 align:start position:30% line:-1
では ダグに代わります

00:20:40.340 --> 00:20:45.879 align:start position:43% line:-1
(拍手)

00:20:45.979 --> 00:20:47.114 align:start position:36% line:-1
ありがとう ベン

00:20:48.515 --> 00:20:51.685 align:start position:25% line:-2
プロトコル継承は
初期のSwiftからあります

00:20:52.252 --> 00:20:54.822 align:start position:25% line:-1
どこでプロトコル継承が必要か

00:20:54.922 --> 00:20:57.958 align:start position:25% line:-2
このコレクションプロトコルで
考えましょう

00:20:58.192 --> 00:21:02.863 align:start position:30% line:-2
良い設計のプロトコルで
一連の準拠型を記述し

