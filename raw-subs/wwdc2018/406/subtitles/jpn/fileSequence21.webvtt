WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:58.192 --> 00:21:02.863 align:start position:30% line:-2
良い設計のプロトコルで
一連の準拠型を記述し

00:21:02.963 --> 00:21:06.567 align:start position:27% line:-2
興味深い汎用アルゴリズムが
書けます

00:21:06.667 --> 00:21:12.105 align:start position:23% line:-2
しかし コレクションプロトコル
として実装できない―

00:21:12.206 --> 00:21:14.908 align:start position:29% line:-1
アルゴリズムならあります

00:21:15.242 --> 00:21:20.614 align:start position:21% line:-2
例えば プレディケートに合致する
最後の要素を探すには

00:21:20.714 --> 00:21:24.785 align:start position:32% line:-2
後ろから前へ進むのが
最良の方法です

00:21:25.052 --> 00:21:26.987 align:start position:29% line:-2
コレクションプロトコルは
それを許しません

00:21:27.821 --> 00:21:32.693 align:start position:25% line:-2
また コレクション内の要素を
シャッフルしたくても

00:21:32.793 --> 00:21:35.562 align:start position:25% line:-2
変化が必要で
コレクションはそれをしません

00:21:35.662 --> 00:21:38.766 align:start position:29% line:-2
コレクションプロトコルが
悪いのでなく―

00:21:39.766 --> 00:21:44.471 align:start position:29% line:-2
汎用アルゴリズムの追加に
もっと何か必要なのです

00:21:44.571 --> 00:21:47.174 align:start position:29% line:-1
それがプロトコル継承です

00:21:47.274 --> 00:21:53.313 align:start position:2% line:-2
これは BidirectionalCollection
プロトコルです

00:21:53.614 --> 00:21:58.318 align:start position:34% line:-2
このプロトコルに
準拠する型はすべて

00:21:58.418 --> 00:22:01.755 align:start position:30% line:-2
コレクションにも準拠し
アルゴリズムを使えます

