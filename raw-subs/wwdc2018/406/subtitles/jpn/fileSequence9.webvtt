WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:57.304 --> 00:09:02.142 align:start position:30% line:-2
具体的な型を考えてから
プロトコルで統一します

00:09:03.243 --> 00:09:06.847 align:start position:25% line:-1
これらの型に共通することは？

00:09:07.681 --> 00:09:12.152 align:start position:34% line:-2
プロトコル設計は
いわば契約交渉です

00:09:13.253 --> 00:09:17.457 align:start position:27% line:-2
準拠型と
柔軟性を重視する型との間で

00:09:17.691 --> 00:09:21.728 align:start position:36% line:-2
自然と駆け引きが
生まれるからです

00:09:22.563 --> 00:09:24.398 align:start position:32% line:-1
プロトコルのユーザは

00:09:24.498 --> 00:09:29.670 align:start position:23% line:-2
拡張のために
シンプルなプロトコルを望みます

00:09:30.737 --> 00:09:35.676 align:start position:27% line:-2
ですから プロトコル設計で
重要なのは―

00:09:35.809 --> 00:09:40.013 align:start position:30% line:-2
あらゆる準拠型と
様々なユースケースです

00:09:40.180 --> 00:09:41.815 align:start position:36% line:-1
要はバランスです

00:09:44.218 --> 00:09:48.822 align:start position:23% line:-2
では コレクションプロトコルの
要素型からです

00:09:48.922 --> 00:09:52.025 align:start position:25% line:-1
これには関連型を使っています

00:09:52.860 --> 00:09:56.864 align:start position:34% line:-2
準拠型で必要な
正しい要素の設定は

00:09:57.297 --> 00:10:03.003 align:start position:16% line:-2
バッファや配列の場合
Swift 4.2では自動で行われます

