WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:54:55.929 --> 00:55:02.069 align:start position:23% line:-2
クラスのカスタマイズが不要なら
ファイナルを使いましょう

00:55:02.169 --> 00:55:07.374 align:start position:30% line:-2
後ほど 拡張して
カスタマイズは可能です

00:55:07.474 --> 00:55:13.981 align:start position:23% line:-2
構造体や列挙型と同じく拡張でき
準拠も追加できます

00:55:14.882 --> 00:55:17.551 align:start position:30% line:-2
ただ 汎用システムとの
対話を簡略化し

00:55:17.651 --> 00:55:21.121 align:start position:29% line:-2
コンパイラもランタイムで
最適化しやすくなります

00:55:24.224 --> 00:55:28.062 align:start position:27% line:-2
Swiftのジェネリクスの
背景にある考えは―

00:55:28.162 --> 00:55:32.966 align:start position:29% line:-2
静的な型情報を保持しつつ
コード再利用することです

00:55:33.066 --> 00:55:39.239 align:start position:25% line:-2
それで正しいプログラムが書け
実行も効率良くなります

00:55:39.606 --> 00:55:43.310 align:start position:25% line:-1
プロトコル設計は駆け引きです

00:55:43.410 --> 00:55:47.748 align:start position:34% line:-2
汎用アルゴリズムと
準拠型のバランスで

00:55:47.848 --> 00:55:52.719 align:start position:34% line:-2
意味のある抽象化を
行っていきましょう

00:55:53.520 --> 00:55:59.993 align:start position:23% line:-2
新しい汎用アルゴリズムの実装に
特別なケイパビリティが必要なら

