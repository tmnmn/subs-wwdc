WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:56.737 --> 00:04:00.240 align:start position:23% line:-1
やむを得ず柔軟性を代償にします

00:04:01.542 --> 00:04:05.279 align:start position:32% line:-2
更に Anyは
あらゆる型になるので

00:04:05.379 --> 00:04:12.152 align:start position:23% line:-2
内部メモリにとって大きい場合は
インダイレクションも必要です

00:04:12.252 --> 00:04:16.990 align:start position:30% line:-2
メモリ中にある値に
ポインタ保持も必要です

00:04:17.824 --> 00:04:23.797 align:start position:25% line:-2
この問題の解決は
パフォーマンスにも関わります

00:04:24.698 --> 00:04:26.500 align:start position:34% line:-1
そこで使う技術が―

00:04:26.733 --> 00:04:29.169 align:start position:34% line:-1
パラメータ多相です

00:04:29.269 --> 00:04:33.373 align:start position:18% line:-1
これが Swiftのジェネリクスです

00:04:35.142 --> 00:04:40.848 align:start position:23% line:-2
バッファにより多くの情報を与え
対応する型を表せます

00:04:41.648 --> 00:04:43.250 align:start position:30% line:-1
これを要素型と呼びます

00:04:44.117 --> 00:04:49.223 align:start position:29% line:-2
要素型は汎用パラメータで
故に パラメータ多相です

00:04:49.690 --> 00:04:54.728 align:start position:21% line:-2
バッファに型を教える
コンパイル時引数のようなものです

00:04:55.629 --> 00:05:00.767 align:start position:25% line:-2
これでバッファはAnyを使い
要素型に参照できます

