WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.179 --> 00:23:02.883 align:start position:29% line:-2
プロトコルを
意味のあるよう分類します

00:23:03.317 --> 00:23:07.354 align:start position:21% line:-2
Fisher-Yatesは古くて
シンプルです

00:23:07.454 --> 00:23:11.024 align:start position:32% line:-2
最初の要素から
インデックスを開始し

00:23:11.492 --> 00:23:17.531 align:start position:23% line:-2
次に 別の要素をランダムに選び
この２つを入れ替えます

00:23:18.432 --> 00:23:22.970 align:start position:27% line:-2
次の反復で
左のインデックスを１つ進め

00:23:23.370 --> 00:23:26.740 align:start position:27% line:-1
また１つ選んで入れ替えます

00:23:26.840 --> 00:23:28.776 align:start position:34% line:-1
とてもシンプルです

00:23:28.876 --> 00:23:34.515 align:start position:27% line:-2
ランダムに選んだ別の要素を
入れ替えて進むだけです

00:23:34.615 --> 00:23:38.752 align:start position:34% line:-2
最終的に うまく
シャッフルされます

00:23:39.620 --> 00:23:43.457 align:start position:29% line:-2
コードは 少し複雑ですが
大丈夫です

00:23:43.557 --> 00:23:46.693 align:start position:32% line:-2
何かのコレクションに
実装してみましょう

00:23:46.793 --> 00:23:48.662 align:start position:32% line:-1
このコア演算が例です

00:23:48.762 --> 00:23:51.198 align:start position:29% line:-1
最初に コレクションの―

00:23:51.298 --> 00:23:56.270 align:start position:30% line:-2
今の位置から最後までで
ランダムな数を選びます

00:23:56.370 --> 00:24:00.340 align:start position:27% line:-2
でもこれは整数で
必要なのはインデックスです

