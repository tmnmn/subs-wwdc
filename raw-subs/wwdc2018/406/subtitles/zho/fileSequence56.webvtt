WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:56:00.216 --> 00:56:03.626 A:middle
只有一致性类型的子集支持那些算法

00:56:04.726 --> 00:56:06.116 A:middle
还有条件一致性

00:56:06.446 --> 00:56:11.046 A:middle
当你写通用类型时 以便它们可以编写得很漂亮

00:56:11.046 --> 00:56:13.686 A:middle
尤其是当与协议继承一起使用时

00:56:14.456 --> 00:56:18.126 A:middle
最后 当你针对棘手的相互作用产生疑问时

00:56:18.126 --> 00:56:19.976 A:middle
在类继承和通用系统之间

00:56:20.536 --> 00:56:23.306 A:middle
返回到 Liskov 替换原理

00:56:23.306 --> 00:56:26.036 A:middle
思考一下这里发生了什么

00:56:26.036 --> 00:56:27.866 A:middle
如果我引入子类而不是超类

00:56:27.866 --> 00:56:30.406 A:middle
我在子类而非超类上写了一个一致性

00:56:32.576 --> 00:56:37.536 A:middle
非常感谢 还有一些关于拥抱算法的相关演讲

00:56:37.536 --> 00:56:39.706 A:middle
你可以了解它们会如何帮助你创建更好的代码

00:56:39.976 --> 00:56:43.296 A:middle
以及如何在你的日常编程中
有效地使用 Swift 集合

00:56:43.296 --> 00:56:45.536 A:middle
谢谢

00:56:46.508 --> 00:56:48.508 A:middle
[ 掌声 ]

