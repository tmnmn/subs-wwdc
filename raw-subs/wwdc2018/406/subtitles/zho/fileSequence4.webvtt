WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:55.686 --> 00:04:01.266 A:middle
因此我必须为灵活性付出代价 即使我对它并不感兴趣

00:04:01.586 --> 00:04:04.526 A:middle
另外 因为 Any 得解释任意一种不同的类型

00:04:04.526 --> 00:04:10.666 A:middle
包括那些太大以至于
不能在自己内部存储器内存储的类型

00:04:10.666 --> 00:04:11.866 A:middle
它有时候不得不使用间接存储

00:04:11.866 --> 00:04:13.456 A:middle
它得给值保留一个指针

00:04:13.456 --> 00:04:16.565 A:middle
那个值可以在整个内存中定位找到

00:04:17.886 --> 00:04:18.875 A:middle
我们真的想要解决这些问题

00:04:18.875 --> 00:04:23.556 A:middle
不仅仅是为了易用性和正确性 还为了性能原因

00:04:24.146 --> 00:04:28.556 A:middle
并且我们通过一种叫做参数多态性的技术来实现

00:04:29.376 --> 00:04:32.776 A:middle
它就是 Swift 中通用型的另一个术语

00:04:32.776 --> 00:04:38.346 A:middle
通过通用型方法 我们可以在缓冲器中存放更多信息

00:04:38.346 --> 00:04:40.596 A:middle
用于表达缓冲器即将要包含的类型

00:04:41.746 --> 00:04:42.836 A:middle
我们那个类型叫做元素

00:04:44.196 --> 00:04:45.826 A:middle
元素是类型的一个通用型参数

00:04:45.826 --> 00:04:47.436 A:middle
这就是术语参数多态性

00:04:47.436 --> 00:04:52.626 A:middle
你可以把它看作类似一个编译时间参数

00:04:52.626 --> 00:04:54.396 A:middle
它会告诉缓冲器即将要包含什么

00:04:55.716 --> 00:04:57.706 A:middle
现在它有一种方式可以提及那个元素类型

00:04:57.976 --> 00:05:00.316 A:middle
它可以使用那个元素类型 而以前它用的是 Any

