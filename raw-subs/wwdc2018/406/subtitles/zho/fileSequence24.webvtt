WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.316 --> 00:24:00.226 A:middle
我们知道那是不同的

00:24:00.526 --> 00:24:02.066 A:middle
所以我们需要一些操作

00:24:02.116 --> 00:24:03.706 A:middle
让我们把它叫做 Index offsetBy

00:24:04.506 --> 00:24:06.106 A:middle
从 startIndex 迅速跳到

00:24:06.516 --> 00:24:07.606 A:middle
我们所选择的任意位置

00:24:07.606 --> 00:24:13.276 A:middle
我们所需要的另一个操作是 可以交换两个元素

00:24:13.276 --> 00:24:18.086 A:middle
很棒 我们有两个操作 我们需要添加

00:24:18.086 --> 00:24:21.026 A:middle
到集合的概念中 以便可以实施洗牌

00:24:21.336 --> 00:24:23.686 A:middle
因此我们有一个
新的 ShuffleCollection 协议

00:24:25.976 --> 00:24:27.606 A:middle
请不要这样做

00:24:28.096 --> 00:24:29.396 A:middle
那么这是一个反面模式

00:24:29.396 --> 00:24:33.096 A:middle
这里的反面模式是我们有一个算法

00:24:33.276 --> 00:24:34.956 A:middle
我们找到它的要求

00:24:34.956 --> 00:24:38.366 A:middle
然后我们把它打包到一个协议中 就是那个…

00:24:39.316 --> 00:24:40.296 A:middle
描述那一个算法

00:24:40.296 --> 00:24:44.236 A:middle
如果你这样做了 你就拥有了许多协议

00:24:44.236 --> 00:24:45.756 A:middle
但并没有任何意义

00:24:45.756 --> 00:24:48.526 A:middle
你并不是在从那些协议中学习什么

00:24:49.026 --> 00:24:51.486 A:middle
因此你应该做的是注意

00:24:51.486 --> 00:24:53.956 A:middle
我们实际上在这里有不同的功能

00:24:54.436 --> 00:24:57.496 A:middle
那么洗牌使用的是随机存取 并使用了突变

00:24:57.956 --> 00:25:01.546 A:middle
但这些是不同的 并且我们可以
把它们归类为不同的协议

