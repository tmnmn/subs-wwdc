WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:57.916 --> 00:11:00.716 A:middle
那对于像数组一样的类型来说没问题

00:11:01.596 --> 00:11:04.586 A:middle
对于协议的用户来说也非常容易理解

00:11:04.586 --> 00:11:08.526 A:middle
但它对于稍微有些复杂的类型来说灵活性够吗？

00:11:08.626 --> 00:11:09.506 A:middle
比如字典？

00:11:11.136 --> 00:11:13.636 A:middle
现在无论你如何处理它

00:11:13.866 --> 00:11:15.256 A:middle
字典很可能会被阻碍

00:11:15.256 --> 00:11:17.746 A:middle
被一些非常复杂的内部数据结构

00:11:17.746 --> 00:11:21.466 A:middle
在从一个元素移动到下一个元素方面
有特定逻辑的数据结构

00:11:21.466 --> 00:11:26.046 A:middle
比如它可能会被某种内部缓冲器阻碍

00:11:26.046 --> 00:11:30.736 A:middle
它可以使用在那个缓冲器中存储有位移的索引类型

00:11:30.736 --> 00:11:34.526 A:middle
然后它会把参数作为自定义下标

00:11:34.526 --> 00:11:37.346 A:middle
以便把元素获取到那个位置 使用那个位移

00:11:38.166 --> 00:11:41.496 A:middle
但有一点很重要 字典的索引类型

00:11:41.496 --> 00:11:44.416 A:middle
是一个隐含类型 只有字典可以控制

00:11:45.206 --> 00:11:47.506 A:middle
你不希望别人在你的位移中添加 1

00:11:47.506 --> 00:11:50.076 A:middle
那未必会在字典中移动到下一个元素

00:11:50.076 --> 00:11:52.466 A:middle
它可能会移动到任意元素

00:11:52.466 --> 00:11:55.706 A:middle
也许会移动到字典的内部存储器中
未初始化的部分

00:11:56.826 --> 00:12:00.486 A:middle
因此我们希望字典能控制继续向前移动

