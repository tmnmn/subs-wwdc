WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:57.956 --> 00:25:01.546 A:middle
但这些是不同的 并且我们可以
把它们归类为不同的协议

00:25:02.056 --> 00:25:04.576 A:middle
比如 RandomAccessCollection 协议

00:25:04.976 --> 00:25:08.516 A:middle
就是可以让我们在集合中跳来跳去的协议

00:25:08.596 --> 00:25:09.756 A:middle
可以迅速移动索引

00:25:10.466 --> 00:25:11.476 A:middle
还有像 UnsafeBufferPointer 的类型

00:25:11.476 --> 00:25:16.616 A:middle
可以给你提供随机存取 但不允许任何突变

00:25:16.736 --> 00:25:18.096 A:middle
这是不同的功能

00:25:19.036 --> 00:25:21.436 A:middle
我们这里还有 MutableCollection 协议

00:25:22.366 --> 00:25:24.976 A:middle
我们可以认为这里的类型允许突变

00:25:24.976 --> 00:25:25.896 A:middle
但不允许随机获取

00:25:25.896 --> 00:25:27.826 A:middle
就像我们刚讲过的 SinglyLinkedList 一样

00:25:28.556 --> 00:25:31.946 A:middle
现在请注意我们已经从根本上分离了继承等级

00:25:33.246 --> 00:25:35.846 A:middle
我们有用于随机存取双向作用等等的存取端

00:25:35.846 --> 00:25:37.446 A:middle
然后我们有这个突变端

00:25:37.446 --> 00:25:43.736 A:middle
非常完美 因为客户自己可以编写多个协议

00:25:43.736 --> 00:25:44.776 A:middle
用来实施他们所写的通用算法

00:25:44.776 --> 00:25:46.876 A:middle
那么让我们返回到我们的洗牌算法

00:25:46.876 --> 00:25:50.396 A:middle
它可以在 RandomAccessCollection 上
作为一个扩展

00:25:50.396 --> 00:25:52.056 A:middle
带有自类型

00:25:52.056 --> 00:25:54.246 A:middle
所以这是一个既遵循 
RandomAccessCollection

00:25:54.246 --> 00:25:56.756 A:middle
又遵循 MutableCollection 协议的类型

00:25:56.756 --> 00:26:00.556 A:middle
现在我们把这两个协议的功能放在了一起

