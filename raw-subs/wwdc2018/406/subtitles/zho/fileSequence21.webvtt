WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:00.566 --> 00:21:02.136 A:middle
它描述了一组一致性类型

00:21:02.136 --> 00:21:05.136 A:middle
可以让你在类型上写一些有趣的通用算法

00:21:05.136 --> 00:21:10.906 A:middle
但我们不用做太多
就能找到其它类似集合的算法

00:21:10.906 --> 00:21:14.186 A:middle
依据目前的集合协议 我们不能实施

00:21:14.186 --> 00:21:16.466 A:middle
比如如果我们想在集合中找到

00:21:16.466 --> 00:21:20.026 A:middle
匹配某谓语的最后一个元素索引

00:21:20.026 --> 00:21:23.736 A:middle
最佳方式就是从末端开始 然后倒着进行

00:21:23.786 --> 00:21:26.086 A:middle
集合协议不允许我们这样做

00:21:26.086 --> 00:21:30.616 A:middle
或者加入我们想创建一个洗牌操作

00:21:30.616 --> 00:21:31.716 A:middle
以便在集合中的元素之间随机洗牌

00:21:31.716 --> 00:21:35.316 A:middle
嗯 那需要突变 而集合不允许这样

00:21:35.716 --> 00:21:38.426 A:middle
现在并不是因为集合协议错了

00:21:39.876 --> 00:21:41.206 A:middle
而是我们需要更多的东西

00:21:41.206 --> 00:21:44.246 A:middle
来描述这些额外的通用算法

00:21:44.636 --> 00:21:45.866 A:middle
这就需要协议继承

00:21:45.866 --> 00:21:47.806 A:middle
这是 BidirectionalCollection 协议

00:21:47.806 --> 00:21:51.856 A:middle
继承自集合或者继承集合

00:21:52.426 --> 00:21:55.026 A:middle
意思就是

00:21:55.066 --> 00:21:57.866 A:middle
遵循 BidirectionalCollection 协议的
任意类型

00:21:58.376 --> 00:21:59.816 A:middle
同样也会遵循集合

00:21:59.816 --> 00:22:00.776 A:middle
你可以使用那些集合算法

