WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:54:59.316 --> 00:55:01.236 A:middle
通过集成机制

00:55:01.236 --> 00:55:03.866 A:middle
现在这并不意味着

00:55:04.246 --> 00:55:05.336 A:middle
你稍后不能自定义你的类

00:55:05.336 --> 00:55:07.046 A:middle
你仍然可以在类上写扩展

00:55:07.046 --> 00:55:09.776 A:middle
与你扩展结构或枚举的方式一样

00:55:10.626 --> 00:55:13.066 A:middle
你还可以给它添加一致性
以获取更加动态的调遣

00:55:13.066 --> 00:55:17.156 A:middle
但最终类可以通过通用系统简化相互作用

00:55:17.156 --> 00:55:18.576 A:middle
也会解锁在运行时间内

00:55:18.576 --> 00:55:20.836 A:middle
优化编译器的机会

00:55:24.396 --> 00:55:26.196 A:middle
我们今天谈了谈 Swift 的通用型

00:55:27.966 --> 00:55:29.706 A:middle
Swift 通用型背后的理念
是提供重复使用代码的能力

00:55:29.706 --> 00:55:31.606 A:middle
同时保持静态类型信息

00:55:31.606 --> 00:55:36.076 A:middle
使得写正确的程序变得较为简单

00:55:36.076 --> 00:55:38.976 A:middle
并把这些有效地编译到执行程序中

00:55:39.726 --> 00:55:43.826 A:middle
当你设计协议时 让这个进行拉锯战

00:55:43.826 --> 00:55:46.246 A:middle
在你想要写的协议的通用算法之间

00:55:46.246 --> 00:55:49.466 A:middle
并且一致性类型需要实施那个协议

00:55:49.736 --> 00:55:52.506 A:middle
以便指导你的设计成为一个有意义的提取

00:55:53.636 --> 00:55:55.266 A:middle
引入协议继承

00:55:55.516 --> 00:55:59.996 A:middle
当你需要更多特定功能来实施新的通用算法时

