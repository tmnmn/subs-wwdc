WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:53:59.996 --> 00:54:05.086 A:middle
它还需要引入一个
拥有相同名称的初始化程序

00:54:05.086 --> 00:54:07.966 A:middle
现在这非常重要

00:54:07.966 --> 00:54:11.556 A:middle
因为这个初始化程序负责解码 hourlyRate

00:54:11.556 --> 00:54:16.886 A:middle
然后锁住超类初始化程序
以便解码剩余的汽车类型

00:54:18.746 --> 00:54:21.006 A:middle
好的

00:54:21.006 --> 00:54:22.756 A:middle
现在如果你快速阅读了那些红色方框

00:54:22.916 --> 00:54:26.006 A:middle
你可能会注意到子短语并不是最终

00:54:26.836 --> 00:54:30.456 A:middle
那么从定义上说最终类没有子类

00:54:30.456 --> 00:54:33.866 A:middle
因此从本质上说它稍后会让它们免于替换

00:54:35.046 --> 00:54:39.056 A:middle
意思是拥有一个必需初始化程序没有意义

00:54:39.056 --> 00:54:40.136 A:middle
因为你知道那儿没有子类

00:54:40.136 --> 00:54:43.896 A:middle
因此最终类用起来稍微简单点儿

00:54:43.896 --> 00:54:45.806 A:middle
当处理诸如可解码或其它初始化程序要求方面

00:54:45.806 --> 00:54:48.446 A:middle
因为它们不需遵循这些规则

00:54:48.446 --> 00:54:53.766 A:middle
即拥有必需初始化程序 那么当你用类引用语义时

00:54:53.766 --> 00:54:57.936 A:middle
考虑使用最终类

00:54:57.936 --> 00:54:59.316 A:middle
当你不再需要自定义类时

00:54:59.316 --> 00:55:01.236 A:middle
通过集成机制

