WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.396 --> 00:01:03.166 A:middle
我们觉得 4.2 版本是一个重要节点

00:01:04.296 --> 00:01:08.056 A:middle
从这个节点开始 我们终于可以完全实施

00:01:08.056 --> 00:01:10.746 A:middle
许多期待应用到标准程序库的设计中了

00:01:10.936 --> 00:01:12.196 A:middle
这在达到 Swift 中

00:01:12.626 --> 00:01:15.176 A:middle
ABI 的稳定性的目标方面 对于我们来说非常重要

00:01:16.696 --> 00:01:19.406 A:middle
因此我们之前也针对通用型做了很多次演讲

00:01:19.406 --> 00:01:20.516 A:middle
但我们一直没有往后退一步

00:01:20.546 --> 00:01:22.756 A:middle
将通用型作为一个整体来讲

00:01:23.496 --> 00:01:26.306 A:middle
今天我们要给大家分享一些不同的功能

00:01:26.306 --> 00:01:29.626 A:middle
关于通用型系统 有新功能也有老功能

00:01:29.626 --> 00:01:31.026 A:middle
以便帮你们理解它们如何共同协作

00:01:31.026 --> 00:01:35.426 A:middle
我要快速回顾一下通用型的动机

00:01:37.076 --> 00:01:39.356 A:middle
我们会谈到设计协议

00:01:39.356 --> 00:01:41.116 A:middle
给出一系列具体类型

00:01:41.116 --> 00:01:43.236 A:middle
通过从标准程序库中获取的示例

00:01:44.016 --> 00:01:47.146 A:middle
我们会回顾一下协议继承

00:01:47.146 --> 00:01:48.626 A:middle
并谈谈条件一致性的新功能

00:01:48.626 --> 00:01:50.186 A:middle
以及它如何与协议继承相互作用

00:01:50.226 --> 00:01:55.486 A:middle
最后我们会通过对类和通用型的讨论
总结一下今天的内容

00:01:55.486 --> 00:02:01.026 A:middle
为何通用型对于 Swift 是如此重要的部分？

