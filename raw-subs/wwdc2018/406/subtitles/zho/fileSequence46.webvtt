WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.336 --> 00:46:01.286 A:middle
而且简化了集合协议的使用

00:46:01.286 --> 00:46:06.226 A:middle
不再需要对无尽的类型塔进行推理

00:46:06.226 --> 00:46:10.276 A:middle
最后一个问题 涉及子序列

00:46:10.616 --> 00:46:11.906 A:middle
我们说过它需要是一个集合

00:46:11.906 --> 00:46:14.546 A:middle
但是我们需要子序列类型

00:46:14.546 --> 00:46:16.426 A:middle
是一个随机访问集合

00:46:16.616 --> 00:46:18.826 A:middle
来执行这个索引偏移操作

00:46:18.826 --> 00:46:22.556 A:middle
为了描述这一点

00:46:22.766 --> 00:46:24.456 A:middle
我们可以使用协议 where 子句

00:46:24.846 --> 00:46:28.116 A:middle
因此当 bidirectionalCollection
从集合承继时

00:46:28.386 --> 00:46:32.056 A:middle
它可以在子序列上添加一个新的约束

00:46:32.056 --> 00:46:34.346 A:middle
要求它遵守
bidirectionalCollection 协议

00:46:34.346 --> 00:46:37.136 A:middle
这又是一个递归约束

00:46:37.136 --> 00:46:40.156 A:middle
但现在它在
bidirectionalCollection 协议上表示

00:46:40.156 --> 00:46:42.806 A:middle
对于 randomAccessCollection 也是同理

00:46:42.806 --> 00:46:47.876 A:middle
例如随机访问集合的子序列

00:46:47.876 --> 00:46:50.156 A:middle
其本身也符合
randomAccessCollection

00:46:50.706 --> 00:46:54.566 A:middle
注意子序列的约束是如何遵循封闭协议的

00:46:54.566 --> 00:46:57.106 A:middle
这听起来有点耳熟

00:46:57.106 --> 00:47:02.076 A:middle
递归约束和条件一致性都倾向于像这样

