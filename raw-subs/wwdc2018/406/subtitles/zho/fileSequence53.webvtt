WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:52:58.096 --> 00:53:02.266 A:middle
就是在汽车类内部声明的初始化程序

00:53:03.176 --> 00:53:08.306 A:middle
在这里的超类中 那么那个初始化工具

00:53:08.306 --> 00:53:09.746 A:middle
它知道如何解码汽车的全部状态

00:53:09.866 --> 00:53:12.366 A:middle
但它并不了解出租车子类

00:53:12.366 --> 00:53:16.786 A:middle
那么如果我们要直接使用这个初始化程序

00:53:16.786 --> 00:53:18.126 A:middle
我们会产生一个问题

00:53:18.126 --> 00:53:21.116 A:middle
hourlyRate 完全未被初始化

00:53:21.116 --> 00:53:23.556 A:middle
那会导致一些更不幸的误解

00:53:23.556 --> 00:53:27.476 A:middle
当你在最后得到账单时 我们该如何解决这个？

00:53:27.626 --> 00:53:30.626 A:middle
看起来 Swift 不会让你陷入这个问题中

00:53:31.416 --> 00:53:34.426 A:middle
它会在你尝试让汽车遵循可解码协议时进行判断

00:53:34.426 --> 00:53:37.466 A:middle
是指那个初始化程序中 有问题的可解码协议

00:53:37.466 --> 00:53:41.006 A:middle
它应该被标记为必需

00:53:42.836 --> 00:53:46.306 A:middle
现在必须在全部超类中实施所必需的初始化程序

00:53:46.306 --> 00:53:52.276 A:middle
不仅仅是直接的超类 而是任意一个超类

00:53:52.276 --> 00:53:54.426 A:middle
以及你现在还不知道的将来可能会出现的超类

00:53:55.846 --> 00:53:59.936 A:middle
现在通过添加那个要求
意味着当出租车从汽车中继承时

00:53:59.996 --> 00:54:05.086 A:middle
它还需要引入一个
拥有相同名称的初始化程序

