WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.096 --> 00:10:02.516 A:middle
对于 Swift 4.2 来说 这是自动发生的

00:10:03.256 --> 00:10:06.016 A:middle
因为我们也把它们的通用参数命名为元素

00:10:06.016 --> 00:10:09.136 A:middle
这是一很棒的附带利益

00:10:09.136 --> 00:10:11.856 A:middle
可以赋予你的通用参数一个有意义的名字

00:10:11.856 --> 00:10:14.226 A:middle
遵循共同的惯例 就像元素这个词一样

00:10:15.726 --> 00:10:17.856 A:middle
而不是随意给它们一个名字 比如 T

00:10:17.856 --> 00:10:19.256 A:middle
你要分别陈述的是元素类型

00:10:19.256 --> 00:10:24.186 A:middle
对于其它数据类型 你可能需要做的更具体一些

00:10:24.186 --> 00:10:27.466 A:middle
比如字典 需要把元素类型设置为

00:10:27.466 --> 00:10:28.986 A:middle
它的关键值对和值类型

00:10:29.066 --> 00:10:34.646 A:middle
接下来让我们谈谈添加自定义下标

00:10:35.896 --> 00:10:38.566 A:middle
接下来让我们谈谈诸如数组类型一样的协议

00:10:38.626 --> 00:10:42.576 A:middle
我们可能会让自定义下标 以整型作为它的参数

00:10:42.576 --> 00:10:49.006 A:middle
但是让自定义下标用整型
可能会意味着非常强的约束

00:10:49.006 --> 00:10:52.466 A:middle
每个一致性类型都要提供

00:10:52.586 --> 00:10:57.396 A:middle
把元素取到由整数表达的指定位置的功能

00:10:57.916 --> 00:11:00.716 A:middle
那对于像数组一样的类型来说没问题

