WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.916 --> 00:33:02.206 A:middle
事实上我们可以用此来清理其它代码

00:33:02.206 --> 00:33:04.476 A:middle
比如 我们知道什么是 CountableRange

00:33:04.876 --> 00:33:09.106 A:middle
它是带有这种额外跨越功能的范围

00:33:09.106 --> 00:33:10.616 A:middle
因此我们可以扩展 CountableRanges

00:33:10.916 --> 00:33:14.466 A:middle
这就是我们拥有 RandomAccessCollection
一致性的情况

00:33:14.466 --> 00:33:17.426 A:middle
Swift 4.2 中引入了这个

00:33:17.426 --> 00:33:20.906 A:middle
用于帮助简化我们要处理的类型

00:33:20.906 --> 00:33:24.656 A:middle
并让现有核心类型 比如范围

00:33:24.656 --> 00:33:25.346 A:middle
组合性更强 也更灵活

00:33:27.756 --> 00:33:30.726 A:middle
&gt;&gt; 递归约束描述了协议

00:33:30.726 --> 00:33:32.316 A:middle
及其关联类型之间的关系

00:33:32.316 --> 00:33:34.836 A:middle
这是我们在 WWDC 的版本中

00:33:34.836 --> 00:33:36.616 A:middle
没有涉及的话题

00:33:36.616 --> 00:33:38.776 A:middle
它是标准库使用

00:33:38.776 --> 00:33:41.666 A:middle
Swift 泛型系统的重要组成部分

00:33:42.216 --> 00:33:43.006 A:middle
让我们直接开始吧

00:33:43.936 --> 00:33:47.046 A:middle
递归约束不过是涉及到相同协议

00:33:47.076 --> 00:33:50.336 A:middle
的一个协议中的约束

00:33:51.036 --> 00:33:53.986 A:middle
这里 集合具有一个名为子序列的关联类型

00:33:53.986 --> 00:33:57.136 A:middle
它本身就是一个集合

00:33:57.726 --> 00:34:02.566 A:middle
那么你为什么需要它呢 
让我们来看一个基于它的泛型算法

