WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:59.136 --> 00:38:02.846 A:middle
现在请注意 这个下标的结果类型

00:38:02.846 --> 00:38:04.216 A:middle
由一个新的关联类型来描述

00:38:04.676 --> 00:38:05.426 A:middle
它就是子序列

00:38:06.886 --> 00:38:10.656 A:middle
现在字符串类型和区间类型
都满足了这些新的集合要求

00:38:10.656 --> 00:38:15.256 A:middle
对于字符串 子序列类型是子字符串

00:38:16.506 --> 00:38:20.166 A:middle
对于区间子序列类型将是区间本身

00:38:20.166 --> 00:38:23.596 A:middle
这对于字符串类型和区间类型来说都很适用

00:38:23.736 --> 00:38:26.856 A:middle
但是对于所有其他不想定制实际的

00:38:26.856 --> 00:38:28.646 A:middle
子序列类型的集合类型而言

00:38:28.646 --> 00:38:31.736 A:middle
我们可以提供切片的默认限制

00:38:32.396 --> 00:38:33.326 A:middle
因此这些集合类型的构建者

00:38:33.326 --> 00:38:37.666 A:middle
实际上不需要做任何额外的工作
来符合这些集合

00:38:37.906 --> 00:38:40.126 A:middle
他们可以免费获得所有的切片行为

00:38:41.056 --> 00:38:42.366 A:middle
那么我们从子序列开始

00:38:42.366 --> 00:38:47.706 A:middle
关联类型本身可以具有默认值

00:38:48.176 --> 00:38:50.036 A:middle
记录在等号的后面

00:38:50.436 --> 00:38:54.156 A:middle
对于子序列来说
适配式切片类型是一个完美的默认类型

00:38:54.156 --> 00:38:56.076 A:middle
因为它适用于所有集合

00:38:56.076 --> 00:38:58.806 A:middle
因此这个默认值将用于

00:38:58.806 --> 00:39:00.736 A:middle
不提供自己的子序列类型的

