WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.596 --> 00:32:01.646 A:middle
我们可以只明确写出集合
和 BidirectionalCollection

00:32:01.646 --> 00:32:06.056 A:middle
以宣称这就是全部一致性的位置

00:32:06.506 --> 00:32:07.936 A:middle
或者我们可以做得更好

00:32:07.936 --> 00:32:09.616 A:middle
分离不同的一致性

00:32:09.616 --> 00:32:15.346 A:middle
现在这点上 我们的范围类型非常强大

00:32:15.346 --> 00:32:17.016 A:middle
它会做一切 CountableRange
所能做的工作

00:32:17.296 --> 00:32:18.686 A:middle
我们应该如何使用 CountableRange 呢？

00:32:19.536 --> 00:32:20.206 A:middle
我们可以把它丢到一边去

00:32:20.726 --> 00:32:23.066 A:middle
在本例中我们讲的是标准程序库

00:32:23.066 --> 00:32:25.706 A:middle
有许多代码实际上使用了 CountableRange

00:32:25.986 --> 00:32:29.586 A:middle
因此我们可以把它作为通用类型别名
保留下来

00:32:30.886 --> 00:32:32.476 A:middle
这是一个很棒的方案

00:32:32.476 --> 00:32:34.466 A:middle
那么通用类型别名添加了

00:32:34.546 --> 00:32:37.306 A:middle
让范围可计数所需要的全部额外要求

00:32:37.306 --> 00:32:39.276 A:middle
你需要把这些要求放在集合中

00:32:39.276 --> 00:32:44.706 A:middle
但它只是下面范围类型的一个可替换的名字

00:32:46.826 --> 00:32:47.806 A:middle
这对于源兼容性来说很棒

00:32:47.806 --> 00:32:50.846 A:middle
因为代码仍可使用 CountableRange

00:32:51.116 --> 00:32:52.416 A:middle
从另一方面说 它还可以

00:32:52.466 --> 00:32:56.046 A:middle
给那些拥有额外功能的范围取一个漂亮的名字

00:32:56.046 --> 00:32:59.286 A:middle
额外功能只是成为 
RandomAccessCollection

00:32:59.916 --> 00:33:02.206 A:middle
事实上我们可以用此来清理其它代码

