WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:00.576 --> 00:03:04.406 A:middle
这不仅烦人 还容易出错

00:03:04.826 --> 00:03:07.806 A:middle
如果你代码中的某个位置也许是偶然

00:03:07.806 --> 00:03:10.286 A:middle
如果你代码中的某个位置放了一个整型会怎么样呢？

00:03:11.226 --> 00:03:13.926 A:middle
但那不仅仅关系到易用性

00:03:13.926 --> 00:03:15.246 A:middle
我们还想解决一些问题

00:03:15.246 --> 00:03:18.506 A:middle
关于如何在内存中表达这些值

00:03:18.506 --> 00:03:24.986 A:middle
现在对于字符串的缓冲器来说 最理想的表达方式

00:03:24.986 --> 00:03:26.716 A:middle
就是内存的连续块

00:03:27.146 --> 00:03:28.936 A:middle
每个元素之间用线隔开

00:03:28.936 --> 00:03:34.076 A:middle
但如果是无类型方法 这就不会那么有效了

00:03:34.076 --> 00:03:37.856 A:middle
因为缓冲器不会提前知道 它将会包含哪种类型

00:03:37.856 --> 00:03:40.696 A:middle
它得使用一种像 Any 一样的类型

00:03:40.746 --> 00:03:42.126 A:middle
那可以涵盖任意一个可能性

00:03:42.126 --> 00:03:46.086 A:middle
并且在那个 Any 中
在追踪类型、把类型装盒

00:03:46.086 --> 00:03:49.146 A:middle
和把类型从箱中取出方面 还有许多消耗

00:03:50.296 --> 00:03:54.056 A:middle
在这里 我可能只想要一个整型缓冲器

00:03:54.186 --> 00:03:55.686 A:middle
但我不能在编译器中表达它

00:03:55.686 --> 00:04:01.266 A:middle
因此我必须为灵活性付出代价 即使我对它并不感兴趣

