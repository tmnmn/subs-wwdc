WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:00.576 --> 00:03:03.106 A:middle
And this isn't just annoying,

00:03:03.106 --> 00:03:04.406 A:middle
it's also error-prone.

00:03:04.826 --> 00:03:05.856 A:middle
What if somewhere in your code,

00:03:05.856 --> 00:03:07.806 A:middle
maybe by accident, you put an

00:03:07.806 --> 00:03:09.226 A:middle
integer into what was supposed

00:03:09.226 --> 00:03:10.286 A:middle
to be a buffer of strings?

00:03:11.226 --> 00:03:13.926 A:middle
But it's not just about ease of

00:03:13.926 --> 00:03:14.246 A:middle
use.

00:03:14.246 --> 00:03:15.246 A:middle
We also want to solve some

00:03:15.246 --> 00:03:16.856 A:middle
problems relating to how these

00:03:16.856 --> 00:03:18.506 A:middle
values are represented in

00:03:18.506 --> 00:03:18.876 A:middle
memory.

00:03:19.666 --> 00:03:23.106 A:middle
Now, the ideal representation

00:03:23.326 --> 00:03:24.986 A:middle
for a buffer of strings, would

00:03:24.986 --> 00:03:26.716 A:middle
be a contiguous block of memory.

00:03:27.146 --> 00:03:28.936 A:middle
With every element held in line

00:03:28.936 --> 00:03:29.626 A:middle
next to each other.

00:03:30.626 --> 00:03:32.566 A:middle
But with an untyped approach,

00:03:33.016 --> 00:03:34.076 A:middle
this doesn't work out quite so

00:03:34.076 --> 00:03:34.336 A:middle
well.

00:03:34.336 --> 00:03:35.646 A:middle
Because the buffer doesn't know

00:03:35.646 --> 00:03:37.856 A:middle
in advance what kind of type

00:03:37.856 --> 00:03:38.766 A:middle
it's going to contain.

00:03:38.766 --> 00:03:40.696 A:middle
And so it has to use a type like

00:03:40.746 --> 00:03:42.126 A:middle
Any that can account for any of

00:03:42.126 --> 00:03:42.936 A:middle
the possibilities.

00:03:43.236 --> 00:03:44.536 A:middle
And, there's a lot of overhead

00:03:44.776 --> 00:03:46.086 A:middle
in tracking, boxing, and

00:03:46.086 --> 00:03:49.146 A:middle
unboxing the types in that Any.

00:03:50.296 --> 00:03:52.436 A:middle
Here, I might have just wanted a

00:03:52.436 --> 00:03:54.056 A:middle
buffer of integers, but I have

00:03:54.186 --> 00:03:55.686 A:middle
no way of expressing that to the

00:03:55.686 --> 00:03:56.626 A:middle
compiler.

00:03:56.626 --> 00:03:57.616 A:middle
And so, I'm paying for

00:03:57.616 --> 00:03:59.176 A:middle
flexibility, even though I'm not

00:03:59.176 --> 00:04:01.266 A:middle
interested in it.

