WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:52:00.136 --> 00:52:01.176 A:middle
Now, the second interesting

00:52:01.176 --> 00:52:03.006 A:middle
thing is, how are we

00:52:03.006 --> 00:52:03.746 A:middle
implementing this?

00:52:03.806 --> 00:52:04.956 A:middle
Well, we're calling to that

00:52:04.956 --> 00:52:07.206 A:middle
initializer above to create a

00:52:07.206 --> 00:52:10.146 A:middle
brand-new instance of whatever

00:52:10.146 --> 00:52:12.516 A:middle
decodable type we have, and then

00:52:12.516 --> 00:52:13.746 A:middle
return it.

00:52:14.456 --> 00:52:15.326 A:middle
Fair enough.

00:52:16.146 --> 00:52:17.256 A:middle
We can go ahead and make our

00:52:17.256 --> 00:52:18.466 A:middle
Vehicle type Decodable.

00:52:19.426 --> 00:52:21.586 A:middle
And then, what we expect, when

00:52:21.586 --> 00:52:22.776 A:middle
applying the Liskov substitution

00:52:22.776 --> 00:52:24.586 A:middle
principle, is we can use any

00:52:24.586 --> 00:52:26.426 A:middle
subclass of Vehicle.

00:52:27.146 --> 00:52:28.346 A:middle
With these new API's that we've

00:52:28.346 --> 00:52:29.176 A:middle
built through the protocol

00:52:29.176 --> 00:52:29.716 A:middle
conformance.

00:52:29.816 --> 00:52:32.246 A:middle
So, we can call Decode on a

00:52:32.246 --> 00:52:32.806 A:middle
Taxi.

00:52:33.486 --> 00:52:34.726 A:middle
And what we get back is not a

00:52:34.726 --> 00:52:35.726 A:middle
Vehicle not some arbitrary

00:52:35.726 --> 00:52:37.366 A:middle
Vehicle instance, but the Taxi,

00:52:37.456 --> 00:52:39.076 A:middle
an instance of Taxi.

00:52:40.476 --> 00:52:41.846 A:middle
This is great, but how does it

00:52:41.846 --> 00:52:42.016 A:middle
work?

00:52:43.156 --> 00:52:45.496 A:middle
So let's take a look at what

00:52:45.496 --> 00:52:46.256 A:middle
Taxi might have.

00:52:46.256 --> 00:52:47.296 A:middle
Maybe there's an hourly rate

00:52:47.356 --> 00:52:48.636 A:middle
here, and when we call

00:52:48.636 --> 00:52:51.496 A:middle
Taxi.decode from, we're going

00:52:51.496 --> 00:52:52.506 A:middle
through the protocol, going

00:52:52.506 --> 00:52:53.856 A:middle
through the protocol initializer

00:52:53.856 --> 00:52:54.366 A:middle
requirement.

00:52:55.176 --> 00:52:56.366 A:middle
There's only one initializer

00:52:56.366 --> 00:52:58.096 A:middle
this can actually call, and

00:52:58.096 --> 00:52:59.806 A:middle
that's the initializer that's

00:52:59.836 --> 00:53:02.266 A:middle
declared inside the Vehicle

