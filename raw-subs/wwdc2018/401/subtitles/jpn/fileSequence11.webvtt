WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:57.090 --> 00:11:00.427 align:start position:21% line:-2
リリースビルドは
Whole Moduleモードで

00:11:00.527 --> 00:11:04.198 align:start position:34% line:-2
全ファイルを
同時にビルドします

00:11:04.298 --> 00:11:07.501 align:start position:27% line:-1
これが最適化を可能にします

00:11:07.935 --> 00:11:11.605 align:start position:32% line:-2
最適化の機会が
増えるということです

00:11:12.039 --> 00:11:15.209 align:start position:23% line:-2
デバッグビルドは
Incrementalモードで

00:11:15.309 --> 00:11:18.979 align:start position:27% line:-1
ビルドが同時ではありません

00:11:19.479 --> 00:11:23.116 align:start position:27% line:-2
これにより
パフォーマンスは低下します

00:11:23.417 --> 00:11:26.720 align:start position:16% line:-2
Optimazation Levelは
No optimazationです

00:11:26.820 --> 00:11:29.323 align:start position:29% line:-1
デバッグ情報が改善します

00:11:29.423 --> 00:11:32.426 align:start position:36% line:-2
リリースビルドは
最適化されますが

00:11:32.593 --> 00:11:35.829 align:start position:36% line:-2
そのレベルは
あとで説明します

00:11:39.533 --> 00:11:44.138 align:start position:27% line:-2
コンパイルモードと
最適化レベルを分けたことで

00:11:44.738 --> 00:11:49.243 align:start position:32% line:-2
ある興味深い暫定策が
見つかりました

00:11:49.543 --> 00:11:53.714 align:start position:9% line:-2
Whole Moduleモードと
No optimazationを組み合わせると

00:11:53.814 --> 00:11:56.483 align:start position:36% line:-2
デバッグビルドが
速くなるのです

00:11:56.884 --> 00:11:58.418 align:start position:32% line:-1
この組み合わせにより

00:11:58.519 --> 00:12:03.423 align:start position:29% line:-2
先にお話しした無駄が
格段に抑えられるからです

