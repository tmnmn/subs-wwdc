WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.519 --> 00:12:03.423 align:start position:29% line:-2
先にお話しした無駄が
格段に抑えられるからです

00:12:03.524 --> 00:12:09.163 align:start position:27% line:-2
除去に努めてきた
不要部分が大幅に減るのです

00:12:09.963 --> 00:12:13.233 align:start position:36% line:-2
しかしビルドが
増えにくくなり―

00:12:13.333 --> 00:12:17.271 align:start position:27% line:-2
１つを変えると
全ファイルが再構築されます

00:12:17.371 --> 00:12:20.107 align:start position:34% line:-2
Xcode 10の
デバッグビルドでは

00:12:20.207 --> 00:12:23.243 align:start position:29% line:-1
暫定策は必要なくなります

00:12:23.343 --> 00:12:29.183 align:start position:21% line:-2
Incrementalモードも
先の組み合わせと同じく効果的です

00:12:29.283 --> 00:12:31.952 align:start position:36% line:-2
すでにサポート
範囲内だからです

00:12:34.588 --> 00:12:37.591 align:start position:34% line:-2
次にランタイムの
最適化についてです

00:12:37.691 --> 00:12:40.928 align:start position:34% line:-2
バイナリ互換性にも
つながります

00:12:43.230 --> 00:12:46.066 align:start position:34% line:-2
Swiftは自動で
メモリを管理します

00:12:46.767 --> 00:12:51.338 align:start position:23% line:-2
Objective-Cと同様に
参照カウントを使います

00:12:51.805 --> 00:12:56.777 align:start position:30% line:-2
これはコンパイラの
リリースまでの流れです

00:12:57.411 --> 00:12:59.713 align:start position:25% line:-1
Swift 4.1の場合です

