WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:55.255 --> 00:36:02.496 align:start position:27% line:-2
この場合も クロージャ内の
パス値は同じくあいまいです

00:36:02.629 --> 00:36:07.234 align:start position:21% line:-2
Swift 4では このエラーを
察知できませんでした

00:36:08.168 --> 00:36:12.139 align:start position:30% line:-2
Swift 4.2では
排他的チェックを改善し

00:36:12.239 --> 00:36:15.609 align:start position:34% line:-2
この あいまいさを
察知します

00:36:16.477 --> 00:36:18.879 align:start position:34% line:-1
別の解決策としては

00:36:19.046 --> 00:36:24.385 align:start position:25% line:-2
パラメータとしてクロージャに
渡しても修正可能です

00:36:25.652 --> 00:36:27.988 align:start position:34% line:-1
この改善点に加えて

00:36:28.088 --> 00:36:33.160 align:start position:25% line:-2
リリースビルドにも
排他的チェックを追加しました

00:36:33.260 --> 00:36:37.197 align:start position:23% line:-1
パフォーマンスが重要でなければ

00:36:37.297 --> 00:36:40.467 align:start position:27% line:-1
永続的な使用をお勧めします

00:36:40.567 --> 00:36:45.672 align:start position:29% line:-2
今後 負荷が削減され
常に使えるレベルになれば

00:36:45.772 --> 00:36:50.043 align:start position:30% line:-2
さらなる保護機能として
役立つでしょう

00:36:50.144 --> 00:36:54.748 align:start position:25% line:-2
配列範囲のチェックや
整数オーバーフローと同じです

00:36:56.149 --> 00:37:00.788 align:start position:25% line:-2
今日お話しできなかったことも
多くあります

