WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.352 --> 00:27:03.357 align:start position:30% line:-2
プラットフォーム間で
名前や特性が異なるため

00:27:03.457 --> 00:27:05.592 align:start position:32% line:-1
理想的ではありません

00:27:05.692 --> 00:27:08.328 align:start position:25% line:-1
ビルド設定チェックが必要です

00:27:08.562 --> 00:27:14.968 align:start position:27% line:-2
しかし これらは低レベルで
実装が難しいのです

00:27:15.235 --> 00:27:19.306 align:start position:36% line:-2
例えば１から６の
数値を得たい場合

00:27:19.406 --> 00:27:23.644 align:start position:18% line:-2
Darwinのarc4randomが
使えます

00:27:23.744 --> 00:27:26.713 align:start position:23% line:-1
６で割った余りを計算するのです

00:27:26.813 --> 00:27:31.885 align:start position:30% line:-2
しかし１から６で
均等な結果となりません

00:27:32.252 --> 00:27:38.458 align:start position:18% line:-2
Swift 4.2では新しいAPIを
導入し改善しました

00:27:39.126 --> 00:27:43.363 align:start position:30% line:-2
まず数値型は
ランダムメソッドにより

00:27:43.464 --> 00:27:48.068 align:start position:32% line:-2
範囲内で均等な数値を
返すようになりました

00:27:48.168 --> 00:27:51.638 align:start position:36% line:-2
さらに浮動小数も
扱えるのです

00:27:52.773 --> 00:27:58.178 align:start position:43% line:-1
(拍手)

00:27:58.846 --> 00:28:04.551 align:start position:20% line:-2
Collectionプロトコルにも
確率要素を加えました

