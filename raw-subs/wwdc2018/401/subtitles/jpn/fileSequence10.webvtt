WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:57.965 --> 00:10:01.802 align:start position:32% line:-2
大体のプロジェクトは
2xの速度になります

00:10:02.336 --> 00:10:04.905 align:start position:30% line:-1
さらなる利点があります

00:10:05.005 --> 00:10:09.143 align:start position:32% line:-2
Swiftでは複数の
ファイルを扱えます

00:10:09.243 --> 00:10:12.379 align:start position:29% line:-1
ヘッダファイルは不要です

00:10:12.479 --> 00:10:15.949 align:start position:32% line:-2
コンパイラの
不要な処理も多いです

00:10:16.149 --> 00:10:18.886 align:start position:23% line:-2
そこでコンパイルパイプラインを
革新し

00:10:18.986 --> 00:10:22.923 align:start position:27% line:-2
無駄を抑え
コアの活用を効率化しました

00:10:23.023 --> 00:10:24.825 align:start position:32% line:-1
これが速さの理由です

00:10:25.192 --> 00:10:31.131 align:start position:27% line:-2
ビルドの工程に関しては
今週 別のセッションがあり

00:10:31.231 --> 00:10:34.468 align:start position:27% line:-1
様々な利点について話します

00:10:36.270 --> 00:10:40.908 align:start position:34% line:-2
さて１番の利点は
デバッグビルドです

00:10:43.076 --> 00:10:47.948 align:start position:29% line:-2
Xcodeのビルド設定を
例に説明します

00:10:48.649 --> 00:10:52.853 align:start position:27% line:-2
最近 コンパイルモードを
最適化レベルから分けました

00:10:53.120 --> 00:10:56.990 align:start position:27% line:-1
プロジェクトの作成方法です

00:10:57.090 --> 00:11:00.427 align:start position:21% line:-2
リリースビルドは
Whole Moduleモードで

