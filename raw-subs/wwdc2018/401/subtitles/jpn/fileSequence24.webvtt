WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.605 --> 00:24:00.174 align:start position:29% line:-1
でもHashableは？

00:24:01.208 --> 00:24:04.878 align:start position:30% line:-2
都市のハッシュコードを
計算する場合

00:24:04.978 --> 00:24:09.349 align:start position:30% line:-2
都市名と州の
ハッシュコードの計算と

00:24:09.449 --> 00:24:11.418 align:start position:38% line:-1
結合が必要です

00:24:11.552 --> 00:24:12.986 align:start position:38% line:-1
そのやり方は？

00:24:13.220 --> 00:24:16.390 align:start position:30% line:-1
非等価演算も使えますし

00:24:17.324 --> 00:24:22.930 align:start position:29% line:-2
演算式をネットで探したり
自分で考えたりもできます

00:24:23.263 --> 00:24:26.333 align:start position:30% line:-2
しかし
どちらも最善策ではなく

00:24:26.433 --> 00:24:30.704 align:start position:32% line:-2
ハッシュ結合も
分かりにくい機能です

00:24:30.804 --> 00:24:34.074 align:start position:32% line:-2
うまく使えない場合の
損害は大きく

00:24:34.174 --> 00:24:38.312 align:start position:23% line:-2
DictionaryやSetの
動作プロパティには

00:24:38.412 --> 00:24:41.748 align:start position:32% line:-2
高度なハッシュ機能が
求められます

00:24:42.216 --> 00:24:44.451 align:start position:27% line:-1
またセキュリティに関しても

00:24:44.551 --> 00:24:50.257 align:start position:30% line:-2
アタッカーがハッシュを
すべて同値にしてしまい

00:24:50.357 --> 00:24:53.126 align:start position:34% line:-2
アプリケーションに
送るとします

00:24:53.227 --> 00:24:58.332 align:start position:23% line:-2
アプリケーションがDoS攻撃で
使用できなくなります

00:24:58.432 --> 00:25:02.803 align:start position:25% line:-2
Swift 4.2はより良い
APIを導入しました

