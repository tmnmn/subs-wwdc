WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.156 --> 00:16:00.176 A:middle
And what you'll see is a wide

00:16:00.176 --> 00:16:01.626 A:middle
range depending on what language

00:16:01.626 --> 00:16:03.456 A:middle
features are used about 10% to

00:16:03.456 --> 00:16:05.136 A:middle
30% reduction in code size.

00:16:05.826 --> 00:16:07.206 A:middle
Now this, when I talk about code

00:16:07.206 --> 00:16:07.896 A:middle
size I'm talking about the

00:16:07.896 --> 00:16:09.636 A:middle
machine code that is generated

00:16:09.636 --> 00:16:11.046 A:middle
as a result of compiling your

00:16:11.046 --> 00:16:12.316 A:middle
Swift code, not the overall app

00:16:12.386 --> 00:16:12.676 A:middle
size.

00:16:12.906 --> 00:16:14.206 A:middle
The overall app size depends on

00:16:14.206 --> 00:16:15.466 A:middle
assets and all sorts of other

00:16:15.466 --> 00:16:15.766 A:middle
stuff.

00:16:17.576 --> 00:16:19.416 A:middle
In practice we observe that

00:16:19.416 --> 00:16:20.626 A:middle
runtime performance is usually

00:16:20.626 --> 00:16:21.836 A:middle
about 5% slower.

00:16:21.836 --> 00:16:23.056 A:middle
So you're trading off for a

00:16:23.056 --> 00:16:23.776 A:middle
little bit of performance.

00:16:24.336 --> 00:16:25.766 A:middle
For many applications this is

00:16:25.766 --> 00:16:26.496 A:middle
totally fine.

00:16:26.926 --> 00:16:28.406 A:middle
So it really depends on your use

00:16:28.466 --> 00:16:28.716 A:middle
case.

00:16:29.216 --> 00:16:30.096 A:middle
But if this is something you're

00:16:30.096 --> 00:16:31.516 A:middle
interested in we encourage you

00:16:31.516 --> 00:16:33.956 A:middle
to give it a try.

00:16:34.456 --> 00:16:35.476 A:middle
With that I'd like to hand it

00:16:35.476 --> 00:16:36.916 A:middle
off to Slava who will talk about

00:16:36.916 --> 00:16:37.806 A:middle
all the great language and

00:16:37.806 --> 00:16:39.826 A:middle
improvements with Swift 4.2

00:16:40.516 --> 00:16:45.546 A:middle
[ Applause ]

00:16:46.046 --> 00:16:47.356 A:middle
&gt;&gt; Hey everybody, I'm Slava

00:16:47.356 --> 00:16:47.856 A:middle
Pestov.

00:16:47.896 --> 00:16:49.586 A:middle
I work on the Swift Compiler and

00:16:49.586 --> 00:16:50.886 A:middle
today I'm going to talk about

00:16:50.886 --> 00:16:52.366 A:middle
how the new language features in

00:16:52.366 --> 00:16:54.216 A:middle
Swift 4.2 allow you to write

00:16:54.216 --> 00:16:55.666 A:middle
simpler and more maintainable

00:16:55.666 --> 00:16:55.956 A:middle
code.

00:16:57.556 --> 00:16:59.156 A:middle
So before we start talking about

00:16:59.196 --> 00:17:00.766 A:middle
the new language changes, let's

