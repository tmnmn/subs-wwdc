WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.296 --> 00:19:01.966 A:middle
new CaseIterable protocol and if

00:19:01.966 --> 00:19:03.346 A:middle
you state a conformance to this

00:19:03.406 --> 00:19:04.726 A:middle
protocol, the compiler will

00:19:04.726 --> 00:19:06.676 A:middle
synthesize an all cases property

00:19:06.676 --> 00:19:07.096 A:middle
for you.

00:19:07.096 --> 00:19:08.976 A:middle
OK, that was short and sweet.

00:19:09.516 --> 00:19:12.546 A:middle
[ Applause ]

00:19:13.046 --> 00:19:15.216 A:middle
For the next improvement we're

00:19:15.216 --> 00:19:16.476 A:middle
going to see how to eliminate

00:19:16.476 --> 00:19:17.806 A:middle
another source of boilerplate.

00:19:18.016 --> 00:19:19.216 A:middle
This time it's when you're

00:19:19.306 --> 00:19:20.436 A:middle
unable to make your code

00:19:20.626 --> 00:19:21.786 A:middle
sufficiently generic.

00:19:22.726 --> 00:19:24.916 A:middle
So in Swift 4 we have this

00:19:24.956 --> 00:19:26.596 A:middle
contains method on sequence.

00:19:27.006 --> 00:19:28.506 A:middle
And this requires that the

00:19:28.506 --> 00:19:30.106 A:middle
element type of the sequence is

00:19:30.106 --> 00:19:32.186 A:middle
Equatable so that it can find

00:19:32.186 --> 00:19:33.376 A:middle
the element that it's looking

00:19:33.446 --> 00:19:33.666 A:middle
for.

00:19:34.636 --> 00:19:36.736 A:middle
And of course I could call this

00:19:36.736 --> 00:19:37.966 A:middle
within an array of strings

00:19:38.236 --> 00:19:39.616 A:middle
because string is Equatable.

00:19:39.616 --> 00:19:41.516 A:middle
But what if I call it within an

00:19:41.516 --> 00:19:42.346 A:middle
array of arrays.

00:19:43.226 --> 00:19:45.736 A:middle
Well array of Int, the element

00:19:45.736 --> 00:19:47.756 A:middle
type here is not equitable,

00:19:48.126 --> 00:19:49.486 A:middle
which meant that I would just

00:19:49.486 --> 00:19:50.596 A:middle
get a compile time error.

00:19:51.796 --> 00:19:53.796 A:middle
And you might ask, well why

00:19:53.796 --> 00:19:55.106 A:middle
doesn't the standard library

00:19:55.196 --> 00:19:56.796 A:middle
make all arrays Equatable.

00:19:57.136 --> 00:19:58.316 A:middle
But that doesn't make sense

00:19:58.316 --> 00:20:00.666 A:middle
either because if the element

