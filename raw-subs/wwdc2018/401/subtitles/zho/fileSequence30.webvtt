WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.376 --> 00:30:00.416 A:middle
鸡肋代码

00:30:01.616 --> 00:30:03.126 A:middle
如果我想在

00:30:03.126 --> 00:30:05.066 A:middle
模拟器环境中

00:30:05.066 --> 00:30:06.476 A:middle
编译代码

00:30:06.776 --> 00:30:09.266 A:middle
在 Swift 4 中 我需要

00:30:09.266 --> 00:30:11.546 A:middle
把这一段东西

00:30:11.546 --> 00:30:12.686 A:middle
拷贝 粘贴到所有我想要进行检查的地方 才能

00:30:12.686 --> 00:30:13.176 A:middle
进行检测

00:30:14.056 --> 00:30:16.456 A:middle
Swift 4.2 中 你可以使用新的

00:30:16.456 --> 00:30:18.596 A:middle
hasTargetEnvironment() 环境判断

00:30:18.906 --> 00:30:21.216 A:middle
来更好地表达本意

00:30:21.216 --> 00:30:23.006 A:middle
还可以直接询问

00:30:23.006 --> 00:30:25.026 A:middle
编译器 我是不是在

00:30:25.026 --> 00:30:26.106 A:middle
为模拟器编译

00:30:26.876 --> 00:30:28.826 A:middle
说到这里

00:30:28.826 --> 00:30:30.566 A:middle
我们再把 FIXME 换成

00:30:30.656 --> 00:30:32.036 A:middle
#warning 构建指令

00:30:32.076 --> 00:30:33.986 A:middle
来生成信息

00:30:34.046 --> 00:30:35.856 A:middle
或运行时间 提醒我别忘了

00:30:35.856 --> 00:30:38.126 A:middle
修复 FIXME

00:30:38.126 --> 00:30:40.916 A:middle
好的 这差不多就是

00:30:40.916 --> 00:30:42.306 A:middle
我今天要讲的

00:30:42.306 --> 00:30:43.516 A:middle
全部特性

00:30:43.516 --> 00:30:44.936 A:middle
但我还有几项要提一下

00:30:46.026 --> 00:30:47.646 A:middle
我们来解析一下

00:30:47.646 --> 00:30:48.586 A:middle
隐式解析选项（Implicitly Unwrapped 

00:30:48.806 --> 00:30:49.646 A:middle
Optionals） 这个梗没效果啊

00:30:50.296 --> 00:30:52.986 A:middle
好吧 隐式解析选项

00:30:52.986 --> 00:30:54.326 A:middle
可能会有点

00:30:54.326 --> 00:30:57.686 A:middle
让人疑惑 我们先来

00:30:57.686 --> 00:31:00.196 A:middle
看看它的思维模型

