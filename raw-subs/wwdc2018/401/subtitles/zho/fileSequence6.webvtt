WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:58.156 --> 00:06:01.946 A:middle
这一功能将在 Swift 5 中推出

00:06:01.946 --> 00:06:04.916 A:middle
预计于 2019 年早些时候发布

00:06:05.926 --> 00:06:07.486 A:middle
什么是二进制兼容性

00:06:08.406 --> 00:06:09.806 A:middle
二进制兼容性指

00:06:09.806 --> 00:06:11.536 A:middle
构建 Swift 代码时

00:06:11.576 --> 00:06:13.286 A:middle
你可以使用 Swift 5 的编译器和层

00:06:13.286 --> 00:06:15.036 A:middle
而在二进制层面

00:06:15.036 --> 00:06:16.626 A:middle
代码可以与

00:06:16.696 --> 00:06:17.866 A:middle
同一编译器或其他编译器层

00:06:17.866 --> 00:06:19.686 A:middle
构建的代码

00:06:19.686 --> 00:06:20.016 A:middle
相互操作

00:06:20.496 --> 00:06:22.266 A:middle
这一点十分重要

00:06:22.266 --> 00:06:23.966 A:middle
标志着这门语言

00:06:23.966 --> 00:06:24.506 A:middle
走向成熟

00:06:25.146 --> 00:06:26.606 A:middle
有了这一功能

00:06:26.606 --> 00:06:28.436 A:middle
Apple 就可以将 Swift 运行时

00:06:28.586 --> 00:06:30.746 A:middle
移入操作系统

00:06:30.746 --> 00:06:32.156 A:middle
App 可以直接使用它

00:06:32.576 --> 00:06:33.496 A:middle
而不再需要

00:06:33.496 --> 00:06:34.976 A:middle
将其放入 App 包中

00:06:35.346 --> 00:06:37.446 A:middle
这样可以缩减代码体积

00:06:37.446 --> 00:06:38.966 A:middle
但同样重要的是

00:06:38.966 --> 00:06:40.146 A:middle
启动时间和

00:06:40.146 --> 00:06:42.286 A:middle
内存使用也能得到优化

00:06:42.286 --> 00:06:44.056 A:middle
对社区而言帮助很大

00:06:44.056 --> 00:06:46.876 A:middle
我们也会

00:06:46.876 --> 00:06:48.046 A:middle
公布实现

00:06:48.286 --> 00:06:50.196 A:middle
ABI 稳定性或二进制兼容性的

00:06:50.196 --> 00:06:50.906 A:middle
相关进展

00:06:51.286 --> 00:06:52.826 A:middle
可以访问 Swift.org 的

00:06:52.826 --> 00:06:54.366 A:middle
ABI 稳定性总览页面

00:06:54.406 --> 00:06:55.806 A:middle
跟踪进展

00:06:57.696 --> 00:07:00.186 A:middle
今天的重点是 Swift 4.2

