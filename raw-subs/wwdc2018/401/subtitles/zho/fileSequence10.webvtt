WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.766 --> 00:10:01.476 A:middle
许多项目都提速多达两倍

00:10:02.416 --> 00:10:04.366 A:middle
提升主要由于

00:10:04.366 --> 00:10:06.326 A:middle
Swift 目标

00:10:06.326 --> 00:10:08.286 A:middle
具有跨文件

00:10:08.286 --> 00:10:10.896 A:middle
可见性 这是 Swift 的优异特性之一

00:10:10.896 --> 00:10:11.946 A:middle
不需要头文件

00:10:12.606 --> 00:10:13.976 A:middle
过去编译器会执行

00:10:13.976 --> 00:10:15.586 A:middle
许多冗余工作

00:10:15.586 --> 00:10:17.056 A:middle
于是 我们就

00:10:17.056 --> 00:10:18.346 A:middle
重新设计了编译

00:10:18.346 --> 00:10:20.136 A:middle
流程 大幅减少了

00:10:20.136 --> 00:10:21.626 A:middle
冗余 并且更好的利用处理器

00:10:21.626 --> 00:10:22.936 A:middle
你机器上的核

00:10:23.096 --> 00:10:24.466 A:middle
因此才会有这样的速度提升

00:10:25.206 --> 00:10:27.616 A:middle
欲知更多细节 本周晚些时候

00:10:27.616 --> 00:10:28.886 A:middle
会有两场讲座

00:10:28.886 --> 00:10:30.346 A:middle
深入分析构建过程

00:10:30.396 --> 00:10:31.846 A:middle
背后的工作原理 会提到

00:10:31.846 --> 00:10:32.906 A:middle
更多细节 解释

00:10:32.946 --> 00:10:34.146 A:middle
为何会有如此性能提升

00:10:36.356 --> 00:10:37.906 A:middle
性能大幅提升是由于

00:10:38.606 --> 00:10:40.526 A:middle
调试版本构建的改进

00:10:41.566 --> 00:10:44.776 A:middle
我想重点讲这一功能

00:10:44.776 --> 00:10:47.846 A:middle
为何出现在 Xcode 的构建选项中

00:10:48.746 --> 00:10:49.926 A:middle
最近我们将

00:10:49.926 --> 00:10:51.386 A:middle
编译模式（Compilation Mode）从

00:10:51.386 --> 00:10:52.506 A:middle
优化水平（Optimization Level）中分离出来

00:10:53.206 --> 00:10:55.286 A:middle
编译模式决定

00:10:55.286 --> 00:10:56.726 A:middle
项目构建的方式

00:10:57.256 --> 00:10:58.566 A:middle
如果是构建发行版本（Release）

00:10:58.566 --> 00:10:59.566 A:middle
默认设置是全模组

00:10:59.566 --> 00:11:01.446 A:middle
编译（Whole Module Compilation）

