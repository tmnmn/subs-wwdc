WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.686 --> 00:26:01.616 A:middle
App 启动时生成的

00:26:01.616 --> 00:26:03.346 A:middle
随机预处理种子

00:26:05.136 --> 00:26:07.236 A:middle
我们认为 你可以

00:26:07.316 --> 00:26:09.136 A:middle
很轻松地迁移代码

00:26:09.136 --> 00:26:10.746 A:middle
来使用新的 Hashable

00:26:10.746 --> 00:26:12.756 A:middle
协议 我们也鼓励你这样做

00:26:13.206 --> 00:26:15.016 A:middle
有一条警告

00:26:15.016 --> 00:26:16.936 A:middle
你可能原本

00:26:16.936 --> 00:26:18.746 A:middle
希望哈希值

00:26:18.746 --> 00:26:20.426 A:middle
能够在多次运行 App 中

00:26:20.426 --> 00:26:22.296 A:middle
保持不变 或者

00:26:22.296 --> 00:26:23.566 A:middle
在遍历字典

00:26:23.566 --> 00:26:25.416 A:middle
或集合的时候

00:26:25.416 --> 00:26:26.976 A:middle
希望以同一顺序获取元素

00:26:27.256 --> 00:26:28.726 A:middle
这些已经不再可行

00:26:28.726 --> 00:26:29.656 A:middle
因为使用了随机

00:26:29.656 --> 00:26:30.676 A:middle
预处理种子

00:26:30.746 --> 00:26:32.116 A:middle
你可能需要调整代码

00:26:32.916 --> 00:26:35.096 A:middle
为了简化工作 我们

00:26:35.096 --> 00:26:37.336 A:middle
添加了一项构建设置 即 

00:26:37.336 --> 00:26:38.426 A:middle
SWIFT_DETERMINISTIC_HASHING

00:26:38.426 --> 00:26:39.996 A:middle
环境变量 你可以

00:26:39.996 --> 00:26:41.666 A:middle
在方案编辑器（Scheme Editor）中激活

00:26:42.246 --> 00:26:43.736 A:middle
以暂时停用

00:26:43.786 --> 00:26:45.256 A:middle
随机预处理种子

00:26:45.796 --> 00:26:49.466 A:middle
接下来 来谈谈

00:26:49.606 --> 00:26:51.096 A:middle
随机数生成

00:26:52.396 --> 00:26:53.656 A:middle
现在 你们在 Swift 中

00:26:53.656 --> 00:26:54.706 A:middle
如何生成随机数

00:26:55.356 --> 00:26:58.376 A:middle
你需要导入 C 语言的 API

00:26:58.446 --> 00:26:59.876 A:middle
这确实不够理想

00:26:59.876 --> 00:27:01.446 A:middle
因为 API 

