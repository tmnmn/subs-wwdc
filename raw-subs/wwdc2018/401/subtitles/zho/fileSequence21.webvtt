WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.746 --> 00:21:01.156 A:middle
用全新的方法

00:21:01.156 --> 00:21:02.256 A:middle
构建集合（collections）

00:21:02.986 --> 00:21:05.886 A:middle
这里 有一些由

00:21:05.886 --> 00:21:08.166 A:middle
整数构成的数组

00:21:09.176 --> 00:21:10.366 A:middle
一切运行正常

00:21:10.916 --> 00:21:13.416 A:middle
欲知更多细节

00:21:13.416 --> 00:21:14.656 A:middle
本周晚些时候有一场会议

00:21:14.656 --> 00:21:17.026 A:middle
可以进一步了解

00:21:17.026 --> 00:21:18.476 A:middle
条件一致性

00:21:18.476 --> 00:21:19.946 A:middle
以及 Swift 4.2 中

00:21:19.946 --> 00:21:21.256 A:middle
今天无法提及的

00:21:21.256 --> 00:21:22.536 A:middle
泛型改进

00:21:23.896 --> 00:21:25.756 A:middle
如果要定义自己的

00:21:25.756 --> 00:21:26.776 A:middle
Equatable 和 Hashable

00:21:26.776 --> 00:21:27.606 A:middle
成员（conformances）呢

00:21:28.596 --> 00:21:30.376 A:middle
Swift 中的通用做法是

00:21:30.446 --> 00:21:32.446 A:middle
用包含许多存储属性（stored properties）的

00:21:32.446 --> 00:21:34.516 A:middle
结构体来实现

00:21:34.516 --> 00:21:36.006 A:middle
而这些存储属性

00:21:36.006 --> 00:21:37.096 A:middle
应为 Equatable

00:21:37.436 --> 00:21:38.546 A:middle
接下来 要想让

00:21:38.546 --> 00:21:40.656 A:middle
结构体 Equatable

00:21:40.656 --> 00:21:42.156 A:middle
只需比较两个值的

00:21:42.156 --> 00:21:43.056 A:middle
属性即可

00:21:43.516 --> 00:21:45.616 A:middle
此前在 Swift 4 中 你需要

00:21:45.616 --> 00:21:46.726 A:middle
亲手写出这些内容

00:21:47.166 --> 00:21:48.486 A:middle
这就是鸡肋代码

00:21:48.706 --> 00:21:50.276 A:middle
如果添加一个新的

00:21:50.276 --> 00:21:51.836 A:middle
存储属性 就要记得

00:21:51.836 --> 00:21:53.286 A:middle
更新 Equatable

00:21:53.286 --> 00:21:54.926 A:middle
实现 很容易在

00:21:54.926 --> 00:21:57.166 A:middle
拷贝粘贴等过程中出错

00:21:57.796 --> 00:21:59.676 A:middle
Swift 4.1 中 我们可以

00:21:59.676 --> 00:22:01.536 A:middle
合成 equality（相等性）

