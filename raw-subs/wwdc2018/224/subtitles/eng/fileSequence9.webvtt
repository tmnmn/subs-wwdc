WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.276 --> 00:09:01.316 A:middle
advanced list view concepts such

00:09:01.316 --> 00:09:02.026 A:middle
as sections.

00:09:03.066 --> 00:09:05.066 A:middle
If we wanted to group posts into

00:09:05.066 --> 00:09:06.206 A:middle
sections by the day they were

00:09:06.206 --> 00:09:07.596 A:middle
posted, we could do it by

00:09:07.596 --> 00:09:09.046 A:middle
extending the post type that's

00:09:09.046 --> 00:09:10.696 A:middle
generated by Xcode with the

00:09:10.696 --> 00:09:12.436 A:middle
computed property and passing

00:09:12.436 --> 00:09:13.686 A:middle
the name of it to the fetched

00:09:13.686 --> 00:09:14.436 A:middle
results controller's

00:09:14.436 --> 00:09:15.076 A:middle
initializer.

00:09:16.336 --> 00:09:18.156 A:middle
This works well, but what if we

00:09:18.156 --> 00:09:19.226 A:middle
have a view controller more

00:09:19.226 --> 00:09:20.596 A:middle
complicated than just a list of

00:09:20.596 --> 00:09:21.656 A:middle
our objects?

00:09:21.806 --> 00:09:22.786 A:middle
What if we want to show

00:09:22.786 --> 00:09:24.686 A:middle
something like a chart of the

00:09:24.686 --> 00:09:25.966 A:middle
posts per day on our app?

00:09:27.556 --> 00:09:28.776 A:middle
Well, the first thing we should

00:09:28.776 --> 00:09:29.976 A:middle
do is not underestimate the

00:09:29.976 --> 00:09:31.266 A:middle
power of fetched requests.

00:09:31.816 --> 00:09:33.126 A:middle
I'm just one person, so in the

00:09:33.126 --> 00:09:34.326 A:middle
last month, I haven't managed to

00:09:34.326 --> 00:09:36.576 A:middle
post more than 40 pictures per

00:09:36.576 --> 00:09:36.926 A:middle
day.

00:09:37.706 --> 00:09:39.196 A:middle
Over the course of 30 days,

00:09:39.336 --> 00:09:40.646 A:middle
that's still a fairly reasonable

00:09:40.646 --> 00:09:41.706 A:middle
amount of data to pull out of

00:09:41.706 --> 00:09:42.566 A:middle
the store at once.

00:09:43.446 --> 00:09:45.466 A:middle
If the day property that we

00:09:45.466 --> 00:09:46.856 A:middle
defined earlier was actually

00:09:46.856 --> 00:09:48.236 A:middle
part of the entity in the model,

00:09:48.646 --> 00:09:49.386 A:middle
then we could write a fetch

00:09:49.386 --> 00:09:50.506 A:middle
request that counts up the

00:09:50.506 --> 00:09:52.046 A:middle
number of posts grouped by the

00:09:52.046 --> 00:09:52.916 A:middle
day they were posted.

00:09:53.456 --> 00:09:54.696 A:middle
There's three parts to this

00:09:54.696 --> 00:09:55.236 A:middle
request.

00:09:55.616 --> 00:09:56.986 A:middle
The first one is just setting

00:09:56.986 --> 00:09:57.426 A:middle
the range.

00:09:57.596 --> 00:09:58.966 A:middle
We want the last 30 days of

00:09:58.966 --> 00:09:59.316 A:middle
data.

00:09:59.316 --> 00:10:02.316 A:middle
Next, we want to group together

