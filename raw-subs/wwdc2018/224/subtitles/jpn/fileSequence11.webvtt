WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.725 --> 00:11:03.163 align:start position:16% line:-2
NSExpressionでできることを
もっと知りたい方は

00:11:03.263 --> 00:11:06.033 align:start position:32% line:-2
使える関数のリストを
ご確認ください

00:11:08.268 --> 00:11:13.474 align:start position:23% line:-2
フェッチ要求は
関数式を使うことで活躍しますが

00:11:13.574 --> 00:11:18.879 align:start position:20% line:-2
依然 SQLiteはメモリを通して
全てのポストを読み込みます

00:11:19.713 --> 00:11:24.885 align:start position:27% line:-2
もし 対象となるポストが
１か月分だけならいいですが

00:11:24.985 --> 00:11:26.987 align:start position:29% line:-1
範囲がもっと広い場合は？

00:11:27.554 --> 00:11:29.656 align:start position:29% line:-1
１年分ならどうでしょう？

00:11:29.756 --> 00:11:33.760 align:start position:29% line:-2
データ量が
ケタ違いだったとしたら？

00:11:34.595 --> 00:11:39.700 align:start position:21% line:-2
この例では フェッチ要求は
５万件のポストを１件ずつ数えます

00:11:40.200 --> 00:11:42.302 align:start position:30% line:-1
それでは間に合いません

00:11:42.669 --> 00:11:47.875 align:start position:21% line:-2
ビューとモデル間のミスマッチには
非正規化が必要です

00:11:50.410 --> 00:11:54.047 align:start position:32% line:-2
冗長データを追加する
非正規化により

00:11:54.148 --> 00:11:57.818 align:start position:29% line:-2
読み込みパフォーマンスを
改善できます

00:11:58.352 --> 00:12:00.787 align:start position:27% line:-2
データベースインデックスが
いい例です

