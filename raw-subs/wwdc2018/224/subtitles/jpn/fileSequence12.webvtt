WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.352 --> 00:12:00.787 align:start position:27% line:-2
データベースインデックスが
いい例です

00:12:01.421 --> 00:12:03.457 align:start position:32% line:-2
カウントメタデータを
ストアに加えれば

00:12:03.557 --> 00:12:08.228 align:start position:25% line:-2
グラフのパフォーマンスを
再び向上させることができます

00:12:09.129 --> 00:12:13.066 align:start position:32% line:-2
今回のモデルについて
見ていきましょう

00:12:14.034 --> 00:12:18.672 align:start position:23% line:-2
２つの属性を持つエンティティと
メンテナンスが必要です

00:12:19.106 --> 00:12:25.546 align:start position:21% line:-2
フェッチ要求を改善し
何年分ものデータをカバーできます

00:12:25.646 --> 00:12:28.482 align:start position:21% line:-1
この程度の非正規化で十分なのです

00:12:29.183 --> 00:12:31.852 align:start position:16% line:-2
View Controllerに渡した
フェッチ要求？

00:12:32.619 --> 00:12:33.754 align:start position:34% line:-1
すごくシンプルです

00:12:34.321 --> 00:12:38.725 align:start position:27% line:-2
他のリストビューに渡した
フェッチ要求とそう変わらず

00:12:38.826 --> 00:12:42.462 align:start position:34% line:-2
グラフのビューと
ほぼ同じに見えます

00:12:44.031 --> 00:12:45.666 align:start position:34% line:-1
メンテナンスとは？

00:12:46.533 --> 00:12:51.205 align:start position:27% line:-2
ポスト時のインクリメントと
削除時のデクリメントです

00:12:51.471 --> 00:12:55.108 align:start position:27% line:-2
確実な解決法は
コンテキストの退避に応じて

00:12:55.209 --> 00:12:59.146 align:start position:23% line:-1
計算をアップデートすることです

