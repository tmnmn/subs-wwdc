WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:03.710 --> 00:19:06.380 align:start position:21% line:-1
changesを見ていきましょう

00:19:06.680 --> 00:19:10.384 align:start position:29% line:-2
これらはデータベースに
挿入されているポストです

00:19:10.918 --> 00:19:12.619 align:start position:27% line:-1
このテーブルビューを見ると

00:19:12.719 --> 00:19:16.023 align:start position:34% line:-2
UIをリフレッシュ
したくなるでしょう

00:19:16.690 --> 00:19:20.094 align:start position:12% line:-2
objectIDNotificationで
それができます

00:19:20.194 --> 00:19:23.964 align:start position:4% line:-2
これらはNSManagedObjectContext
DidSave通知に類似し

00:19:24.064 --> 00:19:27.267 align:start position:21% line:-1
同じAPIを使ってマージされます

00:19:29.970 --> 00:19:33.207 align:start position:27% line:-2
ユーザアップデートに
現れてほしくないコメントを

00:19:33.307 --> 00:19:35.742 align:start position:23% line:-1
ダウンロードしてしまった場合は

00:19:36.910 --> 00:19:38.245 align:start position:36% line:-1
フィルタできます

00:19:40.047 --> 00:19:43.750 align:start position:23% line:-2
与えられたトランザクションから
changesをフィルタし

00:19:43.851 --> 00:19:46.753 align:start position:25% line:-2
ポストエンティティとの関連を
判断します

00:19:49.089 --> 00:19:51.725 align:start position:34% line:-2
これでUIの
リフレッシュを避け

00:19:51.859 --> 00:19:55.562 align:start position:30% line:-2
ユーザへの不要な負担を
回避できます

00:19:56.130 --> 00:20:00.767 align:start position:27% line:-2
ここではポストコンテンツを
少し使っているだけです

