WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.053 --> 00:02:02.923 align:start position:29% line:-2
管理オブジェクトモデルに
変換します

00:02:03.524 --> 00:02:04.791 align:start position:32% line:-1
フィールドが必要です

00:02:04.892 --> 00:02:08.895 align:start position:34% line:-2
属性は画像データや
投稿時間などです

00:02:08.996 --> 00:02:12.499 align:start position:32% line:-1
関係も必要になります

00:02:13.000 --> 00:02:18.472 align:start position:21% line:-2
ディスク上でのデータの長期保存は
簡単ではありません

00:02:18.939 --> 00:02:22.910 align:start position:27% line:-2
Core Dataによる
永続ストアコーディネータは

00:02:23.010 --> 00:02:27.514 align:start position:25% line:-2
アプリケーションのモデルを
ストアのバージョンと比較して

00:02:27.614 --> 00:02:30.584 align:start position:27% line:-1
移行を自動で行ってくれます

00:02:30.951 --> 00:02:34.087 align:start position:23% line:-2
管理オブジェクトコンテキストは
安全かつ高速で

00:02:34.188 --> 00:02:36.290 align:start position:21% line:-1
予測可能なアクセスを可能にします

00:02:36.523 --> 00:02:40.527 align:start position:23% line:-2
クエリジェネレーションや
コネクションプーリングなどの―

00:02:40.627 --> 00:02:42.663 align:start position:30% line:-1
処理中でも対応できます

00:02:44.865 --> 00:02:47.935 align:start position:32% line:-2
ここでモデルを見つけ
それを読み込み

00:02:48.035 --> 00:02:50.003 align:start position:29% line:-1
ストアの場所を決めますが

00:02:50.337 --> 00:02:54.474 align:start position:27% line:-2
App配信後のエラーパスは
ほぼエラーにならないので

00:02:54.575 --> 00:02:56.410 align:start position:14% line:-1
Core Dataによるコンテナタイプで

00:02:56.510 --> 00:03:00.214 align:start position:34% line:-2
ボイラープレートは
大幅に省略できます

