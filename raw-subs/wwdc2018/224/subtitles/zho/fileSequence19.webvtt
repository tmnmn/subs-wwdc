WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:01.396 --> 00:19:05.176 A:middle
我们来想一下

00:19:05.176 --> 00:19:06.036 A:middle
接下来的变化

00:19:06.776 --> 00:19:08.236 A:middle
就像你所看到的

00:19:08.236 --> 00:19:09.376 A:middle
有一些帖子被加入到了数据库中

00:19:09.376 --> 00:19:12.436 A:middle
当这件事发生时

00:19:12.806 --> 00:19:14.206 A:middle
用表格视图来说

00:19:14.206 --> 00:19:17.046 A:middle
我们可以通过使用

00:19:17.046 --> 00:19:18.346 A:middle
objectIDNotification

00:19:18.346 --> 00:19:19.726 A:middle
来更新 UI

00:19:20.296 --> 00:19:21.356 A:middle
这和 NSManageObjectContextDidSave 

00:19:21.486 --> 00:19:25.076 A:middle
提醒相似 它可以通过使用同一的 API

00:19:25.076 --> 00:19:26.586 A:middle
来进行合并

00:19:29.756 --> 00:19:31.186 A:middle
如果我们下载了一个

00:19:31.186 --> 00:19:33.516 A:middle
我们不希望在用户更新里显示的

00:19:33.516 --> 00:19:35.406 A:middle
评论列表

00:19:35.976 --> 00:19:39.936 A:middle
我们可以对它进行过滤

00:19:40.146 --> 00:19:41.556 A:middle
用少量的代码

00:19:41.616 --> 00:19:42.826 A:middle
我们可以从给定的事务处理中

00:19:42.826 --> 00:19:44.046 A:middle
将变化过滤出去

00:19:44.046 --> 00:19:45.086 A:middle
以决定它们中是否有与帖子实体有关的变化

00:19:45.086 --> 00:19:47.306 A:middle
这样我们就不需要更新 UI

00:19:48.876 --> 00:19:50.916 A:middle
从而为用户引起

00:19:50.916 --> 00:19:53.876 A:middle
不必要的波动

00:19:53.976 --> 00:19:55.276 A:middle
或断续

00:19:56.256 --> 00:19:57.436 A:middle
就像你在这里看到的

00:19:57.436 --> 00:19:58.906 A:middle
我们使用的是

00:19:58.906 --> 00:20:00.496 A:middle
小部分的帖子内容

