WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.556 --> 00:18:02.046 A:middle
这种情况下

00:18:02.046 --> 00:18:03.406 A:middle
我们不希望数据出现在用户界面里

00:18:03.406 --> 00:18:05.716 A:middle
或者对它产生更改

00:18:05.716 --> 00:18:06.776 A:middle
因为所有的变化对用户

00:18:06.776 --> 00:18:07.996 A:middle
都是不可视的

00:18:08.526 --> 00:18:09.876 A:middle
我们需要通过使用

00:18:09.876 --> 00:18:11.976 A:middle
历史追踪 来过滤掉这些更新

00:18:12.786 --> 00:18:14.276 A:middle
持续历史追踪是

00:18:14.276 --> 00:18:17.456 A:middle
iOS 11 和 macOS 10.13 的新功能

00:18:18.206 --> 00:18:19.996 A:middle
我们在去年的全球开发者大会中的

00:18:19.996 --> 00:18:22.036 A:middle
核心数据的新功能部分

00:18:22.116 --> 00:18:23.526 A:middle
对它进行过介绍

00:18:23.526 --> 00:18:24.866 A:middle
要想了解更多它如何工作

00:18:24.866 --> 00:18:26.626 A:middle
或者它们重点功能是什么的信息

00:18:26.626 --> 00:18:27.866 A:middle
你可以将这个会议

00:18:28.516 --> 00:18:29.566 A:middle
作为参考

00:18:31.966 --> 00:18:33.406 A:middle
持续历史追踪是一个

00:18:33.406 --> 00:18:35.526 A:middle
获得每次与数据库相关的

00:18:35.526 --> 00:18:38.926 A:middle
事务处理的记录的好方式

00:18:38.926 --> 00:18:40.026 A:middle
对我们很有用

00:18:40.026 --> 00:18:41.186 A:middle
有几点原因

00:18:41.756 --> 00:18:43.506 A:middle
为了本次演讲

00:18:43.506 --> 00:18:45.626 A:middle
我们将使用 NSPersistentHistoryChange

00:18:45.796 --> 00:18:47.926 A:middle
它能给我们一个 changedObjectID 

00:18:48.576 --> 00:18:52.546 A:middle
和一组 updatedProperties

00:18:53.036 --> 00:18:53.176 A:middle
还有 NSPersistentHistoryTransaction

00:18:53.296 --> 00:18:55.036 A:middle
它将给我们一组变化

00:18:55.686 --> 00:18:59.136 A:middle
以及一个 objectIDNotification

