WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.546 --> 00:12:00.466 A:middle
很好的例子

00:12:01.396 --> 00:12:02.766 A:middle
在我们的存储里加入计数元数据

00:12:02.766 --> 00:12:04.526 A:middle
是为了使我们的图表 

00:12:04.526 --> 00:12:07.866 A:middle
能够再次显示 而做出的牺牲

00:12:08.666 --> 00:12:10.676 A:middle
让我们看看 我们的模型

00:12:10.676 --> 00:12:12.366 A:middle
如何将帖子按照发布的

00:12:12.366 --> 00:12:12.736 A:middle
日期分组

00:12:13.626 --> 00:12:15.556 A:middle
我们将需要一个新的实体和两个属性

00:12:15.556 --> 00:12:17.246 A:middle
加上一些额外的维护

00:12:17.246 --> 00:12:18.316 A:middle
以保证其准确性

00:12:19.186 --> 00:12:20.796 A:middle
按照日期分组很大地提升了

00:12:20.796 --> 00:12:22.396 A:middle
读取请求 

00:12:22.396 --> 00:12:23.756 A:middle
使它保证在覆盖好几年的数据时

00:12:23.756 --> 00:12:25.386 A:middle
也能有好的表现

00:12:25.766 --> 00:12:26.776 A:middle
我们只需要创建

00:12:26.776 --> 00:12:29.376 A:middle
与我们向图表视图控制器

00:12:29.376 --> 00:12:30.516 A:middle
传递的同样水平的 denormalization

00:12:30.516 --> 00:12:31.496 A:middle
和读取请求即可

00:12:32.386 --> 00:12:33.446 A:middle
这非常简单

00:12:34.416 --> 00:12:35.256 A:middle
这和我们向其他列表视图

00:12:35.256 --> 00:12:36.336 A:middle
传递的读取请求 

00:12:36.336 --> 00:12:37.576 A:middle
没有多大不同

00:12:37.576 --> 00:12:39.386 A:middle
事实上如果你看得够仔细

00:12:39.506 --> 00:12:40.636 A:middle
会发现它

00:12:40.636 --> 00:12:42.176 A:middle
有点像一种图表视图

00:12:43.766 --> 00:12:44.866 A:middle
但是特殊维护

00:12:44.866 --> 00:12:45.396 A:middle
该如何进行呢

00:12:46.186 --> 00:12:47.656 A:middle
当帖子发布时

00:12:47.656 --> 00:12:48.986 A:middle
我们需要增加计数

00:12:48.986 --> 00:12:50.236 A:middle
当帖子被移除时

00:12:50.236 --> 00:12:50.846 A:middle
我们需要减少计数

00:12:51.556 --> 00:12:53.016 A:middle
我们可以使用

00:12:53.016 --> 00:12:54.296 A:middle
更改帖子对象的相关状态的方法

00:12:54.296 --> 00:12:55.836 A:middle
来实现它

00:12:55.836 --> 00:12:56.886 A:middle
但一个更简单明了的方式是去

00:12:56.886 --> 00:12:58.046 A:middle
根据响应上下文存储

00:12:58.046 --> 00:12:58.796 A:middle
来更新计数

00:12:59.356 --> 00:13:04.546 A:middle
我们可以为

