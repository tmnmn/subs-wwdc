WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:59.656 --> 00:08:01.056 A:middle
和视图控制器的上下文

00:08:01.056 --> 00:08:02.656 A:middle
但是在我们

00:08:02.656 --> 00:08:04.136 A:middle
混合二者得到结果之前

00:08:04.136 --> 00:08:05.486 A:middle
我们需要对 

00:08:05.486 --> 00:08:06.746 A:middle
读取请求多做一些配置

00:08:06.746 --> 00:08:07.986 A:middle
来确定我们的控制器

00:08:07.986 --> 00:08:09.136 A:middle
会表现不错

00:08:10.856 --> 00:08:12.276 A:middle
有时应该设置读取限制

00:08:12.276 --> 00:08:13.806 A:middle
但按照列表视图的情况

00:08:13.806 --> 00:08:15.036 A:middle
使用批处理更合适

00:08:15.036 --> 00:08:16.036 A:middle
因为我们希望显示所有的数据

00:08:16.036 --> 00:08:18.596 A:middle
我们也知道

00:08:18.596 --> 00:08:20.126 A:middle
我们的视图控制器

00:08:20.126 --> 00:08:21.806 A:middle
一次可以在屏幕上 显示多少个单元格

00:08:22.546 --> 00:08:24.306 A:middle
总的来说 至少这些选项中的一个

00:08:24.306 --> 00:08:25.886 A:middle
需要设置为读取请求

00:08:25.886 --> 00:08:27.156 A:middle
它返回的结果

00:08:27.156 --> 00:08:29.276 A:middle
可能是无限数量

00:08:29.956 --> 00:08:32.346 A:middle
所以这时我们可以

00:08:32.346 --> 00:08:33.676 A:middle
将读取请求更改为对象

00:08:33.676 --> 00:08:35.025 A:middle
然后用返回结果填充列表视图

00:08:35.056 --> 00:08:37.196 A:middle
但是如果我们想要

00:08:37.196 --> 00:08:39.155 A:middle
让 UI 和发生的更改保持一致

00:08:39.155 --> 00:08:40.366 A:middle
该怎么做

00:08:41.666 --> 00:08:42.846 A:middle
我们在这里已经讲到了核心数据

00:08:42.846 --> 00:08:44.246 A:middle
和读取结果控制器

00:08:44.726 --> 00:08:46.356 A:middle
自 Sierra 系统以来
  
00:08:46.356 --> 00:08:47.976 A:middle
读取结果控制器可用于所有平台

00:08:47.976 --> 00:08:49.366 A:middle
要采用它只要求

00:08:49.366 --> 00:08:50.556 A:middle
在委托协议和它驱动的视图之间

00:08:50.556 --> 00:08:52.536 A:middle
写一个适配器

00:08:53.136 --> 00:08:54.556 A:middle
要创建它 我们只需要

00:08:54.556 --> 00:08:55.836 A:middle
一个读取请求和一个上下文

00:08:57.176 --> 00:08:58.136 A:middle
读取结果控制器

00:08:58.136 --> 00:08:59.276 A:middle
甚至可以支持对类似区段这样的

00:08:59.276 --> 00:09:01.316 A:middle
更加高级的列表视图概念

