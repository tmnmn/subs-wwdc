WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:56.596 --> 00:16:00.416 A:middle
现在 这个 App 有少数几个

00:16:00.416 --> 00:16:02.366 A:middle
可供顾客使用的交互

00:16:02.366 --> 00:16:04.156 A:middle
但是当这些功能同时发生时

00:16:04.156 --> 00:16:07.516 A:middle
会产生混乱

00:16:08.306 --> 00:16:11.536 A:middle
我们可以看到

00:16:11.536 --> 00:16:12.936 A:middle
即便是这么少的系列动作

00:16:13.596 --> 00:16:14.806 A:middle
它们同时发生也会导致

00:16:14.806 --> 00:16:15.676 A:middle
很多不同 App 的状态变化

00:16:15.676 --> 00:16:18.776 A:middle
对我们而言最糟糕的是

00:16:18.776 --> 00:16:21.826 A:middle
出现像这样的用户体验

00:16:22.696 --> 00:16:25.336 A:middle
这些部分完整性的概念

00:16:25.336 --> 00:16:26.196 A:middle
对于用户没有意义

00:16:26.196 --> 00:16:28.156 A:middle
事实上 这对我们也没有意义

00:16:29.816 --> 00:16:30.836 A:middle
在这里 核心数据将帮助我们

00:16:30.886 --> 00:16:32.676 A:middle
处理查询生成

00:16:33.066 --> 00:16:36.556 A:middle
在 2016 年的核心数据新品介绍会议上

00:16:36.556 --> 00:16:37.656 A:middle
我们介绍了查询生成

00:16:38.116 --> 00:16:39.076 A:middle
如果你还不了解它

00:16:39.076 --> 00:16:40.286 A:middle
我非常建议你

00:16:40.286 --> 00:16:41.516 A:middle
了解一下那场会议

00:16:41.516 --> 00:16:42.806 A:middle
并获得更多

00:16:42.806 --> 00:16:43.356 A:middle
有关它如何工作的信息

00:16:43.996 --> 00:16:45.626 A:middle
你需要知道的是

00:16:45.886 --> 00:16:47.506 A:middle
它需要预写日志模式

00:16:47.606 --> 00:16:48.786 A:middle
并且只能使用 SQLite

00:16:49.906 --> 00:16:51.746 A:middle
查询生成的目标是

00:16:51.746 --> 00:16:53.186 A:middle
将你的托管对象上下文 

00:16:53.186 --> 00:16:54.896 A:middle
从相互矛盾的工作中隔离出来

00:16:55.346 --> 00:16:56.406 A:middle
它可能直接作用于后台

00:16:56.406 --> 00:16:58.566 A:middle
或者你还没有准备在

00:16:58.566 --> 00:17:00.176 A:middle
给定文本中显示的

