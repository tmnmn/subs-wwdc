WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.566 --> 00:17:00.176 A:middle
给定文本中显示的

00:17:00.176 --> 00:17:03.006 A:middle
用户正在进行的行为

00:17:04.026 --> 00:17:05.286 A:middle
查询生成提供了一个 

00:17:05.286 --> 00:17:07.026 A:middle
数据库的一致而长久的视图

00:17:07.026 --> 00:17:08.806 A:middle
它将向读取返回同样的结果

00:17:08.806 --> 00:17:10.435 A:middle
无论在给定时间内

00:17:10.435 --> 00:17:11.606 A:middle
数据库被写入

00:17:11.606 --> 00:17:14.165 A:middle
何种其它的上下文

00:17:17.415 --> 00:17:19.695 A:middle
最好的是我们可以通过

00:17:19.695 --> 00:17:20.816 A:middle
一行代码来实现它

00:17:21.715 --> 00:17:23.116 A:middle
这里是重新加载一个表格视图的

00:17:23.116 --> 00:17:24.256 A:middle
典型变化

00:17:24.675 --> 00:17:26.626 A:middle
我们可以仅仅对 NSManagedObjectContext

00:17:26.626 --> 00:17:28.496 A:middle
setQueryGenerationFrom

00:17:28.496 --> 00:17:31.276 A:middle
增加一个带有现有查询生成

00:17:31.276 --> 00:17:31.966 A:middle
的调用

00:17:33.456 --> 00:17:34.746 A:middle
需要更新时

00:17:34.746 --> 00:17:37.206 A:middle
我们可以像往常一样

00:17:37.206 --> 00:17:40.056 A:middle
使用 NSMangedObjectContextDidSave 提醒

00:17:40.056 --> 00:17:40.766 A:middle
来进行更新

00:17:41.236 --> 00:17:45.806 A:middle
这使我们可以在对的时间 在 UI 里 

00:17:45.806 --> 00:17:48.876 A:middle
对 App 的数据实现修改

00:17:52.096 --> 00:17:53.536 A:middle
但是如果我们写的数据

00:17:53.536 --> 00:17:54.986 A:middle
和 UI 没有关联呢

00:17:55.676 --> 00:17:56.716 A:middle
例如下载之前

00:17:56.716 --> 00:17:58.466 A:middle
Scott 提到的一些评论

00:17:59.556 --> 00:18:02.046 A:middle
这种情况下

