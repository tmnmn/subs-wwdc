WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.876 --> 00:28:00.396 A:middle
我添加了

00:28:00.396 --> 00:28:02.536 A:middle
经纬度属性

00:28:04.816 --> 00:28:06.836 A:middle
我们通过选择 R 树

00:28:06.836 --> 00:28:08.246 A:middle
更改了盒子里的查询类型

00:28:08.796 --> 00:28:10.836 A:middle
我们可以在读取请求上

00:28:10.836 --> 00:28:12.556 A:middle
设置谓词

00:28:13.206 --> 00:28:14.906 A:middle
然后获得所有

00:28:14.906 --> 00:28:16.516 A:middle
在中国大陆境内发布的帖子

00:28:18.406 --> 00:28:20.186 A:middle
这种谓词比较高级

00:28:20.186 --> 00:28:21.656 A:middle
因为它使用

00:28:21.716 --> 00:28:24.306 A:middle
实际选择语句里的功能

00:28:24.306 --> 00:28:26.256 A:middle
来找到 

00:28:26.256 --> 00:28:27.676 A:middle
我们在托管对象模型里

00:28:27.676 --> 00:28:28.676 A:middle
创建的索引

00:28:31.556 --> 00:28:33.266 A:middle
我们在没有这个索引和谓词的情况下

00:28:33.266 --> 00:28:35.016 A:middle
运行 App

00:28:35.016 --> 00:28:36.596 A:middle
可以看到和我们之前

00:28:36.596 --> 00:28:38.266 A:middle
仅使用时间戳索引

00:28:38.726 --> 00:28:41.826 A:middle
得到的结果是相同的

00:28:42.366 --> 00:28:44.956 A:middle
但是当我们在没有

00:28:44.956 --> 00:28:47.196 A:middle
新的索引和谓词的情况下运行时

00:28:47.196 --> 00:28:48.956 A:middle
SQLite 会使用索引来

00:28:48.956 --> 00:28:51.626 A:middle
为两个语句

00:28:51.626 --> 00:28:53.056 A:middle
生成更快速的结果

00:28:55.026 --> 00:28:56.806 A:middle
不幸的是

00:28:56.806 --> 00:28:58.446 A:middle
我们的时间戳索引没有

00:28:58.446 --> 00:28:59.656 A:middle
任何的复合谓词

00:28:59.976 --> 00:29:01.566 A:middle
SQLite 不能用它

