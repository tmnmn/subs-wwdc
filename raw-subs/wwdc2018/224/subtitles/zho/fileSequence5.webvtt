WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.926 --> 00:05:00.366 A:middle
文件目录里

00:05:00.796 --> 00:05:02.056 A:middle
当我们的模型代码是 App 的一部分时

00:05:02.056 --> 00:05:04.066 A:middle
这确实很好

00:05:04.066 --> 00:05:04.876 A:middle
但我们需要避免让我们的

00:05:04.876 --> 00:05:06.116 A:middle
新框架文件与 App

00:05:06.116 --> 00:05:07.286 A:middle
过度混合

00:05:08.376 --> 00:05:09.566 A:middle
既然我们已经将

00:05:09.566 --> 00:05:10.976 A:middle
NSPersistentContainer 子类化

00:05:10.976 --> 00:05:12.706 A:middle
以使搜索模型更加简单

00:05:12.706 --> 00:05:14.086 A:middle
我们在这个基础上进行提升

00:05:16.476 --> 00:05:18.456 A:middle
硬性更改储存位置的方法

00:05:18.456 --> 00:05:20.786 A:middle
是在加载存储之前

00:05:20.786 --> 00:05:23.446 A:middle
就在 persistentStoreDescription 里面

00:05:23.446 --> 00:05:26.716 A:middle
更改 URL 有时候这就是你想要的

00:05:26.716 --> 00:05:27.826 A:middle
我们可以在这里使用这种模式

00:05:27.826 --> 00:05:29.406 A:middle
但是我们不需要这样做

00:05:29.716 --> 00:05:31.516 A:middle
因为 NSPersistentContainer

00:05:31.516 --> 00:05:33.996 A:middle
在创建持久化存储描述文件

00:05:33.996 --> 00:05:35.816 A:middle
时会调用它自己默认的 

00:05:35.816 --> 00:05:37.086 A:middle
目录 URL 方法

00:05:37.286 --> 00:05:38.626 A:middle
它是用来被覆盖的

00:05:39.166 --> 00:05:40.516 A:middle
在这种情况下 

00:05:40.516 --> 00:05:42.066 A:middle
我们可以增加一个路径组件

00:05:42.066 --> 00:05:43.076 A:middle
但是为了缓存

00:05:43.076 --> 00:05:45.776 A:middle
或其他类型的堆栈

00:05:45.776 --> 00:05:46.826 A:middle
比如说你的任务

00:05:46.826 --> 00:05:47.926 A:middle
需要将它们的存储放在不同位置

00:05:47.926 --> 00:05:49.756 A:middle
设置容器也是一种很好的方式

00:05:50.306 --> 00:05:53.046 A:middle
现在我们已经搞清楚了

00:05:53.046 --> 00:05:54.256 A:middle
核心数据的存量

00:05:54.386 --> 00:05:55.686 A:middle
我们来看看我们的 App 以及

00:05:55.686 --> 00:05:57.706 A:middle
一些我们所写的视图控制器

00:05:58.376 --> 00:06:00.896 A:middle
看起来 我们有一些非常特别的

