WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.596 --> 00:31:00.756 A:middle
如果你有很多数据

00:31:00.756 --> 00:31:03.536 A:middle
会导致你的测试套件中

00:31:03.976 --> 00:31:04.146 A:middle
内存大量增长

00:31:07.616 --> 00:31:11.676 A:middle
不过 你需要完成至少一次测试

00:31:11.676 --> 00:31:13.506 A:middle
在磁盘上将存储文件具体化

00:31:14.026 --> 00:31:15.746 A:middle
这是因为

00:31:15.746 --> 00:31:16.806 A:middle
如果不能为了

00:31:16.806 --> 00:31:18.316 A:middle
你的测试打开存储

00:31:18.316 --> 00:31:19.436 A:middle
那你的顾客也打不开

00:31:21.076 --> 00:31:22.546 A:middle
如果持久化容器

00:31:22.546 --> 00:31:24.156 A:middle
在 App 代理里

00:31:24.156 --> 00:31:25.506 A:middle
你会有一个测试基类

00:31:25.506 --> 00:31:26.866 A:middle
能将容器取出

00:31:26.866 --> 00:31:28.506 A:middle
然后直接写入内存

00:31:29.296 --> 00:31:31.496 A:middle
不过当你这样做时

00:31:31.496 --> 00:31:33.086 A:middle
我必须提醒你

00:31:33.086 --> 00:31:34.106 A:middle
因为这意味着

00:31:34.106 --> 00:31:35.566 A:middle
你在写入一个

00:31:35.566 --> 00:31:37.776 A:middle
被 App 使用的内存文件

00:31:37.776 --> 00:31:38.916 A:middle
所以如果你在个人设备上

00:31:38.916 --> 00:31:40.646 A:middle
运行测试

00:31:40.646 --> 00:31:42.006 A:middle
你将在下次打开 App 的时候

00:31:42.006 --> 00:31:47.316 A:middle
看到你单元测试的结果

00:31:47.536 --> 00:31:48.446 A:middle
如果我告诉你

00:31:48.446 --> 00:31:50.316 A:middle
我能用 7 行代码

00:31:50.316 --> 00:31:51.236 A:middle
添加 100,000 个记录呢

00:31:53.806 --> 00:31:55.036 A:middle
其实有一点作弊

00:31:55.036 --> 00:31:56.356 A:middle
我会把这个当做

00:31:56.356 --> 00:31:58.556 A:middle
留给观众的练习

00:31:58.556 --> 00:31:59.946 A:middle
但是这种方式的支架代码

00:31:59.946 --> 00:32:01.306 A:middle
可以帮助你构建一个

