WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:58.705 --> 00:29:01.308 align:start position:29% line:-1
大幅な時間短縮が可能です

00:29:02.176 --> 00:29:06.046 align:start position:30% line:-2
すべてのクラスを
分配する必要はないです

00:29:06.313 --> 00:29:11.485 align:start position:23% line:-2
支障があれば
一度 試してみる価値はあります

00:29:13.854 --> 00:29:16.256 align:start position:30% line:-1
次は並列化を無効にして

00:29:16.356 --> 00:29:19.993 align:start position:30% line:-2
パフォーマンステストを
バンドルに入れます

00:29:20.627 --> 00:29:22.262 align:start position:34% line:-1
疑問に思うでしょう

00:29:22.362 --> 00:29:26.567 align:start position:25% line:-2
しかしパフォーマンステストは
システムに影響されやすく

00:29:26.667 --> 00:29:31.338 align:start position:25% line:-2
並行テストでは
ベースラインを下回りがちです

00:29:33.440 --> 00:29:37.845 align:start position:29% line:-2
最後に並列テストに
向かないものを紹介します

00:29:38.445 --> 00:29:41.315 align:start position:23% line:-1
ほとんどのテストは適しています

00:29:41.415 --> 00:29:45.919 align:start position:27% line:-2
しかしアクセス先が
共有のシステムリソースだと

00:29:46.220 --> 00:29:50.858 align:start position:30% line:-2
並列テストのために
明確な同期化が必要です

00:29:52.226 --> 00:29:57.197 align:start position:23% line:-2
詳しく知りたい人は
コードのテスト方法も聞けるので

00:29:57.297 --> 00:29:59.633 align:start position:27% line:-1
金曜のセッションを勧めます

00:29:59.733 --> 00:30:03.136 align:start position:27% line:-2
スチュアートとブライアンが
話します

