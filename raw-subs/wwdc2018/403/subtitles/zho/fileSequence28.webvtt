WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.111 --> 00:28:01.281 align:middle line:-2
但是 如果你发现默认的
运行器数量不符合你的需求

00:28:01.348 --> 00:28:03.750 align:middle line:-1
可以使用命令行选项进行重写

00:28:05.986 --> 00:28:08.222 align:middle line:-1
接下来 我们启用并行测试

00:28:08.288 --> 00:28:10.757 align:middle line:-1
允许你重写方案中的设置

00:28:10.824 --> 00:28:13.861 align:middle line:-1
以显式启用或禁用并行测试

00:28:16.864 --> 00:28:18.799 align:middle line:-1
在大多数情况下

00:28:18.866 --> 00:28:21.702 align:middle line:-2
只需要启用
就可以获得并行测试的好处

00:28:22.469 --> 00:28:24.171 align:middle line:-1
这里有一些提示和技巧

00:28:24.438 --> 00:28:26.640 align:middle line:-1
帮助你充分利用此功能

00:28:28.041 --> 00:28:29.676 align:middle line:-1
首先 应考虑

00:28:29.743 --> 00:28:32.779 align:middle line:-1
将长时运行测试类拆分为两个类

00:28:34.248 --> 00:28:36.984 align:middle line:-1
因为测试类并行执行

00:28:37.384 --> 00:28:40.521 align:middle line:-2
测试时间不会超过
最长时间运行类所用的时间

00:28:41.889 --> 00:28:45.459 align:middle line:-2
并行运行测试时
可能发现这样的情况

00:28:45.792 --> 00:28:49.363 align:middle line:-1
一个类占用全部执行时间

00:28:50.430 --> 00:28:52.799 align:middle line:-1
如果拆分这个类

00:28:53.300 --> 00:28:57.070 align:middle line:-1
Xcode可以在不同的运行器之间

00:28:57.137 --> 00:28:58.705 align:middle line:-1
更均衡地分配测试执行工作

00:28:58.772 --> 00:29:00.974 align:middle line:-1
从而缩短执行总用时

