WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:57.157 --> 00:01:01.228 align:middle line:-1
谈谈如何并行运行测试以加速测试

00:01:02.963 --> 00:01:04.665 align:middle line:-1
我们首先来看代码覆盖

00:01:06.733 --> 00:01:09.770 align:middle line:-2
在Xcode 9.3中
我们完全重写了代码覆盖功能

00:01:10.470 --> 00:01:14.308 align:middle line:-1
性能和准确性有了很大改进

00:01:14.875 --> 00:01:19.146 align:middle line:-2
我们能够添加新功能
这样就能够细粒度地控制

00:01:19.213 --> 00:01:22.082 align:middle line:-1
测试目标 以帮助改进代码覆盖

00:01:23.984 --> 00:01:26.820 align:middle line:-2
我们创建了一个新的
命令行工具xccov

00:01:28.155 --> 00:01:29.356 align:middle line:-1
最后同样重要的是

00:01:29.423 --> 00:01:32.860 align:middle line:-2
我们在源代码编辑器中
提供代码覆盖功能

00:01:34.027 --> 00:01:35.829 align:middle line:-1
让我们来详细了解

00:01:36.730 --> 00:01:37.664 align:middle line:-1
首先

00:01:37.731 --> 00:01:40.901 align:middle line:-2
让你们感受一下
代码覆盖改进有多大

00:01:41.134 --> 00:01:44.171 align:middle line:-2
我们在一大型内部Apple项目上
进行了衡量

00:01:46.240 --> 00:01:49.610 align:middle line:-2
为了解速度提升幅度
我们测量Xcode需花费多长时间

00:01:49.676 --> 00:01:52.579 align:middle line:-2
在源代码编辑器中加载和显示
代码覆盖

00:01:54.414 --> 00:01:57.918 align:middle line:-2
在Xcode 9中
大约需要6.5秒

00:01:59.920 --> 00:02:03.223 align:middle line:-2
在Xcode 9.3中
用时少于0.5秒

