WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.852 --> 00:17:02.656 align:middle line:-2
首先 只有在多个目标位置
进行测试时 才会有优势

00:17:03.423 --> 00:17:06.827 align:middle line:-2
举例来说 如果运行
Mac app的单元测试

00:17:07.261 --> 00:17:08.328 align:middle line:-1
就没有帮助作用

00:17:09.863 --> 00:17:12.432 align:middle line:-2
只能在xcodebuild中
使用此功能

00:17:12.766 --> 00:17:16.837 align:middle line:-1
因此 这主要在连续集成环境中有用

00:17:16.904 --> 00:17:18.972 align:middle line:-2
比如Xcode Server
或Jenkins

00:17:21.208 --> 00:17:24.744 align:middle line:-2
我很高兴告诉你们
有一种更快的新测试运行方法

00:17:24.810 --> 00:17:26.579 align:middle line:-1
名为“并行分布式测试”

00:17:28.515 --> 00:17:30.217 align:middle line:-1
利用并行分布式测试功能

00:17:30.284 --> 00:17:33.487 align:middle line:-2
可以在一个目标位置
并行执行多个测试

00:17:34.688 --> 00:17:38.025 align:middle line:-2
以前 在单一目标位置
进行测试是这样的

00:17:38.292 --> 00:17:42.329 align:middle line:-1
依次连续执行测试

00:17:44.298 --> 00:17:47.634 align:middle line:-1
分布式测试允许同时运行多个测试

00:17:47.935 --> 00:17:49.636 align:middle line:-1
因此 现在测试是这样的

00:17:51.004 --> 00:17:54.374 align:middle line:-2
此外 Xcode和
xcodebuild都支持此功能

00:17:54.775 --> 00:17:58.178 align:middle line:-2
无论在哪里运行测试
都会获得最佳的性能

