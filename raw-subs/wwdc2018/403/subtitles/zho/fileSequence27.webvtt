WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:57.351 --> 00:27:00.120 align:middle line:-2
接下来 我们介绍如何
查看测试报告中的结果

00:27:00.521 --> 00:27:03.590 align:middle line:-1
以及在测试日志中查看类的分配方式

00:27:05.626 --> 00:27:09.663 align:middle line:-2
然后我们看到Xcode启动
Mac app的多个实例

00:27:09.730 --> 00:27:11.498 align:middle line:-1
以并行运行单元测试

00:27:13.000 --> 00:27:16.003 align:middle line:-1
最后 我们看到模拟器的多个克隆

00:27:16.370 --> 00:27:18.105 align:middle line:-1
它们并行运行用户界面测试

00:27:20.541 --> 00:27:22.009 align:middle line:-1
如前所述

00:27:22.342 --> 00:27:25.512 align:middle line:-2
xcodebuild也很好地
支持并行测试

00:27:26.446 --> 00:27:30.450 align:middle line:-2
我们添加了一些新命令行选项
允许你控制测试行为

00:27:30.517 --> 00:27:32.386 align:middle line:-1
现在 我想指出两点

00:27:34.021 --> 00:27:36.890 align:middle line:-2
首先 我们设有
并行测试工作线程计数

00:27:37.257 --> 00:27:39.793 align:middle line:-1
允许你控制工作线程的数量

00:27:39.860 --> 00:27:43.397 align:middle line:-2
或并行测试期间
应该启动的运行器数量

00:27:44.765 --> 00:27:48.502 align:middle line:-2
通常情况下 Xcode将会
根据机器资源和工作负荷

00:27:48.569 --> 00:27:51.939 align:middle line:-1
确定最优的运行器数量

00:27:52.873 --> 00:27:56.910 align:middle line:-2
这意味着 机器内核数量越多
运行器数量就越多

00:27:58.111 --> 00:28:01.281 align:middle line:-2
但是 如果你发现默认的
运行器数量不符合你的需求

