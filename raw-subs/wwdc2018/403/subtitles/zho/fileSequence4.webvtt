WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:56.236 --> 00:04:00.040 align:middle line:-1
这项功能就很有用

00:04:02.309 --> 00:04:06.380 align:middle line:-1
在方案测试计划中

00:04:06.680 --> 00:04:07.814 align:middle line:-1
能自定义包含的目标

00:04:08.782 --> 00:04:12.886 align:middle line:-1
这意味代码覆盖可以包含所有目标

00:04:13.187 --> 00:04:14.788 align:middle line:-1
也可以手动挑选其中一部分

00:04:17.224 --> 00:04:19.793 align:middle line:-1
为了改进工作流程

00:04:19.860 --> 00:04:22.362 align:middle line:-2
我们创建了一个名为xccov的
新命令行工具

00:04:24.231 --> 00:04:27.301 align:middle line:-2
可以很容易地自动
集成到脚本中

00:04:27.601 --> 00:04:31.238 align:middle line:-2
它产生人工可识读
和机器可分析的输出

00:04:32.339 --> 00:04:36.910 align:middle line:-2
在更高层面
它提供覆盖数据的详细视图

00:04:37.878 --> 00:04:40.480 align:middle line:-1
我已经多次提到代码覆盖数据

00:04:40.547 --> 00:04:42.449 align:middle line:-1
让我们来看底层原理

00:04:43.917 --> 00:04:46.353 align:middle line:-2
启用代码覆盖后
在运行测试时

00:04:46.687 --> 00:04:48.789 align:middle line:-1
Xcode生成两个文件

00:04:49.723 --> 00:04:51.758 align:middle line:-1
首先是覆盖报告

00:04:52.025 --> 00:04:55.662 align:middle line:-1
或xccovreport文件扩展

00:04:56.630 --> 00:05:01.568 align:middle line:-2
包含每个目标、源文件
和功能的覆盖率

