WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.796 --> 00:26:01.296 A:middle
但如果我们放大看

00:26:01.296 --> 00:26:02.696 A:middle
就会发现对话框并没有

00:26:02.746 --> 00:26:04.476 A:middle
我们想要的桌面着色效果

00:26:04.476 --> 00:26:05.676 A:middle
这只是单纯的灰色

00:26:07.096 --> 00:26:07.986 A:middle
这是怎么回事

00:26:09.376 --> 00:26:11.766 A:middle
因为 这种效果是由

00:26:11.766 --> 00:26:13.136 A:middle
Quartz 窗口服务器提供的

00:26:13.136 --> 00:26:14.876 A:middle
我们许多其他的素材效果也一样

00:26:15.746 --> 00:26:16.876 A:middle
这就意味着

00:26:16.976 --> 00:26:19.216 A:middle
它与你的 App 之间

00:26:19.216 --> 00:26:20.856 A:middle
是异步更新的

00:26:20.906 --> 00:26:23.706 A:middle
对性能表现来说这样

00:26:23.706 --> 00:26:25.516 A:middle
但也意味着你不能直接

00:26:25.516 --> 00:26:27.396 A:middle
使用那个颜色绘制视图

00:26:27.396 --> 00:26:28.476 A:middle
或是获取它的 RGB 值

00:26:29.916 --> 00:26:31.676 A:middle
相反 你可以用

00:26:31.676 --> 00:26:33.546 A:middle
NSVisualEffectView 的

00:26:33.546 --> 00:26:35.806 A:middle
maskImage 属性来实现类似的效果

00:26:37.106 --> 00:26:40.276 A:middle
maskImage 是 NSVisualEffectView 中

00:26:40.596 --> 00:26:43.336 A:middle
一种可选的 NSImage

00:26:44.026 --> 00:26:45.696 A:middle
而 NSVisualEffectView 则会利用它来

00:26:45.696 --> 00:26:47.706 A:middle
覆盖它的素材

00:26:47.706 --> 00:26:48.386 A:middle
或者说是它显示的素材

00:26:49.646 --> 00:26:50.996 A:middle
除了使用标准的

00:26:50.996 --> 00:26:53.126 A:middle
基于图案的图像外

00:26:53.126 --> 00:26:56.506 A:middle
你还可以用 Drawing-handler 图像来模拟

00:26:56.506 --> 00:26:56.996 A:middle
素材绘制

00:26:56.996 --> 00:26:59.356 A:middle
下面请看个例子

