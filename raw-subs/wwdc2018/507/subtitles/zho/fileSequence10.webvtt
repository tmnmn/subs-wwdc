WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.131 --> 00:10:03.070 align:middle line:-2
FairPlay为此推出了
名为Offline Key TLLV的新TLLV

00:10:04.037 --> 00:10:06.106 align:middle line:-1
这必须在请求持久性密钥时

00:10:06.340 --> 00:10:08.942 align:middle line:-1
使用过的CKC中发出信号

00:10:11.912 --> 00:10:15.048 align:middle line:-2
就代码而言 通过在AVPersistableContent
KeyRequest对象上调用此方法

00:10:15.349 --> 00:10:19.186 align:middle line:-1
你将生成一个持久性密钥

00:10:20.387 --> 00:10:22.823 align:middle line:0
这将返回一个
持久性密钥数据blob

00:10:23.156 --> 00:10:25.359 align:middle line:0
你保存在你的app存储中

00:10:25.759 --> 00:10:28.862 align:middle line:0
并用它来回答未来的密钥加载请求

00:10:30.597 --> 00:10:34.234 align:middle line:0
请注意
此密钥有效期至存储时间结束

00:10:34.434 --> 00:10:35.936 align:middle line:0
在我们的例子中是30天

00:10:37.437 --> 00:10:41.542 align:middle line:0
因此 当你使用
此密钥首次开始回放时

00:10:42.009 --> 00:10:44.912 align:middle line:0
你可能会通过新的代理回调

00:10:45.412 --> 00:10:47.614 align:middle line:0
收到一个更新过的持久性密钥

00:10:49.383 --> 00:10:51.218 align:middle line:0
当涉及委托回调时

00:10:51.285 --> 00:10:53.654 align:middle line:0
你应该丢弃原始的持久密钥

00:10:54.054 --> 00:10:57.257 align:middle line:0
把此更新后的持久性密钥
保存到你的app存储中

00:10:58.926 --> 00:11:02.930 align:middle line:0
并用它来回答未来的密钥加载请求

