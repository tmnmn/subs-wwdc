WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.366 --> 00:36:01.686 A:middle
如何将 os-signpost 数据

00:36:01.746 --> 00:36:03.396 A:middle
与自定义 Instrument 结合起来

00:36:03.776 --> 00:36:10.106 A:middle
我们认为你们 能把这个结合做得很好

00:36:10.886 --> 00:36:13.846 A:middle
现在 我们可以讨论一些

00:36:13.846 --> 00:36:15.026 A:middle
进阶的内容

00:36:15.056 --> 00:36:16.546 A:middle
特别是如何创建

00:36:16.546 --> 00:36:18.286 A:middle
和定义建模器

00:36:19.366 --> 00:36:20.466 A:middle
建模器在概念上是

00:36:20.466 --> 00:36:21.296 A:middle
非常简单的机器

00:36:21.296 --> 00:36:23.156 A:middle
它需要一系列的输入

00:36:23.266 --> 00:36:24.256 A:middle
它对这些输入做出推理

00:36:24.256 --> 00:36:26.376 A:middle
然后进行输出

00:36:27.326 --> 00:36:28.506 A:middle
建模器的输入

00:36:28.506 --> 00:36:30.246 A:middle
是完全按照时间排序的

00:36:30.736 --> 00:36:32.116 A:middle
因此如果你请求

00:36:32.116 --> 00:36:33.506 A:middle
几个不同的输入表

00:36:33.506 --> 00:36:34.756 A:middle
这些表将首先按时间排序

00:36:34.756 --> 00:36:36.246 A:middle
然后合并到一个

00:36:36.246 --> 00:36:38.646 A:middle
按时间排序的队列中

00:36:38.646 --> 00:36:39.406 A:middle
该队列将提供工作内存

00:36:39.916 --> 00:36:41.356 A:middle
当我们把这些事件

00:36:41.356 --> 00:36:42.476 A:middle
一个接一个地取出时

00:36:42.536 --> 00:36:43.776 A:middle
它们被输入到所谓的

00:36:43.776 --> 00:36:44.356 A:middle
建模器的工作内存中

00:36:45.236 --> 00:36:47.886 A:middle
当建模器看到

00:36:47.886 --> 00:36:49.306 A:middle
这个工作内存的增长时

00:36:49.306 --> 00:36:51.006 A:middle
它就可以得出推论

00:36:51.226 --> 00:36:52.766 A:middle
当建模器看到需要为其

00:36:52.766 --> 00:36:54.086 A:middle
进行输出的模板时

00:36:54.086 --> 00:36:56.206 A:middle
它只需将其

00:36:56.206 --> 00:36:57.406 A:middle
写入对外输出表格

00:36:58.166 --> 00:37:00.256 A:middle
让我们以一个

