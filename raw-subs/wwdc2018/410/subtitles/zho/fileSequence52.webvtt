WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:51:58.046 --> 00:52:00.336 A:middle
第二 即时模式很难

00:52:01.156 --> 00:52:03.256 A:middle
即时模式指的是

00:52:03.256 --> 00:52:04.616 A:middle
Instruments 的记录模式

00:52:04.916 --> 00:52:07.016 A:middle
它可以在接近实时的时候

00:52:07.016 --> 00:52:08.916 A:middle
将数据可视化

00:52:08.916 --> 00:52:12.766 A:middle
有两个原因导致它很难

00:52:12.856 --> 00:52:14.246 A:middle
第一个原因是

00:52:14.246 --> 00:52:16.006 A:middle
它需要一些额外的支持

00:52:16.006 --> 00:52:17.176 A:middle
尽管今天我们很想向你们介绍这点

00:52:17.176 --> 00:52:18.436 A:middle
但是很遗憾没有办法

00:52:18.436 --> 00:52:19.546 A:middle
时间有限

00:52:19.956 --> 00:52:20.726 A:middle
所以我们将会

00:52:20.726 --> 00:52:21.936 A:middle
为此编写文档

00:52:22.426 --> 00:52:24.156 A:middle
第二个原因

00:52:24.156 --> 00:52:26.456 A:middle
也是更重要的原因

00:52:26.456 --> 00:52:29.296 A:middle
就是区间数据

00:52:29.296 --> 00:52:31.236 A:middle
区间不能被输入到

00:52:31.236 --> 00:52:32.766 A:middle
分析核心的表中

00:52:32.766 --> 00:52:34.406 A:middle
除非它们被关闭

00:52:34.406 --> 00:52:35.316 A:middle
这意味着这时我们已经

00:52:35.316 --> 00:52:36.346 A:middle
看到了开始和结束

00:52:36.496 --> 00:52:37.576 A:middle
所以当你查看

00:52:37.576 --> 00:52:39.386 A:middle
现场记录的时候

00:52:39.386 --> 00:52:40.696 A:middle
你会发现一堆所谓的“开区间”

00:52:40.886 --> 00:52:42.216 A:middle
如果你的建模器

00:52:42.216 --> 00:52:43.506 A:middle
需要它们作为输入

00:52:43.586 --> 00:52:45.576 A:middle
这是完全可行的

00:52:45.576 --> 00:52:46.956 A:middle
而且你会注意到

00:52:46.956 --> 00:52:48.936 A:middle
如果上游有一个开区间

00:52:48.936 --> 00:52:50.426 A:middle
那么下游的所有建模器时钟

00:52:50.426 --> 00:52:52.266 A:middle
都必须停止

00:52:52.266 --> 00:52:53.716 A:middle
直到那个区间关闭

00:52:53.716 --> 00:52:55.186 A:middle
因为建模器的视图

00:52:55.186 --> 00:52:56.986 A:middle
都是按时间排序的

00:52:57.116 --> 00:52:58.796 A:middle
除非所有的区间

00:52:58.796 --> 00:53:00.196 A:middle
都被关闭

