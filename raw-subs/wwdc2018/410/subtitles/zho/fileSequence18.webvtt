WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:58.236 --> 00:18:01.866 A:middle
动态地创建图形或轨道数目

00:18:01.986 --> 00:18:02.326 A:middle
你可以定义所谓的 “Plot Template”

00:18:02.996 --> 00:18:04.666 A:middle
Plot 模板的定义

00:18:04.666 --> 00:18:06.316 A:middle
与 Plot 非常类似

00:18:06.316 --> 00:18:07.406 A:middle
除了其中有一个额外的元素

00:18:07.406 --> 00:18:08.936 A:middle
允许你选择

00:18:08.936 --> 00:18:10.536 A:middle
表中的一列

00:18:10.536 --> 00:18:12.276 A:middle
它将为该列中的每个唯一值

00:18:12.276 --> 00:18:13.956 A:middle
创建单独的行

00:18:16.016 --> 00:18:17.046 A:middle
如果你正在寻找

00:18:17.046 --> 00:18:18.456 A:middle
活动的峰值或周期

00:18:18.576 --> 00:18:19.126 A:middle
我们有所谓的直方图

00:18:19.126 --> 00:18:21.016 A:middle
你所要做的就是

00:18:21.016 --> 00:18:22.846 A:middle
在不同的点

00:18:22.846 --> 00:18:24.066 A:middle
或区间相交时

00:18:24.066 --> 00:18:25.566 A:middle
打破超过某个特定大小的

00:18:25.566 --> 00:18:27.176 A:middle
存储器中的时间轴

00:18:27.176 --> 00:18:29.996 A:middle
假设 100 毫秒

00:18:29.996 --> 00:18:31.186 A:middle
然后使用像 count() sum()

00:18:31.416 --> 00:18:32.976 A:middle
min() 或 max() 这样的函数

00:18:32.976 --> 00:18:33.946 A:middle
来提升这些存储器的大小

00:18:33.946 --> 00:18:36.066 A:middle
这是一种寻找活动峰值的好方法

00:18:36.536 --> 00:18:38.136 A:middle
例如 在系统跟踪中

00:18:38.136 --> 00:18:39.046 A:middle
我们在环境切换

00:18:39.046 --> 00:18:40.216 A:middle
或虚拟内存中

00:18:40.216 --> 00:18:42.086 A:middle
寻找活动峰值

00:18:42.486 --> 00:18:45.126 A:middle
现在我们来谈谈细节

00:18:45.156 --> 00:18:47.396 A:middle
细节在这个 UI 的下半部分

00:18:48.486 --> 00:18:49.376 A:middle
你们已经看过了第一个

00:18:49.376 --> 00:18:50.626 A:middle
也就是列表

00:18:50.846 --> 00:18:52.266 A:middle
它是表格 分析核心

00:18:52.266 --> 00:18:53.666 A:middle
以及 UI 中表视图之间的

00:18:53.666 --> 00:18:56.896 A:middle
非常简单的映射

00:18:56.896 --> 00:19:00.066 A:middle
还有 “Aggregation（聚合）”

