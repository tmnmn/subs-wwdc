WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:59.686 --> 00:38:03.076 A:middle
然后我们获取下一个输入

00:38:03.076 --> 00:38:04.666 A:middle
建模器时钟

00:38:04.666 --> 00:38:06.036 A:middle
再次移动到区间的起始处

00:38:06.036 --> 00:38:08.046 A:middle
我们将其置入到工作内存中

00:38:08.836 --> 00:38:10.376 A:middle
建模器观察

00:38:10.376 --> 00:38:12.656 A:middle
工作内存的这两个区间

00:38:12.656 --> 00:38:14.366 A:middle
建模器可以观察

00:38:14.366 --> 00:38:16.256 A:middle
playing-with-matches 是否在

00:38:16.256 --> 00:38:17.336 A:middle
app-on-fire 之前开始

00:38:17.336 --> 00:38:18.886 A:middle
这其实没有多大区别

00:38:19.176 --> 00:38:19.956 A:middle
如果反过来

00:38:19.956 --> 00:38:22.406 A:middle
app-on-fire 也已经开始了

00:38:22.406 --> 00:38:24.086 A:middle
我们就可以得出一个合乎逻辑的结论

00:38:25.396 --> 00:38:27.936 A:middle
叫做 cause-of-fire 

00:38:27.936 --> 00:38:29.846 A:middle
并将它置入工作内存中

00:38:31.676 --> 00:38:33.456 A:middle
当我们获取第三个输入时

00:38:33.756 --> 00:38:34.986 A:middle
你会注意到

00:38:34.986 --> 00:38:36.636 A:middle
建模器时钟已经移动

00:38:36.636 --> 00:38:38.996 A:middle
它不再与前两个输入相交

00:38:39.516 --> 00:38:41.956 A:middle
所以它们将被从工作内存中移除

00:38:42.766 --> 00:38:44.636 A:middle
如果 cause-of-fire 有

00:38:44.636 --> 00:38:45.886 A:middle
所谓的逻辑支持

00:38:46.326 --> 00:38:50.556 A:middle
它也会被从内存中移除

00:38:50.856 --> 00:38:52.926 A:middle
回顾一下 时钟总是被设置为

00:38:52.926 --> 00:38:54.926 A:middle
当前输入的时间戳

00:38:55.556 --> 00:38:57.576 A:middle
对于留在工作内存中的

00:38:57.576 --> 00:38:58.936 A:middle
输入而言

00:38:58.936 --> 00:39:01.836 A:middle
它必须与建模器中的

