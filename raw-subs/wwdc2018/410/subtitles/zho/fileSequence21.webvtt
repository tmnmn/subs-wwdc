WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.396 --> 00:21:00.976 A:middle
这个过程是如何进行的

00:21:02.786 --> 00:21:06.996 A:middle
在开始记录之前的第一步

00:21:06.996 --> 00:21:08.416 A:middle
分析核心将提取

00:21:08.416 --> 00:21:09.796 A:middle
在其中创建的表格

00:21:09.796 --> 00:21:11.006 A:middle
它将映射表格

00:21:11.006 --> 00:21:12.916 A:middle
并在核心中为表分配存储

00:21:13.756 --> 00:21:15.236 A:middle
如果一个表有

00:21:15.236 --> 00:21:16.516 A:middle
相同的 Schema 和相同的属性

00:21:16.516 --> 00:21:17.796 A:middle
那么根据定义

00:21:17.796 --> 00:21:19.686 A:middle
它就是相同的数据

00:21:19.686 --> 00:21:21.696 A:middle
所以它会被映射到相同的存储中

00:21:23.116 --> 00:21:24.956 A:middle
对于每个存储

00:21:24.956 --> 00:21:26.406 A:middle
第二步就是尝试为数据

00:21:26.406 --> 00:21:27.386 A:middle
找到一个提供者

00:21:27.776 --> 00:21:29.056 A:middle
有时 我们可以从

00:21:29.056 --> 00:21:30.196 A:middle
从 Target 中通过数据流

00:21:30.196 --> 00:21:32.196 A:middle
直接记录数据

00:21:32.196 --> 00:21:33.346 A:middle
有时 我们则必须使用

00:21:33.486 --> 00:21:34.246 A:middle
建模器来合成数据

00:21:35.296 --> 00:21:36.876 A:middle
建模器可以请求自己的输入

00:21:36.876 --> 00:21:38.556 A:middle
这些输入可以

00:21:38.556 --> 00:21:40.356 A:middle
是其他建模器的输出

00:21:40.396 --> 00:21:42.926 A:middle
或者直接从数据流中记录

00:21:42.926 --> 00:21:44.186 A:middle
我们就是这样合成

00:21:44.186 --> 00:21:45.476 A:middle
我们本来不知道如何直接记录的

00:21:45.476 --> 00:21:46.366 A:middle
其余数据的

00:21:47.476 --> 00:21:49.516 A:middle
现在我们已经得到了

00:21:49.516 --> 00:21:51.546 A:middle
分析核心中

00:21:51.686 --> 00:21:53.786 A:middle
所有存储的数据源

00:21:53.786 --> 00:21:54.866 A:middle
也就是所谓的绑定方案

00:21:55.026 --> 00:21:57.356 A:middle
第三步是优化绑定方案 

00:21:57.546 --> 00:21:59.966 A:middle
在这里 你可以看到 Instruments 将自己的

00:21:59.966 --> 00:22:01.546 A:middle
绑定方案可视化

