WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.836 --> 00:07:00.036 A:middle
分析核心中的所有内容

00:07:00.036 --> 00:07:02.096 A:middle
似乎都是一个表格

00:07:02.096 --> 00:07:03.986 A:middle
我们来谈谈表格

00:07:05.196 --> 00:07:06.916 A:middle
表格是行的集合

00:07:06.916 --> 00:07:07.886 A:middle
它们有一个

00:07:07.886 --> 00:07:09.516 A:middle
由表格 Schema 定义的结构

00:07:09.666 --> 00:07:11.656 A:middle
所以它和数据库 App 非常相似

00:07:12.536 --> 00:07:14.106 A:middle
这个 Schema 定义了

00:07:14.106 --> 00:07:15.396 A:middle
列 列的名称

00:07:15.396 --> 00:07:16.236 A:middle
以及列的类型

00:07:16.746 --> 00:07:18.246 A:middle
分析核心使用了一个

00:07:18.246 --> 00:07:19.606 A:middle
非常丰富的类型系统

00:07:19.606 --> 00:07:21.296 A:middle
叫做工程类型

00:07:21.296 --> 00:07:22.446 A:middle
它告诉我们如何存储数据

00:07:22.446 --> 00:07:24.216 A:middle
以及如何在标准 UI 中

00:07:24.216 --> 00:07:25.806 A:middle
可视化和分析数据

00:07:27.556 --> 00:07:29.886 A:middle
除此之外

00:07:29.886 --> 00:07:31.426 A:middle
当 Schema 描述

00:07:31.546 --> 00:07:33.246 A:middle
表的结构时

00:07:33.246 --> 00:07:34.516 A:middle
你还可以使用 Key/value 这对属性

00:07:34.516 --> 00:07:36.146 A:middle
来描述内容

00:07:36.616 --> 00:07:38.986 A:middle
这能帮助我们描述表中的内容

00:07:39.566 --> 00:07:42.216 A:middle
你可以将 Schema

00:07:42.216 --> 00:07:44.606 A:middle
视为 Objective-C 或 Swift 中的一个类

00:07:44.606 --> 00:07:46.246 A:middle
而行则类似于实例

00:07:46.586 --> 00:07:47.886 A:middle
就像 Objective-C 中的

00:07:48.006 --> 00:07:50.236 A:middle
类名是单数的一样

00:07:50.236 --> 00:07:51.296 A:middle
你的 Schema 的名称

00:07:51.296 --> 00:07:53.516 A:middle
也必须是单数的

00:07:53.516 --> 00:07:55.416 A:middle
比如 NSString

00:07:55.416 --> 00:07:56.056 A:middle
而不是 NSStrings

00:07:56.246 --> 00:07:58.136 A:middle
当我们讲到进阶部分的时候

00:07:58.136 --> 00:07:58.906 A:middle
这一点会更为重要

00:07:58.906 --> 00:07:59.876 A:middle
但是我现在想把它强调一下

00:07:59.876 --> 00:08:01.496 A:middle
到时我们就能知道

