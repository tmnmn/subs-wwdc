WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:52:58.796 --> 00:53:00.196 A:middle
都被关闭

00:53:00.196 --> 00:53:01.516 A:middle
否则无法把时钟向前移动

00:53:02.076 --> 00:53:03.086 A:middle
所以如果你有一些

00:53:03.086 --> 00:53:04.856 A:middle
占用时间很长的区间

00:53:04.856 --> 00:53:06.636 A:middle
你会注意到

00:53:06.636 --> 00:53:08.276 A:middle
建模器的输出似乎停止了

00:53:08.986 --> 00:53:11.336 A:middle
当用户点击

00:53:11.626 --> 00:53:13.506 A:middle
停止记录按钮

00:53:13.556 --> 00:53:14.516 A:middle
所有的开启的区间都被关闭时

00:53:14.516 --> 00:53:15.836 A:middle
所有的进程才将正常

00:53:15.976 --> 00:53:17.136 A:middle
数据也才会涌入

00:53:17.606 --> 00:53:19.036 A:middle
但这种用户体验并不好

00:53:19.416 --> 00:53:21.676 A:middle
如果停止录制

00:53:21.676 --> 00:53:22.396 A:middle
你将有两种选择

00:53:22.396 --> 00:53:24.686 A:middle
第一个是将 Instruments 退出

00:53:24.686 --> 00:53:26.066 A:middle
即时模式支持

00:53:26.066 --> 00:53:27.376 A:middle
为此你可以给你的 Instrument

00:53:27.376 --> 00:53:28.846 A:middle
添加一个限制元素

00:53:28.916 --> 00:53:31.396 A:middle
第二个是不再将区间数据

00:53:31.396 --> 00:53:34.096 A:middle
作为建模器的输入

00:53:34.096 --> 00:53:35.746 A:middle
就像我们在演示中

00:53:35.746 --> 00:53:38.136 A:middle
为我们的专家系统

00:53:38.136 --> 00:53:39.856 A:middle
所做的那样

00:53:39.856 --> 00:53:41.316 A:middle
我们实际上使用的是

00:53:41.316 --> 00:53:42.746 A:middle
os-signpost-point 事件

00:53:42.746 --> 00:53:44.176 A:middle
而不是 os-signpost-interval

00:53:45.316 --> 00:53:47.156 A:middle
我知道我们让它看起来简单

00:53:47.326 --> 00:53:49.086 A:middle
但是即时模式实现起来

00:53:49.086 --> 00:53:50.046 A:middle
确实有点棘手

00:53:50.436 --> 00:53:55.056 A:middle
第三 非常重要的一点

00:53:55.056 --> 00:53:56.256 A:middle
如果你要创建的 Instrument

00:53:56.256 --> 00:53:57.046 A:middle
针对的是

00:53:57.046 --> 00:53:59.156 A:middle
大量的输入数据

00:53:59.156 --> 00:54:00.646 A:middle
那么最后 5 秒

