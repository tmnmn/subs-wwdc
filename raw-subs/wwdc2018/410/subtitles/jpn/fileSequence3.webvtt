WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:57.811 --> 00:03:01.148 align:start position:32% line:-2
レコードを押すと
ツールが実行されます

00:03:01.515 --> 00:03:06.053 align:start position:16% line:-2
以前との主な違いは
Instrumentsはその組織構造上

00:03:06.153 --> 00:03:09.356 align:start position:30% line:-2
コードを書く速度を
上げられなかったのです

00:03:09.623 --> 00:03:12.793 align:start position:27% line:-1
当時は問題ありませんでした

00:03:12.893 --> 00:03:16.597 align:start position:21% line:-2
アセットやパフォーマンスツールを
引き継いでいたからです

00:03:16.697 --> 00:03:19.700 align:start position:32% line:-2
独自のレコード技術や
論理解析がありました

00:03:19.800 --> 00:03:23.904 align:start position:7% line:-2
トレースからデータを得るために
カスタムstorage mechanismを作り

00:03:24.071 --> 00:03:27.140 align:start position:20% line:-2
アプリケーションに組み込むのに
カスタムUIを作る必要がありました

00:03:27.774 --> 00:03:30.210 align:start position:29% line:-2
Instrumentsと
該当モデルの―

00:03:30.310 --> 00:03:33.046 align:start position:30% line:-1
維持費が急上昇しました

00:03:33.514 --> 00:03:36.116 align:start position:30% line:-2
その理由は毎回
各７個のカスタムUIと

00:03:36.216 --> 00:03:37.851 align:start position:11% line:-2
カスタムstorage mechanismの
作成が必要で

00:03:37.951 --> 00:03:41.021 align:start position:23% line:-2
それを変更する
新たな機能を加えたかったのです

00:03:41.255 --> 00:03:43.123 align:start position:30% line:-1
従来型のモデルを持続し

00:03:43.223 --> 00:03:46.994 align:start position:21% line:-2
メンテナンスにかかるコスト負担を
皆さんに続けてほしくありません

00:03:47.094 --> 00:03:51.798 align:start position:32% line:-2
新しい機能より
コスト問題の解決を―

00:03:51.999 --> 00:03:53.167 align:start position:38% line:-1
優先したのです

00:03:53.467 --> 00:03:55.169 align:start position:21% line:-1
新しいInstrumentsは―

00:03:55.269 --> 00:04:00.140 align:start position:27% line:-2
カスタムUIなどの代わりに
２つの標準化要素を使います

