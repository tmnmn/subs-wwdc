WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:57.724 --> 00:01:00.627 align:start position:27% line:-1
では まず作りたい理由です

00:01:01.328 --> 00:01:04.730 align:start position:27% line:-2
Instrumentsには
有益なツールがあります

00:01:04.864 --> 00:01:09.803 align:start position:21% line:-2
アプリケーションとの互換性を
確認するSystem Trace

00:01:10.637 --> 00:01:15.242 align:start position:5% line:-2
Metal System Traceと組み合わせた
ビデオゲームのテンプレートは―

00:01:15.442 --> 00:01:20.080 align:start position:21% line:-2
アプリ上の機械的な画像の不具合や
フレームの消失などを解消しました

00:01:21.448 --> 00:01:26.854 align:start position:0% line:-2
Network Connections Instrumentを
お持ちであれば

00:01:26.954 --> 00:01:30.858 align:start position:25% line:-2
アプリ間の
TCP/IPの交信ができます

00:01:31.258 --> 00:01:36.163 align:start position:23% line:-2
そして おなじみの
Time Profilerです

00:01:36.296 --> 00:01:38.365 align:start position:30% line:-2
アプリ内の
時間がかかる処理を調べ

00:01:38.465 --> 00:01:42.069 align:start position:21% line:-2
原因がネットワーク階層なのか
ゲームエンジンなのかなど探ります

00:01:42.703 --> 00:01:46.373 align:start position:30% line:-1
当たり前のことですが―

00:01:46.740 --> 00:01:51.078 align:start position:36% line:-2
コードが分かれば
とても有益です

00:01:51.345 --> 00:01:57.050 align:start position:23% line:-2
IPアドレスやコールスタックの
仕組みを理解することで

00:01:57.217 --> 00:01:59.586 align:start position:25% line:-2
Time Profilerを
簡単にすることができます

00:01:59.920 --> 00:02:03.790 align:start position:30% line:-2
ではコードに不慣れだと
どうなるでしょう？

