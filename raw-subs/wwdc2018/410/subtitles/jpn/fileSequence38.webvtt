WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:58.078 --> 00:38:00.647 align:start position:21% line:-2
モデラのクロックが
インターバルの最初の地点に移動し

00:38:01.415 --> 00:38:03.851 align:start position:32% line:-1
次の入力をつかむと―

00:38:03.951 --> 00:38:08.222 align:start position:27% line:-2
またクロックが最初に戻り
ワーキングメモリに入れます

00:38:08.722 --> 00:38:12.392 align:start position:34% line:-2
モデラは
両方とも認識します

00:38:12.659 --> 00:38:13.694 align:start position:36% line:-1
“マッチ遊び”は

00:38:13.794 --> 00:38:16.864 align:start position:30% line:-2
アプリケーションの前に
すでに炎上しています

00:38:16.964 --> 00:38:21.034 align:start position:21% line:-2
アプリケーションが先に炎上し
順番が逆でも結果に大差ありません

00:38:21.335 --> 00:38:24.638 align:start position:32% line:-2
“炎上の原因”という
ロジカルな結論を―

00:38:25.272 --> 00:38:30.210 align:start position:34% line:-2
ワーキングメモリに
盛り込めます

00:38:31.578 --> 00:38:35.616 align:start position:32% line:-2
第３の入力をつかむと
クロックの動きが―

00:38:35.716 --> 00:38:39.086 align:start position:30% line:-2
２つの入力とは
交わらないと気づきます

00:38:39.419 --> 00:38:42.222 align:start position:23% line:-2
その２つはワーキングメモリから
削除されます

00:38:42.656 --> 00:38:46.126 align:start position:14% line:-2
“炎上の原因”に
logical supportがあれば―

00:38:46.260 --> 00:38:48.662 align:start position:34% line:-1
これも削除されます

00:38:50.764 --> 00:38:55.102 align:start position:29% line:-2
クロックの設定は入力時の
タイムスタンプです

00:38:55.469 --> 00:38:58.372 align:start position:30% line:-2
ワーキングメモリの中に
入力を残すために―

00:38:58.505 --> 00:39:02.576 align:start position:29% line:-2
モデラの現在のクロックは
交差します

