WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:02.296 --> 00:36:03.197 align:middle line:-1
好了

00:36:03.463 --> 00:36:07.935 align:middle line:-2
不幸的是 并非所有算法
都使用相同的标准

00:36:08.001 --> 00:36:11.071 align:middle line:-1
来衡量它们的置信度分数

00:36:11.605 --> 00:36:14.274 align:middle line:-2
例如 如果看看我们的文本检测器
它几乎总是

00:36:14.341 --> 00:36:17.878 align:middle line:-2
返回一个值为1的置信度得分
因为如果它不认为这是文字

00:36:17.945 --> 00:36:20.347 align:middle line:-1
它一开始就不会返回边界框

00:36:21.215 --> 00:36:25.219 align:middle line:-2
但正如我们所看到的
分类器的置信度得分

00:36:25.285 --> 00:36:28.856 align:middle line:-2
则是一个较大的范围
我们来看几个例子

00:36:30.624 --> 00:36:31.892 align:middle line:-1
在我的第一个例子中

00:36:32.793 --> 00:36:35.395 align:middle line:-2
我使用了一张
机器人商店示例中的图像

00:36:36.096 --> 00:36:37.698 align:middle line:-1
我在它上面运行了自己的模型

00:36:38.332 --> 00:36:40.767 align:middle line:-1
果然 它有很高的置信度分数

00:36:40.834 --> 00:36:42.169 align:middle line:-1
并认为这是一个步进电机

00:36:43.670 --> 00:36:45.172 align:middle line:-1
在下面这个例子中

00:36:45.839 --> 00:36:48.876 align:middle line:-1
我将使用我们模型库中的一些模型

00:36:49.743 --> 00:36:53.080 align:middle line:-2
不要误会我的意思
我不是想比较模型的质量

00:36:53.146 --> 00:36:55.849 align:middle line:-1
而是关于它们返回的置信度

00:36:55.916 --> 00:36:57.584 align:middle line:-1
以及我们实际想要做的事情

00:36:58.552 --> 00:37:01.955 align:middle line:-2
当我们想要对这张图片进行分类时
它告诉了我们什么

