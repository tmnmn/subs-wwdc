WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:00.854 --> 00:02:02.356 align:middle line:-1
让我们从训练开始吧

00:02:03.323 --> 00:02:05.526 align:middle line:-2
我们如何训练呢？
当然是使用Create ML

00:02:07.060 --> 00:02:10.229 align:middle line:-2
当然 我们要做的第一步是
我们必须拍照

00:02:11.231 --> 00:02:13.567 align:middle line:-1
然后我们将照片放在文件夹中

00:02:13.634 --> 00:02:16.870 align:middle line:-1
我们使用文件夹名称作为分类标签

00:02:18.805 --> 00:02:21.341 align:middle line:-1
现在 每个人都会问的一个问题是

00:02:21.408 --> 00:02:22.743 align:middle line:-1
“我需要多少数据”

00:02:23.977 --> 00:02:29.850 align:middle line:-2
首先 我们每个类别
至少需要10张图片

00:02:29.917 --> 00:02:33.487 align:middle line:-1
但这是偏低的 你肯定想拥有更多

00:02:33.554 --> 00:02:36.657 align:middle line:-2
越多越好
实际上是你的分类器会表现得更好

00:02:38.425 --> 00:02:41.528 align:middle line:-2
需要注意的另一件事是
高度不平衡的数据集

00:02:41.595 --> 00:02:42.629 align:middle line:-1
这是什么意思呢？

00:02:42.930 --> 00:02:46.033 align:middle line:-2
当数据集中的一个类别
包含数千个图像

00:02:46.099 --> 00:02:49.469 align:middle line:-2
而在另一个类别中只有十个时
这个模型的训练效果不会很好

00:02:49.536 --> 00:02:51.905 align:middle line:-1
因此你想在大多数类别之间

00:02:51.972 --> 00:02:53.574 align:middle line:-1
拥有一个更为均匀的分布

00:02:55.609 --> 00:02:59.413 align:middle line:-1
我们引入的另一件事是增强

