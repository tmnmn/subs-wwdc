WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.782 --> 00:23:04.885 align:middle line:-1
让我们看一下CPU的实际情况

00:23:07.087 --> 00:23:08.655 align:middle line:-1
好的 现在我什么都没做

00:23:08.722 --> 00:23:11.458 align:middle line:-1
我只是在显示我的屏幕

00:23:12.159 --> 00:23:14.795 align:middle line:-1
当我四处移动相机时

00:23:15.629 --> 00:23:19.533 align:middle line:-2
场景不稳定
CPU的使用率大约为22%

00:23:19.900 --> 00:23:22.336 align:middle line:-2
现在如果我保持稳定
这时分类器开始运行

00:23:22.402 --> 00:23:24.037 align:middle line:-1
你可以看到CPU使用率上升

00:23:24.671 --> 00:23:28.675 align:middle line:-2
这就是为什么我总是建议
只在你真正需要时才运行这些任务

00:23:31.044 --> 00:23:33.914 align:middle line:-1
好的 我们刚才讲了很多东西

00:23:34.081 --> 00:23:35.549 align:middle line:-1
让我们回到幻灯片

00:23:35.949 --> 00:23:38.452 align:middle line:-1
并回顾一下我们刚刚看到的内容

00:23:40.254 --> 00:23:41.255 align:middle line:-1
回到幻灯片

00:23:48.161 --> 00:23:52.733 align:middle line:-2
好的 回顾一下
首先是我们如何实现场景稳定性的

00:23:53.867 --> 00:23:55.602 align:middle line:-1
我们使用了序列请求处理程序

00:23:55.669 --> 00:23:58.739 align:middle line:-2
以及VNTranslationalImage
RegistrationRequest

