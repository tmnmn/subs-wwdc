WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.399 --> 00:05:01.768 align:middle line:-1
你不一定会自动获得它的改进

00:05:01.835 --> 00:05:04.071 align:middle line:-1
除非你使用新模型重新训练

00:05:04.605 --> 00:05:06.840 align:middle line:-1
所以如果你今年开始用它来开发

00:05:06.907 --> 00:05:07.774 align:middle line:-1
并且你想

00:05:07.841 --> 00:05:10.611 align:middle line:-1
利用我们未来几年推出的特性

00:05:10.944 --> 00:05:14.581 align:middle line:-2
保留你的数据集
以便你可以重新进行训练

00:05:16.950 --> 00:05:19.920 align:middle line:-2
再谈一些关于我们的
特征提取器的更多内容

00:05:21.889 --> 00:05:23.357 align:middle line:-1
它已经存在在设备上

00:05:23.423 --> 00:05:25.859 align:middle line:-1
这对我们来说是一个重要的决定

00:05:26.460 --> 00:05:31.265 align:middle line:-2
因为它使你的模型的
磁盘占用空间显著减小

00:05:32.032 --> 00:05:33.500 align:middle line:-1
让我们稍微比较一下

00:05:34.001 --> 00:05:38.505 align:middle line:0
我选择了一些我们今天常用的模型

00:05:38.872 --> 00:05:42.676 align:middle line:0
首先是Resnet
若我在Resnet上训练分类器

00:05:42.743 --> 00:05:45.746 align:middle line:0
我的模型有多大呢？
98兆字节

00:05:47.281 --> 00:05:50.083 align:middle line:0
如果我使用Squeezenet
它是一个小得多的模型

00:05:50.150 --> 00:05:53.086 align:middle line:0
它无法区分很多的类别

00:05:53.754 --> 00:05:55.289 align:middle line:0
它的大小为5兆字节

00:05:55.355 --> 00:05:58.859 align:middle line:0
所以这很不错
但问题是它没那么强大

00:05:59.493 --> 00:06:00.594 align:middle line:0
Vision怎样？

