WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.111 --> 00:33:01.515 align:middle line:-1
这是该层需要执行的数学运算的

00:33:01.582 --> 00:33:04.384 align:middle line:-1
真正实现部分

00:33:05.185 --> 00:33:06.320 align:middle line:-1
还有另一个函数也会被调用

00:33:06.386 --> 00:33:08.088 align:middle line:-2
这个outputShapes
(forInputShapes)函数

00:33:08.155 --> 00:33:10.891 align:middle line:-1
它会指定该层产生的

00:33:10.958 --> 00:33:12.159 align:middle line:-1
输出区域的大小

00:33:12.526 --> 00:33:16.296 align:middle line:-2
这有助于Core ML在加载时
分配缓冲区大小

00:33:16.930 --> 00:33:19.633 align:middle line:-1
以便你的app在运行时更高效

00:33:21.969 --> 00:33:26.507 align:middle line:-2
我们刚刚看到你将如何处理
神经网络中的一个新层

00:33:27.174 --> 00:33:30.177 align:middle line:-1
有一个非常类似于自定义层的概念

00:33:30.244 --> 00:33:32.513 align:middle line:-1
它被称为自定义模型

00:33:33.280 --> 00:33:36.750 align:middle line:-1
它们的原理差不多 但它更具通用性

00:33:37.217 --> 00:33:41.555 align:middle line:-2
对于自定义模型
你可以处理任何类型的网络

00:33:41.755 --> 00:33:44.858 align:middle line:-1
它不一定是一个神经网络

00:33:45.292 --> 00:33:48.662 align:middle line:-1
并且在整体上能给你更多的灵活性

00:33:50.564 --> 00:33:53.300 align:middle line:-2
让我总结一下这次演讲
我们看到…

00:33:54.601 --> 00:33:58.939 align:middle line:-2
Core ML Tools的
这个生态系统有多丰富

00:33:59.006 --> 00:34:00.340 align:middle line:-1
这对你们来说很棒

