WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:01.315 --> 00:23:05.853 align:middle line:-2
假设你有一个图像分类器
这是它在Xcode中的样子

00:23:06.220 --> 00:23:08.589 align:middle line:-1
这是一些关于该模型的高级描述

00:23:08.889 --> 00:23:12.593 align:middle line:-2
如果你能看到它的内部
很可能这是一个神经网络

00:23:13.026 --> 00:23:16.063 align:middle line:-1
而且很可能是一个卷积神经网络

00:23:16.129 --> 00:23:19.399 align:middle line:-2
所以它会有很多层
卷积层 激活层

00:23:20.367 --> 00:23:21.635 align:middle line:-1
现在可能会发生这种情况

00:23:21.702 --> 00:23:23.971 align:middle line:-1
即有一个新的激活层出现

00:23:24.037 --> 00:23:25.472 align:middle line:-1
而Core ML还不支持它

00:23:25.772 --> 00:23:26.607 align:middle line:-1
并且…

00:23:27.341 --> 00:23:30.277 align:middle line:-1
就像在每次机器学习会议上一样

00:23:30.344 --> 00:23:32.713 align:middle line:-1
研究人员总是在提出新的层

00:23:32.779 --> 00:23:34.214 align:middle line:-1
所以这是一个很常见的情况

00:23:35.048 --> 00:23:36.216 align:middle line:-1
如果发生这种情况

00:23:36.483 --> 00:23:40.888 align:middle line:-1
你只需要使用这个新层的自定义实现

00:23:41.321 --> 00:23:44.258 align:middle line:-2
然后你就准备好了
这就是这个模型的样子

00:23:44.324 --> 00:23:47.327 align:middle line:-1
唯一的区别是在底部的

00:23:47.394 --> 00:23:48.495 align:middle line:-1
这个依赖部分

00:23:49.363 --> 00:23:50.364 align:middle line:-1
其中…

00:23:51.431 --> 00:23:54.601 align:middle line:-2
具有这个模型所包含的
这个自定义层的描述

00:23:55.169 --> 00:23:56.837 align:middle line:-1
我们来看看另一个例子

00:23:57.004 --> 00:23:59.940 align:middle line:-2
假设我们有一个非常简单的
数字分类器

