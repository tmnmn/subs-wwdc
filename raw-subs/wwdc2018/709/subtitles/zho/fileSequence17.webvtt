WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:59.586 --> 00:17:01.388 align:middle line:-1
对所有图像进行推理

00:17:01.688 --> 00:17:02.723 align:middle line:-1
我们看到这一次

00:17:02.789 --> 00:17:05.791 align:middle line:-2
我们得到了一个更好一点的
Top 1 Agreement

00:17:06.193 --> 00:17:07.261 align:middle line:-1
对于这个模型

00:17:07.694 --> 00:17:09.963 align:middle line:-1
我们看到查找表是正确的选择

00:17:10.364 --> 00:17:12.866 align:middle line:-1
但是这与模型有关 对于其他模型

00:17:13.066 --> 00:17:14.067 align:middle line:-1
可能是线性量化效果更好

00:17:14.635 --> 00:17:17.905 align:middle line:-2
现在我们对这个结果感到高兴
并且认为这对我的app来说

00:17:17.971 --> 00:17:20.773 align:middle line:-2
已经够好了
现在让我们保存此模型

00:17:23.410 --> 00:17:25.546 align:middle line:-1
我们通过调用save函数来保存

00:17:30.417 --> 00:17:34.254 align:middle line:-2
再给它起个有创意的名字
就叫QuantizedSqueezeNet

00:17:41.161 --> 00:17:43.263 align:middle line:-2
可以了
现在我们有了一个量化模型

00:17:43.964 --> 00:17:47.634 align:middle line:-2
这是一个原始模型
我们看到它的大小是5兆字节

00:17:48.168 --> 00:17:50.037 align:middle line:-1
让我们打开我们的量化模型

00:17:52.606 --> 00:17:54.274 align:middle line:-1
我们立即注意到的第一件事

00:17:54.341 --> 00:17:57.544 align:middle line:-1
是这个模型的大小只有1.3兆字节

