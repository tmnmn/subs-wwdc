WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.158 --> 00:26:02.429 align:middle line:-2
除此以外 我还有这个
网格采样器层的Python脚本

00:26:03.197 --> 00:26:05.866 align:middle line:-1
我正在谈论的这个网格采样器层

00:26:06.266 --> 00:26:08.669 align:middle line:-1
在Keras中也没有原生支持

00:26:09.303 --> 00:26:11.805 align:middle line:-1
所以我在网上找到的这个实现

00:26:12.105 --> 00:26:15.676 align:middle line:-1
使用Keras自定义层来实现该层

00:26:16.376 --> 00:26:20.614 align:middle line:-2
正如你所见 自定义概念
并不是Core ML独有的

00:26:20.914 --> 00:26:24.418 align:middle line:-2
实际上 在大多数机器学习框架中
这是非常普遍的

00:26:24.751 --> 00:26:27.087 align:middle line:-1
这就是人们在新层中进行实验的方法

00:26:27.955 --> 00:26:30.624 align:middle line:-2
好的 到目前为止
我只有一个Keras模型

00:26:30.824 --> 00:26:33.660 align:middle line:-2
现在我想专注于
如何获得Core ML模型

00:26:34.361 --> 00:26:36.230 align:middle line:-1
所以我将打开…

00:26:38.131 --> 00:26:39.099 align:middle line:-1
让我们看看…

00:26:40.000 --> 00:26:42.336 align:middle line:-2
在这里 让我启动一个
新的Python笔记本

00:26:44.137 --> 00:26:46.874 align:middle line:-1
我将从在Python环境中

00:26:46.940 --> 00:26:48.242 align:middle line:-1
导入Keras模型开始

00:26:51.879 --> 00:26:54.248 align:middle line:-1
先导入Keras

00:26:55.315 --> 00:26:57.751 align:middle line:-1
再导入我们的Keras自定义层

00:26:58.285 --> 00:27:00.921 align:middle line:-1
现在我将在Keras中加载模型

