WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.133 --> 00:20:04.271 align:middle line:-1
在左上角

00:20:04.771 --> 00:20:10.210 align:middle line:-2
我们看到原始模型是32位
大小为6.7兆字节

00:20:10.677 --> 00:20:14.448 align:middle line:-2
我们的8位线性量化模型
只有1.7兆字节

00:20:14.781 --> 00:20:17.451 align:middle line:-1
而且我们发现 从视觉上来看

00:20:17.518 --> 00:20:19.753 align:middle line:-2
该效果对于我的风格转换演示来说
已经足够了

00:20:20.687 --> 00:20:23.924 align:middle line:-1
我们还可以看到 即使低至4位

00:20:24.024 --> 00:20:26.193 align:middle line:-1
我们也不会在效果方面损失太多

00:20:26.593 --> 00:20:27.961 align:middle line:-1
我甚至可能会说

00:20:28.028 --> 00:20:30.163 align:middle line:-2
对于我的app来说
即使3位也可以正常工作

00:20:30.664 --> 00:20:33.967 align:middle line:-2
从2位开始我们可以看到
这时出现了很多痕迹

00:20:34.401 --> 00:20:36.436 align:middle line:-1
这个模型可能不适合我们

00:20:38.906 --> 00:20:41.175 align:middle line:-2
以上就是如何使用
Core ML Tools进行量化的部分

00:20:41.975 --> 00:20:43.510 align:middle line:-1
接下来我将话筒交回给Aseem

00:20:43.577 --> 00:20:45.612 align:middle line:-1
他将会谈论自定义转换

00:20:45.779 --> 00:20:46.613 align:middle line:-1
谢谢

00:20:52.352 --> 00:20:53.387 align:middle line:-1
谢谢Sohaib

00:20:55.155 --> 00:20:58.659 align:middle line:-1
我想谈一下一个非常重要的特性

00:20:58.725 --> 00:21:01.728 align:middle line:-2
它让我们能够跟上
机器学习领域的发展

