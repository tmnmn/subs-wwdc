WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.373 --> 00:19:01.808 align:middle line:-2
从而了解它与我们的
原始模型相比较效果如何

00:19:03.510 --> 00:19:05.345 align:middle line:-1
正如我们在演示中看到的那样

00:19:05.712 --> 00:19:08.882 align:middle line:-2
量化我们的模型会导致
相应精度的损失

00:19:09.816 --> 00:19:10.817 align:middle line:-1
这个…

00:19:11.151 --> 00:19:13.754 align:middle line:-1
这种精度损失高度依赖于模型和数据

00:19:14.621 --> 00:19:18.759 align:middle line:-2
一些模型在量化之后
比其它模型表现更好

00:19:19.359 --> 00:19:20.994 align:middle line:-1
作为一般经验法则

00:19:21.161 --> 00:19:23.697 align:middle line:-1
我们量化模型的位数越少

00:19:24.364 --> 00:19:26.033 align:middle line:-1
我们精度所受的影响就越大

00:19:26.567 --> 00:19:28.235 align:middle line:-1
在演示中我们看到

00:19:28.669 --> 00:19:31.705 align:middle line:-2
我们能使用Core ML Tools中的
Top 1 Agreement指标

00:19:31.772 --> 00:19:34.575 align:middle line:-2
来比较我们的量化模型
和原始模型

00:19:35.442 --> 00:19:36.810 align:middle line:-1
但你必须弄清楚

00:19:37.411 --> 00:19:40.147 align:middle line:-2
你的模型和用例的
相关度量标准是什么

00:19:40.214 --> 00:19:42.850 align:middle line:-1
并验证你的量化模型是可接受的

00:19:44.017 --> 00:19:47.421 align:middle line:-2
在之前的演讲中
我们看了一个风格转换演示

00:19:48.155 --> 00:19:50.757 align:middle line:-1
这个网络输入一幅图像

00:19:51.158 --> 00:19:54.494 align:middle line:-1
然后输出一个风格化的图像

00:19:55.329 --> 00:19:57.297 align:middle line:-1
让我们来看看这个模型

00:19:57.364 --> 00:19:59.233 align:middle line:-1
在不同的量化级别下表现如何

