WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.886 --> 00:12:01.221 align:middle line:-2
让我们来运行它
然后我想做的是

00:12:01.288 --> 00:12:03.724 align:middle line:-2
导入所有
在Core ML Tools中的

00:12:03.790 --> 00:12:07.261 align:middle line:-2
新量化工具
我们通过运行这句代码来达到目的

00:12:16.170 --> 00:12:19.106 align:middle line:-1
现在我们需要加载想要量化的模型

00:12:19.173 --> 00:12:21.175 align:middle line:-2
即我们刚看到的
SqueezeNet模型

00:12:21.241 --> 00:12:23.343 align:middle line:-1
我们需要获取该模型的一个实例

00:12:32.786 --> 00:12:34.288 align:middle line:-1
将参数设置为我的桌面

00:12:37.991 --> 00:12:38.825 align:middle line:-1
很好

00:12:39.026 --> 00:12:43.063 align:middle line:-2
现在 为了量化这个模型
我们只需要做一个简单的API调用

00:12:43.463 --> 00:12:47.267 align:middle line:-2
让我们尝试使用线性量化
来量化这个模型

00:12:51.572 --> 00:12:54.408 align:middle line:-2
它的API名称很简单
叫quantize_weights

00:12:54.808 --> 00:12:56.510 align:middle line:-1
我们传入的第一个参数

00:12:56.877 --> 00:12:59.079 align:middle line:-1
是你刚加载的原始模型

00:12:59.546 --> 00:13:02.149 align:middle line:-1
然后是我们想要量化模型的位数

