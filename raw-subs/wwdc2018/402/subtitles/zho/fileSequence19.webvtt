WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.840 --> 00:19:01.842 align:middle line:-1
我们现在让电脑再走一步

00:19:07.681 --> 00:19:08.549 align:middle line:-1
很好

00:19:13.086 --> 00:19:14.988 align:middle line:-1
你应该在这里注意一些事情

00:19:15.289 --> 00:19:18.525 align:middle line:-1
第一 棋盘一开始是平的

00:19:18.592 --> 00:19:21.562 align:middle line:-1
我需要经过旋转才能看到它

00:19:23.497 --> 00:19:25.499 align:middle line:-1
当我们执行更多的代码行时

00:19:25.566 --> 00:19:28.101 align:middle line:-1
它不会旋转回原来的位置

00:19:28.302 --> 00:19:29.136 align:middle line:-1
这很不错

00:19:29.203 --> 00:19:33.140 align:middle line:-2
因为我可以写代码
来将它旋转到正确的位置

00:19:33.207 --> 00:19:35.275 align:middle line:-1
但这会涉及一些称为四元数的东西

00:19:35.342 --> 00:19:37.578 align:middle line:-1
我认为我还没有准备好去学习这东西

00:19:39.246 --> 00:19:40.747 align:middle line:-1
这东西很棒的第二个原因

00:19:40.814 --> 00:19:44.518 align:middle line:-2
是如果电脑玩家可以在
每次我们重新执行新代码时

00:19:44.918 --> 00:19:48.822 align:middle line:-1
重新开始 它就可以得到一次新机会

00:19:48.889 --> 00:19:50.424 align:middle line:-1
这会有点不公平

00:19:51.525 --> 00:19:54.194 align:middle line:-2
让我们完成这个游戏
然后可以告一段落

