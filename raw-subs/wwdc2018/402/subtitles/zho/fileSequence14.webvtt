WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:58.338 --> 00:14:02.643 align:middle line:-2
还有一个很棒的快捷键
Shift + Return

00:14:03.410 --> 00:14:06.647 align:middle line:-2
这就像在输入一行代码后
按下Return键一样

00:14:06.713 --> 00:14:09.082 align:middle line:-1
但这还会执行这一行代码

00:14:09.249 --> 00:14:12.819 align:middle line:-2
并且它将光标移动到下一行
准备写更多的代码

00:14:14.655 --> 00:14:17.691 align:middle line:-1
蓝色代码也有另一种含义

00:14:18.192 --> 00:14:22.629 align:middle line:-2
意味着这些代码可安全编辑
无需重新设置Playground

00:14:23.363 --> 00:14:24.464 align:middle line:-1
为什么这很重要？

00:14:25.032 --> 00:14:27.367 align:middle line:-1
如果你编辑蓝线上方的代码

00:14:28.569 --> 00:14:31.138 align:middle line:-1
这将会修改你已经执行过的代码

00:14:31.471 --> 00:14:35.342 align:middle line:-2
因此你须重置Playground
以反应出你所做的更改

00:14:36.143 --> 00:14:40.747 align:middle line:-2
当你编辑蓝线上方的代码时
Playground会自动重置

00:14:44.618 --> 00:14:47.487 align:middle line:-2
有时 你需要手动
重置你的Playground

00:14:47.554 --> 00:14:49.923 align:middle line:-1
你可以使用屏幕底部调试栏中的

00:14:50.157 --> 00:14:52.426 align:middle line:-1
Stop按钮来完成此操作

00:14:53.694 --> 00:14:57.431 align:middle line:-2
那么为什么要逐步运行？
为什么我们要添加这个功能呢？

00:14:58.098 --> 00:15:01.034 align:middle line:-1
首先 再多执行一行代码很快

