WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

02:03:58.526 --> 02:04:00.186 A:middle
for high performance on-device

02:04:00.186 --> 02:04:01.846 A:middle
machine learning, and now it's

02:04:01.846 --> 02:04:02.676 A:middle
better than ever.

02:04:03.506 --> 02:04:05.106 A:middle
It's 30 percent faster in

02:04:05.106 --> 02:04:06.676 A:middle
on-device processing using a

02:04:06.676 --> 02:04:07.726 A:middle
technique called batch

02:04:07.826 --> 02:04:09.856 A:middle
predictions, and you can reduce

02:04:09.856 --> 02:04:12.046 A:middle
your model size by up to 75

02:04:12.096 --> 02:04:14.056 A:middle
percent using quantization.

02:04:14.696 --> 02:04:18.016 A:middle
And so that's Core ML and Create

02:04:18.016 --> 02:04:18.276 A:middle
ML.

02:04:18.746 --> 02:04:19.826 A:middle
You no longer have to be an

02:04:19.826 --> 02:04:22.566 A:middle
expert in machine learning to

02:04:22.566 --> 02:04:23.976 A:middle
build those techniques into your

02:04:25.256 --> 02:04:25.346 A:middle
app.

02:04:25.616 --> 02:04:27.486 A:middle
Now, these technologies are

02:04:27.536 --> 02:04:29.006 A:middle
redefining what's possible in

02:04:29.076 --> 02:04:31.986 A:middle
apps, and they're common not

02:04:31.986 --> 02:04:34.046 A:middle
just to macOS but also to iOS,

02:04:34.046 --> 02:04:35.976 A:middle
and the fact that the mac and

02:04:36.066 --> 02:04:38.736 A:middle
iOS share so much technology has

02:04:39.086 --> 02:04:41.676 A:middle
led people almost every year to

02:04:41.706 --> 02:04:44.336 A:middle
keep asking us the question, are

02:04:44.336 --> 02:04:46.536 A:middle
you merging iOS and macOS?

02:04:47.736 --> 02:04:49.586 A:middle
So I'd like to take a moment to

02:04:49.726 --> 02:04:51.356 A:middle
briefly address this question.

02:04:52.176 --> 02:04:54.966 A:middle
No. Of course not.

02:04:55.516 --> 02:05:00.366 A:middle
[ Applause ]

