WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:57:00.888 --> 00:57:03.290 align:start position:29% line:-1
ARに透明度を多用すると

00:57:03.390 --> 00:57:08.295 align:start position:27% line:-2
パフォーマンスが低下すると
言われています

00:57:08.395 --> 00:57:13.434 align:start position:25% line:-2
とりわけ透明な表面が
前後に重なる場合は要注意です

00:57:13.634 --> 00:57:17.804 align:start position:29% line:-2
いわゆるオーバードローは
避けましょう

00:57:19.406 --> 00:57:22.843 align:start position:29% line:-2
皆さんがまだ
飽きてないことを願います

00:57:22.943 --> 00:57:24.945 align:start position:32% line:-1
今までお話ししたのは

00:57:25.045 --> 00:57:30.083 align:start position:27% line:-2
3Dエンジンに光を
反応させる方法についてです

00:57:30.184 --> 00:57:34.988 align:start position:27% line:-2
今度はARを現実世界に
馴染ませる方法を説明します

00:57:35.923 --> 00:57:41.361 align:start position:27% line:-2
ARKitの機能の１つに
光を補正するものがあります

00:57:43.530 --> 00:57:45.699 align:start position:20% line:-1
LightEstimationです

00:57:45.933 --> 00:57:49.136 align:start position:34% line:-2
ではケトルで効果を
確認しましょう

00:57:49.236 --> 00:57:52.272 align:start position:36% line:-2
環境光の強さが
変化していますね

00:57:52.373 --> 00:57:55.709 align:start position:30% line:-2
ARシーンでも環境光を
補正します

00:57:56.376 --> 00:57:59.613 align:start position:29% line:-1
ARKitが映像を分析し

00:57:59.713 --> 00:58:03.584 align:start position:34% line:-2
現実世界の明るさを
推定してくれます

