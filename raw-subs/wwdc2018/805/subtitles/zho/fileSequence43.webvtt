WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:58.111 --> 00:43:02.182 align:middle line:-1
屏幕的多边形数快达到一百万了

00:43:02.916 --> 00:43:06.954 align:middle line:-1
我已准备好 不想惹上麻烦

00:43:07.020 --> 00:43:08.455 align:middle line:-1
所以最好回去修复它

00:43:08.722 --> 00:43:11.959 align:middle line:-1
因为我在意这对电池待机的影响

00:43:12.159 --> 00:43:15.629 align:middle line:-1
以及人们如何感受及与AR场景交互

00:43:15.996 --> 00:43:19.533 align:middle line:-2
我们看看能做点什么
来降低多边形数

00:43:21.301 --> 00:43:24.338 align:middle line:-1
大多3D构建工具有专门的工具

00:43:24.404 --> 00:43:27.608 align:middle line:-1
用以降低模型复杂度

00:43:27.941 --> 00:43:29.877 align:middle line:-1
我们降低了

00:43:29.943 --> 00:43:33.080 align:middle line:-1
和鱼的高密度模型关联的多边形数

00:43:33.914 --> 00:43:37.284 align:middle line:-1
但要注意 放大时大量细节丢失了

00:43:37.751 --> 00:43:41.088 align:middle line:-1
但别慌 我们能用特定的材料属性

00:43:41.154 --> 00:43:43.423 align:middle line:-1
将丢失的细节找回来

00:43:43.824 --> 00:43:47.594 align:middle line:-1
这里的关键就是用最少的多边形

00:43:47.661 --> 00:43:49.897 align:middle line:-1
构建网格基础

00:43:49.963 --> 00:43:53.233 align:middle line:-2
我们把高密度网格放到一边
然后关注构建

00:43:53.300 --> 00:43:55.169 align:middle line:-1
低密度的网格

00:43:56.703 --> 00:44:00.774 align:middle line:-1
我承认这没以前看起来好

