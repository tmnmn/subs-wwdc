WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:57:00.921 --> 00:57:03.390 align:middle line:-1
总的来说 在AR里

00:57:03.457 --> 00:57:07.227 align:middle line:-1
大量使用透明材质会严重影响性能

00:57:07.294 --> 00:57:10.430 align:middle line:-1
尤其是当你观察它们时

00:57:10.497 --> 00:57:13.367 align:middle line:-1
透明表面堆叠在一起

00:57:13.433 --> 00:57:15.402 align:middle line:-1
这称作重复绘图

00:57:15.469 --> 00:57:17.471 align:middle line:-1
AR里一定要避免

00:57:19.306 --> 00:57:20.874 align:middle line:-1
希望大家还在听

00:57:20.941 --> 00:57:22.543 align:middle line:-1
因为内容有些长

00:57:23.043 --> 00:57:27.114 align:middle line:-1
目前 主要关注于AR内容

00:57:27.181 --> 00:57:29.883 align:middle line:-1
对3D引擎里模拟光线的相应

00:57:30.083 --> 00:57:31.752 align:middle line:-1
现在要关注于

00:57:31.818 --> 00:57:34.721 align:middle line:-2
一些让内容看起来是
真实世界一部分的方法

00:57:35.956 --> 00:57:39.359 align:middle line:-1
补偿变化的光线条件的一个神奇方法

00:57:39.426 --> 00:57:45.332 align:middle line:-2
是利用ARKit的著名特性
光线估计

00:57:45.933 --> 00:57:47.434 align:middle line:-1
我们从激活这一功能开始

00:57:47.501 --> 00:57:48.969 align:middle line:-1
看其如何影响茶壶

00:57:49.136 --> 00:57:52.372 align:middle line:-1
真实世界的光线强度变化时

00:57:52.439 --> 00:57:55.542 align:middle line:-1
AR场景的光线也随之变化

00:57:56.410 --> 00:57:59.713 align:middle line:-2
实现方式是ARKit
分析视频的每一帧

00:57:59.780 --> 00:58:03.016 align:middle line:-1
并用以估计真实世界的光线条件

