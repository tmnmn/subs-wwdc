WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.513 --> 00:03:02.449 align:middle line:-1
而这些对象作为模型和视图

00:03:02.516 --> 00:03:04.251 align:middle line:-1
肩负着其在经典模型中的责任

00:03:04.918 --> 00:03:07.855 align:middle line:-1
UIImage负责加载图片内容

00:03:08.355 --> 00:03:11.825 align:middle line:-2
UIImageView
负责显示和渲染它

00:03:13.460 --> 00:03:15.529 align:middle line:-1
现在 我们可以将其理解为

00:03:15.596 --> 00:03:17.097 align:middle line:-1
我们建立的简单关系

00:03:17.164 --> 00:03:18.532 align:middle line:-1
这是一种单向关系

00:03:19.166 --> 00:03:22.035 align:middle line:-1
但实际情况却比这复杂一点

00:03:23.136 --> 00:03:26.006 align:middle line:-1
除了渲染是一个连续的过程

00:03:26.073 --> 00:03:27.508 align:middle line:-1
而不是一次性事件之外

00:03:28.242 --> 00:03:32.412 align:middle line:-1
这里的理解其实有一个隐藏的阶段

00:03:32.479 --> 00:03:34.581 align:middle line:-1
对衡量app的性能至关重要

00:03:35.115 --> 00:03:36.750 align:middle line:-1
这个阶段被称为解码

00:03:37.818 --> 00:03:39.686 align:middle line:-1
但为了讨论解码

00:03:39.753 --> 00:03:42.189 align:middle line:-2
我首先需要讨论
一个叫做“缓冲区”的概念

00:03:43.590 --> 00:03:45.859 align:middle line:-1
缓冲区只是一段连续的内存区域

00:03:46.360 --> 00:03:48.195 align:middle line:-1
但我们倾向于使用术语“缓冲区”

00:03:48.262 --> 00:03:52.065 align:middle line:-1
来表示由一系列元素组成的内存

00:03:52.533 --> 00:03:56.470 align:middle line:-2
这些元素具有相同尺寸
并通常具有相同的内部结构

00:03:57.838 --> 00:04:00.440 align:middle line:-2
而我们关注的重点
是其中一种非常重要的缓冲区

