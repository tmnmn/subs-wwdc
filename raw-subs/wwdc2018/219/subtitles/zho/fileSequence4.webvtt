WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:57.838 --> 00:04:00.440 align:middle line:-2
而我们关注的重点
是其中一种非常重要的缓冲区

00:04:01.008 --> 00:04:02.042 align:middle line:-1
即图像缓冲区

00:04:02.409 --> 00:04:04.211 align:middle line:-1
我们用这个术语

00:04:04.278 --> 00:04:07.781 align:middle line:-2
来表示一种特定缓冲区
它保存了某些图像在内存中的表示

00:04:08.815 --> 00:04:10.484 align:middle line:-1
此缓冲区的每个元素

00:04:10.551 --> 00:04:15.889 align:middle line:-2
描述了图像中
每个像素的颜色和透明度

00:04:17.057 --> 00:04:20.494 align:middle line:-1
因此这个缓冲区在内存中的大小

00:04:20.560 --> 00:04:23.997 align:middle line:-1
与它包含的图像大小成正比

00:04:25.332 --> 00:04:30.404 align:middle line:-2
缓冲区的一个特别重要的例子
是帧缓冲区

00:04:31.338 --> 00:04:34.708 align:middle line:-1
帧缓冲区负责在你的app中

00:04:34.775 --> 00:04:35.709 align:middle line:-1
保存实际渲染后的输出

00:04:36.910 --> 00:04:39.680 align:middle line:-2
因此 当你的app更新
其视图层次结构时

00:04:40.013 --> 00:04:44.551 align:middle line:-2
UIKit将重新渲染app的窗口
及其所有子视图

00:04:44.952 --> 00:04:46.220 align:middle line:-1
到帧缓冲区中

00:04:47.187 --> 00:04:50.591 align:middle line:-1
该帧缓冲区提供每个像素的颜色信息

00:04:50.657 --> 00:04:52.092 align:middle line:-1
显示硬件将读取这些信息

00:04:52.159 --> 00:04:55.095 align:middle line:-1
以便点亮显示器上对应的像素

00:04:55.529 --> 00:04:58.198 align:middle line:-1
（图像缓冲区）

00:04:58.265 --> 00:05:00.801 align:middle line:-1
最后一部分以固定的时间间隔发生

