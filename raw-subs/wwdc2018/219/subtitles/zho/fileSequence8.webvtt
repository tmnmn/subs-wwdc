WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:57.978 --> 00:08:00.247 align:middle line:-1
正如我前面提到的那样

00:08:00.314 --> 00:08:03.016 align:middle line:-2
这种内存分配与输入图像的大小
成正比

00:08:03.083 --> 00:08:05.219 align:middle line:-1
而与帧缓冲区中实际渲染的

00:08:05.285 --> 00:08:07.154 align:middle line:-1
图像视图的大小没有必然联系

00:08:08.255 --> 00:08:11.258 align:middle line:-2
而这会对性能
产生一些相当不利的后果

00:08:12.426 --> 00:08:16.597 align:middle line:-1
app地址空间中的大块内存分配

00:08:16.663 --> 00:08:19.099 align:middle line:-1
可能会迫使其他相关内容

00:08:19.166 --> 00:08:22.135 align:middle line:-1
远离它想要引用的内容

00:08:22.202 --> 00:08:23.537 align:middle line:-1
这种情况被称为碎片

00:08:23.604 --> 00:08:25.839 align:middle line:-1
（滥用内存的后果）

00:08:25.906 --> 00:08:30.110 align:middle line:-2
最终 如果你的app开始
占用越来越多的内存

00:08:30.410 --> 00:08:31.812 align:middle line:-1
操作系统将会介入

00:08:31.879 --> 00:08:35.616 align:middle line:-1
并开始透明地压缩物理内存的内容

00:08:36.717 --> 00:08:39.419 align:middle line:-1
CPU需要参与这个操作

00:08:39.720 --> 00:08:42.890 align:middle line:-2
因此 除了你自己的app
对CPU资源的使用

00:08:43.357 --> 00:08:47.394 align:middle line:-2
你可能会增加你无法控制的
全局CPU使用率

00:08:48.962 --> 00:08:52.799 align:middle line:-2
最终 你的app可能会
消耗过多的物理内存

00:08:53.100 --> 00:08:55.869 align:middle line:-1
以至于操作系统需要启动终止进程

00:08:56.403 --> 00:08:59.306 align:middle line:-1
它将从低优先级的后台进程开始

