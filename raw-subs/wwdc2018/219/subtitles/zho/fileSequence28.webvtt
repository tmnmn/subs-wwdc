WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.514 --> 00:28:03.650 align:middle line:-1
而不需要持有一个

00:28:03.884 --> 00:28:05.419 align:middle line:-1
app了纯色图像的单独副本

00:28:07.988 --> 00:28:10.991 align:middle line:-2
UIKit提供的视图中
内置了另一项优化

00:28:11.358 --> 00:28:17.764 align:middle line:-2
UILabel可以在显示单色文本时
比显示彩色文本或表情符号时

00:28:18.332 --> 00:28:20.367 align:middle line:-1
减少75%的内存使用

00:28:21.835 --> 00:28:24.605 align:middle line:-2
如果你想更详细地了解
此优化的工作原理

00:28:24.671 --> 00:28:27.908 align:middle line:-2
以及如何将其app于
UIView的自定义子类

00:28:28.408 --> 00:28:30.744 align:middle line:-1
可以参考“iOS内存深潜”演讲

00:28:31.378 --> 00:28:34.982 align:middle line:-2
其详细介绍了这种名为A8的
后备存储器格式

00:28:38.318 --> 00:28:42.523 align:middle line:-1
有时候 你想渲染存储在内存中

00:28:42.956 --> 00:28:45.425 align:middle line:-1
图像缓冲区中的图像

00:28:46.093 --> 00:28:49.897 align:middle line:-2
UIKit为此提供的类
是UIGraphicsImageRenderer

00:28:50.898 --> 00:28:55.369 align:middle line:-2
还有另一个更旧的函数
UIGraphicsBeginImageContext

00:28:55.435 --> 00:28:58.972 align:middle line:-2
但请不要使用它
因为只有图形图像渲染

00:28:59.039 --> 00:29:02.176 align:middle line:-1
能够正确渲染广色域内容

