WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.265 --> 00:20:01.368 align:middle line:-2
若你在Accessibility
设置中调整动态类型

00:20:01.768 --> 00:20:03.270 align:middle line:-1
到一个非常大的尺寸

00:20:03.570 --> 00:20:06.673 align:middle line:-1
然后点击并按住标签栏中的项目

00:20:07.007 --> 00:20:09.977 align:middle line:-1
将会出现一个小HUD

00:20:10.043 --> 00:20:12.846 align:middle line:-2
显示当前你的手指所按住
物体的放大视图

00:20:14.081 --> 00:20:18.151 align:middle line:-2
因此如果你希望你的图片在这样的
情境下看起来效果更好

00:20:18.752 --> 00:20:21.655 align:middle line:-1
那就选中图像素材管理器中的

00:20:21.722 --> 00:20:23.790 align:middle line:-1
“保留向量插图”复选框

00:20:23.857 --> 00:20:25.993 align:middle line:-2
抱歉 应该是
“保留矢量数据”复选框

00:20:26.793 --> 00:20:29.930 align:middle line:-2
它的工作方式与我们之前看到的
管道非常相似

00:20:30.664 --> 00:20:34.601 align:middle line:-2
只是这里不是一个解码阶段
而是一个栅格化阶段

00:20:34.668 --> 00:20:37.137 align:middle line:-1
其负责获取矢量数据

00:20:37.204 --> 00:20:40.941 align:middle line:-2
并将其转换为可复制到
帧缓冲区的位图数据

00:20:41.008 --> 00:20:42.910 align:middle line:-1
（矢量图形管道）

00:20:43.277 --> 00:20:44.978 align:middle line:-1
（矢量图形优化）

00:20:45.045 --> 00:20:46.847 align:middle line:-1
如果我们必须为你的app中

00:20:46.914 --> 00:20:50.817 align:middle line:-2
所有矢量图形进行这项操作
我们会消耗更多的CPU资源

00:20:50.884 --> 00:20:52.653 align:middle line:-1
因此我们在这里做了一个优化

00:20:53.153 --> 00:20:56.657 align:middle line:-2
如果你有一张选中了
“保留矢量数据”的图像

00:20:57.291 --> 00:20:59.626 align:middle line:-1
但你以正常尺寸渲染它

