WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:58.966 --> 00:25:01.502 align:middle line:-1
如果你这样做 你实际上将会禁用

00:25:02.102 --> 00:25:05.038 align:middle line:-1
我们在iOS 12中引入的优化

00:25:05.405 --> 00:25:08.709 align:middle line:-2
因此 请检查
layerWillDraw的实现

00:25:08.775 --> 00:25:11.478 align:middle line:-1
确保你不会意外关闭这项优化

00:25:11.545 --> 00:25:14.348 align:middle line:-2
该优化能够使你的运行
在iOS 12上的代码受益无穷

00:25:17.651 --> 00:25:20.053 align:middle line:-1
但我们可以做得比仅仅提示我们

00:25:20.120 --> 00:25:23.557 align:middle line:-2
是否需要一个支持广色域的
后备存储器更好

00:25:23.857 --> 00:25:26.293 align:middle line:-1
我们实际上可以减少

00:25:26.360 --> 00:25:27.628 align:middle line:-1
app所需的后备存储器总量

00:25:27.995 --> 00:25:32.199 align:middle line:-2
我们可以通过将这个较大的视图
重构为较小的子视图来实现这一点

00:25:32.933 --> 00:25:36.336 align:middle line:-2
并且减少或消除
重写draw函数的地方

00:25:36.403 --> 00:25:38.205 align:middle line:-1
（减少后备存储器的使用）

00:25:38.272 --> 00:25:40.974 align:middle line:-1
这将帮助我们消除

00:25:41.041 --> 00:25:42.242 align:middle line:-1
内存中图像数据的重复副本

00:25:42.876 --> 00:25:46.146 align:middle line:-2
并且这将允许我们利用
UIView的优化属性

00:25:46.213 --> 00:25:47.714 align:middle line:-1
其不需实现后备存储器

00:25:50.918 --> 00:25:53.120 align:middle line:-2
因此 正如我所提到的
重写draw方法

00:25:53.187 --> 00:25:56.223 align:middle line:-2
将需要创建一个后备存储器
以与CALayer一起使用

00:25:57.357 --> 00:25:59.726 align:middle line:-1
但是即使你不重写draw方法

00:25:59.793 --> 00:26:01.395 align:middle line:-2
UIView中的一些属性
仍然可以工作

