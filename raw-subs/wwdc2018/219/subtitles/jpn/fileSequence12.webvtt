WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:56.016 --> 00:12:00.621 align:start position:34% line:-2
CGImageの
サムネイルを生成し

00:12:00.721 --> 00:12:04.224 align:start position:30% line:-2
ヘルパー機能で
UIImageにラップ

00:12:05.959 --> 00:12:09.463 align:start position:34% line:-2
この成果を
数字で表しましょう

00:12:09.763 --> 00:12:14.368 align:start position:20% line:-2
これは3000×2000ピクセルの
写真です

00:12:14.601 --> 00:12:19.606 align:start position:21% line:-2
最適化せずStoryboardの
UIImageViewに入れると

00:12:20.040 --> 00:12:24.411 align:start position:32% line:-2
静止画の表示だけで
31.5MB必要です

00:12:25.846 --> 00:12:27.781 align:start position:32% line:-1
ダウンサンプリングで

00:12:27.881 --> 00:12:31.585 align:start position:34% line:-2
イメージバッファを
作るだけで―

00:12:32.152 --> 00:12:36.723 align:start position:30% line:-2
メモリの使用量は
18.4MBになります

00:12:36.823 --> 00:12:39.526 align:start position:32% line:-1
大幅に節約できました

00:12:41.962 --> 00:12:44.264 align:start position:43% line:-1
(拍手)

00:12:44.364 --> 00:12:48.769 align:start position:30% line:-2
この技術を使えば
皆さんも称賛されますよ

00:12:49.236 --> 00:12:53.474 align:start position:32% line:-2
アプリケーションに
大きな画像が多くても

00:12:53.574 --> 00:12:56.343 align:start position:30% line:-1
狭い場所に表示できます

00:12:56.844 --> 00:13:00.848 align:start position:34% line:-2
カメラロールを例に
ご説明しましょう

