WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:58.076 --> 00:29:00.136 A:middle
在将来的某个时刻

00:29:00.206 --> 00:29:01.576 A:middle
可以根据用户的操作

00:29:01.576 --> 00:29:02.776 A:middle
显示这些内容

00:29:04.246 --> 00:29:07.106 A:middle
我们有一个新的 API

00:29:07.106 --> 00:29:09.316 A:middle
来创建一个延迟的

00:29:09.316 --> 00:29:12.516 A:middle
可本地化字符串

00:29:12.516 --> 00:29:13.946 A:middle
它将在字符串呈现给

00:29:13.946 --> 00:29:15.306 A:middle
用户的地方进行本地化

00:29:16.006 --> 00:29:19.376 A:middle
这是必要的

00:29:19.446 --> 00:29:21.226 A:middle
因为向系统提供目标

00:29:21.226 --> 00:29:23.136 A:middle
实际上是在告诉系统

00:29:23.216 --> 00:29:25.026 A:middle
嘿 用户在我的 App 中

00:29:25.026 --> 00:29:27.696 A:middle
执行了一些操作

00:29:27.696 --> 00:29:29.886 A:middle
你可能会在

00:29:29.886 --> 00:29:31.896 A:middle
其他时候再次提供它们

00:29:33.026 --> 00:29:35.506 A:middle
幸运的是 这个 API 

00:29:35.506 --> 00:29:37.346 A:middle
非常容易使用

00:29:37.746 --> 00:29:39.976 A:middle
它只是一个添加到

00:29:39.976 --> 00:29:42.396 A:middle
nsstring 的调用

00:29:42.436 --> 00:29:43.776 A:middle
你可以使用它来包装

00:29:43.776 --> 00:29:45.856 A:middle
要分配给你在代码中

00:29:45.856 --> 00:29:49.366 A:middle
创建的目标的字符串

00:29:50.056 --> 00:29:52.786 A:middle
让我们快速讨论

00:29:52.786 --> 00:29:53.376 A:middle
一下我们所看到的

00:29:54.146 --> 00:29:56.216 A:middle
我们已经看到

00:29:56.216 --> 00:29:58.076 A:middle
Xcode 将你的快捷方式类型

00:29:58.246 --> 00:30:00.126 A:middle
与在目标定义中

