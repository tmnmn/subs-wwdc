WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.920 --> 00:12:04.491 align:middle line:-2
随着我们集中精确的数据
我们会更新这些表

00:12:05.926 --> 00:12:09.596 align:middle line:-2
现在让我们看下
当前任务是怎么运作的

00:12:10.764 --> 00:12:13.567 align:middle line:-1
用户需要听声调

00:12:14.067 --> 00:12:18.572 align:middle line:-1
在特定频率不同的分贝值

00:12:19.306 --> 00:12:20.674 align:middle line:-1
当用户听到一个声调时

00:12:20.741 --> 00:12:23.911 align:middle line:-2
他们要按下按钮
来表示他们听到了声音

00:12:24.278 --> 00:12:27.648 align:middle line:-1
这时候我们会开始降低分贝值

00:12:27.915 --> 00:12:30.284 align:middle line:-1
就像是这里的绿点所表示的那样

00:12:30.784 --> 00:12:35.222 align:middle line:-1
当用户没能在给定时间内点击按钮时

00:12:35.289 --> 00:12:39.293 align:middle line:-2
我们会如红点所示那样
开始提高分贝值

00:12:39.593 --> 00:12:41.929 align:middle line:-1
我们会将这些数据点提供给

00:12:41.995 --> 00:12:44.965 align:middle line:-1
降十升五方法来决定

00:12:45.032 --> 00:12:48.535 align:middle line:-1
用户以分贝计的听力阈值

00:12:52.005 --> 00:12:53.774 align:middle line:-1
从开发者的角度

00:12:54.041 --> 00:12:57.845 align:middle line:-1
整个声调的产生发生在三个阶段

00:12:58.445 --> 00:13:00.981 align:middle line:-1
首先第一个是预刺激延迟

