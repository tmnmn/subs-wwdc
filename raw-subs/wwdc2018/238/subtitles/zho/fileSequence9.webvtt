WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:00.526 --> 00:09:03.186 A:middle
唯一的区别在于 这里的元素

00:09:03.416 --> 00:09:04.416 A:middle
不是区块

00:09:05.036 --> 00:09:07.066 A:middle
子元素绑定 可以用于任何元素

00:09:10.166 --> 00:09:11.636 A:middle
只要你希望自动生成

00:09:11.636 --> 00:09:13.196 A:middle
全部子元素 这种解决方案

00:09:13.196 --> 00:09:14.716 A:middle
就很好

00:09:15.456 --> 00:09:16.656 A:middle
但有时 你可能

00:09:16.656 --> 00:09:18.326 A:middle
只想生成部分的

00:09:18.326 --> 00:09:19.016 A:middle
子元素

00:09:19.146 --> 00:09:20.996 A:middle
例如 这个自动

00:09:20.996 --> 00:09:22.886 A:middle
流传输 App 包含一个正在播放的

00:09:22.886 --> 00:09:23.476 A:middle
菜单条目（nowPlayingMenuItem）

00:09:24.186 --> 00:09:25.406 A:middle
这是一个

00:09:25.406 --> 00:09:27.386 A:middle
特殊菜单条目 应该

00:09:27.386 --> 00:09:29.686 A:middle
常驻菜单栏 但是

00:09:29.686 --> 00:09:32.016 A:middle
仅在后台有音频

00:09:32.016 --> 00:09:33.896 A:middle
播放时才显示

00:09:36.716 --> 00:09:38.376 A:middle
但这里 我们还是

00:09:38.376 --> 00:09:39.556 A:middle
希望菜单栏条目都能

00:09:39.556 --> 00:09:40.186 A:middle
绑定数据

00:09:40.986 --> 00:09:42.996 A:middle
为此 我们需要

00:09:42.996 --> 00:09:44.386 A:middle
将菜单栏划分为

00:09:44.386 --> 00:09:46.326 A:middle
依赖数据与不依赖数据

00:09:46.326 --> 00:09:47.006 A:middle
两部分

00:09:47.626 --> 00:09:51.776 A:middle
这里 我们就要运用片段

00:09:51.966 --> 00:09:52.946 A:middle
那么 什么是片段呢

00:09:54.376 --> 00:09:56.066 A:middle
片段是渲染器

00:09:56.216 --> 00:09:57.436 A:middle
不可见的隐形元素

00:09:58.216 --> 00:10:00.056 A:middle
它可以帮助你管理 DOM

