WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.396 --> 00:13:00.286 A:middle
展示设置过程

00:13:02.836 --> 00:13:04.286 A:middle
我们来看看 需要

00:13:04.476 --> 00:13:06.756 A:middle
什么样的规则 才能

00:13:06.756 --> 00:13:08.106 A:middle
构建我们想要的原型

00:13:08.106 --> 00:13:10.036 A:middle
实现刚才例子中的效果

00:13:10.536 --> 00:13:11.976 A:middle
首先 我们将原型

00:13:11.976 --> 00:13:13.386 A:middle
定义为 UI 预期外观的

00:13:13.386 --> 00:13:15.116 A:middle
最小公约数

00:13:15.116 --> 00:13:16.446 A:middle
也就是最基本单位

00:13:17.276 --> 00:13:18.916 A:middle
这里就包括

00:13:18.916 --> 00:13:20.016 A:middle
图像和标题

00:13:21.716 --> 00:13:23.196 A:middle
但你可能还注意到

00:13:23.196 --> 00:13:25.216 A:middle
我们还为进度条

00:13:25.216 --> 00:13:25.896 A:middle
准备了占位符

00:13:26.566 --> 00:13:28.056 A:middle
占位符也是一种

00:13:28.056 --> 00:13:29.426 A:middle
特殊元素 它对渲染器

00:13:29.426 --> 00:13:31.096 A:middle
不可见 这个例子中

00:13:31.366 --> 00:13:32.876 A:middle
规则会将占位符

00:13:32.876 --> 00:13:35.426 A:middle
作为数据状态符合时的替换目标

00:13:36.886 --> 00:13:39.026 A:middle
现在 我们将规则加入

00:13:40.136 --> 00:13:42.466 A:middle
这组规则应用于姊妹元素

00:13:42.466 --> 00:13:43.976 A:middle
包裹在 rules 标签中

00:13:47.606 --> 00:13:48.926 A:middle
匹配数据状态的

00:13:48.926 --> 00:13:51.426 A:middle
单个规则会封装成

00:13:51.516 --> 00:13:54.186 A:middle
特定元素

00:13:54.606 --> 00:13:56.776 A:middle
一旦匹配特定数据状态

00:13:56.806 --> 00:13:59.166 A:middle
特定元素就会生效

