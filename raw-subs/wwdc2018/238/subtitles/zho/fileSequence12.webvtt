WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:57.546 --> 00:12:00.526 A:middle
同样地 我们现在有两种使用情景 它们的数据

00:12:00.526 --> 00:12:02.556 A:middle
不同 同时我们也想

00:12:02.556 --> 00:12:04.416 A:middle
显示不同的外观

00:12:05.146 --> 00:12:06.756 A:middle
第一种情境中

00:12:06.756 --> 00:12:08.816 A:middle
我们有锁定的图像和标题

00:12:09.926 --> 00:12:11.556 A:middle
第二种情境中

00:12:11.556 --> 00:12:13.896 A:middle
我们添加了额外的一个叠层和进度条

00:12:17.046 --> 00:12:17.916 A:middle
一般来说

00:12:17.916 --> 00:12:19.456 A:middle
App 逻辑会根据

00:12:19.496 --> 00:12:21.126 A:middle
数据 生成不同的

00:12:21.126 --> 00:12:24.016 A:middle
x 值 但借助规则

00:12:24.016 --> 00:12:25.356 A:middle
你可以用一个

00:12:25.356 --> 00:12:27.076 A:middle
静态模板 生成

00:12:27.076 --> 00:12:28.606 A:middle
任何一种

00:12:28.636 --> 00:12:29.526 A:middle
最终文稿

00:12:31.126 --> 00:12:32.096 A:middle
那么 什么是规则

00:12:32.446 --> 00:12:35.236 A:middle
规则使用数据状态

00:12:35.236 --> 00:12:38.186 A:middle
来重新生成最终文档

00:12:38.416 --> 00:12:40.756 A:middle
从而改善 UI

00:12:41.806 --> 00:12:43.296 A:middle
规则是不可见元素

00:12:43.516 --> 00:12:44.746 A:middle
渲染器看不到规则

00:12:45.246 --> 00:12:47.236 A:middle
但规则却可以影响正在生成的文稿

00:12:49.296 --> 00:12:50.716 A:middle
规则内的任何操作

00:12:50.716 --> 00:12:53.616 A:middle
都会应用于

00:12:53.726 --> 00:12:55.476 A:middle
规则所在的姊妹元素

00:12:56.476 --> 00:12:57.756 A:middle
要展示这一点

00:12:57.756 --> 00:12:59.396 A:middle
最好的办法是举例

00:12:59.396 --> 00:13:00.286 A:middle
展示设置过程

