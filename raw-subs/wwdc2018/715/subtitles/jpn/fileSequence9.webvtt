WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:58.505 --> 00:09:05.846 align:start position:21% line:-2
ローカルデバイスから
サーバやピアデバイスへ接続します

00:09:07.047 --> 00:09:12.486 align:start position:18% line:-2
Network.frameworkに
適した接続とは？

00:09:12.586 --> 00:09:14.188 align:start position:36% line:-1
ユースケースは？

00:09:14.521 --> 00:09:20.360 align:start position:9% line:-2
ソケットをNetwork.frameworkに
替える利点は大きいです

00:09:20.460 --> 00:09:25.299 align:start position:25% line:-2
その恩恵を得られる
１つ目のシナリオを紹介します

00:09:26.867 --> 00:09:30.604 align:start position:32% line:-2
まずはゲームの
アプリケーションです

00:09:30.971 --> 00:09:33.674 align:start position:34% line:-1
大抵はUDPを使い

00:09:33.774 --> 00:09:38.779 align:start position:21% line:-2
デバイス間で
リアルタイムのデータを送信します

00:09:39.446 --> 00:09:45.219 align:start position:21% line:-2
通常はレイテンシを最適化し
ラグやデータの損失を抑えています

00:09:45.953 --> 00:09:52.759 align:start position:16% line:-2
Network.frameworkでは
UDPを最適化して

00:09:52.860 --> 00:09:58.866 align:start position:30% line:-2
送受信の時間を非常に
速くすることができます

