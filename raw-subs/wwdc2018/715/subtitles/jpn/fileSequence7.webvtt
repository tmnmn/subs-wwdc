WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.552 --> 00:07:04.992 align:start position:25% line:-2
ソケットは全てにおいて
細かいコントロールが可能です

00:07:05.092 --> 00:07:06.593 align:start position:38% line:-1
そこは利点です

00:07:07.294 --> 00:07:13.667 align:start position:14% line:-2
ソケットより優れた機能を持った
Network.frameworkですが

00:07:13.767 --> 00:07:17.504 align:start position:34% line:-2
“取っ手”は残し
調節可能にしました

00:07:17.704 --> 00:07:21.808 align:start position:21% line:-2
取っ手を回すほど
複雑なコントロールができるのです

00:07:21.909 --> 00:07:27.648 align:start position:27% line:-2
必要な力だけを得られるので
無駄な複雑さを避けられます

00:07:30.284 --> 00:07:34.421 align:start position:18% line:-2
Network.frameworkは
スマートな接続の確立が可能です

00:07:34.755 --> 00:07:38.692 align:start position:27% line:-2
デュアルスタックや
IPv6のみのネットワーク

00:07:38.792 --> 00:07:41.495 align:start position:23% line:-1
PAC プロキシを処理できます

00:07:41.595 --> 00:07:46.533 align:start position:23% line:-2
他では扱いにくい
ネットワークの接続に役立ちます

00:07:47.000 --> 00:07:50.103 align:start position:36% line:-2
最適化された
データ転送パスは

00:07:50.204 --> 00:07:55.075 align:start position:21% line:-2
ソケットの全ての
パフォーマンスを超えているのです

00:07:56.210 --> 00:08:01.248 align:start position:21% line:-2
セキュリティ機能に対応し
TLSとDTLSを標準でサポート

