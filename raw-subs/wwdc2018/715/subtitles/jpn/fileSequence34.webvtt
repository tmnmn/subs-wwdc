WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.439 --> 00:34:05.045 align:start position:9% line:-2
まず connection.sendを呼び出し
データを受け渡します

00:34:05.679 --> 00:34:12.920 align:start position:21% line:-2
ソケットでの送信に慣れているなら
ブロッキングソケットを使います

00:34:13.020 --> 00:34:17.091 align:start position:29% line:-2
大容量のデータがあったり
空き容量がない場合

00:34:17.190 --> 00:34:24.063 align:start position:27% line:-2
スレッドが遮断されるか
接続が消えるまで待機します

00:34:25.032 --> 00:34:27.967 align:start position:30% line:-1
非ブロッキングの場合は

00:34:28.835 --> 00:34:31.672 align:start position:34% line:-1
全データを送れずに

00:34:31.772 --> 00:34:36.143 align:start position:32% line:-2
50バイトずつ分けて
送る場合もあり得ます

00:34:36.409 --> 00:34:42.949 align:start position:29% line:-2
その場合は多くの状態を
操作しなければいけません

00:34:44.451 --> 00:34:50.090 align:start position:25% line:-2
ネットワーク接続なら一度に
全てのデータの送信が可能です

00:34:50.524 --> 00:34:52.192 align:start position:34% line:-1
並列処理ができます

00:34:52.993 --> 00:34:57.063 align:start position:29% line:-2
しかし バックアップ中の
事象には対処が必要です

00:34:57.164 --> 00:35:01.635 align:start position:30% line:-2
ライブ配信データの速い
やりとりのために

