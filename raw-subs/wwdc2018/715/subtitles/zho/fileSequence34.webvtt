WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.439 --> 00:34:01.074 align:middle line:-1
你在连接上发送它的方式

00:34:01.141 --> 00:34:03.477 align:middle line:-2
是通过调用
connection.send()

00:34:03.544 --> 00:34:04.811 align:middle line:-1
并传入该数据

00:34:05.712 --> 00:34:10.217 align:middle line:-2
如果你习惯在连接上
使用套接字发送数据

00:34:10.851 --> 00:34:13.020 align:middle line:-1
你要么使用阻塞套接字

00:34:13.085 --> 00:34:14.755 align:middle line:-1
在这种情况下

00:34:15.121 --> 00:34:16.889 align:middle line:-1
如果你要发送100个字节的数据

00:34:17.224 --> 00:34:20.960 align:middle line:-2
如果发送缓冲区中没有空间
它实际上会阻塞你的线程

00:34:21.027 --> 00:34:23.830 align:middle line:-1
并等待网络连接消耗掉这些数据

00:34:25.065 --> 00:34:27.701 align:middle line:-1
或者 如果你使用的是非阻塞套接字

00:34:28.869 --> 00:34:31.772 align:middle line:-2
该发送过程实际上可能
不会发送你的全部数据

00:34:31.839 --> 00:34:33.639 align:middle line:-2
它会说
“哦 我先只发送50个字节

00:34:33.706 --> 00:34:35.909 align:middle line:-1
过一段时间再发送剩下的50字节”

00:34:36.443 --> 00:34:39.346 align:middle line:-1
这要求你和你的app需要处理很多

00:34:39.612 --> 00:34:42.783 align:middle line:-1
关于你实际发送了多少数据的状态

00:34:44.484 --> 00:34:46.085 align:middle line:-2
所以NWConnection
的好处在于

00:34:46.152 --> 00:34:48.388 align:middle line:-1
你可以一次发送所有数据

00:34:48.455 --> 00:34:49.822 align:middle line:-1
你不必担心这些问题

00:34:50.524 --> 00:34:51.992 align:middle line:-1
并且它不会阻塞任何东西

00:34:53.025 --> 00:34:54.795 align:middle line:-1
然而你必须处理

00:34:55.195 --> 00:34:57.164 align:middle line:-1
如果连接正在恢复该怎么办

00:34:57.231 --> 00:35:00.634 align:middle line:-2
因为我们不想不必要地
将大量数据

