WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:59.313 --> 00:03:01.248 align:middle line:-1
这真的很难做好

00:03:01.949 --> 00:03:03.150 align:middle line:-1
最困难的事情

00:03:03.217 --> 00:03:05.419 align:middle line:-1
是你可能没有其中一个网络以供测试

00:03:05.619 --> 00:03:08.288 align:middle line:-2
所以你可能会收到
一位客户的错误报告

00:03:08.555 --> 00:03:10.757 align:middle line:-1
他们可能会抱怨它在他们的环境下

00:03:10.824 --> 00:03:11.859 align:middle line:-1
无法正常工作

00:03:12.092 --> 00:03:14.194 align:middle line:-1
你可能想要添加代码来解决问题

00:03:14.695 --> 00:03:15.529 align:middle line:-1
但…

00:03:15.729 --> 00:03:16.730 align:middle line:-1
尽管你修改了代码

00:03:16.797 --> 00:03:18.265 align:middle line:-1
你却无法测试它

00:03:18.332 --> 00:03:20.100 align:middle line:-1
你最终必须构建整个环境

00:03:20.167 --> 00:03:22.002 align:middle line:-1
来重现其所在的相同环境

00:03:22.503 --> 00:03:23.971 align:middle line:-1
这是一个真正的挑战

00:03:24.738 --> 00:03:27.074 align:middle line:-1
所以用套接字连接真的很难

00:03:28.542 --> 00:03:30.978 align:middle line:-1
使用套接字的第二个挑战

00:03:31.044 --> 00:03:32.346 align:middle line:-1
是数据传输

00:03:32.946 --> 00:03:35.449 align:middle line:-1
使用套接字传输数据非常困难

00:03:35.516 --> 00:03:36.583 align:middle line:-1
这有很多原因

00:03:37.885 --> 00:03:41.722 align:middle line:-1
主要的问题是读写模型本身

00:03:42.656 --> 00:03:45.259 align:middle line:-2
如果你使用阻塞套接字
那很简单

00:03:45.759 --> 00:03:46.960 align:middle line:-1
但是你要绑定一个线程

00:03:47.094 --> 00:03:49.730 align:middle line:-2
而在等待读取或写入数据时
绑定一个线程

00:03:49.796 --> 00:03:51.431 align:middle line:-1
真的不是一个好主意

00:03:52.099 --> 00:03:54.301 align:middle line:-1
你可以切换到非阻塞

00:03:54.368 --> 00:03:56.470 align:middle line:-1
但最终你会遇到更多其它挑战

00:03:57.371 --> 00:03:58.605 align:middle line:-1
当你使用非阻塞时

00:03:58.672 --> 00:04:00.707 align:middle line:-2
你可能告诉内核
我想要100个字节

