WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:58.585 --> 00:42:00.187 align:middle line:0
较低优先级的好方法

00:42:00.254 --> 00:42:03.624 align:middle line:0
我们不希望它妨碍用户交互式数据

00:42:03.957 --> 00:42:06.560 align:middle line:0
所以如果你需要后台数据传输
我们真的很鼓励你

00:42:06.793 --> 00:42:09.096 align:middle line:0
将它们标记为后台服务类

00:42:10.731 --> 00:42:14.401 align:middle line:0
但你也可以对那些UDP连接
在每个数据包的基础上

00:42:14.635 --> 00:42:16.136 align:middle line:0
标记服务类

00:42:16.904 --> 00:42:18.505 align:middle line:0
假设你有一个连接

00:42:18.705 --> 00:42:22.176 align:middle line:0
其中在同一个UDP流上包含

00:42:22.242 --> 00:42:23.810 align:middle line:0
语音和信号数据

00:42:24.878 --> 00:42:28.515 align:middle line:0
在这种情况下
你可以创建我之前介绍的

00:42:28.582 --> 00:42:29.950 align:middle line:0
ipMetadata对象

00:42:30.517 --> 00:42:33.554 align:middle line:0
在这里标记你的服务类
而不是之前的ECN标志

00:42:34.121 --> 00:42:36.223 align:middle line:0
将其附加到context上
然后将其发送出去

00:42:36.456 --> 00:42:39.493 align:middle line:0
这样你就在每个数据包的基础上
标记了优先级

00:42:43.096 --> 00:42:45.098 align:middle line:0
你可以优化连接的另一种方式

00:42:45.866 --> 00:42:49.303 align:middle line:-1
是减少为了建立它们所需的往返次数

00:42:50.103 --> 00:42:52.372 align:middle line:-2
所以在这里我想强调
两种方法来做到这一点

00:42:53.073 --> 00:42:56.109 align:middle line:-1
第一种是在你的连接上启用快速打开

00:42:56.677 --> 00:42:59.680 align:middle line:-1
TCP快速打开允许你

00:42:59.980 --> 00:43:03.517 align:middle line:-2
在TCP发出的第一个数据包中
发送初始数据

