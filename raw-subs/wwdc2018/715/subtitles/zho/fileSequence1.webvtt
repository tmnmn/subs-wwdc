WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:56.957 --> 00:01:00.127 align:middle line:-1
并提供远超套接字所能提供的性能

00:01:01.261 --> 00:01:02.663 align:middle line:-1
我们将讨论这个API

00:01:02.729 --> 00:01:05.232 align:middle line:-2
如何帮助你应对
一些复杂的移动性挑战

00:01:05.399 --> 00:01:07.935 align:middle line:-2
最后我们将提供一些
关于你如何参与进来

00:01:08.001 --> 00:01:09.269 align:middle line:-1
并开始使用的信息

00:01:10.270 --> 00:01:11.104 align:middle line:-1
首先…

00:01:11.238 --> 00:01:15.108 align:middle line:-2
我想花一点时间谈论
现代化传输API

00:01:15.642 --> 00:01:17.177 align:middle line:-1
当我说传输API时

00:01:17.244 --> 00:01:19.112 align:middle line:-1
我在谈论这样的API

00:01:19.179 --> 00:01:21.381 align:middle line:-1
即它可以让你在网络上两个端点之间

00:01:21.448 --> 00:01:23.350 align:middle line:-1
发送和接收任意数据

00:01:23.684 --> 00:01:25.152 align:middle line:-1
这是一个相当广泛的定义

00:01:25.219 --> 00:01:28.188 align:middle line:-1
有很多API可能属于此类别

00:01:30.290 --> 00:01:32.659 align:middle line:-1
也许其中应用最广泛的就是套接字

00:01:32.826 --> 00:01:35.229 align:middle line:-1
我们使用套接字已经有30多年了

00:01:35.395 --> 00:01:36.897 align:middle line:-1
而且我认为

00:01:36.964 --> 00:01:38.899 align:middle line:-1
说套接字改变了世界并不夸张

00:01:39.266 --> 00:01:40.801 align:middle line:-1
但世界一直在变化

00:01:41.068 --> 00:01:42.202 align:middle line:-1
其结果是

00:01:42.736 --> 00:01:46.840 align:middle line:-2
使用套接字为今天的互联网
编写app真的很难

00:01:47.241 --> 00:01:50.410 align:middle line:-2
在三个主要领域中
若想很好地使用套接字

00:01:50.477 --> 00:01:51.812 align:middle line:-1
非常困难

00:01:53.146 --> 00:01:55.249 align:middle line:-1
第一个是建立连接

00:01:55.516 --> 00:01:58.986 align:middle line:-1
有很多原因导致使用套接字

00:01:59.119 --> 00:02:00.954 align:middle line:-1
来建立连接非常困难

