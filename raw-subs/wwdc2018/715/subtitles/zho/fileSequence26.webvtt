WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:00.027 --> 00:26:01.361 align:middle line:-1
我们稍后再实现它

00:26:02.596 --> 00:26:05.566 align:middle line:-2
因为我们使用的是UDP
并且没有其它握手过程

00:26:05.866 --> 00:26:08.936 align:middle line:-1
我们将一些数据通过网络发送到

00:26:09.536 --> 00:26:10.504 align:middle line:-1
其它设备

00:26:10.838 --> 00:26:12.372 align:middle line:-1
并在我们开始生成大量视频帧

00:26:12.506 --> 00:26:14.541 align:middle line:-1
并将其放到网络中之前

00:26:14.608 --> 00:26:15.909 align:middle line:-1
等待它的回应

00:26:19.413 --> 00:26:22.082 align:middle line:-2
我们需要记住在我们的连接上
调用start()

00:26:22.316 --> 00:26:24.351 align:middle line:-1
并且传入上面创建的队列

00:26:26.153 --> 00:26:27.688 align:middle line:-2
让我们实现
sendInitialFrame()

00:26:32.392 --> 00:26:34.962 align:middle line:-2
这里我们使用
文字字节“hello”

00:26:35.229 --> 00:26:37.097 align:middle line:-1
创建一个数据对象

00:26:38.065 --> 00:26:39.766 align:middle line:-1
要在连接上发送内容

00:26:40.133 --> 00:26:41.768 align:middle line:-2
我们可以调用
connection.send()

00:26:41.969 --> 00:26:44.671 align:middle line:-1
并提供该数据对象作为内容

00:26:45.772 --> 00:26:49.243 align:middle line:-2
我们提供了一个完成处理程序
以便检查发送过程中

00:26:49.409 --> 00:26:51.211 align:middle line:-1
可能遇到的错误

00:26:53.113 --> 00:26:55.816 align:middle line:-2
由于我们预期该内容可以
立即得到回应

00:26:55.883 --> 00:26:58.285 align:middle line:-2
我们马上调用
connection.receive()

00:26:58.485 --> 00:27:00.754 align:middle line:-1
来从连接中读取传入的数据

