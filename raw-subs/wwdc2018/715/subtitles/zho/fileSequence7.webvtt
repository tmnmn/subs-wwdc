WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:58.552 --> 00:07:01.154 align:middle line:-1
我们知道人们喜欢套接字的原因之一

00:07:01.221 --> 00:07:04.825 align:middle line:-2
是它给予人们
对几乎所有东西的精细控制

00:07:05.125 --> 00:07:06.527 align:middle line:-1
而他们真的不想失去这点

00:07:07.294 --> 00:07:08.896 align:middle line:-2
因此我们在开发
Network.framework时

00:07:08.962 --> 00:07:11.932 align:middle line:-2
我们希望确保默认情况下
它能做正确的事情

00:07:12.065 --> 00:07:13.534 align:middle line:-1
而套接字不会这样做

00:07:13.800 --> 00:07:16.303 align:middle line:-2
但同时它也给了你
套接字的所有功能

00:07:16.470 --> 00:07:20.207 align:middle line:-2
并且它是以一种渐进的方式
即你转动的旋钮越多

00:07:20.274 --> 00:07:21.575 align:middle line:-1
它变得越复杂

00:07:22.142 --> 00:07:23.744 align:middle line:-1
它为你提供所需的所有功能

00:07:24.044 --> 00:07:25.746 align:middle line:-1
但你不必为复杂性付出代价

00:07:25.812 --> 00:07:27.548 align:middle line:-1
除非你真的需要它

00:07:30.317 --> 00:07:34.154 align:middle line:-2
Network.framework
具有令人难以置信的智能连接搭建过程

00:07:34.755 --> 00:07:36.823 align:middle line:-1
它能处理双协议栈用例

00:07:36.890 --> 00:07:38.592 align:middle line:-1
它能处理仅IPv6网络

00:07:38.825 --> 00:07:39.793 align:middle line:-1
它能处理PAC

00:07:39.860 --> 00:07:41.128 align:middle line:-1
它也能处理代理

00:07:41.595 --> 00:07:42.429 align:middle line:-1
它会…

00:07:42.729 --> 00:07:45.666 align:middle line:-1
帮助你连接在不使用它的情况下

00:07:45.732 --> 00:07:46.567 align:middle line:-1
很难处理的网络

00:07:47.034 --> 00:07:49.937 align:middle line:-2
它具有令人难以置信的
优化数据传输路径

00:07:50.237 --> 00:07:51.939 align:middle line:-1
其性能要远远超过

00:07:52.005 --> 00:07:54.808 align:middle line:-2
套接字可以达到的效果
稍后Tommy会介绍一下这点

00:07:56.210 --> 00:07:57.945 align:middle line:-1
它支持内置安全性

00:07:58.245 --> 00:08:01.281 align:middle line:-1
它默认支持TLS和DTLS

