WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:00.033 --> 00:15:01.301 align:middle line:-1
连接已经完全建立

00:15:01.802 --> 00:15:04.471 align:middle line:-1
如果你使用的是TCP和TLS

00:15:04.538 --> 00:15:06.507 align:middle line:-1
这意味着TLS握手已完成

00:15:08.342 --> 00:15:11.345 align:middle line:-1
我们也会告知你等待状态

00:15:11.778 --> 00:15:16.416 align:middle line:-2
去年在URLSession中
我们引入了waitsForConnectivity

00:15:16.583 --> 00:15:20.153 align:middle line:-2
而NWConnection的
等待状态与之完全相同

00:15:20.420 --> 00:15:22.556 align:middle line:-1
而且默认情况下它始终处于启用状态

00:15:22.789 --> 00:15:24.758 align:middle line:-1
因此当你创建连接并启动它时

00:15:24.825 --> 00:15:27.828 align:middle line:-2
如果没有可用的网络
我们不会失败

00:15:28.095 --> 00:15:30.664 align:middle line:-2
我们只是告诉你
我们正在等待网络变为可用

00:15:30.731 --> 00:15:32.833 align:middle line:-1
我们会给你一个有用的原因代码

00:15:33.300 --> 00:15:36.803 align:middle line:-2
但你不必再做任何其它事情
来自己处理网络切换

00:15:37.404 --> 00:15:40.607 align:middle line:-1
移动性是此API的重要组成部分

00:15:41.842 --> 00:15:44.144 align:middle line:-1
如果出现严重错误 我们也会通知你

00:15:44.211 --> 00:15:47.247 align:middle line:-2
假设我们必须从服务器重置
或TLS失败了

00:15:47.314 --> 00:15:49.116 align:middle line:-1
我们会将其作为失败事件告知你

00:15:50.517 --> 00:15:51.652 align:middle line:-1
一旦你设置好了这些

00:15:52.252 --> 00:15:53.487 align:middle line:-1
只需调用start()

00:15:53.754 --> 00:15:58.358 align:middle line:-1
并提供你希望接收回调的调度队列

