WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:58.699 --> 00:05:00.434 align:middle line:-1
而且它们只用一根网线连接

00:05:00.501 --> 00:05:03.904 align:middle line:-2
并且它们只有一个静态IP地址
一切都很稳定和简单

00:05:04.304 --> 00:05:08.375 align:middle line:-2
而今天我们的口袋里
装有这些功能强大的设备

00:05:08.442 --> 00:05:11.612 align:middle line:-1
其可能同时开启多射频

00:05:11.945 --> 00:05:14.381 align:middle line:-2
并且其中一些正在从一个网络
迁移到另一个网络

00:05:14.515 --> 00:05:17.317 align:middle line:-2
而你的app必须很好地处理
所有这些转换

00:05:17.384 --> 00:05:19.686 align:middle line:-1
来为你的客户提供无缝体验

00:05:22.656 --> 00:05:24.925 align:middle line:-1
套接字无法帮你解决此问题

00:05:25.092 --> 00:05:28.161 align:middle line:-2
你可以使用路由套接字
但这非常非常困难

00:05:28.495 --> 00:05:30.631 align:middle line:-1
我们认为传输API可以做得更好

00:05:32.165 --> 00:05:35.469 align:middle line:-2
幸运的是 在我们的平台上
作为app开发者

00:05:35.536 --> 00:05:38.071 align:middle line:-2
你在URLSession中
有一个很棒的API

00:05:39.006 --> 00:05:42.409 align:middle line:-2
URLSession
为你处理所有这些问题

00:05:43.110 --> 00:05:46.346 align:middle line:-2
它真正专注于HTTP
但它也有流任务

00:05:46.547 --> 00:05:49.917 align:middle line:-2
它能为你提供
对TCP和TLS连接的原始访问

00:05:51.151 --> 00:05:52.486 align:middle line:-1
现在你可能正在看这幅图

00:05:52.786 --> 00:05:55.222 align:middle line:-1
并且如果你没有通过查看

00:05:55.289 --> 00:05:56.590 align:middle line:-1
WWDC app中的描述而作弊

00:05:56.924 --> 00:06:00.527 align:middle line:-2
你可能认为URLSession
是基于与你自己使用的

