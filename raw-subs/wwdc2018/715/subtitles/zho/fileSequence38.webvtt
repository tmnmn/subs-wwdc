WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:00.547 --> 00:38:03.984 align:middle line:-2
因此你想首先读取该头部
然后读取你的其它内容

00:38:04.251 --> 00:38:05.586 align:middle line:-1
也许你的内容很长

00:38:05.652 --> 00:38:07.754 align:middle line:-1
假设有几兆字节

00:38:08.956 --> 00:38:12.159 align:middle line:-2
使用传统的套接字时
你可能会尝试读取10个字节

00:38:12.626 --> 00:38:14.428 align:middle line:-1
你可能得到10个字节或更少

00:38:14.494 --> 00:38:16.463 align:middle line:-2
你须继续读取
直到获得正好10个字节

00:38:16.530 --> 00:38:17.364 align:middle line:-1
从而读取头部信息

00:38:17.965 --> 00:38:20.167 align:middle line:-1
然后你还要读取几兆字节

00:38:20.534 --> 00:38:21.435 align:middle line:-1
你会读取一些数据

00:38:21.502 --> 00:38:23.136 align:middle line:-1
进行一大堆不同的read调用

00:38:23.203 --> 00:38:26.607 align:middle line:-2
并且需要在你的app
和堆栈之间来回切换

00:38:28.575 --> 00:38:31.612 align:middle line:-2
使用NWConnection的情况下
当你调用receive()时

00:38:32.212 --> 00:38:35.682 align:middle line:-1
你可以提供你想要接收的最小数据

00:38:35.749 --> 00:38:36.950 align:middle line:-1
和最大数据

00:38:37.618 --> 00:38:40.687 align:middle line:-2
所以你实际上可以指定
如果你想要接收正好10字节的话

00:38:40.754 --> 00:38:42.689 align:middle line:-2
因为那是你的协议所规定的
你可以说

00:38:43.090 --> 00:38:45.392 align:middle line:-2
“我想要最小10字节
最大10字节

00:38:45.459 --> 00:38:46.793 align:middle line:-1
即给我正好10个字节”

00:38:47.194 --> 00:38:48.829 align:middle line:-1
而我们只会在以下情况发生时

00:38:49.162 --> 00:38:52.466 align:middle line:-2
才对你进行回调
即要么从连接读取数据发生错误

00:38:52.799 --> 00:38:55.035 align:middle line:-1
要么我们正好读了10个字节

00:38:55.502 --> 00:38:57.971 align:middle line:-1
然后你就可以读取

00:38:58.038 --> 00:39:00.674 align:middle line:-1
头部中你需要的内容 比如长度

