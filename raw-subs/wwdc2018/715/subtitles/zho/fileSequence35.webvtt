WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.231 --> 00:35:00.634 align:middle line:-2
因为我们不想不必要地
将大量数据

00:35:00.701 --> 00:35:01.735 align:middle line:-1
发送到此连接

00:35:01.802 --> 00:35:05.138 align:middle line:-2
如果你想要一个响应性强的
实时数据流的话

00:35:06.240 --> 00:35:07.274 align:middle line:-1
这里的关键

00:35:07.741 --> 00:35:09.543 align:middle line:-1
是我们提供给你的回调块

00:35:10.244 --> 00:35:12.179 align:middle line:-2
它被称为
contentProcessed

00:35:12.679 --> 00:35:17.050 align:middle line:-2
每当网络栈消耗你的数据时
我们都会调用它

00:35:17.551 --> 00:35:20.254 align:middle line:-1
这并不意味着必须发送数据

00:35:20.320 --> 00:35:21.822 align:middle line:-1
或另一方进行确认

00:35:22.055 --> 00:35:25.959 align:middle line:-1
它完全等同于阻塞套接字的调用

00:35:26.026 --> 00:35:27.127 align:middle line:-1
返回的情况

00:35:27.461 --> 00:35:30.998 align:middle line:-2
或非阻塞套接字
能够消耗你发送的

00:35:31.064 --> 00:35:31.965 align:middle line:-1
所有字节的情况

00:35:33.333 --> 00:35:36.737 align:middle line:-2
在此完成处理程序中
你可以检查两件事

00:35:37.471 --> 00:35:38.305 align:middle line:-1
首先

00:35:38.372 --> 00:35:39.506 align:middle line:-1
你可以检查错误

00:35:39.907 --> 00:35:40.774 align:middle line:-1
如果有错误

00:35:40.841 --> 00:35:43.277 align:middle line:-2
这意味着在我们尝试发送你的数据时
出现了问题

00:35:43.610 --> 00:35:46.346 align:middle line:-1
这通常表示整体连接失败

00:35:47.948 --> 00:35:51.919 align:middle line:-2
然后 如果没有错误
这是一个绝佳的机会

00:35:52.152 --> 00:35:55.956 align:middle line:-2
来查看你的app中
是否有更多数据要生成

00:35:56.023 --> 00:35:58.892 align:middle line:-1
所以如果你正在生成实时数据帧

00:35:59.593 --> 00:36:01.562 align:middle line:-2
你应该发送它并从视频流中
获取另一帧

