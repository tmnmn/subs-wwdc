WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:57.251 --> 00:12:00.087 align:middle line:-2
你有一个要连接的端口
即端口993

00:12:00.687 --> 00:12:03.757 align:middle line:-2
并且你希望使用TLS
以及TCP协议

00:12:05.058 --> 00:12:07.594 align:middle line:-1
那么传统的套接字是如何做的呢

00:12:08.362 --> 00:12:09.997 align:middle line:-1
这样的事情开始了

00:12:10.397 --> 00:12:11.565 align:middle line:-1
你得到该主机名

00:12:11.999 --> 00:12:14.868 align:middle line:-2
你会调用一些DNS API
来解析该主机名

00:12:15.068 --> 00:12:16.770 align:middle line:-1
若它是getaddrinfo()

00:12:17.271 --> 00:12:19.072 align:middle line:-1
你将得到一个或多个地址

00:12:19.139 --> 00:12:21.642 align:middle line:-1
你必须决定要先连接哪一个

00:12:22.476 --> 00:12:25.345 align:middle line:-2
你将调用socket()
附带适当的地址族

00:12:26.346 --> 00:12:28.715 align:middle line:-1
你将设置一系列套接字选项

00:12:29.049 --> 00:12:33.020 align:middle line:-2
假设你希望使用非阻塞套接字
像Josh之前提到的那样

00:12:34.655 --> 00:12:39.159 align:middle line:-2
调用connect()启动TCP
然后等待可写事件

00:12:39.927 --> 00:12:42.429 align:middle line:-2
而且这是在你使用TLS
做任何事情之前

00:12:42.496 --> 00:12:44.531 align:middle line:-1
那又是一大堆其它问题

00:12:46.400 --> 00:12:48.535 align:middle line:-2
这在Network.framework中
看起来如何呢？

00:12:48.669 --> 00:12:50.938 align:middle line:-1
我们希望它看起来很熟悉

00:12:51.905 --> 00:12:53.106 align:middle line:-1
但更简单一些

00:12:53.707 --> 00:12:56.276 align:middle line:-2
所以你做的第一件事
就是创建一个连接对象

00:12:56.343 --> 00:12:58.812 align:middle line:-1
连接对象基于两件事

00:12:59.046 --> 00:12:59.980 align:middle line:-1
第一个是端点

