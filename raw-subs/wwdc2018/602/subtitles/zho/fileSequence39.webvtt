WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:56.436 --> 00:39:00.407 align:middle line:-2
对于以前只能检测到的图像
现在可以进行跟踪了

00:39:02.276 --> 00:39:05.679 align:middle line:-2
我们有了一个新的配置
即ARImageTrackingConfiguration

00:39:05.746 --> 00:39:08.048 align:middle line:-1
它可以执行独立的图像跟踪

00:39:08.949 --> 00:39:12.586 align:middle line:-1
这意味着它独立于世界跟踪

00:39:12.653 --> 00:39:15.522 align:middle line:-1
而不依赖运动传感器来进行跟踪

00:39:16.123 --> 00:39:20.227 align:middle line:-2
这意味着此配置在开始识别图像之前
不会初始化

00:39:20.561 --> 00:39:25.165 align:middle line:-1
并且可以在无法进行世界跟踪的

00:39:25.232 --> 00:39:26.733 align:middle line:-1
场景中成功识别

00:39:26.800 --> 00:39:30.170 align:middle line:-1
如电梯或火车等移动平台

00:39:31.438 --> 00:39:35.843 align:middle line:-2
在这种情况下 ARKit将以
每秒60帧的速度

00:39:35.909 --> 00:39:38.178 align:middle line:-1
估算每帧的位置和方向

00:39:39.313 --> 00:39:43.116 align:middle line:-2
并且只需四行简单代码
就可以完成这项工作

00:39:43.951 --> 00:39:46.987 align:middle line:-1
你需要做的是首先创建一个

00:39:47.054 --> 00:39:50.457 align:middle line:-2
类型为ARImageTracking
Configuration的配置

00:39:50.524 --> 00:39:52.626 align:middle line:-1
并指定想要跟踪的一组图像

00:39:53.093 --> 00:39:57.297 align:middle line:-2
在这个例子中
我指定了猫、狗和鸟的照片

00:39:59.466 --> 00:40:02.569 align:middle line:-1
我告诉配置我要跟踪的图像数量

