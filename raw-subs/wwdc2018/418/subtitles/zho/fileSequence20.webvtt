WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:56.630 --> 00:20:00.567 align:middle line:-2
你可以在同一服务器上
创建存储库的多个副本

00:20:02.236 --> 00:20:07.207 align:middle line:-1
当存在一个严格管理的规范副本时

00:20:07.274 --> 00:20:10.210 align:middle line:-1
例如大型开源项目 这通常是有用的

00:20:11.044 --> 00:20:14.047 align:middle line:-1
分叉对于在不破坏主副本的情况下

00:20:14.114 --> 00:20:16.049 align:middle line:-1
进行实验性更改是很有用的

00:20:16.817 --> 00:20:20.721 align:middle line:-2
当有许多因素时
这可能比一个分支更有用

00:20:20.787 --> 00:20:23.690 align:middle line:-2
因为每个分叉都可以
有自己的命名分支

00:20:23.757 --> 00:20:26.927 align:middle line:-1
从而最小化主存储库中的噪声

00:20:27.794 --> 00:20:31.331 align:middle line:-2
就像本地副本一样
分叉可以与主副本同步

00:20:31.832 --> 00:20:36.303 align:middle line:-2
这通常是以PR的形式进行的
也是拉取请求得到其名字的地方

00:20:36.837 --> 00:20:41.975 align:middle line:-2
Xcode和Git允许在本地
存储库上设置多个远程处理程序

00:20:42.442 --> 00:20:45.245 align:middle line:-1
因此你可以从机器上的

00:20:45.612 --> 00:20:47.447 align:middle line:-1
同一份本地副本中同步主和分叉

00:20:50.050 --> 00:20:53.654 align:middle line:-2
这涵盖了在Xcode中
使用源代码控制和Git的基本知识

00:20:53.720 --> 00:20:54.688 align:middle line:-1
（总结）

00:20:54.755 --> 00:20:57.624 align:middle line:-2
我们已经看到了如何在本地
使用Git来管理你的项目

00:20:58.258 --> 00:21:01.428 align:middle line:-2
我们已经了解了如何
在你的项目中进行和查看更改

