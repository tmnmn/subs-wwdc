WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.091 --> 00:11:02.729 align:middle line:-1
通常 Git的SSH连接

00:11:02.796 --> 00:11:04.464 align:middle line:-1
是使用在每台机器上生成的

00:11:05.265 --> 00:11:07.434 align:middle line:-1
公钥和私钥对来保护的

00:11:08.535 --> 00:11:12.506 align:middle line:-2
然后将这一对的公共部分
上传到托管站点

00:11:13.240 --> 00:11:16.844 align:middle line:-2
这意味着每台机器
都很容易拥有一套钥匙

00:11:16.910 --> 00:11:18.946 align:middle line:-1
甚至每个服务都有一个

00:11:19.413 --> 00:11:23.317 align:middle line:-2
这样就可以比密码更容易
管理和撤销它们

00:11:25.118 --> 00:11:29.389 align:middle line:-2
Xcode可以帮助你轻松地
完成SSH的这些设置步骤

00:11:30.057 --> 00:11:34.461 align:middle line:-2
当你登录一个帐户
但尚未在本地创建SSH密钥对时

00:11:34.862 --> 00:11:36.763 align:middle line:-1
Xcode将提供创建一对

00:11:38.298 --> 00:11:42.803 align:middle line:-2
SSH密钥的私有部分
应由传递短语保护

00:11:43.737 --> 00:11:48.175 align:middle line:-2
这增加了一个额外的安全层
并防止它被使用

00:11:48.242 --> 00:11:51.912 align:middle line:-2
即使在其他人获得你的
私钥副本的情况下也是如此

00:11:54.248 --> 00:11:58.418 align:middle line:-2
一旦创建了密钥对
Xcode还可以

00:11:58.485 --> 00:12:02.155 align:middle line:-2
将密钥的公共部分
直接上传到托管站点

