WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:00.280 --> 00:18:03.383 align:middle line:-2
在这里我们看到了
以前看到过的“更改栏”

00:18:04.084 --> 00:18:07.821 align:middle line:-1
当上游的更改正在显示时会变成红色

00:18:07.888 --> 00:18:11.058 align:middle line:-1
以表示我们的同事在哪里进行更改

00:18:11.725 --> 00:18:14.628 align:middle line:-1
意味着必须解决冲突

00:18:14.695 --> 00:18:16.396 align:middle line:-1
才能重新整合本地更改

00:18:17.064 --> 00:18:21.034 align:middle line:-2
在许多情况下在对已经进行
上游更改的文件进行更改之前

00:18:21.101 --> 00:18:22.903 align:middle line:-1
可以更容易地将其拉取出来

00:18:24.705 --> 00:18:29.176 align:middle line:0
有关冲突提交的一些细节可以通过
单击“更改栏”来查看

00:18:32.346 --> 00:18:34.815 align:middle line:-1
Xcode支持的所有托管解决方案

00:18:34.882 --> 00:18:39.520 align:middle line:-2
还支持另外两个常见的工作流：
拉取请求和分叉

00:18:40.187 --> 00:18:42.356 align:middle line:-1
它们基于Git的概念和特性

00:18:42.723 --> 00:18:44.625 align:middle line:-1
但与Git的特性集不同

00:18:45.826 --> 00:18:48.629 align:middle line:-1
拉取请求是进行代码评审的一种方法

00:18:48.695 --> 00:18:49.763 align:middle line:-1
（拉取请求）

00:18:49.830 --> 00:18:54.434 align:middle line:-2
通常最好的做法是在一个分支上
做一个项目的所有破坏性的工作

00:18:54.501 --> 00:18:57.371 align:middle line:-1
这是一个独立的提交历史记录行

00:18:57.437 --> 00:19:00.307 align:middle line:-1
它与项目的其他历史记录是分开的

