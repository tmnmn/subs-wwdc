WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.434 --> 00:10:02.503 align:middle line:-1
如果你正在登录到一个自托管版本

00:10:03.136 --> 00:10:06.106 align:middle line:-1
你将有机会

00:10:06.173 --> 00:10:07.407 align:middle line:-1
为要连接的特定服务器提供URL

00:10:09.710 --> 00:10:13.046 align:middle line:-2
现在Xcode被签署到
托管的源代码控制帐户中

00:10:13.447 --> 00:10:15.883 align:middle line:-2
我们可以开始将
我们的更改发送到服务器

00:10:16.216 --> 00:10:18.018 align:middle line:-1
并从中获得其他更改

00:10:19.586 --> 00:10:22.155 align:middle line:-2
但是在我们开始在Xcode中
推拉代码之前

00:10:22.990 --> 00:10:24.858 align:middle line:-1
让我们花一点时间来讨论

00:10:24.925 --> 00:10:28.695 align:middle line:-2
Git和这些托管解决方案
如何处理安全性

00:10:28.762 --> 00:10:30.230 align:middle line:-1
（安全）

00:10:32.199 --> 00:10:33.967 align:middle line:-1
在连接服务器时

00:10:34.034 --> 00:10:36.470 align:middle line:-1
Git支持保护更改的两种主要方法

00:10:36.870 --> 00:10:42.309 align:middle line:-2
第一种 HTTPS
与大多数网站的安全方式相同

00:10:43.143 --> 00:10:45.512 align:middle line:-1
它是基于证书来信任服务器

00:10:45.879 --> 00:10:49.116 align:middle line:-2
并使用用户名和密码
对你进行用户身份验证

00:10:50.517 --> 00:10:54.555 align:middle line:-2
另一个方法是SSH
它的工作方式略有不同

00:10:54.788 --> 00:10:56.890 align:middle line:-1
特别是对于这些托管解决方案的情况

00:10:58.091 --> 00:11:02.729 align:middle line:-1
通常 Git的SSH连接

