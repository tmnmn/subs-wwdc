WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.533 --> 00:15:02.269 align:middle line:0
在这里我们将查看提交的概念时间表

00:15:02.636 --> 00:15:05.639 align:middle line:0
如果你已经进行了本地更改
而其他人也在你工作期间

00:15:05.706 --> 00:15:09.610 align:middle line:0
进行了更改
那么你将不得不在推送之前进行拉取

00:15:10.377 --> 00:15:13.881 align:middle line:0
在这种情况下你的工作绿色显示

00:15:13.947 --> 00:15:17.150 align:middle line:0
已经偏离了你同事的工作
这里用蓝色显示

00:15:20.087 --> 00:15:25.192 align:middle line:-2
为了纠正这个问题你将在Git中
有两个选项：合并和变基

00:15:25.959 --> 00:15:27.127 align:middle line:-1
让我们看看这两个

00:15:28.061 --> 00:15:30.731 align:middle line:-2
那么在这个场景中
你有两个更改要推送

00:15:30.797 --> 00:15:31.732 align:middle line:0
三个需要拉取

00:15:32.399 --> 00:15:35.869 align:middle line:-1
在合并时在你和同事的提交之后

00:15:36.336 --> 00:15:38.739 align:middle line:-2
通过创建一个新提交
并表明应该如何处理

00:15:39.173 --> 00:15:41.642 align:middle line:-1
偏离之后 这个问题就得到了解决

00:15:42.643 --> 00:15:45.846 align:middle line:-2
由于现在提交已经统一
并发回到一个分支

00:15:46.113 --> 00:15:49.783 align:middle line:-2
它就可以被推到服务器
并在所有机器上同步

00:15:51.185 --> 00:15:53.287 align:middle line:-1
变基拉取的工作方式有点不同

00:15:53.353 --> 00:15:56.924 align:middle line:-2
它不是创建一个新的合并提交
而是将本地更改放在一边

00:15:56.990 --> 00:16:00.127 align:middle line:-1
然后在你刚刚拉取的更改之后重放

