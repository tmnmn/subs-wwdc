WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.146 --> 00:36:00.556 A:middle
those new cumulative Quantity

00:36:00.556 --> 00:36:02.326 A:middle
series samples and store that

00:36:02.326 --> 00:36:04.416 A:middle
data in a more efficient way.

00:36:05.696 --> 00:36:07.216 A:middle
So let's start with our sample

00:36:07.246 --> 00:36:07.606 A:middle
query.

00:36:07.856 --> 00:36:09.526 A:middle
Like I mentioned, this is a way

00:36:09.526 --> 00:36:11.386 A:middle
for you to be able to really

00:36:11.386 --> 00:36:13.436 A:middle
look deeper and understand the

00:36:13.436 --> 00:36:15.506 A:middle
individual HK quantities that

00:36:15.506 --> 00:36:16.976 A:middle
make up a Quantity series

00:36:16.976 --> 00:36:17.386 A:middle
sample.

00:36:18.606 --> 00:36:20.096 A:middle
And in code, we, of course,

00:36:20.096 --> 00:36:21.556 A:middle
first want to start with

00:36:21.616 --> 00:36:22.616 A:middle
figuring out where we're going

00:36:22.616 --> 00:36:23.876 A:middle
to store our new quantities.

00:36:23.936 --> 00:36:25.276 A:middle
In my case, I'm going to store

00:36:25.276 --> 00:36:26.366 A:middle
it in an array of quantities.

00:36:26.956 --> 00:36:29.696 A:middle
We next want to initialize our

00:36:29.696 --> 00:36:30.176 A:middle
query.

00:36:30.556 --> 00:36:32.276 A:middle
We initialize it with the sample

00:36:32.276 --> 00:36:33.226 A:middle
that we're interested in.

00:36:33.486 --> 00:36:35.236 A:middle
And in our completion handler is

00:36:35.236 --> 00:36:36.426 A:middle
where the bulk of the work

00:36:36.426 --> 00:36:36.926 A:middle
happens.

00:36:37.406 --> 00:36:39.526 A:middle
In my case, I have a method

00:36:39.526 --> 00:36:41.026 A:middle
called analyzeQuantity which is

00:36:41.026 --> 00:36:42.156 A:middle
going to do the work that I'm

00:36:42.156 --> 00:36:43.756 A:middle
interested in with the quantity.

00:36:43.756 --> 00:36:45.656 A:middle
In my case, that's adding it to

00:36:45.656 --> 00:36:46.636 A:middle
the array of quantities that I

00:36:46.636 --> 00:36:47.456 A:middle
declared earlier.

00:36:48.356 --> 00:36:50.116 A:middle
And lastly, we execute our

00:36:50.116 --> 00:36:50.636 A:middle
query.

00:36:51.226 --> 00:36:52.416 A:middle
It's really that simple.

00:36:53.036 --> 00:36:54.336 A:middle
For those of you familiar with

00:36:54.336 --> 00:36:55.636 A:middle
some of our other queries, this

00:36:55.806 --> 00:36:57.456 A:middle
behaves in a very similar way.

00:36:59.546 --> 00:37:01.376 A:middle
Next, we have our Quantity

