WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.626 --> 00:19:00.586 A:middle
already saved in HealthKit with

00:19:00.686 --> 00:19:02.886 A:middle
all of its associated data.

00:19:04.396 --> 00:19:06.746 A:middle
So that's how you now build a

00:19:06.746 --> 00:19:08.986 A:middle
workout app using the new API.

00:19:10.006 --> 00:19:12.336 A:middle
And now, I'd like to show you

00:19:12.336 --> 00:19:14.436 A:middle
how this all works in a demo

00:19:15.096 --> 00:19:16.406 A:middle
where we will be building a

00:19:16.406 --> 00:19:18.026 A:middle
workout app for Apple Watch.

00:19:19.516 --> 00:19:25.500 A:middle
[ Applause ]

00:19:30.346 --> 00:19:32.336 A:middle
So I'm actually currently

00:19:32.336 --> 00:19:34.786 A:middle
building a workout app that will

00:19:34.786 --> 00:19:37.056 A:middle
allow my users to track running

00:19:37.056 --> 00:19:37.776 A:middle
workouts.

00:19:38.466 --> 00:19:40.096 A:middle
And it's a very simple app.

00:19:40.636 --> 00:19:42.536 A:middle
I have a big Run button here.

00:19:43.096 --> 00:19:45.436 A:middle
When I tap on it, I'm presented

00:19:45.436 --> 00:19:47.866 A:middle
with this user interface that

00:19:47.866 --> 00:19:49.976 A:middle
will show an elapsed time of

00:19:49.976 --> 00:19:51.486 A:middle
their workout as well as some

00:19:51.486 --> 00:19:53.816 A:middle
metrics, like calorie burned,

00:19:54.496 --> 00:19:56.746 A:middle
the most recent heart rate, as

00:19:56.746 --> 00:19:59.416 A:middle
well as the distance that's run

00:19:59.586 --> 00:20:00.156 A:middle
in the workout.

