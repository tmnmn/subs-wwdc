WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.196 --> 00:34:00.576 A:middle
而且会被分开储存

00:34:01.366 --> 00:34:02.766 A:middle
我们考虑一下

00:34:02.766 --> 00:34:03.856 A:middle
如果你可以有

00:34:03.856 --> 00:34:05.976 A:middle
一个追踪累计总数的样本

00:34:05.976 --> 00:34:08.166 A:middle
但同时其背后仍然有那些

00:34:08.166 --> 00:34:09.545 A:middle
独立的数量支持

00:34:09.596 --> 00:34:11.356 A:middle
是不是很棒

00:34:11.416 --> 00:34:13.876 A:middle
这就是为什么我们引入了

00:34:13.876 --> 00:34:14.585 A:middle
HKCumulative

00:34:14.585 --> 00:34:16.456 A:middle
QuantitySeriesSample 它是一个

00:34:16.456 --> 00:34:17.906 A:middle
全新的样本类型

00:34:17.906 --> 00:34:19.516 A:middle
让你可以更高效地

00:34:19.516 --> 00:34:21.106 A:middle
存储高频数据

00:34:21.666 --> 00:34:23.005 A:middle
它很棒 有两个原因

00:34:23.196 --> 00:34:25.116 A:middle
原因一 你只需要存储

00:34:25.116 --> 00:34:26.775 A:middle
一个由多个数量支撑的

00:34:26.775 --> 00:34:28.416 A:middle
样本 因此

00:34:28.416 --> 00:34:29.876 A:middle
你可以更高效地存储

00:34:30.176 --> 00:34:31.556 A:middle
那些来自体能训练的

00:34:31.735 --> 00:34:33.346 A:middle
高频数据

00:34:33.775 --> 00:34:36.076 A:middle
第二 你现在

00:34:36.076 --> 00:34:38.286 A:middle
可以知道组成一个样本的

00:34:38.286 --> 00:34:40.025 A:middle
多个数量与样本本身的联系

00:34:40.936 --> 00:34:43.016 A:middle
因此我们新的 QuantitySeriesSample

00:34:43.016 --> 00:34:44.196 A:middle
是 HKQuantitySample 的

00:34:44.196 --> 00:34:45.996 A:middle
子类 你们中也许

00:34:45.996 --> 00:34:47.956 A:middle
有些人已经很熟悉

00:34:48.246 --> 00:34:49.656 A:middle
如果你之前用过

00:34:49.656 --> 00:34:51.426 A:middle
HKQuantitySample 我们新的

00:34:51.426 --> 00:34:53.386 A:middle
样本类型

00:34:53.436 --> 00:34:53.906 A:middle
基本上一样

00:34:55.335 --> 00:34:56.626 A:middle
那么为什么你想要

00:34:56.686 --> 00:34:56.886 A:middle
用这个呢

00:34:57.836 --> 00:34:59.106 A:middle
比方说你想要

00:34:59.106 --> 00:35:00.316 A:middle
数据可视化

