WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:57.504 --> 00:34:00.974 align:start position:25% line:-1
それぞれが独立していたのです

00:34:01.341 --> 00:34:05.579 align:start position:32% line:-2
これを１つにできたら
便利ですよね

00:34:05.679 --> 00:34:11.585 align:start position:27% line:-2
累計を追跡しつつ
個別の数字も保存するのです

00:34:12.018 --> 00:34:15.922 align:start position:11% line:-2
そこで紹介するのが HKCumulative
QuantitySeriesSample

00:34:16.023 --> 00:34:21.395 align:start position:27% line:-2
頻度の高いデータを
効率的に保存する新機能です

00:34:21.562 --> 00:34:22.996 align:start position:38% line:-1
利点は２つです

00:34:23.096 --> 00:34:28.101 align:start position:30% line:-2
まず １つのサンプルを
保存すればよいので

00:34:28.202 --> 00:34:33.607 align:start position:29% line:-2
頻繁に生じるデータを
効率的に保存できる点です

00:34:33.774 --> 00:34:37.411 align:start position:29% line:-2
２つ目は
サンプルを構成する数字の

00:34:37.511 --> 00:34:40.347 align:start position:29% line:-1
連結が保たれている点です

00:34:41.215 --> 00:34:43.484 align:start position:34% line:-1
これは おなじみの

00:34:43.583 --> 00:34:48.121 align:start position:20% line:-2
HKQuantitySampleの
サブクラスです

00:34:48.222 --> 00:34:54.194 align:start position:29% line:-2
以前に使ったことがあれば
ほぼ同じだと分かります

00:34:55.329 --> 00:34:57.498 align:start position:30% line:-1
では どう役立つのか？

00:34:57.731 --> 00:35:00.100 align:start position:32% line:-1
例えばデータの可視化

