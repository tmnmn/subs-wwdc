WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:55.782 --> 00:12:00.487 align:start position:30% line:-2
さらに ユーザが状態を
管理できるようにします

00:12:03.223 --> 00:12:04.925 align:start position:32% line:-1
まず データ収集です

00:12:05.025 --> 00:12:09.463 align:start position:27% line:-2
ワークアウト関連のサンプル
例えば―

00:12:09.696 --> 00:12:14.201 align:start position:25% line:-2
カロリー 距離 心拍数などを
追加するには？

00:12:14.334 --> 00:12:18.872 align:start position:25% line:-2
builder.addという
シンプルなコールを用いて

00:12:18.972 --> 00:12:21.842 align:start position:21% line:-1
HKSampleの配列を与えます

00:12:23.944 --> 00:12:28.415 align:start position:27% line:-2
ワークアウトに
イベントを追加したい場合は

00:12:29.016 --> 00:12:32.319 align:start position:5% line:-2
builder.addWorkoutEventsを
呼び出します

00:12:33.687 --> 00:12:35.923 align:start position:32% line:-1
メタデータも同様です

00:12:36.757 --> 00:12:41.695 align:start position:14% line:-2
builder.addMetadataを
呼び出し

00:12:41.795 --> 00:12:44.264 align:start position:29% line:-1
ディクショナリを渡します

00:12:46.233 --> 00:12:50.871 align:start position:25% line:-2
Apple Watchの場合
デバイスが手首にあり

00:12:51.071 --> 00:12:54.007 align:start position:32% line:-2
さまざまなセンサーも
備えているので

00:12:54.107 --> 00:12:59.146 align:start position:29% line:-2
実際に カロリーや距離の
データを生成できます

00:12:59.479 --> 00:13:03.584 align:start position:32% line:-2
そうしたデータを
自動的に収集できたら

