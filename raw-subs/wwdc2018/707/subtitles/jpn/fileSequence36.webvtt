WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:56.457 --> 00:36:01.562 align:start position:27% line:-2
累積的な数量サンプルを作る
新しい方法で

00:36:01.662 --> 00:36:04.097 align:start position:30% line:-1
保存も効率的にできます

00:36:05.933 --> 00:36:07.935 align:start position:30% line:-1
では やってみましょう

00:36:08.035 --> 00:36:09.603 align:start position:39% line:-1
この方法では

00:36:09.703 --> 00:36:15.142 align:start position:5% line:-2
QuantitySeriesSampleを構成する
個別のHKQuantityを

00:36:15.242 --> 00:36:17.711 align:start position:30% line:-2
深く調べ
理解することができます

00:36:18.579 --> 00:36:23.717 align:start position:29% line:-2
コードでは まず
数量の保存場所を決めます

00:36:23.817 --> 00:36:26.520 align:start position:32% line:-2
ここでは数量の配列に
保存します

00:36:27.888 --> 00:36:33.260 align:start position:27% line:-2
次に 取得したいサンプルで
クエリを初期化

00:36:33.360 --> 00:36:37.197 align:start position:29% line:-2
大部分の処理は
完了ハンドラで発生します

00:36:37.297 --> 00:36:40.534 align:start position:18% line:-2
analyzeQuantityという
メソッドは

00:36:40.634 --> 00:36:43.804 align:start position:30% line:-2
関心のある数量について
処理します

00:36:43.904 --> 00:36:47.808 align:start position:30% line:-2
この例では
数量の配列に追加します

00:36:48.342 --> 00:36:50.944 align:start position:32% line:-1
最後に クエリを実行

00:36:51.145 --> 00:36:52.780 align:start position:39% line:-1
これだけです

00:36:52.980 --> 00:36:57.818 align:start position:29% line:-2
皆さんの知っている
他のクエリとほぼ同じです

00:36:59.453 --> 00:37:02.656 align:start position:16% line:-2
次に HKQuantitySeries
SampleBuilder

