WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:00.536 --> 00:04:02.276 A:middle
这是一个很好的例子

00:04:02.276 --> 00:04:03.936 A:middle
因为我们是用

00:04:03.936 --> 00:04:05.746 A:middle
用户的墙纸作样本

00:04:06.096 --> 00:04:06.936 A:middle
我们可以使背景变色

00:04:06.936 --> 00:04:08.486 A:middle
让用户觉得的自己设备是

00:04:08.486 --> 00:04:10.396 A:middle
定制的 应景的

00:04:10.396 --> 00:04:12.176 A:middle
同时我们还做到了

00:04:12.176 --> 00:04:13.616 A:middle
在一个不透明的背景上

00:04:13.616 --> 00:04:15.756 A:middle
对比更强 屏幕更清晰

00:04:17.146 --> 00:04:18.776 A:middle
作为一名开发人员

00:04:18.776 --> 00:04:20.065 A:middle
你可以通过检查

00:04:20.065 --> 00:04:21.846 A:middle
降低透明度设置是否可用

00:04:21.846 --> 00:04:23.106 A:middle
而且能否对应地适合你的 UI

00:04:23.106 --> 00:04:24.676 A:middle
来满足自己

00:04:24.676 --> 00:04:25.596 A:middle
对于这两种效果的需要

00:04:26.316 --> 00:04:28.136 A:middle
在 iOS 上你可以使用代码

00:04:28.136 --> 00:04:29.866 A:middle
isReduceTransparencyEnabled

00:04:29.866 --> 00:04:32.576 A:middle
在 macOS 上

00:04:32.826 --> 00:04:34.326 A:middle
要在 NSWorkspace 上

00:04:34.326 --> 00:04:36.116 A:middle
使用代码 accessibilityDisplayShould

00:04:36.116 --> 00:04:36.706 A:middle
ReduceTransparency

00:04:38.116 --> 00:04:39.656 A:middle
接下来我想谈谈

00:04:39.656 --> 00:04:43.756 A:middle
对比问题 内容

00:04:43.756 --> 00:04:45.486 A:middle
和它背景的对比

00:04:45.486 --> 00:04:47.456 A:middle
对于可感知性来说 非常重要

00:04:47.976 --> 00:04:49.546 A:middle
当颜色相近时

00:04:49.546 --> 00:04:52.406 A:middle
它们会变得更难辨认

00:04:53.456 --> 00:04:54.886 A:middle
而且一些特定颜色

00:04:54.886 --> 00:04:56.756 A:middle
放大时很清楚

00:04:56.756 --> 00:04:58.436 A:middle
但是内容缩小时就不清楚了

00:04:58.676 --> 00:05:00.296 A:middle
例如在文本中

