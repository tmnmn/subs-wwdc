WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:00.347 --> 00:13:02.516 align:middle line:-1
而不必同时处理

00:13:02.583 --> 00:13:04.618 align:middle line:-1
测试UI的复杂问题

00:13:10.357 --> 00:13:13.327 align:middle line:-1
因此最后我们看到了一个

00:13:13.393 --> 00:13:16.230 align:middle line:-1
将代码分解成更小独立的部分

00:13:16.296 --> 00:13:17.831 align:middle line:-1
以便单元测试的例子

00:13:19.566 --> 00:13:24.571 align:middle line:-2
我们已看到了如何使用URLProtocol
作为模拟网络请求的工具

00:13:26.340 --> 00:13:29.209 align:middle line:-2
我们还讨论了如何使用
金字塔的强大功能

00:13:29.276 --> 00:13:31.745 align:middle line:-2
来帮助我们构建
一个平衡良好的测试套件

00:13:31.812 --> 00:13:33.714 align:middle line:-1
这将使我们对我们的代码充满信心

00:13:35.449 --> 00:13:39.253 align:middle line:-2
现在我想把Stuart叫到台上
来谈谈更多的技术

00:13:43.190 --> 00:13:44.124 align:middle line:-1
谢谢

00:13:46.560 --> 00:13:47.494 align:middle line:-1
谢谢 Brian

00:13:48.195 --> 00:13:50.430 align:middle line:-1
那么我想要讨论的第一个领域是

00:13:50.497 --> 00:13:53.000 align:middle line:-1
测试通知的一些最佳实践方法

00:13:54.735 --> 00:13:57.471 align:middle line:-1
澄清一下 这里的通知

00:13:57.538 --> 00:14:00.107 align:middle line:-2
我说的是基础级别的通知
即NSNotification

