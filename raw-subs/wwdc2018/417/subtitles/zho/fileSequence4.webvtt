WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:02.342 --> 00:04:03.911 align:middle line:-1
在这个app的早期原型中

00:04:04.444 --> 00:04:05.846 align:middle line:-1
我们在视图控制器中有个方法

00:04:05.913 --> 00:04:08.382 align:middle line:-1
它可以在一个地方完成所有这些工作

00:04:09.116 --> 00:04:10.284 align:middle line:-1
它看起来和这个很相似

00:04:12.486 --> 00:04:15.455 align:middle line:-1
该方法接受一个带有用户位置的参数

00:04:17.357 --> 00:04:20.928 align:middle line:-2
并使用该参数为我们的
服务器API端点构造URL

00:04:21.161 --> 00:04:23.230 align:middle line:-1
并将该位置作为查询参数

00:04:26.133 --> 00:04:29.069 align:middle line:-2
然后它使用Foundation的
URLSession API

00:04:29.336 --> 00:04:32.606 align:middle line:-2
为向那个URL得到一个请求
而创建一个数据任务

00:04:34.908 --> 00:04:37.978 align:middle line:-1
当服务器响应时它将打开数据

00:04:39.479 --> 00:04:42.349 align:middle line:-2
使用foundation的
JSONDecoder API对其解码

00:04:42.950 --> 00:04:45.519 align:middle line:-1
将其解码为一个有关值的数组

00:04:45.586 --> 00:04:47.521 align:middle line:-1
这是我在其他地方声明过的一个结构

00:04:47.855 --> 00:04:49.823 align:middle line:-1
并符合可解码协议

00:04:51.825 --> 00:04:53.360 align:middle line:-1
然后将其存储到属性中

00:04:53.427 --> 00:04:55.829 align:middle line:-1
以驱实现动表视图数据源

00:04:56.029 --> 00:04:57.264 align:middle line:-1
并将其放到屏幕上

