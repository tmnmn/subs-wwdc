WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:57.551 --> 00:22:00.053 align:middle line:-2
我们在这个测试中
可能会遇到的另一个问题是

00:22:00.287 --> 00:22:03.190 align:middle line:-2
CoreLocation
需要用户授权

00:22:03.724 --> 00:22:05.893 align:middle line:-1
如果之前没有授权

00:22:05.959 --> 00:22:07.494 align:middle line:-1
它会在设备上显示权限对话框

00:22:08.362 --> 00:22:10.931 align:middle line:-1
这导致我们的测试依赖于设备状态

00:22:10.998 --> 00:22:14.368 align:middle line:-2
并且使它们更难维护
最终更有可能失败

00:22:16.336 --> 00:22:18.572 align:middle line:-1
因此如果你在过去遇到过这个问题

00:22:18.639 --> 00:22:21.575 align:middle line:-1
你可能会考虑对外部类进行子类化

00:22:21.642 --> 00:22:24.444 align:middle line:-1
并重写你调用它的任何方法

00:22:24.845 --> 00:22:29.016 align:middle line:-2
例如我们可以在这里尝试子类
CLLocationManager

00:22:29.082 --> 00:22:31.385 align:middle line:-1
并重写RequestLocation方法

00:22:31.952 --> 00:22:34.688 align:middle line:-1
这在一开始可能行得通 但有风险

00:22:35.622 --> 00:22:38.525 align:middle line:-2
SDK中的一些类
不是被设计成子类的

00:22:38.592 --> 00:22:39.826 align:middle line:-1
它们的行为可能不同

00:22:40.694 --> 00:22:43.797 align:middle line:-2
另外我们仍然需要调用
超类的初始化程序

00:22:43.864 --> 00:22:45.465 align:middle line:-1
这不是我们可以重写的代码

00:22:46.266 --> 00:22:47.701 align:middle line:-1
但是主要的问题是

00:22:47.768 --> 00:22:51.905 align:middle line:-2
如果我修改代码来调用
CLLocationManager上的另一个方法

00:22:52.139 --> 00:22:54.174 align:middle line:-1
我也要必须记住

00:22:54.241 --> 00:22:56.243 align:middle line:-1
在我的测试子类上重写该方法

00:22:57.044 --> 00:23:00.013 align:middle line:-1
如果我依赖子类 编译器不会通知我

