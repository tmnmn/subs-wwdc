WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.531 --> 00:15:00.167 align:middle line:-2
观察到一个名为
AuthChanged的通知

00:15:00.767 --> 00:15:04.338 align:middle line:-1
当它观察到这个通知时

00:15:04.404 --> 00:15:07.608 align:middle line:-2
它会在必要时重新加载它的数据
为了这个例子 它设置一个标志

00:15:08.275 --> 00:15:11.478 align:middle line:-1
这样我们的测试代码就可以检查标志

00:15:11.545 --> 00:15:13.614 align:middle line:-1
看看是否实际收到了通知

00:15:14.548 --> 00:15:17.451 align:middle line:-1
这里我们可以看到它正在使用

00:15:17.518 --> 00:15:18.752 align:middle line:-1
默认的通知中心来添加观察者

00:15:19.853 --> 00:15:22.623 align:middle line:-2
让我们来看看
这个代码的单元测试可能是什么样子

00:15:23.857 --> 00:15:25.759 align:middle line:-1
在这个类的测试中

00:15:25.826 --> 00:15:29.229 align:middle line:-2
我们发布了AuthChanged
方法通知来模拟它

00:15:29.296 --> 00:15:31.532 align:middle line:-2
并将它发布到默认的
NotificationCenter

00:15:31.598 --> 00:15:33.367 align:middle line:-1
与我们的视图控制器使用相同

00:15:34.034 --> 00:15:37.437 align:middle line:-1
现在这个测试起作用了

00:15:37.504 --> 00:15:38.906 align:middle line:-2
但它可能在app代码的
其他地方有未知的副作用

00:15:39.439 --> 00:15:41.608 align:middle line:-2
一些系统通知很常见
比如UI app

00:15:41.675 --> 00:15:45.345 align:middle line:-2
appDidFinish
Launchingnotification

00:15:45.412 --> 00:15:48.549 align:middle line:-1
被许多层观察到并且有未知的副作用

00:15:48.849 --> 00:15:51.218 align:middle line:-1
或者它只会减慢我们的测试速度

00:15:51.585 --> 00:15:54.788 align:middle line:-2
因此我们想
更好地隔离这些代码来测试它

00:15:56.790 --> 00:15:59.760 align:middle line:-2
我们可以使用一种技术
来更好地隔离这些测试

