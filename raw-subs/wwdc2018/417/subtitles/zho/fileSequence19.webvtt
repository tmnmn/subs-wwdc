WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:00.240 --> 00:19:02.342 align:middle line:-1
但是现在我们来看一下期望

00:19:03.310 --> 00:19:07.381 align:middle line:-2
当我们的测试期望接收到
一个特定中心的通知时

00:19:07.614 --> 00:19:10.083 align:middle line:-2
我们可以将
NotificationCenter参数

00:19:10.150 --> 00:19:11.852 align:middle line:-1
传递给预期的初始化器

00:19:13.720 --> 00:19:18.759 align:middle line:-1
我还想指出这个期望的超时值是0

00:19:18.926 --> 00:19:21.628 align:middle line:-1
这是因为我们实际上期望

00:19:21.695 --> 00:19:22.996 align:middle line:-1
它在我们等待它时已实现

00:19:23.830 --> 00:19:26.466 align:middle line:-2
这是因为在
NotifyAuthChanged方法返回时

00:19:26.533 --> 00:19:29.369 align:middle line:-1
方法返回时通知应该已经发布了

00:19:30.571 --> 00:19:33.740 align:middle line:-1
因此使用这对技术来测试通知

00:19:34.107 --> 00:19:36.443 align:middle line:-2
我们可以确保我们的测试
保持完全隔离

00:19:36.977 --> 00:19:40.814 align:middle line:-2
并且我们在不需要修改app中的
现有代码的情况下进行了更改

00:19:40.948 --> 00:19:43.383 align:middle line:-1
因为我们指定了默认的参数值

00:19:47.921 --> 00:19:50.190 align:middle line:-1
接下来我想谈谈在编写单元

00:19:50.257 --> 00:19:53.827 align:middle line:-2
测试时经常遇到的一个挑战
即与外部类交互

00:19:55.896 --> 00:19:59.166 align:middle line:-2
在开发app时
你可能会遇到这样的情况

00:19:59.233 --> 00:20:01.869 align:middle line:-1
你的类正在与其他类对话

