WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:59.259 --> 00:36:01.862 align:middle line:-2
在这个屏幕截图中
我添加了一个环境变量

00:36:01.929 --> 00:36:04.264 align:middle line:-2
名为IS-UNIT-TESTING
设置为1

00:36:06.400 --> 00:36:09.770 align:middle line:-2
然后 修改app委托的
appDidFinishLaunching代码

00:36:09.837 --> 00:36:12.639 align:middle line:-1
使用类似于此的代码检查此条件

00:36:13.540 --> 00:36:16.343 align:middle line:-1
现在 如果你这样做

00:36:16.410 --> 00:36:19.213 align:middle line:-2
请确保你跳过的代码
对于单元测试的功能来说并不重要

00:36:22.916 --> 00:36:28.989 align:middle line:-2
最后总结一下Brian开始时候
提醒我们测试金字塔

00:36:29.423 --> 00:36:31.792 align:middle line:-2
以及如何在app中
有一个均衡的测试策略

00:36:32.292 --> 00:36:35.896 align:middle line:-1
展示几种测试网络操作的实用技术

00:36:36.897 --> 00:36:40.167 align:middle line:-1
然后我讨论了隔离基础通知

00:36:40.734 --> 00:36:42.269 align:middle line:-1
并使用依赖项注入

00:36:43.437 --> 00:36:46.039 align:middle line:-1
我们为编写测试时最常见的挑战之一

00:36:46.106 --> 00:36:49.343 align:middle line:-2
即与外部类交互
提供了一个解决方案

00:36:49.877 --> 00:36:51.245 align:middle line:-1
即使它们有一个委托

00:36:52.312 --> 00:36:54.982 align:middle line:-1
我们还分享了一些保持测试快速运行

00:36:55.048 --> 00:36:56.850 align:middle line:-1
和避免人为延迟的技巧

00:36:57.784 --> 00:36:59.486 align:middle line:-1
我们真的希望你觉得这些测试有用

00:36:59.553 --> 00:37:02.089 align:middle line:-2
并在下次编写测试时
寻找应用它们的方法

