WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:59.233 --> 00:20:01.869 align:middle line:-1
你的类正在与其他类对话

00:20:01.935 --> 00:20:05.239 align:middle line:-2
无论是在app的其他地方
或者还是由SDK提供的

00:20:05.639 --> 00:20:07.941 align:middle line:-1
你发现编写测试很困难

00:20:08.008 --> 00:20:12.179 align:middle line:-1
因为创建外部类很难甚至是不可能的

00:20:12.846 --> 00:20:15.249 align:middle line:-1
这种情况经常发生 特别是

00:20:15.315 --> 00:20:17.417 align:middle line:-1
对于那些没有被直接创建的API中

00:20:17.751 --> 00:20:21.822 align:middle line:-2
而且当这些API具有需要测试的
委托方法时就更加困难了

00:20:22.890 --> 00:20:25.826 align:middle line:-1
我想展示如何通过模拟

00:20:25.959 --> 00:20:28.762 align:middle line:-2
与外部类的交互来使用协议
进而解决这个问题

00:20:28.929 --> 00:20:31.899 align:middle line:-1
而且这样做并不会降低测试的可靠性

00:20:34.134 --> 00:20:37.437 align:middle line:-2
在我们的app中
我们有一个使用CoreLocation的

00:20:37.504 --> 00:20:38.939 align:middle line:-1
CurrentLocationProvider类

00:20:39.806 --> 00:20:41.708 align:middle line:-2
它创建一个
CLLocationManager

00:20:41.842 --> 00:20:43.610 align:middle line:-1
并在它的初始化器中配置它

00:20:43.944 --> 00:20:47.614 align:middle line:-2
设置它想要的精度属性
并将自己设置为委托

00:20:50.017 --> 00:20:51.351 align:middle line:-1
这是这门类的重点

00:20:51.518 --> 00:20:53.654 align:middle line:-2
它是一个名为
checkCurrentLocation的方法

00:20:54.154 --> 00:20:56.857 align:middle line:-1
它请求当前位置并获取一个完成块

00:20:56.924 --> 00:20:59.693 align:middle line:-1
该块返回该位置是否为感兴趣的点

