WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:58.652 --> 00:02:00.921 align:start position:30% line:-1
ですが改めて紹介します

00:02:01.021 --> 00:02:04.925 align:start position:32% line:-2
UIWebViewは
非推奨になるからです

00:02:05.025 --> 00:02:09.530 align:start position:43% line:-1
(拍手)

00:02:09.630 --> 00:02:13.800 align:start position:29% line:-2
Webコンテンツの
ネイティブ環境での表示が

00:02:13.901 --> 00:02:18.805 align:start position:23% line:-2
難しい時などに
WKWebViewがお勧めです

00:02:18.906 --> 00:02:23.277 align:start position:21% line:-2
UIWebViewを知っていれば
切り替えも簡単ですし

00:02:23.377 --> 00:02:28.415 align:start position:29% line:-2
macOSでもiOSでも
開発時間が減らせます

00:02:28.515 --> 00:02:32.019 align:start position:29% line:-2
WKWebViewは
どちらでも使えるからです

00:02:32.119 --> 00:02:35.756 align:start position:30% line:-2
UIWebViewや
Webビューとは違い―

00:02:35.856 --> 00:02:39.193 align:start position:23% line:-1
両方でコードを共有できるのです

00:02:39.793 --> 00:02:44.464 align:start position:27% line:-2
さらにWKWebViewは
独立しているため―

00:02:44.565 --> 00:02:50.571 align:start position:23% line:-2
Web処理に問題があっても
アプリケーションに影響しません

00:02:50.671 --> 00:02:56.210 align:start position:25% line:-2
重いWebコンテンツで
処理が遅れることもないのです

00:02:56.310 --> 00:02:59.413 align:start position:16% line:-1
たとえWKWebViewが故障しても―

00:02:59.580 --> 00:03:02.916 align:start position:34% line:-2
アプリケーションに
被害は及びません

