WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:01.656 --> 00:10:04.156 A:middle
那就是 使用 Storage Access API

00:10:04.916 --> 00:10:08.056 A:middle
使用了 Storage Access API

00:10:08.056 --> 00:10:10.116 A:middle
每当出现一个带有跨站点追踪的域

00:10:10.206 --> 00:10:11.446 A:middle
它希望在第三方背景下

00:10:11.496 --> 00:10:13.006 A:middle
获得 cookie

00:10:13.006 --> 00:10:14.826 A:middle
那么你需要

00:10:14.826 --> 00:10:16.866 A:middle
提出存储访问的请求

00:10:17.436 --> 00:10:19.016 A:middle
如果用户以前没有授权同意访问 

00:10:19.016 --> 00:10:20.766 A:middle
就会出现提示框

00:10:20.766 --> 00:10:22.616 A:middle
询问用户是否允许

00:10:22.616 --> 00:10:25.256 A:middle
在这个站点

00:10:25.686 --> 00:10:26.596 A:middle
去访问 cookie

00:10:27.486 --> 00:10:29.036 A:middle
通过让用户给出

00:10:29.106 --> 00:10:31.026 A:middle
明确的是否允许访问 cookie 的意见

00:10:31.026 --> 00:10:33.306 A:middle
我们赋予了用户去

00:10:33.366 --> 00:10:35.096 A:middle
管控自己的 cookies 以及

00:10:35.136 --> 00:10:36.406 A:middle
哪些网站可以进行追踪的权力

00:10:36.886 --> 00:10:38.026 A:middle
令他们的浏览体验

00:10:38.026 --> 00:10:41.046 A:middle
更加具有私密性

00:10:41.046 --> 00:10:41.356 A:middle
如果他们愿意的话

00:10:42.136 --> 00:10:45.386 A:middle
接下来 我们来谈谈

00:10:45.386 --> 00:10:47.166 A:middle
使用自动填充强密码

00:10:47.246 --> 00:10:48.106 A:middle
进行身份验证

00:10:48.106 --> 00:10:50.556 A:middle
我相信你们已经在 State of the Union

00:10:50.586 --> 00:10:51.636 A:middle
以及几天前的演讲中看过这个了

00:10:51.906 --> 00:10:53.436 A:middle
自动填充强密码是一个

00:10:53.436 --> 00:10:55.296 A:middle
能够保证用户

00:10:55.296 --> 00:10:58.526 A:middle
选择并存储强密码的方法

00:10:58.756 --> 00:10:59.896 A:middle
当他们在设置

00:10:59.896 --> 00:11:00.356 A:middle
新账户的时候

