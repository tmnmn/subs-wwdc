WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.936 --> 00:27:01.276 A:middle
来改进显示效果

00:27:02.506 --> 00:27:04.056 A:middle
这里 是我的图像

00:27:04.056 --> 00:27:04.976 A:middle
是图像元素的标记

00:27:09.046 --> 00:27:10.406 A:middle
decode() 方法会

00:27:10.616 --> 00:27:12.326 A:middle
异步地解码这个图像

00:27:12.566 --> 00:27:14.206 A:middle
然后返回一个 Promise

00:27:14.206 --> 00:27:16.316 A:middle
如果图像成功被加载并解码

00:27:16.316 --> 00:27:19.646 A:middle
就会调用响应函数 resolve

00:27:19.746 --> 00:27:21.716 A:middle
所以 我就把我的 transition 函数传入

00:27:21.756 --> 00:27:23.696 A:middle
作为这个 Promise 的回调函数

00:27:24.326 --> 00:27:26.946 A:middle
现在 让我们切换回 iPad

00:27:33.256 --> 00:27:35.536 A:middle
我们来刷新页面以获取

00:27:35.536 --> 00:27:36.036 A:middle
新的脚本

00:27:37.076 --> 00:27:38.236 A:middle
现在 当我前进到下一页的时候

00:27:38.236 --> 00:27:39.386 A:middle
过程会更加顺畅

00:27:40.006 --> 00:27:41.566 A:middle
没有闪烁

00:27:41.566 --> 00:27:42.296 A:middle
这真的很棒

00:27:43.516 --> 00:27:45.626 A:middle
[ 掌声 ]

00:27:46.126 --> 00:27:46.936 A:middle
谢谢

00:27:51.126 --> 00:27:55.146 A:middle
现在 让我们切换回 Mac

00:27:55.146 --> 00:27:56.616 A:middle
最后 在我的页面底部

00:27:56.616 --> 00:27:58.626 A:middle
放置了一个动画的 GIF 图片

00:27:58.626 --> 00:28:00.756 A:middle
一只小鸟在装饰

