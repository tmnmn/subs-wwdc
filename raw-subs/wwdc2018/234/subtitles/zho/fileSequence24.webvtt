WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:59.036 --> 00:24:00.706 A:middle
是因为我在 click handler 中

00:24:00.706 --> 00:24:02.416 A:middle
做出了同步请求

00:24:02.666 --> 00:24:05.706 A:middle
这会阻止 Safari 导航到下一页

00:24:06.446 --> 00:24:08.026 A:middle
进行同步请求

00:24:08.026 --> 00:24:09.306 A:middle
可确保浏览器在导航到下一页时

00:24:09.306 --> 00:24:12.226 A:middle
不会取消这一请求

00:24:13.636 --> 00:24:14.636 A:middle
但是 这是在等待

00:24:14.636 --> 00:24:16.066 A:middle
我的服务器响应可能需要

00:24:16.066 --> 00:24:16.766 A:middle
一段时间

00:24:16.906 --> 00:24:18.046 A:middle
问题是 我其实不关心什么

00:24:18.046 --> 00:24:19.256 A:middle
服务器响应

00:24:19.256 --> 00:24:20.286 A:middle
我只想确定这些数据

00:24:20.286 --> 00:24:21.636 A:middle
传送到了服务器上

00:24:22.536 --> 00:24:24.406 A:middle
因此 Beacon API 其实是

00:24:24.406 --> 00:24:25.826 A:middle
一个完美的替代品

00:24:26.376 --> 00:24:29.776 A:middle
现在我要开始通过

00:24:30.416 --> 00:24:32.266 A:middle
检查 Beacon API 

00:24:32.266 --> 00:24:33.746 A:middle
在浏览器中是否可用

00:24:33.746 --> 00:24:35.396 A:middle
方法是在 navigator 对象上

00:24:35.396 --> 00:24:36.386 A:middle
查找 sendBeacon 方法

00:24:37.366 --> 00:24:38.656 A:middle
如果它不可用

00:24:38.656 --> 00:24:39.996 A:middle
我就继续我

00:24:39.996 --> 00:24:40.346 A:middle
刚才在做的事情

00:24:41.526 --> 00:24:43.626 A:middle
然后 我们可以使用它

00:24:46.496 --> 00:24:49.106 A:middle
把数据和我想要访问的 endpoint

00:24:49.756 --> 00:24:53.666 A:middle
一同传入

00:24:53.666 --> 00:24:54.356 A:middle
让我们进行保存

00:24:55.196 --> 00:24:57.726 A:middle
然后返回去 重新加载

00:24:57.726 --> 00:24:58.236 A:middle
新的脚本

00:24:59.336 --> 00:25:00.676 A:middle
现在 当我点击这个链接时

