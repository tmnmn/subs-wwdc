WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:58.906 --> 00:45:00.276 A:middle
在我把它发送到滤镜之前

00:45:00.276 --> 00:45:01.746 A:middle
我想缩小这个图像

00:45:02.096 --> 00:45:04.226 A:middle
然而 我还记得 Kyle 说的

00:45:04.536 --> 00:45:05.656 A:middle
我不应该在 UIImage 上进行缩放

00:45:05.656 --> 00:45:07.406 A:middle
因为它仍然会

00:45:07.406 --> 00:45:08.816 A:middle
把整个图像

00:45:08.816 --> 00:45:10.266 A:middle
加载到内存中

00:45:10.266 --> 00:45:11.396 A:middle
这是我要避免的

00:45:11.906 --> 00:45:13.876 A:middle
把这个函数

00:45:13.986 --> 00:45:15.826 A:middle
折叠起来

00:45:16.106 --> 00:45:17.556 A:middle
我要用 Kyle 建议的代码

00:45:17.676 --> 00:45:19.946 A:middle
来替换它

00:45:20.496 --> 00:45:23.386 A:middle
好的 我们来看看

00:45:23.386 --> 00:45:24.656 A:middle
这段代码在做什么

00:45:25.886 --> 00:45:28.696 A:middle
这里是一样的

00:45:28.996 --> 00:45:31.286 A:middle
我们从 Bundle 中获取图像

00:45:31.286 --> 00:45:33.206 A:middle
但是这一次

00:45:33.206 --> 00:45:35.376 A:middle
我得稍微调宽一点

00:45:35.746 --> 00:45:38.066 A:middle
我调用了 CGImageSourceCreateWithURL

00:45:38.066 --> 00:45:39.796 A:middle
来获取对图像的引用

00:45:39.796 --> 00:45:41.016 A:middle
然后将其传递给

00:45:41.096 --> 00:45:43.816 A:middle
CGImageSourceCreateThumbnailAtIndex

00:45:44.156 --> 00:45:45.906 A:middle
现在 我可以将图像

00:45:45.906 --> 00:45:47.526 A:middle
缩放到我想要的大小

00:45:47.526 --> 00:45:49.026 A:middle
而不需要将整个内容载入内存

00:45:49.656 --> 00:45:51.366 A:middle
让我们试一试

00:45:51.366 --> 00:45:52.506 A:middle
看看会不会有什么不同

00:45:52.626 --> 00:45:53.506 A:middle
我将重新构建

00:45:53.506 --> 00:45:56.866 A:middle
然后等待它

00:45:56.866 --> 00:45:58.176 A:middle
在 App 上启动

00:45:59.486 --> 00:46:02.356 A:middle
重新生成中

