WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:55.726 --> 00:04:00.876 A:middle
那么它就会变成脏内存

00:04:01.056 --> 00:04:03.146 A:middle
脏内存是

00:04:03.146 --> 00:04:04.556 A:middle
App 写入的任何内存

00:04:05.676 --> 00:04:07.516 A:middle
它们可以是对象

00:04:07.946 --> 00:04:09.016 A:middle
比如 malloc

00:04:09.146 --> 00:04:10.416 A:middle
字符串 数组等等

00:04:11.056 --> 00:04:14.186 A:middle
它可以是已解码的图像缓冲

00:04:14.366 --> 00:04:15.426 A:middle
我们稍后会讲到这点

00:04:15.926 --> 00:04:18.576 A:middle
它也可以是框架

00:04:19.305 --> 00:04:21.196 A:middle
框架也有一个 _DATA 部分

00:04:21.196 --> 00:04:23.356 A:middle
和一个 _DATA_DIRTY 部分

00:04:24.256 --> 00:04:26.786 A:middle
它们总是指向脏内存

00:04:27.926 --> 00:04:29.216 A:middle
你可能注意到了

00:04:29.216 --> 00:04:30.446 A:middle
我曾两次提到了框架

00:04:30.776 --> 00:04:32.486 A:middle
是的 你链接的框架

00:04:32.486 --> 00:04:34.976 A:middle
实际上使用内存

00:04:34.976 --> 00:04:35.286 A:middle
和脏内存

00:04:35.766 --> 00:04:36.976 A:middle
它是一个

00:04:36.976 --> 00:04:39.066 A:middle
连接框架的必要部分

00:04:39.066 --> 00:04:39.756 A:middle
但如果你要保持自己的框架

00:04:39.756 --> 00:04:41.776 A:middle
可以使用单例

00:04:41.776 --> 00:04:43.726 A:middle
和全局初始化器

00:04:43.726 --> 00:04:45.256 A:middle
来减少他们使用的

00:04:45.256 --> 00:04:46.786 A:middle
脏内存

00:04:46.786 --> 00:04:48.146 A:middle
因为单例

00:04:48.226 --> 00:04:49.246 A:middle
在被创建之后

00:04:49.366 --> 00:04:51.376 A:middle
才会进入内存 初始化器也只有

00:04:51.376 --> 00:04:53.976 A:middle
在框架被链接或类被加载时

00:04:57.346 --> 00:05:00.986 A:middle
才会运行 压缩内存非常酷

