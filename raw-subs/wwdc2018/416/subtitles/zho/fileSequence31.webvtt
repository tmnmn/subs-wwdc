WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.606 --> 00:31:00.816 A:middle
加上压缩内存大小的总和

00:31:00.816 --> 00:31:02.586 A:middle
来确定我的 App 实际

00:31:02.586 --> 00:31:03.726 A:middle
实际使用了多少内存

00:31:04.266 --> 00:31:05.516 A:middle
所以这就是我想要

00:31:05.516 --> 00:31:06.796 A:middle
关注的两列

00:31:06.796 --> 00:31:08.596 A:middle
我们再来看一些较大的数字

00:31:08.596 --> 00:31:11.636 A:middle
我马上就看到了 “CG image” 非常显眼

00:31:11.636 --> 00:31:13.996 A:middle
它占用了非常多的

00:31:13.996 --> 00:31:15.206 A:middle
脏内存和交换内存

00:31:15.256 --> 00:31:16.906 A:middle
这是一个危险信号

00:31:16.956 --> 00:31:17.846 A:middle
让我们继续观察

00:31:18.496 --> 00:31:21.616 A:middle
我可以看到

00:31:21.616 --> 00:31:23.676 A:middle
“IOSurface” 占用了很多的 脏内存

00:31:23.676 --> 00:31:24.686 A:middle
但不占用交换内存

00:31:25.156 --> 00:31:29.876 A:middle
“MALLOC_LARGE” 占用了很多脏内存

00:31:30.146 --> 00:31:31.256 A:middle
但占用较少的交换内存

00:31:31.256 --> 00:31:33.396 A:middle
之后就没有

00:31:33.396 --> 00:31:35.056 A:middle
这么大的数字了

00:31:35.576 --> 00:31:37.696 A:middle
基于我在这里看到的

00:31:37.696 --> 00:31:39.036 A:middle
我认为我应该集中处理

00:31:39.036 --> 00:31:42.376 A:middle
CG image 的虚拟内存区域

00:31:43.096 --> 00:31:44.606 A:middle
让我们把它复制下来

00:31:45.586 --> 00:31:47.426 A:middle
下一步该是什么呢

00:31:48.096 --> 00:31:50.266 A:middle
我们想要了解更多

00:31:50.266 --> 00:31:52.326 A:middle
关于虚拟内存的信息

00:31:52.326 --> 00:31:53.986 A:middle
所以 vmmap 似乎还是我们要用的工具

00:31:54.636 --> 00:31:55.616 A:middle
这次我将不再

00:31:55.616 --> 00:31:57.216 A:middle
使用 -summary 参数

00:31:57.216 --> 00:32:00.376 A:middle
而是传递我的 Memgraph 文件

