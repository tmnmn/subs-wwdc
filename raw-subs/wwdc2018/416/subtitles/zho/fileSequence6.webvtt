WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.126 --> 00:06:00.586 A:middle
所以不要想当然地认为

00:06:00.996 --> 00:06:02.826 A:middle
内存警告是你造成的

00:06:03.986 --> 00:06:06.386 A:middle
压缩器使内存的释放

00:06:06.386 --> 00:06:08.636 A:middle
变得复杂

00:06:09.516 --> 00:06:10.146 A:middle
因为根据压缩的内容

00:06:10.146 --> 00:06:12.106 A:middle
实际上你可以 比以前使用更多的内存

00:06:12.356 --> 00:06:15.986 A:middle
因此我们建议修改策略

00:06:15.986 --> 00:06:17.136 A:middle
比如暂时不缓存任何内容

00:06:17.686 --> 00:06:18.896 A:middle
或者在发生内存警告时

00:06:18.896 --> 00:06:21.106 A:middle
限制一些后台工作

00:06:22.536 --> 00:06:24.386 A:middle
我们中的一些人可能在 App 中

00:06:24.386 --> 00:06:24.846 A:middle
遇到这种情况

00:06:25.476 --> 00:06:27.726 A:middle
我们得到一个内存警告

00:06:27.726 --> 00:06:28.826 A:middle
并决定从缓存中

00:06:28.826 --> 00:06:31.126 A:middle
删除所有对象

00:06:31.336 --> 00:06:33.856 A:middle
回到压缩字典的例子

00:06:34.646 --> 00:06:35.606 A:middle
会发生什么呢

00:06:35.896 --> 00:06:37.446 A:middle
既然我正在访问这个字典

00:06:37.446 --> 00:06:39.496 A:middle
我现在比以前

00:06:39.496 --> 00:06:41.216 A:middle
使用了更多的内存页

00:06:42.046 --> 00:06:43.866 A:middle
在内存受限的环境中

00:06:43.926 --> 00:06:45.546 A:middle
我们并不希望这样

00:06:46.466 --> 00:06:47.726 A:middle
因为我删除了所有的对象

00:06:47.726 --> 00:06:50.186 A:middle
我做了很多工作

00:06:50.186 --> 00:06:51.306 A:middle
只是为了让它回到

00:06:51.306 --> 00:06:52.356 A:middle
之前被压缩时的样子

00:06:52.356 --> 00:06:53.016 A:middle
也就是只占用一个内存页

00:06:54.246 --> 00:06:57.796 A:middle
所以我们要注意记忆警告

00:06:59.376 --> 00:07:02.466 A:middle
这就提出了一个关于缓存的重要问题

