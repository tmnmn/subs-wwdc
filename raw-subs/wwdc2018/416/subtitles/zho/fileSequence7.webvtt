WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.376 --> 00:07:02.466 A:middle
这就提出了一个关于缓存的重要问题

00:07:03.276 --> 00:07:05.926 A:middle
当我们缓存时 我们实际上是在试图

00:07:05.926 --> 00:07:07.466 A:middle
避免 CPU 重复工作

00:07:07.466 --> 00:07:08.826 A:middle
但是如果我们缓存太多

00:07:08.826 --> 00:07:10.306 A:middle
我们将耗尽所有的内存

00:07:10.716 --> 00:07:12.476 A:middle
这可能会给系统带来问题

00:07:13.436 --> 00:07:15.316 A:middle
所以请记住 我们有

00:07:15.316 --> 00:07:16.536 A:middle
内存压缩器和缓存

00:07:16.696 --> 00:07:17.966 A:middle
最好平衡一下

00:07:17.966 --> 00:07:20.326 A:middle
缓存与重新计算的内容

00:07:21.386 --> 00:07:22.676 A:middle
另一个注意事项是

00:07:22.676 --> 00:07:23.796 A:middle
如果使用的不是字典

00:07:23.796 --> 00:07:25.706 A:middle
而是 NSCache

00:07:25.706 --> 00:07:28.146 A:middle
这将是存储缓存对象的安全方法

00:07:28.506 --> 00:07:30.336 A:middle
由于 NSCache

00:07:30.336 --> 00:07:31.326 A:middle
分配内存的方式

00:07:31.326 --> 00:07:32.806 A:middle
它实际上是可被释放的

00:07:32.806 --> 00:07:33.396 A:middle
所以在内存受限的环境中

00:07:33.396 --> 00:07:34.436 A:middle
它的效果更好

00:07:34.876 --> 00:07:38.396 A:middle
回到典型的 App 中的

00:07:38.396 --> 00:07:40.136 A:middle
这三个部分

00:07:40.136 --> 00:07:41.166 A:middle
当我们讨论 App 的内存占用时

00:07:41.166 --> 00:07:42.636 A:middle
我们实际上是在讨论那些脏的

00:07:42.636 --> 00:07:44.046 A:middle
和压缩的部分

00:07:44.146 --> 00:07:46.766 A:middle
净内存在这里并不重要

00:07:47.876 --> 00:07:51.646 A:middle
每个 App 都有一个内存占用限制

00:07:53.016 --> 00:07:54.816 A:middle
这个限制对于一个 App 来说

00:07:54.816 --> 00:07:56.486 A:middle
是相当高的

00:07:56.556 --> 00:07:57.786 A:middle
但是请记住 根据设备的不同

00:07:58.276 --> 00:07:59.386 A:middle
这个限制也会改变

00:07:59.506 --> 00:08:01.346 A:middle
因此 你不能像

