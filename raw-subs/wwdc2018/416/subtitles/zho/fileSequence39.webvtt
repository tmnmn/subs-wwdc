WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:58.556 --> 00:39:00.156 A:middle
虚拟内存区域的

00:39:00.156 --> 00:39:01.096 A:middle
起始内存地址

00:39:01.806 --> 00:39:02.856 A:middle
让我们看看是什么样子

00:39:04.036 --> 00:39:05.386 A:middle
实际上这并不是一个

00:39:05.386 --> 00:39:06.566 A:middle
很大的回溯

00:39:06.566 --> 00:39:09.066 A:middle
我可以看到我的代码

00:39:09.066 --> 00:39:10.126 A:middle
出现在这里的几行

00:39:10.576 --> 00:39:12.676 A:middle
第 6 行到第 9 行

00:39:12.676 --> 00:39:14.106 A:middle
实际上来自我的 App 代码

00:39:14.106 --> 00:39:16.066 A:middle
我可以在第 6 行看到

00:39:16.066 --> 00:39:19.046 A:middle
NoirFilter.apply() 函数

00:39:19.046 --> 00:39:21.186 A:middle
负责创建

00:39:21.186 --> 00:39:24.486 A:middle
这个特定的虚拟内存区域

00:39:24.996 --> 00:39:27.626 A:middle
这是一个很好的证据

00:39:27.626 --> 00:39:28.826 A:middle
展示了我如何在 App 中

00:39:28.826 --> 00:39:31.216 A:middle
找到造成这些内存使用的东西

00:39:31.746 --> 00:39:34.806 A:middle
如果我们回到 Memgraph 文件

00:39:34.806 --> 00:39:36.586 A:middle
就可以发现这和 Xcode 中

00:39:36.586 --> 00:39:38.626 A:middle
出现的回溯是一样的

00:39:39.186 --> 00:39:40.446 A:middle
你可以看到这里

00:39:40.446 --> 00:39:42.526 A:middle
也是 NoirFilter.apply() 方法

00:39:42.886 --> 00:39:44.046 A:middle
我们没有像

00:39:44.046 --> 00:39:45.646 A:middle
通常在回溯视图中看到的那样

00:39:45.646 --> 00:39:47.176 A:middle
得到很好的高亮显示

00:39:47.176 --> 00:39:48.796 A:middle
因为我们没有调试一个活动进程

00:39:48.796 --> 00:39:50.116 A:middle
我们正在加载一个 Memgraph 文件

00:39:50.526 --> 00:39:51.686 A:middle
但是你可以看到它的输出

00:39:51.686 --> 00:39:52.796 A:middle
和我们从 malloc_history 中得到的输出

00:39:52.796 --> 00:39:53.566 A:middle
是完全一样的

00:39:53.926 --> 00:39:57.786 A:middle
事实上

00:39:57.986 --> 00:39:59.616 A:middle
为了进一步确认

00:39:59.616 --> 00:40:02.036 A:middle
我需要查看

