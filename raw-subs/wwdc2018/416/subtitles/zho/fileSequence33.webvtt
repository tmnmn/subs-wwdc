WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.936 --> 00:33:00.366 A:middle
我查看了

00:33:00.366 --> 00:33:02.286 A:middle
vmmap 的文档

00:33:02.286 --> 00:33:03.746 A:middle
然后注意到一个 -verbose 参数

00:33:03.746 --> 00:33:05.786 A:middle
顾名思义

00:33:05.786 --> 00:33:08.506 A:middle
它会输出更多的信息

00:33:08.806 --> 00:33:10.446 A:middle
我想知道它能告诉我什么

00:33:11.486 --> 00:33:12.676 A:middle
让我们继续

00:33:12.706 --> 00:33:16.186 A:middle
传入 -verbose 和 Memgraph 文件

00:33:17.536 --> 00:33:21.266 A:middle
同样 我只关心 “CG image” 区域

00:33:22.306 --> 00:33:24.226 A:middle
所以我用 “grep”

00:33:24.226 --> 00:33:25.946 A:middle
来进行过滤

00:33:26.886 --> 00:33:28.396 A:middle
现在我看到了

00:33:28.396 --> 00:33:29.616 A:middle
更多的区域

00:33:30.156 --> 00:33:31.116 A:middle
为什么会这样

00:33:31.826 --> 00:33:33.576 A:middle
默认情况下 

00:33:33.576 --> 00:33:35.166 A:middle
如果 vmmap 找到连续的区域

00:33:35.256 --> 00:33:37.686 A:middle
它会把它们

00:33:37.686 --> 00:33:38.466 A:middle
合并在一起

00:33:38.856 --> 00:33:39.896 A:middle
实际上

00:33:39.896 --> 00:33:41.276 A:middle
如果你从第二行开始看

00:33:41.276 --> 00:33:43.346 A:middle
这个区域的终止地址

00:33:43.346 --> 00:33:44.596 A:middle
和这个区域的起始地址

00:33:44.596 --> 00:33:46.106 A:middle
是一样的

00:33:46.426 --> 00:33:48.496 A:middle
下面也一样

00:33:48.966 --> 00:33:51.076 A:middle
因此 vmmap 在默认情况下

00:33:51.076 --> 00:33:52.426 A:middle
将其折叠成一个区域

00:33:52.886 --> 00:33:54.086 A:middle
但是看看这里的细节

00:33:54.086 --> 00:33:54.976 A:middle
却能发现一些

00:33:54.976 --> 00:33:55.776 A:middle
不同之处

00:33:55.836 --> 00:33:57.746 A:middle
特别是其中一些区域

00:33:57.746 --> 00:34:00.826 A:middle
使用了更多的 脏内存

