WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:57.346 --> 00:05:00.986 A:middle
才会运行 压缩内存非常酷

00:05:00.986 --> 00:05:03.066 A:middle
iOS 没有传统的磁盘交换系统

00:05:03.946 --> 00:05:06.446 A:middle
取而代之 它使用内存压缩器

00:05:06.626 --> 00:05:10.606 A:middle
它是在 iOS 7 中被引入的内存压缩器

00:05:10.606 --> 00:05:12.526 A:middle
接收未访问的内存页

00:05:12.526 --> 00:05:13.776 A:middle
并压缩它们

00:05:13.776 --> 00:05:15.656 A:middle
这实际上可以创建更多的空间

00:05:16.366 --> 00:05:17.586 A:middle
但在访问时

00:05:17.586 --> 00:05:19.226 A:middle
压缩器会对它们进行解压

00:05:19.516 --> 00:05:20.266 A:middle
以便读取内存

00:05:20.936 --> 00:05:22.076 A:middle
让我们看一个例子

00:05:23.296 --> 00:05:25.316 A:middle
假设我有一个用于缓存的字典

00:05:25.876 --> 00:05:27.336 A:middle
它占用了 3 页的内存

00:05:27.336 --> 00:05:29.796 A:middle
但是如果我有一段时间

00:05:29.796 --> 00:05:31.266 A:middle
没有访问过它

00:05:31.266 --> 00:05:32.436 A:middle
且系统需要一些空间

00:05:32.436 --> 00:05:33.366 A:middle
系统就可以把它

00:05:33.366 --> 00:05:35.436 A:middle
压缩到一个内存页中

00:05:35.896 --> 00:05:38.156 A:middle
它现在被压缩了

00:05:38.716 --> 00:05:40.806 A:middle
但同时我节省了空间

00:05:40.806 --> 00:05:42.246 A:middle
或者说我现在有了两个额外的内存页

00:05:42.896 --> 00:05:44.056 A:middle
如果在未来的某个时刻我想访问它

00:05:44.056 --> 00:05:45.786 A:middle
它将会恢复原来的大小

00:05:46.456 --> 00:05:48.696 A:middle
我们来谈谈内存警告

00:05:49.446 --> 00:05:51.586 A:middle
App 并不总是

00:05:51.946 --> 00:05:52.876 A:middle
引起内存警告的原因

00:05:53.736 --> 00:05:54.736 A:middle
如果你在一个低内存的设备上

00:05:54.736 --> 00:05:57.196 A:middle
接到一个电话

00:05:57.256 --> 00:05:58.156 A:middle
那也可能会触发一个内存警告

00:05:58.156 --> 00:05:59.036 A:middle
你就有麻烦了

00:05:59.126 --> 00:06:00.586 A:middle
所以不要想当然地认为

