WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.196 --> 00:12:00.956 A:middle
请记住这里的脏和交换区域大小 是非常重要的

00:12:02.016 --> 00:12:03.646 A:middle
值得注意的一点是

00:12:03.646 --> 00:12:05.066 A:middle
交换区域大小指的是

00:12:05.066 --> 00:12:07.486 A:middle
数据压缩前的大小

00:12:07.486 --> 00:12:08.746 A:middle
而不是压缩后的大小

00:12:10.226 --> 00:12:11.686 A:middle
如果你真的需要深入了解

00:12:11.756 --> 00:12:13.186 A:middle
想要更多的信息

00:12:13.546 --> 00:12:14.956 A:middle
你可以在 Memgraph 上

00:12:14.956 --> 00:12:16.186 A:middle
运行 vmmap

00:12:16.186 --> 00:12:17.786 A:middle
你会得到所有区域的具体信息

00:12:17.896 --> 00:12:19.606 A:middle
我们首先向你们展示

00:12:19.606 --> 00:12:20.686 A:middle
“Non-writable regions（不可写入区域）”

00:12:20.686 --> 00:12:22.156 A:middle
比如程序的文本

00:12:22.156 --> 00:12:24.536 A:middle
或可执行代码

00:12:24.536 --> 00:12:26.156 A:middle
然后是 “Writable regions（可写入区域）”

00:12:26.156 --> 00:12:27.186 A:middle
比如数据部分

00:12:27.256 --> 00:12:28.786 A:middle
这就是你的进程堆

00:12:29.286 --> 00:12:30.436 A:middle
所在的位置

00:12:30.676 --> 00:12:31.986 A:middle
除了这些之外还有很酷的一点

00:12:31.986 --> 00:12:33.456 A:middle
就是所有这些工具

00:12:33.456 --> 00:12:34.836 A:middle
都可以很好地使用

00:12:34.836 --> 00:12:35.976 A:middle
标准命令行实用程序

00:12:36.526 --> 00:12:38.286 A:middle
例如 前几天

00:12:38.286 --> 00:12:39.356 A:middle
我在 VM Tracker 中分析我的 App

00:12:39.356 --> 00:12:41.506 A:middle
然后我看到了

00:12:41.506 --> 00:12:42.526 A:middle
脏内存增加的情况

00:12:43.106 --> 00:12:45.316 A:middle
所以我导出了 Memgraph 文件

00:12:45.316 --> 00:12:48.036 A:middle
我想知道这些脏数据

00:12:48.036 --> 00:12:49.166 A:middle
是否有一部分是由我链接的

00:12:49.166 --> 00:12:52.076 A:middle
框架或库造成的

00:12:52.276 --> 00:12:54.216 A:middle
于是我在这个 Memgraph 上

00:12:54.216 --> 00:12:55.296 A:middle
运行 vmmap

00:12:56.296 --> 00:12:58.456 A:middle
我使用了 -pages 参数

00:12:58.866 --> 00:13:00.206 A:middle
这意味着 vmmap 将输出

