WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:57.746 --> 00:34:00.826 A:middle
使用了更多的 脏内存

00:34:00.826 --> 00:34:02.016 A:middle
而另一些使用了更多的压缩内存

00:34:02.016 --> 00:34:04.426 A:middle
这就会帮助我找到

00:34:04.426 --> 00:34:06.126 A:middle
应该关注的地方

00:34:06.126 --> 00:34:07.626 A:middle
但这里我要用

00:34:07.626 --> 00:34:08.786 A:middle
另一种策略

00:34:09.216 --> 00:34:10.775 A:middle
我知道 操作系统中

00:34:10.775 --> 00:34:14.266 A:middle
虽然不一定 但一般来说

00:34:14.266 --> 00:34:17.076 A:middle
虚拟内存区域创建得越晚

00:34:17.166 --> 00:34:19.696 A:middle
在 App 生命周期中

00:34:19.846 --> 00:34:21.565 A:middle
它发生得就越晚

00:34:22.136 --> 00:34:23.466 A:middle
由于这个 Memgraph 文件

00:34:23.466 --> 00:34:25.576 A:middle
是在内存使用峰值时获取的

00:34:25.576 --> 00:34:27.596 A:middle
所以很有可能

00:34:27.666 --> 00:34:29.775 A:middle
这些后面的区域

00:34:29.896 --> 00:34:31.775 A:middle
与导致峰值的原因更有关联

00:34:32.426 --> 00:34:33.686 A:middle
所以我不想寻找

00:34:33.686 --> 00:34:35.295 A:middle
最大的 脏内存

00:34:35.295 --> 00:34:36.565 A:middle
和压缩内存数字

00:34:36.565 --> 00:34:38.056 A:middle
而是要从底部这里开始

00:34:38.676 --> 00:34:40.666 A:middle
我要获取最后一个区域

00:34:40.666 --> 00:34:42.406 A:middle
的起始地址

00:34:43.166 --> 00:34:44.786 A:middle
我该怎么做呢

00:34:45.366 --> 00:34:47.755 A:middle
James 提到的一个工具是 heap

00:34:47.755 --> 00:34:50.815 A:middle
但它作用于堆上的对象

00:34:50.815 --> 00:34:51.856 A:middle
而我正在处理一个

00:34:51.856 --> 00:34:53.196 A:middle
虚拟内存区域

00:34:53.196 --> 00:34:56.366 A:middle
所以它并不适用

00:34:56.366 --> 00:34:58.436 A:middle
还有 leaks 工具

00:34:58.436 --> 00:34:59.516 A:middle
但是我这里并没有泄漏

00:34:59.516 --> 00:35:00.466 A:middle
我已经从 Memgraph 中

