WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:59.946 --> 00:42:02.006 A:middle
它根本不会在设备上流畅运行

00:42:02.336 --> 00:42:03.186 A:middle
所以当你在模拟器中运行时

00:42:03.186 --> 00:42:04.586 A:middle
你必须记住

00:42:04.586 --> 00:42:06.036 A:middle
它对于调试和

00:42:06.036 --> 00:42:07.226 A:middle
测试变更很有用

00:42:07.226 --> 00:42:08.706 A:middle
但是你也需要在设备上

00:42:08.706 --> 00:42:09.796 A:middle
验证所有的东西

00:42:09.796 --> 00:42:11.206 A:middle
但同时 另一件好事是

00:42:11.206 --> 00:42:13.976 A:middle
模拟器永远不会耗尽内存

00:42:14.276 --> 00:42:15.616 A:middle
如果我遇到了 App 在设备上

00:42:15.616 --> 00:42:16.736 A:middle
被关闭的情况

00:42:16.736 --> 00:42:18.876 A:middle
可以在模拟器中试试

00:42:19.106 --> 00:42:20.296 A:middle
我可以等待一个

00:42:20.296 --> 00:42:21.836 A:middle
非常大的分配

00:42:21.836 --> 00:42:23.476 A:middle
而不会被关闭

00:42:23.476 --> 00:42:24.946 A:middle
然后从那里进行调查

00:42:25.666 --> 00:42:26.716 A:middle
我想指出的一点是

00:42:26.716 --> 00:42:28.786 A:middle
我们其实给你们看了

00:42:28.786 --> 00:42:31.336 A:middle
这里标志的内存峰值

00:42:31.336 --> 00:42:34.406 A:middle
在这个例子中 我最多使用了 7.7GB

00:42:35.226 --> 00:42:35.816 A:middle
这很糟糕

00:42:36.636 --> 00:42:39.126 A:middle
我们来看看能做些什么

00:42:39.226 --> 00:42:43.706 A:middle
回到我的 apply() 函数

00:42:44.326 --> 00:42:46.386 A:middle
现在

00:42:46.386 --> 00:42:47.026 A:middle
我想使用这个

00:42:47.026 --> 00:42:48.396 A:middle
beginImageContextWithOptions

00:42:48.396 --> 00:42:50.086 A:middle
但是回想一下 Kyle 说过的

00:42:50.086 --> 00:42:52.046 A:middle
当你处理图像时

00:42:52.046 --> 00:42:54.296 A:middle
内存使用中

00:42:54.296 --> 00:42:56.236 A:middle
最重要的是什么

00:42:56.696 --> 00:42:58.986 A:middle
是图像的尺寸

00:42:58.986 --> 00:43:00.446 A:middle
让我们看看它是什么样子

