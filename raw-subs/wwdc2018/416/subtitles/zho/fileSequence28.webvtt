WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.266 --> 00:28:03.496 A:middle
我有一些

00:28:04.286 --> 00:28:06.686 A:middle
在使用 Memgraph 文件

00:28:06.686 --> 00:28:08.216 A:middle
的日常技巧

00:28:08.216 --> 00:28:08.946 A:middle
或者说是策略

00:28:09.426 --> 00:28:10.756 A:middle
第一个

00:28:10.856 --> 00:28:12.636 A:middle
我需要把它向上拖动一下

00:28:13.076 --> 00:28:14.846 A:middle
就是寻找泄漏

00:28:15.406 --> 00:28:18.286 A:middle
如果我前往过滤器工具栏

00:28:18.286 --> 00:28:19.846 A:middle
轻点泄漏过滤器

00:28:19.846 --> 00:28:22.106 A:middle
它就会显示 Memgraph 文件中的

00:28:22.106 --> 00:28:23.736 A:middle
每一个泄漏

00:28:24.666 --> 00:28:27.746 A:middle
这个 Memgraph 文件没有泄漏

00:28:27.986 --> 00:28:29.526 A:middle
这既是好消息

00:28:29.526 --> 00:28:30.656 A:middle
又是坏消息

00:28:31.136 --> 00:28:32.136 A:middle
好处在于 没有泄漏

00:28:32.136 --> 00:28:33.516 A:middle
但现在我得弄清楚

00:28:33.516 --> 00:28:35.046 A:middle
到底发生了什么

00:28:35.906 --> 00:28:37.746 A:middle
Memgraph 的

00:28:37.746 --> 00:28:40.046 A:middle
另一个好处是

00:28:40.046 --> 00:28:41.926 A:middle
告诉我一个对象

00:28:41.926 --> 00:28:43.036 A:middle
在内存中有多少个实例

00:28:43.036 --> 00:28:44.226 A:middle
以及是否比我预期的要多

00:28:44.876 --> 00:28:46.166 A:middle
当我查看这个 Memgraph 文件时

00:28:46.166 --> 00:28:47.476 A:middle
如果我特意关注

00:28:47.476 --> 00:28:49.136 A:middle
代码中的对象

00:28:49.136 --> 00:28:52.146 A:middle
就可以看到

00:28:52.146 --> 00:28:53.966 A:middle
内存中只有 5 个对象

00:28:53.966 --> 00:28:55.526 A:middle
且每种都只有 1 个

00:28:56.136 --> 00:28:57.266 A:middle
如果内存中

00:28:57.266 --> 00:28:59.066 A:middle
有多个 RootViewController

00:28:59.336 --> 00:29:01.586 A:middle
多个 NoirFilter

