WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:56.126 --> 00:44:00.786 A:middle
iPhone X 是一个 3X 设备

00:44:00.786 --> 00:44:02.766 A:middle
所以是 3 倍的宽度

00:44:02.766 --> 00:44:06.436 A:middle
乘以 3 倍的高度

00:44:06.436 --> 00:44:09.696 A:middle
再乘以 4 字节每像素

00:44:10.506 --> 00:44:13.706 A:middle
这个数字看起来很熟悉

00:44:15.876 --> 00:44:17.786 A:middle
所以我很确定

00:44:17.786 --> 00:44:19.306 A:middle
我清楚地知道到底是什么

00:44:19.306 --> 00:44:20.886 A:middle
使用了 7.5GB 的内存

00:44:20.886 --> 00:44:24.386 A:middle
并不一定是

00:44:24.386 --> 00:44:25.966 A:middle
我的 beginImageContext

00:44:25.966 --> 00:44:27.376 A:middle
而是图像的尺寸

00:44:27.746 --> 00:44:29.186 A:middle
没有理由需要

00:44:29.186 --> 00:44:30.506 A:middle
这么大的图像

00:44:30.966 --> 00:44:32.146 A:middle
我要做的是把它缩小成

00:44:32.146 --> 00:44:33.826 A:middle
和我的视图

00:44:33.826 --> 00:44:34.666 A:middle
相同的尺寸

00:44:34.666 --> 00:44:36.086 A:middle
这样 它就会占用

00:44:36.086 --> 00:44:36.826 A:middle
更少的内存

00:44:37.526 --> 00:44:38.766 A:middle
那么 我要回到

00:44:38.766 --> 00:44:40.026 A:middle
上面的图像加载代码

00:44:40.136 --> 00:44:41.216 A:middle
实际上 在我这么做之前

00:44:41.216 --> 00:44:42.276 A:middle
我想先禁用这个断点

00:44:42.276 --> 00:44:45.146 A:middle
让我们看看

00:44:45.146 --> 00:44:46.286 A:middle
它是做什么的

00:44:46.286 --> 00:44:47.666 A:middle
很简单

00:44:47.666 --> 00:44:49.016 A:middle
它从一个 Bundle 中获取 URL

00:44:49.016 --> 00:44:51.176 A:middle
它从那个 URL 中

00:44:51.176 --> 00:44:52.796 A:middle
加载一些数据

00:44:52.796 --> 00:44:55.166 A:middle
并将其加载到 UIImage 中

00:44:55.346 --> 00:44:56.856 A:middle
然后传递给滤镜

00:44:57.406 --> 00:44:58.906 A:middle
我想做的是

00:44:58.906 --> 00:45:00.276 A:middle
在我把它发送到滤镜之前

