WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.136 --> 00:48:00.206 A:middle
但是如果你仔细思考

00:48:00.206 --> 00:48:01.666 A:middle
这个其实就是我所期望的结果

00:48:02.216 --> 00:48:03.496 A:middle
在这种情况下

00:48:03.496 --> 00:48:05.346 A:middle
我的图像仍然是

00:48:05.346 --> 00:48:07.006 A:middle
每个像素 4 个字节

00:48:07.006 --> 00:48:08.076 A:middle
所以我不会使用

00:48:08.076 --> 00:48:10.476 A:middle
这个新方法来节省内存

00:48:10.906 --> 00:48:12.176 A:middle
然而 如果有一个

00:48:12.176 --> 00:48:13.926 A:middle
节省内存的机会

00:48:14.406 --> 00:48:17.356 A:middle
例如 如果操作系统可以判断

00:48:17.356 --> 00:48:20.666 A:middle
图像可以每像素使用更少

00:48:20.666 --> 00:48:21.866 A:middle
或更多的字节

00:48:21.866 --> 00:48:23.156 A:middle
那么系统就可以做出正确的处理

00:48:23.156 --> 00:48:24.206 A:middle
我就不需要担心了

00:48:24.546 --> 00:48:25.886 A:middle
因此 在代码经过这些更改后

00:48:25.886 --> 00:48:28.636 A:middle
即使我没有看到很大的改进

00:48:28.636 --> 00:48:29.486 A:middle
我也知道它变得更好了

00:48:30.526 --> 00:48:33.246 A:middle
我还可以做更多

00:48:33.566 --> 00:48:35.956 A:middle
我想确保当 App 进入后台时

00:48:35.956 --> 00:48:37.686 A:middle
我们会卸载图像

00:48:37.686 --> 00:48:39.536 A:middle
而且我们不会在屏幕之外的视图中

00:48:39.536 --> 00:48:41.346 A:middle
显示任何图像

00:48:41.346 --> 00:48:42.286 A:middle
我还有很多可以做的

00:48:42.286 --> 00:48:44.026 A:middle
但是我对这些结果

00:48:44.026 --> 00:48:45.516 A:middle
已经很满意了

00:48:45.516 --> 00:48:46.896 A:middle
所以我想把它们送回给 James

00:48:47.156 --> 00:48:48.416 A:middle
我要抓取一个屏幕快照

00:48:48.416 --> 00:48:50.096 A:middle
并给 James 添加一点备注

00:48:50.096 --> 00:48:53.236 A:middle
让他知道

00:48:53.236 --> 00:48:55.716 A:middle
我对这一切是多么的满意

00:48:56.286 --> 00:48:57.476 A:middle
我想我们可以

00:48:57.476 --> 00:48:59.466 A:middle
给他发一个

