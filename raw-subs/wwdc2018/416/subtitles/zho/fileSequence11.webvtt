WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:00.106 --> 00:11:01.356 A:middle
你可能不知道

00:11:01.726 --> 00:11:03.066 A:middle
你可以搭配我们的多种命令行工具

00:11:03.066 --> 00:11:04.496 A:middle
使用 Memgraph

00:11:06.366 --> 00:11:07.566 A:middle
首先 你需要从 Xcode 中

00:11:07.566 --> 00:11:08.586 A:middle
导出 Memgraph

00:11:08.956 --> 00:11:09.856 A:middle
这很简单

00:11:10.976 --> 00:11:12.336 A:middle
你只需点按 “File（文件）”菜单中的

00:11:12.336 --> 00:11:14.006 A:middle
“Export Memory Graph...（导出内存图）”

00:11:14.006 --> 00:11:14.686 A:middle
并将其保存

00:11:15.336 --> 00:11:18.216 A:middle
然后 你就可以将 Memgraph

00:11:18.256 --> 00:11:19.506 A:middle
传递给命令行工具

00:11:19.506 --> 00:11:20.456 A:middle
而不是目标本身

00:11:20.456 --> 00:11:21.036 A:middle
这样就可以了

00:11:22.176 --> 00:11:23.796 A:middle
我在 Xcode 10 中运行我的 App

00:11:23.796 --> 00:11:25.216 A:middle
然后收到一个

00:11:25.216 --> 00:11:25.996 A:middle
内存资源异常

00:11:26.356 --> 00:11:26.986 A:middle
这可不太好

00:11:27.176 --> 00:11:29.536 A:middle
我也许应该提取 Memgraph 来进一步研究

00:11:29.536 --> 00:11:30.536 A:middle
但接下来我该怎么做呢

00:11:31.046 --> 00:11:32.526 A:middle
显然 去终端

00:11:33.176 --> 00:11:35.396 A:middle
我经常使用的第一个工具

00:11:35.536 --> 00:11:36.026 A:middle
是 vmmap

00:11:36.626 --> 00:11:37.486 A:middle
通过输出

00:11:37.486 --> 00:11:38.696 A:middle
分配给进程的虚拟内存区域

00:11:38.696 --> 00:11:40.306 A:middle
它给你的 App 提供了

00:11:40.306 --> 00:11:42.106 A:middle
内存消耗的高级分析

00:11:43.576 --> 00:11:45.856 A:middle
-summary 参数 是一个很好的起点

00:11:46.716 --> 00:11:49.866 A:middle
它可以打印出很多细节 

00:11:49.866 --> 00:11:52.946 A:middle
比如该区域的内存大小

00:11:52.946 --> 00:11:55.546 A:middle
脏区域的数量

00:11:55.546 --> 00:11:56.286 A:middle
以及交换内存

00:11:56.286 --> 00:11:58.026 A:middle
也就是 iOS 中的压缩内存的数量

00:11:58.196 --> 00:12:00.956 A:middle
请记住这里的脏和交换区域大小 是非常重要的

