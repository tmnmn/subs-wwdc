WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.696 --> 00:18:01.846 A:middle
As an example, I have this

00:18:01.996 --> 00:18:03.786 A:middle
really beautiful picture that I

00:18:03.786 --> 00:18:04.986 A:middle
want to use as a wallpaper for

00:18:04.986 --> 00:18:05.496 A:middle
an iPad app.

00:18:06.646 --> 00:18:10.786 A:middle
It measures 2048 by 1536, and

00:18:10.786 --> 00:18:12.866 A:middle
the file on disk is 590

00:18:12.866 --> 00:18:13.436 A:middle
kilobytes.

00:18:13.966 --> 00:18:15.586 A:middle
But how much memory does it use

00:18:15.696 --> 00:18:16.086 A:middle
really?

00:18:18.516 --> 00:18:19.646 A:middle
10 megabytes.

00:18:20.056 --> 00:18:21.746 A:middle
10 megs, that's huge!

00:18:22.146 --> 00:18:23.746 A:middle
And the reason why is because

00:18:23.746 --> 00:18:25.066 A:middle
multiplying the number of pixels

00:18:25.066 --> 00:18:28.406 A:middle
wide by high, 2048 by 1536, by 4

00:18:28.406 --> 00:18:30.016 A:middle
bytes per pixel gets you about

00:18:30.016 --> 00:18:30.786 A:middle
10 megabytes.

00:18:31.706 --> 00:18:33.956 A:middle
So why is it so much larger?

00:18:35.016 --> 00:18:36.916 A:middle
Well, we have to talk about how

00:18:36.916 --> 00:18:38.076 A:middle
images work on iOS.

00:18:38.196 --> 00:18:39.676 A:middle
There's a load, a decode, and a

00:18:39.706 --> 00:18:40.346 A:middle
render phase.

00:18:41.306 --> 00:18:43.516 A:middle
So the load phase takes this

00:18:43.516 --> 00:18:45.646 A:middle
590-kilobyte JPEG file, which is

00:18:45.646 --> 00:18:48.236 A:middle
compressed, loads it into

00:18:48.236 --> 00:18:48.646 A:middle
memory.

00:18:49.856 --> 00:18:51.996 A:middle
The decode converts that JPEG

00:18:51.996 --> 00:18:54.836 A:middle
file into a format that the GPU

00:18:54.836 --> 00:18:55.366 A:middle
can read.

00:18:55.936 --> 00:18:56.966 A:middle
Now, this needs to be

00:18:56.966 --> 00:18:58.416 A:middle
uncompressed, which makes it 10

00:18:58.416 --> 00:18:58.996 A:middle
megabytes.

00:18:59.926 --> 00:19:01.446 A:middle
Once it's been decoded, it can

