WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:59.086 --> 00:09:00.546 A:middle
memory footprint of your app.

00:09:00.966 --> 00:09:03.086 A:middle
In Xcode 10, it now shows you

00:09:03.086 --> 00:09:04.516 A:middle
the value that the system grades

00:09:04.516 --> 00:09:05.696 A:middle
you against, so don't be too

00:09:05.696 --> 00:09:06.526 A:middle
concerned if this looks

00:09:06.526 --> 00:09:08.186 A:middle
different from Xcode 9.

00:09:09.226 --> 00:09:10.506 A:middle
So I was running my app in

00:09:10.546 --> 00:09:11.676 A:middle
Xcode, and I saw that it was

00:09:11.676 --> 00:09:12.606 A:middle
consuming more memory.

00:09:13.386 --> 00:09:14.256 A:middle
What tool should I reach for

00:09:14.256 --> 00:09:14.636 A:middle
next?

00:09:15.316 --> 00:09:17.306 A:middle
Well, Instruments, obviously.

00:09:18.356 --> 00:09:19.826 A:middle
This provides a number of ways

00:09:19.826 --> 00:09:20.796 A:middle
to investigate your app's

00:09:20.796 --> 00:09:21.186 A:middle
footprint.

00:09:21.916 --> 00:09:24.256 A:middle
You're probably already familiar

00:09:24.256 --> 00:09:25.556 A:middle
with Allocations and Leaks.

00:09:25.776 --> 00:09:27.316 A:middle
Allocations profiles the heap

00:09:27.316 --> 00:09:28.466 A:middle
allocations made by your app,

00:09:28.886 --> 00:09:29.866 A:middle
and Leaks will check for memory

00:09:29.866 --> 00:09:31.056 A:middle
leaks in a process over time.

00:09:31.226 --> 00:09:32.756 A:middle
But you might not be so familiar

00:09:32.756 --> 00:09:33.946 A:middle
with the VM Tracker and the

00:09:33.946 --> 00:09:34.826 A:middle
Virtual Memory Trace.

00:09:35.376 --> 00:09:37.326 A:middle
If you remember back to when

00:09:37.326 --> 00:09:38.066 A:middle
Kyle was talking about the

00:09:38.066 --> 00:09:39.416 A:middle
primary classes of memory in

00:09:39.486 --> 00:09:41.456 A:middle
iOS, he was, he talked about

00:09:41.456 --> 00:09:42.516 A:middle
dirty and compressed memory.

00:09:42.946 --> 00:09:44.556 A:middle
Well, the VM Tracker provides a

00:09:44.556 --> 00:09:45.806 A:middle
great way to profile this.

00:09:47.116 --> 00:09:48.616 A:middle
It has separate tracks for dirty

00:09:48.616 --> 00:09:50.046 A:middle
and swapped, which, in iOS, is

00:09:50.046 --> 00:09:51.646 A:middle
compressed memory, and tells you

00:09:51.646 --> 00:09:52.386 A:middle
some information about the

00:09:52.386 --> 00:09:53.186 A:middle
resident size.

00:09:53.996 --> 00:09:55.176 A:middle
I find this really useful for

00:09:55.176 --> 00:09:56.576 A:middle
investigating the dirty memory

00:09:56.576 --> 00:09:57.926 A:middle
size of my app.

00:09:58.516 --> 00:09:59.866 A:middle
Finally, in Instruments is the

00:09:59.866 --> 00:10:01.046 A:middle
VM Memory Trace.

