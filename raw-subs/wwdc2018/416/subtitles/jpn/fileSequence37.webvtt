WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:58.318 --> 00:37:01.855 align:start position:23% line:-1
フレームワークのようなクラスは

00:37:01.955 --> 00:37:05.426 align:start position:34% line:-2
代理もしくは
直接作ったものです

00:37:05.526 --> 00:37:09.697 align:start position:21% line:-2
私のAppにはUiviewがあり
UIImageがあります

00:37:09.797 --> 00:37:14.468 align:start position:25% line:-2
そしてコアイメージクラスを
フィルタリングに使っています

00:37:14.568 --> 00:37:16.437 align:start position:36% line:-1
先に進みましょう

00:37:16.537 --> 00:37:21.074 align:start position:27% line:-2
洗練されたデバッグツールを
調べてみましょう

00:37:21.542 --> 00:37:24.177 align:start position:32% line:-1
さらに見ていきますよ

00:37:25.779 --> 00:37:28.749 align:start position:27% line:-1
欲しいものがあるでしょうか

00:37:31.118 --> 00:37:32.920 align:start position:38% line:-1
大きな出力です

00:37:33.020 --> 00:37:34.755 align:start position:36% line:-1
少し混乱しますね

00:37:35.055 --> 00:37:38.025 align:start position:21% line:-1
例えばフォントに関連するものです

00:37:38.125 --> 00:37:40.627 align:start position:29% line:-1
私のAppで使っています

00:37:40.728 --> 00:37:45.432 align:start position:29% line:-2
フォントは メモリを
大量には消費しませんので

00:37:45.532 --> 00:37:47.234 align:start position:36% line:-1
意味がありません

00:37:47.868 --> 00:37:50.204 align:start position:36% line:-1
下部を見てみると

00:37:50.571 --> 00:37:54.508 align:start position:32% line:-2
CIクラスが
多数表示されています

00:37:54.608 --> 00:37:57.544 align:start position:21% line:-1
これはコアイメージフィルタなどで

00:37:57.644 --> 00:38:00.247 align:start position:21% line:-1
Appのフィルタ機能を作成します

