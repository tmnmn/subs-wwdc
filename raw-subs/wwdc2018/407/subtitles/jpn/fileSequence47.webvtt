WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:59.253 --> 00:47:03.524 align:start position:30% line:-2
ここで達成したいことを
見ていきましょう

00:47:03.724 --> 00:47:07.895 align:start position:21% line:-2
セクションの中に小さなセルのある
このビューを見てください

00:47:09.897 --> 00:47:13.400 align:start position:9% line:-1
“UICollectionView”の画面です

00:47:13.500 --> 00:47:15.269 align:start position:34% line:-1
極端な例を除いて―

00:47:15.369 --> 00:47:18.939 align:start position:27% line:-2
通常のアプローチで
可能な限度を制限しています

00:47:19.173 --> 00:47:22.109 align:start position:34% line:-2
ビューとレイヤが
増えすぎたからです

00:47:24.011 --> 00:47:27.214 align:start position:25% line:-1
さらにレイヤの複雑性が増し―

00:47:27.314 --> 00:47:30.484 align:start position:23% line:-1
多くのメモリが必要になりました

00:47:31.652 --> 00:47:33.454 align:start position:27% line:-1
イノベーションが必要でした

00:47:33.720 --> 00:47:36.290 align:start position:25% line:-2
そこで コレクションビューを
使いながら―

00:47:36.390 --> 00:47:38.358 align:start position:30% line:-2
ビューの数を
制限することにしました

00:47:40.694 --> 00:47:44.898 align:start position:21% line:-2
ビデオゲームでよく使われる
“atlasing”を使いました

00:47:45.132 --> 00:47:49.670 align:start position:25% line:-2
簡単に言うと 画像一式を
１つに結合するテクニックです

00:47:50.504 --> 00:47:54.741 align:start position:29% line:-2
まず 小さなサムネイルで
それを効率的に使い―

00:47:54.908 --> 00:47:57.277 align:start position:27% line:-1
次に デザインカンバスに―

00:47:57.377 --> 00:48:00.047 align:start position:27% line:-2
すべてのRaw画像データを
スタンプします

