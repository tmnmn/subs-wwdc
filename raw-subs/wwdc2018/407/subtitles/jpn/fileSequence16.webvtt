WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:56.890 --> 00:16:00.427 align:start position:29% line:-2
ここで 強力なフィルタの
使い方をご紹介します

00:16:04.565 --> 00:16:08.235 align:start position:30% line:-2
先ほどトラックビューを
見えるようにしました

00:16:09.236 --> 00:16:12.873 align:start position:27% line:-2
新しいタブを作っている間に
CPUの使用率が―

00:16:12.973 --> 00:16:16.710 align:start position:27% line:-2
どこでどのように変化するか
確認したかったからです

00:16:17.044 --> 00:16:19.780 align:start position:29% line:-1
この部分だと分かりました

00:16:20.080 --> 00:16:25.552 align:start position:23% line:-2
ドラッグして
そのトレースのエリアを選択し―

00:16:25.819 --> 00:16:28.755 align:start position:25% line:-2
“Instruments”に
フォーカスさせました

00:16:29.189 --> 00:16:32.926 align:start position:34% line:-2
その間の経路だけに
焦点を当てます

00:16:33.026 --> 00:16:35.829 align:start position:27% line:-1
この部分はタブを作る前です

00:16:35.929 --> 00:16:38.432 align:start position:27% line:-1
こちらがタブを作った後で―

00:16:38.532 --> 00:16:39.867 align:start position:23% line:-1
アプリケーションを止めた時です

00:16:39.967 --> 00:16:43.604 align:start position:27% line:-2
最適化する部分ではないので
このデータは見ません

00:16:45.105 --> 00:16:45.772 align:start position:45% line:-1
さて―

00:16:46.974 --> 00:16:51.578 align:start position:12% line:-2
“Instruments”ウインドウの下に
すべてのトレースデータがあります

00:16:51.678 --> 00:16:56.517 align:start position:23% line:-2
デフォルトでは スレッドごとに
一列に表示されています

00:16:56.617 --> 00:16:59.219 align:start position:25% line:-2
この例で走っているスレッドは
４つです

00:16:59.319 --> 00:17:02.789 align:start position:21% line:-2
これは同時に走る
アプリケーションの数で異なります

