WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.833 --> 00:10:05.272 align:start position:23% line:-2
インテグレーションテストで
コード補完を書いているとします

00:10:05.772 --> 00:10:07.908 align:start position:23% line:-2
Xcodeのアプリケーションを
すべて立ち上げ―

00:10:08.308 --> 00:10:09.910 align:start position:29% line:-1
ソースファイルを開きます

00:10:10.010 --> 00:10:12.913 align:start position:23% line:-1
ファイルを操作し タイプして―

00:10:13.080 --> 00:10:15.582 align:start position:23% line:-1
コード補完を何度も繰り返します

00:10:15.949 --> 00:10:19.653 align:start position:18% line:-2
この時 Xcodeが何をやっているか
監視すると―

00:10:19.753 --> 00:10:23.290 align:start position:29% line:-1
他には何も行っていません

00:10:24.024 --> 00:10:27.361 align:start position:34% line:-2
私のタイプどおりに
描画し配置して―

00:10:27.461 --> 00:10:30.297 align:start position:27% line:-2
シンタックスカラーリングを
しているのです

00:10:30.430 --> 00:10:33.901 align:start position:27% line:-2
裏ではインデックスを作成し
ステータスを取得して

00:10:34.001 --> 00:10:37.004 align:start position:20% line:-2
Assistant Editorに
表示するファイルを決めています

00:10:37.104 --> 00:10:40.874 align:start position:32% line:-2
これらのすべては
コード補完と連動して

00:10:40.974 --> 00:10:42.509 align:start position:21% line:-1
CPUのリソースで競合しています

00:10:43.010 --> 00:10:47.714 align:start position:20% line:-2
プロファイラでは 80パーセントを
シンタックスカラーリング

00:10:47.815 --> 00:10:50.884 align:start position:25% line:-2
20パーセントをコード補完に
費やしているのが分かります

00:10:50.984 --> 00:10:53.987 align:start position:25% line:-1
コード補完の性能を改善する―

00:10:54.154 --> 00:10:56.056 align:start position:25% line:-1
ベストな方法が見つかりました

00:10:56.156 --> 00:10:58.458 align:start position:27% line:-2
シンタックスカラーリングの
先送りです

00:10:58.592 --> 00:11:02.763 align:start position:29% line:-2
これはユニットテストでは
得られなかった知識です

