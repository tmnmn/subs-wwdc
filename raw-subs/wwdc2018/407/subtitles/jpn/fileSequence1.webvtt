WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.459 --> 00:01:01.862 align:start position:29% line:-1
私が熟知しているコードと

00:01:01.962 --> 00:01:04.730 align:start position:30% line:-2
初めて経験したコードの
両方で行いました

00:01:05.833 --> 00:01:11.138 align:start position:25% line:-2
今日のセッションで
最も大切な教訓を１つ教えます

00:01:11.338 --> 00:01:15.042 align:start position:25% line:-2
“測定こそが
パフォーマンスの基盤となる”

00:01:15.609 --> 00:01:18.212 align:start position:30% line:-2
パフォーマンスの問題を
解決したければ

00:01:18.378 --> 00:01:22.816 align:start position:21% line:-1
まず 測定して現状を知ることです

00:01:23.584 --> 00:01:26.186 align:start position:29% line:-1
修正を繰り返し行う場合―

00:01:26.286 --> 00:01:32.426 align:start position:25% line:-2
期待どおりの効果が出ているか
毎回測定する必要があります

00:01:33.360 --> 00:01:36.897 align:start position:34% line:-2
問題が解決したら
再度測定を行います

00:01:37.130 --> 00:01:39.666 align:start position:30% line:-1
最初の段階と比較して―

00:01:39.766 --> 00:01:44.972 align:start position:27% line:-2
パフォーマンスの改善状況を
定量化します

00:01:45.072 --> 00:01:49.510 align:start position:27% line:-2
それを上司や同僚やユーザと
共有するのです

00:01:50.577 --> 00:01:53.847 align:start position:23% line:-2
ユーザ向けに
パフォーマンス改善を行う場合―

00:01:54.248 --> 00:01:58.085 align:start position:29% line:-2
“トータルパフォーマンス
インパクト”が大切です

00:01:58.552 --> 00:02:04.191 align:start position:27% line:-2
例えば アプリケーションの
１つの分野の機能と性能を―

