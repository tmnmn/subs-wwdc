WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:56.837 --> 00:04:00.541 align:start position:27% line:-1
いくつかの状況に遭遇します

00:04:00.807 --> 00:04:04.111 align:start position:30% line:-2
状況によって
バグを再現させるための

00:04:04.211 --> 00:04:06.480 align:start position:23% line:-1
コードのテスト方法も異なります

00:04:06.847 --> 00:04:10.317 align:start position:29% line:-2
時々起こるのが
性能のリグレッションです

00:04:10.617 --> 00:04:15.822 align:start position:30% line:-2
順調に動作していたのが
誰かがチェックすると

00:04:15.923 --> 00:04:17.958 align:start position:25% line:-1
性能がひどく落ち込んでいます

00:04:18.058 --> 00:04:21.628 align:start position:27% line:-2
その原因を
突き止めなければなりません

00:04:21.962 --> 00:04:24.097 align:start position:27% line:-1
リグレッションが明白な場合

00:04:24.998 --> 00:04:28.769 align:start position:30% line:-2
あるいは 近い将来に
再現しないと考えた場合

00:04:28.869 --> 00:04:33.507 align:start position:25% line:-2
プロファイラを用いたテストで
終わらせるかもしれません

00:04:34.408 --> 00:04:38.912 align:start position:21% line:-2
でも パフォーマンスの“勝利”は
簡単にはつかめません

00:04:39.446 --> 00:04:43.450 align:start position:29% line:-2
緩やかなリグレッションを
見つけるのは困難です

00:04:43.884 --> 00:04:45.552 align:start position:29% line:-1
皆さんにお勧めするのが―

00:04:45.652 --> 00:04:47.788 align:start position:29% line:-2
自動化された性能テストを
使うことです

00:04:47.888 --> 00:04:49.756 align:start position:29% line:-2
アプリケーションの性能を
把握することで

00:04:49.857 --> 00:04:52.726 align:start position:29% line:-2
緩やかなリグレッションに
気付くことができます

00:04:55.128 --> 00:04:57.297 align:start position:34% line:-1
もう１つの状況です

00:04:57.397 --> 00:05:01.435 align:start position:29% line:-2
アプリケーションの動作が
ずっと同じ場合です

