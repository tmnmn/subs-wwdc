WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:57.618 --> 00:42:01.521 align:start position:25% line:-2
次に 必要なコンテンツだけを
読み込みます

00:42:02.189 --> 00:42:05.859 align:start position:23% line:-2
この場合 可視コンテンツだけを
ロードします

00:42:05.959 --> 00:42:09.863 align:start position:23% line:-2
このケースでは
７から10までのモーメントです

00:42:10.898 --> 00:42:13.767 align:start position:27% line:-1
不足分は限られているので―

00:42:13.867 --> 00:42:17.137 align:start position:30% line:-2
メインスレッドで
同期することができます

00:42:18.605 --> 00:42:22.943 align:start position:27% line:-2
さらに 残りのデータを
同期してロードできるように

00:42:23.043 --> 00:42:26.847 align:start position:34% line:-2
作業の予測と計画を
立てたいと思います

00:42:27.214 --> 00:42:29.650 align:start position:27% line:-2
バックグラウンドスレッドで
行い―

00:42:29.750 --> 00:42:34.154 align:start position:27% line:-2
メインスレッドの動作に
影響を与えないようにします

00:42:38.659 --> 00:42:41.729 align:start position:23% line:-1
ここでの目標は100ミリ秒です

00:42:44.731 --> 00:42:46.767 align:start position:36% line:-1
そして 最後に―

00:42:47.034 --> 00:42:49.837 align:start position:23% line:-1
データソースが画像を提供します

00:42:49.937 --> 00:42:52.206 align:start position:25% line:-1
このパートを最適化しましょう

00:42:53.574 --> 00:42:56.677 align:start position:29% line:-2
ここは飛びぬけて
大きなチャンクだったので

00:42:56.944 --> 00:43:01.648 align:start position:27% line:-2
画像のロードに
多くの時間を要していました

