WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:57.978 --> 00:38:00.480 align:start position:27% line:-1
必要のない仕事は延期します

00:38:01.281 --> 00:38:03.684 align:start position:30% line:-1
２番目は“先回り”する

00:38:03.917 --> 00:38:06.253 align:start position:27% line:-1
これは２つの意味で有効です

00:38:06.520 --> 00:38:11.325 align:start position:25% line:-2
まずは
“後回しする作業を予測する”

00:38:11.658 --> 00:38:14.895 align:start position:30% line:-2
次に“リグレッションを
いち早く見つける”

00:38:14.995 --> 00:38:18.999 align:start position:27% line:-2
インテグレーションテストの
継続的な実施が重要です

00:38:21.635 --> 00:38:23.804 align:start position:38% line:-1
最後は“一定”

00:38:23.904 --> 00:38:26.940 align:start position:32% line:-2
ロードするデータ量に
関わらずです

00:38:29.710 --> 00:38:32.079 align:start position:27% line:-1
アプローチ方法を間違えて―

00:38:32.179 --> 00:38:34.448 align:start position:27% line:-2
起動に必要な
すべてをロードするとします

00:38:34.548 --> 00:38:38.885 align:start position:29% line:-2
それは ３万アイテムにも
及ぶことになります

00:38:39.953 --> 00:38:41.889 align:start position:23% line:-1
まず データベースを初期化して

00:38:41.989 --> 00:38:44.157 align:start position:23% line:-1
ビューコントローラを用意します

00:38:44.258 --> 00:38:46.260 align:start position:23% line:-1
そして データソースを構成し―

00:38:46.360 --> 00:38:49.429 align:start position:21% line:-2
ライブラリ画像をロードして
クラウドのステータスを定義します

00:38:50.931 --> 00:38:54.101 align:start position:25% line:-2
これはデータの増え方によって
変わります

00:38:54.201 --> 00:38:56.503 align:start position:21% line:-1
ユーザは日々写真を撮っているので

00:38:56.603 --> 00:38:59.039 align:start position:27% line:-1
データは永遠に増え続けます

00:38:59.940 --> 00:39:04.111 align:start position:25% line:-2
私たちが扱っている写真は
結び付きのないデータの塊です

