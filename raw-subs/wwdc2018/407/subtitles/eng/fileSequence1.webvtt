WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.326 --> 00:01:00.296 A:middle
performance work, both in code

00:01:00.296 --> 00:01:01.376 A:middle
that I'm intimately familiar

00:01:01.376 --> 00:01:03.136 A:middle
with, and in code that I'm just

00:01:03.136 --> 00:01:04.596 A:middle
experiencing for the first time.

00:01:05.936 --> 00:01:07.716 A:middle
Now, if I could get everyone in

00:01:07.716 --> 00:01:09.496 A:middle
today's presentation to just

00:01:09.496 --> 00:01:11.886 A:middle
take one lesson away, it is that

00:01:11.946 --> 00:01:13.276 A:middle
all of your performance work

00:01:13.276 --> 00:01:14.716 A:middle
should be based on measurement.

00:01:15.696 --> 00:01:17.096 A:middle
Before you start solving a

00:01:17.096 --> 00:01:18.816 A:middle
performance problem, you should

00:01:18.816 --> 00:01:21.126 A:middle
measure, to establish a baseline

00:01:21.366 --> 00:01:22.536 A:middle
so you know where you stand.

00:01:23.666 --> 00:01:25.196 A:middle
As you iterate on solving a

00:01:25.196 --> 00:01:26.716 A:middle
performance problem, you should

00:01:26.716 --> 00:01:28.146 A:middle
measure it each step of the way

00:01:28.576 --> 00:01:29.826 A:middle
to ensure that your performance

00:01:29.826 --> 00:01:31.376 A:middle
changes are having the impact

00:01:31.466 --> 00:01:32.026 A:middle
that you expect.

00:01:33.336 --> 00:01:34.346 A:middle
When you're done solving a

00:01:34.346 --> 00:01:35.916 A:middle
performance problem, you should

00:01:35.916 --> 00:01:37.656 A:middle
measure again, so that you can

00:01:37.656 --> 00:01:38.846 A:middle
compare to your original

00:01:38.846 --> 00:01:41.046 A:middle
baseline, and make a quantified

00:01:41.046 --> 00:01:43.166 A:middle
claim about just how much you've

00:01:43.166 --> 00:01:44.226 A:middle
improved the performance of your

00:01:44.226 --> 00:01:44.746 A:middle
application.

00:01:45.196 --> 00:01:46.766 A:middle
You want to share this with your

00:01:46.766 --> 00:01:48.896 A:middle
boss, your colleagues, and your

00:01:48.896 --> 00:01:49.506 A:middle
users.

00:01:50.566 --> 00:01:51.416 A:middle
Now, when you think about

00:01:51.416 --> 00:01:52.966 A:middle
improving performance for your

00:01:52.966 --> 00:01:55.166 A:middle
users, you need to think about

00:01:55.166 --> 00:01:56.826 A:middle
what I like to call the total

00:01:56.826 --> 00:01:57.786 A:middle
performance impact.

00:01:58.656 --> 00:02:01.246 A:middle
If you improve the functionality

