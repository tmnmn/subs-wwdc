WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:58.656 --> 00:02:01.246 A:middle
If you improve the functionality

00:02:01.246 --> 00:02:03.216 A:middle
and performance of one area of

00:02:03.216 --> 00:02:06.706 A:middle
your application, by 50%, but

00:02:06.706 --> 00:02:08.136 A:middle
it's something that just 1% of

00:02:08.136 --> 00:02:10.006 A:middle
your users encounter, that does

00:02:10.006 --> 00:02:11.456 A:middle
not have nearly the breadth of

00:02:11.456 --> 00:02:13.286 A:middle
impact as improving some other

00:02:13.286 --> 00:02:15.526 A:middle
feature by just 10% that all of

00:02:15.526 --> 00:02:16.806 A:middle
your users use all the time.

00:02:17.336 --> 00:02:18.096 A:middle
So make sure you're not

00:02:18.096 --> 00:02:19.676 A:middle
optimizing edge cases, and make

00:02:19.676 --> 00:02:20.816 A:middle
sure that your changes are

00:02:20.816 --> 00:02:22.596 A:middle
impacting all of your users.

00:02:24.536 --> 00:02:27.736 A:middle
Now how do we fix performance

00:02:27.736 --> 00:02:28.086 A:middle
bugs?

00:02:28.086 --> 00:02:29.106 A:middle
Well, how do we fix regular

00:02:29.106 --> 00:02:29.526 A:middle
bugs?

00:02:29.966 --> 00:02:31.586 A:middle
Normally it starts with some

00:02:31.586 --> 00:02:33.036 A:middle
sort of defect report from

00:02:33.036 --> 00:02:35.026 A:middle
users, and we take this report

00:02:35.026 --> 00:02:36.466 A:middle
of the application not behaving

00:02:36.466 --> 00:02:38.216 A:middle
the way that people expect, and

00:02:38.216 --> 00:02:39.946 A:middle
we find some way to synthesize

00:02:40.066 --> 00:02:41.696 A:middle
steps to reproduce so that we

00:02:41.696 --> 00:02:42.866 A:middle
can cause the failure at will.

00:02:43.646 --> 00:02:45.346 A:middle
Once we've done this, we attach

00:02:45.346 --> 00:02:46.526 A:middle
a debugger to our program, so

00:02:46.526 --> 00:02:47.846 A:middle
that we can see just what our

00:02:47.846 --> 00:02:48.826 A:middle
program is doing while it is

00:02:48.826 --> 00:02:49.376 A:middle
misbehaving.

00:02:50.866 --> 00:02:51.706 A:middle
We combine that with our

00:02:51.706 --> 00:02:52.656 A:middle
knowledge of how the code is

00:02:52.656 --> 00:02:54.576 A:middle
supposed to work, to modify it

00:02:54.576 --> 00:02:56.176 A:middle
as necessary and eliminate the

00:02:56.176 --> 00:02:57.156 A:middle
undesired behavior.

00:02:57.936 --> 00:02:58.966 A:middle
We verify that we haven't

00:02:58.966 --> 00:03:00.516 A:middle
introduced any unwanted side

