WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.156 --> 00:07:00.006 A:middle
this feature with our

00:07:00.006 --> 00:07:01.366 A:middle
colleagues, we were often

00:07:01.366 --> 00:07:03.536 A:middle
challenged to perform searches

00:07:03.536 --> 00:07:05.286 A:middle
across large projects for things

00:07:05.286 --> 00:07:07.106 A:middle
like string, or even the letter

00:07:07.106 --> 00:07:07.336 A:middle
E.

00:07:07.446 --> 00:07:08.976 A:middle
Things that produce millions of

00:07:08.976 --> 00:07:10.446 A:middle
results, right?

00:07:10.446 --> 00:07:12.106 A:middle
And certainly if our application

00:07:12.216 --> 00:07:13.426 A:middle
could produce millions of

00:07:13.426 --> 00:07:14.866 A:middle
results quickly, it would be

00:07:14.866 --> 00:07:15.776 A:middle
fast on anything.

00:07:16.476 --> 00:07:17.896 A:middle
But if you consider what typical

00:07:17.896 --> 00:07:20.516 A:middle
patterns are, we search for APIs

00:07:20.516 --> 00:07:22.046 A:middle
we use, the names of our own

00:07:22.046 --> 00:07:24.336 A:middle
classes, the names of, you know,

00:07:24.496 --> 00:07:25.616 A:middle
images that we're referencing.

00:07:25.616 --> 00:07:26.286 A:middle
Things like that.

00:07:26.346 --> 00:07:27.546 A:middle
They produce dozens, maybe

00:07:27.546 --> 00:07:28.606 A:middle
hundreds of results.

00:07:28.936 --> 00:07:30.276 A:middle
Certainly, it is essential that

00:07:30.276 --> 00:07:32.076 A:middle
the application works decently

00:07:32.076 --> 00:07:33.236 A:middle
when you get a million results,

00:07:33.496 --> 00:07:35.086 A:middle
but the normal use case is

00:07:35.156 --> 00:07:36.026 A:middle
hundreds of results.

00:07:36.806 --> 00:07:38.486 A:middle
Now, some of your work in doing

00:07:38.486 --> 00:07:40.186 A:middle
a task like search is going to

00:07:40.186 --> 00:07:41.396 A:middle
be proportional on things like

00:07:41.746 --> 00:07:43.816 A:middle
generating the raw results, and

00:07:43.816 --> 00:07:45.326 A:middle
other work is going to be based

00:07:45.326 --> 00:07:46.916 A:middle
on how efficiently you can index

00:07:46.916 --> 00:07:48.296 A:middle
the text in the project, and

00:07:48.296 --> 00:07:49.666 A:middle
avoid work in the first place.

00:07:50.156 --> 00:07:51.996 A:middle
In these two scenarios, you're

00:07:51.996 --> 00:07:53.976 A:middle
likely to have completely

00:07:53.976 --> 00:07:55.286 A:middle
different targets for what you

00:07:55.286 --> 00:07:56.826 A:middle
would optimize to make one of

00:07:56.826 --> 00:07:57.916 A:middle
these searches faster than the

00:07:57.916 --> 00:07:59.046 A:middle
other, right?

00:07:59.046 --> 00:08:00.156 A:middle
So it's essential that you

