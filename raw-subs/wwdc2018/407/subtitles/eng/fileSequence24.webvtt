WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:23:58.326 --> 00:24:00.886 A:middle
outline view starts with a small

00:24:00.886 --> 00:24:02.386 A:middle
set of items, and then we are

00:24:02.386 --> 00:24:03.906 A:middle
trying to restore expansion

00:24:03.906 --> 00:24:05.676 A:middle
state in this area of our code,

00:24:05.676 --> 00:24:06.666 A:middle
and so we are telling it to

00:24:06.666 --> 00:24:08.256 A:middle
open, for example, the top item.

00:24:08.506 --> 00:24:09.436 A:middle
And when we tell it to open the

00:24:09.436 --> 00:24:11.406 A:middle
top item, internally you might

00:24:11.406 --> 00:24:12.576 A:middle
imagine that it moves all the

00:24:12.576 --> 00:24:13.296 A:middle
other items down.

00:24:14.056 --> 00:24:15.096 A:middle
Then you ask me to expand the

00:24:15.096 --> 00:24:15.716 A:middle
second item.

00:24:16.106 --> 00:24:17.196 A:middle
It moves all the items down

00:24:17.196 --> 00:24:17.516 A:middle
again.

00:24:17.906 --> 00:24:19.386 A:middle
And the third item, and so on.

00:24:19.386 --> 00:24:20.666 A:middle
And by the time you're done,

00:24:20.966 --> 00:24:22.546 A:middle
you've moved those bottom items

00:24:22.586 --> 00:24:24.246 A:middle
down thousands of times.

00:24:25.166 --> 00:24:26.396 A:middle
That is all redundant work, and

00:24:26.396 --> 00:24:27.626 A:middle
that is exactly the sort of

00:24:27.656 --> 00:24:28.976 A:middle
thing I'm looking to eliminate

00:24:29.206 --> 00:24:30.126 A:middle
when I'm trying to improve

00:24:30.126 --> 00:24:30.736 A:middle
performance.

00:24:31.406 --> 00:24:32.596 A:middle
Now the fact of these method

00:24:32.596 --> 00:24:35.376 A:middle
calls talk about batching leads

00:24:35.376 --> 00:24:36.666 A:middle
me to believe that there is

00:24:36.666 --> 00:24:38.006 A:middle
probably some API where I can

00:24:38.006 --> 00:24:39.416 A:middle
ask the outline view to do the

00:24:39.416 --> 00:24:41.436 A:middle
work in bulk so it computes all

00:24:41.436 --> 00:24:43.336 A:middle
the positions just once, instead

00:24:43.336 --> 00:24:44.386 A:middle
of over and over again as I make

00:24:44.426 --> 00:24:44.986 A:middle
the calls.

00:24:46.236 --> 00:24:48.256 A:middle
I also see a call that says to

00:24:48.256 --> 00:24:50.056 A:middle
do the work after end updates.

00:24:50.406 --> 00:24:52.616 A:middle
Now, sometimes an API will offer

00:24:52.726 --> 00:24:53.956 A:middle
sort of bulk method that

00:24:53.956 --> 00:24:55.696 A:middle
operates on an array, and other

00:24:55.696 --> 00:24:57.416 A:middle
times, it will offer a sort of

00:24:57.416 --> 00:24:59.456 A:middle
transactional API that says I'm

00:24:59.456 --> 00:25:00.806 A:middle
going to begin making changes,

