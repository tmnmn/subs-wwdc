WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:58.686 --> 00:11:00.256 A:middle
这样的知识

00:11:00.256 --> 00:11:01.946 A:middle
是我在高度聚焦的单元测试中

00:11:01.946 --> 00:11:02.546 A:middle
所无法获得的

00:11:02.546 --> 00:11:04.366 A:middle
所以如果今天各位听完这个演讲

00:11:04.366 --> 00:11:05.606 A:middle
只能带走两样东西的话

00:11:05.606 --> 00:11:07.476 A:middle
第二样就是

00:11:07.746 --> 00:11:08.866 A:middle
要调查你的性能

00:11:08.866 --> 00:11:10.936 A:middle
必然应该从这些

00:11:10.936 --> 00:11:12.506 A:middle
广泛的综合测试开始

00:11:12.506 --> 00:11:14.226 A:middle
它们会测量你的用户

00:11:14.226 --> 00:11:16.406 A:middle
使用 App 时的用户体验

00:11:18.026 --> 00:11:19.296 A:middle
对 我说的就是测试

00:11:19.626 --> 00:11:21.026 A:middle
测量以及分析

00:11:21.456 --> 00:11:22.346 A:middle
现在我想向你们

00:11:22.346 --> 00:11:24.166 A:middle
介绍一下用工具

00:11:24.216 --> 00:11:25.546 A:middle
在 Xcode 中进行分析

00:11:25.786 --> 00:11:26.646 A:middle
让我们来看一下

00:11:26.646 --> 00:11:27.166 A:middle
demo machine

00:11:35.056 --> 00:11:35.926 A:middle
今天我们要看的是一个

00:11:35.926 --> 00:11:37.146 A:middle
我们在 Xcode 9 和

00:11:37.146 --> 00:11:39.516 A:middle
Xcode 10 之间修复了的性能问题

00:11:39.516 --> 00:11:41.216 A:middle
我想展示给你们

00:11:41.696 --> 00:11:44.436 A:middle
下面我先启动 Xcode 9

00:11:44.436 --> 00:11:45.856 A:middle
打开我们的 Solar System App 

00:11:47.056 --> 00:11:47.766 A:middle
那么 我们所

00:11:47.766 --> 00:11:49.796 A:middle
面临的问题就是创建标记

00:11:50.456 --> 00:11:51.486 A:middle
接着我要快速地

00:11:51.486 --> 00:11:52.956 A:middle
按几下快捷键 “Command-T”

00:11:52.956 --> 00:11:54.996 A:middle
如你所见

00:11:54.996 --> 00:11:56.896 A:middle
整个屏幕闪现了黑色

00:11:56.896 --> 00:11:58.166 A:middle
并且创建这些标记

00:11:58.166 --> 00:11:58.996 A:middle
花了好几秒的时间

00:11:59.626 --> 00:12:01.116 A:middle
这肯定达不到

