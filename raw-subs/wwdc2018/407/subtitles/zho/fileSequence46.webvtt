WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:00.436 --> 00:46:02.076 A:middle
那么 我们这里还有一些目标

00:46:02.956 --> 00:46:05.356 A:middle
对于带给我们用户的体验

00:46:06.426 --> 00:46:07.726 A:middle
第一个和之前一样

00:46:07.726 --> 00:46:08.706 A:middle
我们不想有任何

00:46:08.706 --> 00:46:09.436 A:middle
等待的圆圈

00:46:09.436 --> 00:46:10.156 A:middle
我们不想有空白的图片框

00:46:10.256 --> 00:46:12.586 A:middle
当然我们想要

00:46:12.586 --> 00:46:13.806 A:middle
流畅的动画过程

00:46:13.996 --> 00:46:15.576 A:middle
这里所说的流畅

00:46:15.846 --> 00:46:19.396 A:middle
是指 60 到 120 帧每秒

00:46:19.446 --> 00:46:21.686 A:middle
这依赖于你正在运行的屏幕

00:46:23.266 --> 00:46:25.356 A:middle
记得之前我们说过的原则

00:46:25.876 --> 00:46:27.236 A:middle
现在 它们在这里都是有用的

00:46:27.586 --> 00:46:28.926 A:middle
我们想要懈怠并推迟

00:46:28.926 --> 00:46:30.036 A:middle
我们预先递交的工作

00:46:30.786 --> 00:46:31.876 A:middle
我们想要积极地

00:46:31.876 --> 00:46:34.316 A:middle
快速捕捉衰退

00:46:34.316 --> 00:46:35.956 A:middle
但是我们也想要

00:46:35.956 --> 00:46:37.476 A:middle
在布局关口中保持不变

00:46:37.476 --> 00:46:39.686 A:middle
无论我们要加载多少数据

00:46:41.566 --> 00:46:42.886 A:middle
那么 这次我们还想要及时

00:46:42.886 --> 00:46:44.396 A:middle
我们想要记住

00:46:44.396 --> 00:46:46.046 A:middle
绘制循环周期

00:46:47.076 --> 00:46:48.426 A:middle
这里我的意思是

00:46:48.426 --> 00:46:49.676 A:middle
你要记住

00:46:49.676 --> 00:46:52.096 A:middle
我们只有 8 或 16 毫秒

00:46:52.096 --> 00:46:53.426 A:middle
来绘制那一帧

00:46:53.426 --> 00:46:54.206 A:middle
所以我们需要确保

00:46:54.256 --> 00:46:55.876 A:middle
我们不超时

00:46:55.916 --> 00:46:57.156 A:middle
否则就会开始掉帧

00:46:59.356 --> 00:47:01.486 A:middle
现在 让我们返回一步

