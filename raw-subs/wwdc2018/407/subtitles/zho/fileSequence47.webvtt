WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:59.356 --> 00:47:01.486 A:middle
现在 让我们返回一步

00:47:01.486 --> 00:47:02.636 A:middle
看看我们要在这里

00:47:02.636 --> 00:47:03.176 A:middle
获取什么

00:47:03.866 --> 00:47:05.076 A:middle
我们要这个便捷视图

00:47:05.076 --> 00:47:07.466 A:middle
里面有分栏和小单元格

00:47:09.846 --> 00:47:11.226 A:middle
而这基本上就是

00:47:11.226 --> 00:47:12.836 A:middle
“精选”视图给你提供的

00:47:12.836 --> 00:47:13.076 A:middle
对吗

00:47:13.636 --> 00:47:15.036 A:middle
只不过在这样极端的例子里

00:47:15.036 --> 00:47:16.246 A:middle
我们会限制

00:47:16.246 --> 00:47:17.506 A:middle
我们使用这个基本的方法

00:47:17.506 --> 00:47:18.576 A:middle
可以获得的极限

00:47:18.746 --> 00:47:20.546 A:middle
那样就会导致过多的

00:47:20.546 --> 00:47:21.616 A:middle
视图和过多的图层

00:47:23.796 --> 00:47:26.256 A:middle
但是随着分层的复杂性不断增加

00:47:26.256 --> 00:47:28.396 A:middle
花在内存上的时间

00:47:28.396 --> 00:47:30.086 A:middle
也在不断增加

00:47:31.706 --> 00:47:33.086 A:middle
所以这里我们需要创新

00:47:33.846 --> 00:47:35.126 A:middle
我们大幅地限制视图的数量

00:47:35.126 --> 00:47:36.436 A:middle
同时仍使用一个

00:47:36.436 --> 00:47:37.966 A:middle
“精选”视图

00:47:40.176 --> 00:47:42.066 A:middle
我们使用的这种方法

00:47:42.066 --> 00:47:43.466 A:middle
在电子游戏里更为常见

00:47:43.466 --> 00:47:44.606 A:middle
它叫做图谱法

00:47:45.146 --> 00:47:47.106 A:middle
它基本上就是

00:47:47.106 --> 00:47:48.766 A:middle
把一组图像组合

00:47:48.766 --> 00:47:49.406 A:middle
成为一个

00:47:50.536 --> 00:47:52.186 A:middle
我们高效地完成了它

00:47:52.186 --> 00:47:53.806 A:middle
开始只用很小的缩略图

00:47:53.806 --> 00:47:56.736 A:middle
然后我们将所有的原始图像数据

00:47:56.736 --> 00:47:58.856 A:middle
标记在一个我们用作

00:47:58.856 --> 00:47:59.716 A:middle
带状的画布上

