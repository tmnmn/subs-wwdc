WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.246 --> 00:06:01.936 A:middle
知道你要测试什么 很重要

00:06:02.346 --> 00:06:03.686 A:middle
我想要提醒你的是

00:06:03.686 --> 00:06:05.096 A:middle
我从来都不会立刻投入

00:06:05.096 --> 00:06:06.086 A:middle
这些性能检修

00:06:06.086 --> 00:06:08.106 A:middle
将其视为解决

00:06:08.106 --> 00:06:08.896 A:middle
某种性能问题的方法

00:06:09.296 --> 00:06:10.816 A:middle
我喜欢这么做

00:06:10.816 --> 00:06:12.046 A:middle
这是一种未曾开发的工程

00:06:12.046 --> 00:06:14.326 A:middle
你能够从头开始 设计这些东西

00:06:14.326 --> 00:06:16.126 A:middle
但这也颇具风险

00:06:16.556 --> 00:06:17.346 A:middle
你最终要的是

00:06:17.346 --> 00:06:18.666 A:middle
一个性能更好的产品

00:06:18.666 --> 00:06:19.686 A:middle
但这却是一个曲折的过程

00:06:19.686 --> 00:06:21.376 A:middle
因为你需要重新设计

00:06:21.376 --> 00:06:23.976 A:middle
整个特性

00:06:24.116 --> 00:06:25.186 A:middle
当你做这种工作的时候

00:06:25.186 --> 00:06:26.666 A:middle
你不仅需要知道

00:06:26.666 --> 00:06:28.156 A:middle
这些代码的 

00:06:28.286 --> 00:06:29.436 A:middle
功能约束条件

00:06:29.436 --> 00:06:31.336 A:middle
你还要知道

00:06:31.336 --> 00:06:32.986 A:middle
性能约束条件 

00:06:32.986 --> 00:06:34.356 A:middle
以及你的用户应用这一特性时

00:06:34.356 --> 00:06:35.616 A:middle
最常使用的

00:06:35.616 --> 00:06:37.386 A:middle
典型的模式

00:06:37.386 --> 00:06:39.106 A:middle
而你只能从 

00:06:39.256 --> 00:06:40.276 A:middle
过去这方面的性能工作中

00:06:40.276 --> 00:06:40.736 A:middle
获得这方面信息

00:06:41.636 --> 00:06:43.326 A:middle
我想和你们分享一件轶事

00:06:43.326 --> 00:06:45.046 A:middle
是我们的一个

00:06:45.046 --> 00:06:46.216 A:middle
在 Xcode 里工作的案例

00:06:47.216 --> 00:06:49.406 A:middle
在 Xcode 9 中 我们重做了 “Project Find”

00:06:49.406 --> 00:06:50.606 A:middle
将性能作为一个

00:06:50.606 --> 00:06:51.406 A:middle
首要的目标

00:06:52.366 --> 00:06:53.716 A:middle
我们的目标就是要

00:06:53.716 --> 00:06:55.376 A:middle
在短短几十毫秒中

00:06:55.376 --> 00:06:56.076 A:middle
传递出搜索结果

00:06:56.926 --> 00:06:59.156 A:middle
当我们与同事

00:06:59.156 --> 00:07:00.006 A:middle
讨论这个特性时

