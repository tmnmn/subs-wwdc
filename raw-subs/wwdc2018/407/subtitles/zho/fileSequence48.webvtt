WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:01.156 --> 00:48:03.336 A:middle
接着 我们使用图像原始数据

00:48:03.336 --> 00:48:04.866 A:middle
这样就能够避免去解码每一个

00:48:04.866 --> 00:48:07.766 A:middle
我们发送的缩略图

00:48:08.376 --> 00:48:09.576 A:middle
因此基本上我们会显示一条

00:48:09.576 --> 00:48:10.726 A:middle
随机的图像

00:48:12.406 --> 00:48:14.286 A:middle
那么 我们飞速生成并缓存它们

00:48:14.286 --> 00:48:16.206 A:middle
因此我们可以更加灵活

00:48:18.436 --> 00:48:20.086 A:middle
当我们将多个图片绘制成一个时

00:48:20.086 --> 00:48:22.026 A:middle
我们会大量寄存

00:48:22.026 --> 00:48:24.716 A:middle
单元格 图层及目标的数量

00:48:24.716 --> 00:48:26.006 A:middle
这样便简化了布局

00:48:26.006 --> 00:48:29.066 A:middle
节省了创建它要花费的时间

00:48:29.686 --> 00:48:31.266 A:middle
现在这样很好 

00:48:31.266 --> 00:48:32.356 A:middle
但是也要有所取舍

00:48:32.356 --> 00:48:34.966 A:middle
这就是它们的其中一个

00:48:36.806 --> 00:48:38.606 A:middle
如果有人试着长按

00:48:38.606 --> 00:48:40.996 A:middle
或强制搜索一个这里的项目

00:48:40.996 --> 00:48:42.866 A:middle
我们就需要计算它的位置

00:48:42.916 --> 00:48:44.536 A:middle
这样我们才能

00:48:44.536 --> 00:48:45.426 A:middle
正确地获得预览

00:48:45.996 --> 00:48:48.136 A:middle
因为只要我们显示一张图像

00:48:48.136 --> 00:48:50.776 A:middle
我们就需要维持

00:48:50.776 --> 00:48:53.156 A:middle
每个图像的映射

00:48:53.156 --> 00:48:54.736 A:middle
以及它的绘制条

00:48:56.086 --> 00:48:57.226 A:middle
现在你也许在想

00:48:57.226 --> 00:48:58.536 A:middle
我们为什么要飞速地生成它们

