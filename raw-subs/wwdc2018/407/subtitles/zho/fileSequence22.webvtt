WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:59.076 --> 00:22:00.356 A:middle
出现在这一组帧中的小样本

00:22:00.356 --> 00:22:02.186 A:middle
它就在这里

00:22:02.226 --> 00:22:05.596 A:middle
Call Tree 约束条件的部分

00:22:06.126 --> 00:22:07.646 A:middle
让我来给你演示

00:22:11.146 --> 00:22:12.716 A:middle
我将要告诉 Instruments

00:22:12.716 --> 00:22:14.006 A:middle
我想要看到的轨迹范围

00:22:14.486 --> 00:22:16.236 A:middle
只包括我们所说的

00:22:16.236 --> 00:22:18.966 A:middle
20 或者更多的样本

00:22:19.256 --> 00:22:20.566 A:middle
我选择 20 是因为

00:22:20.566 --> 00:22:21.606 A:middle
我知道我已经选择了

00:22:21.606 --> 00:22:23.066 A:middle
一个两秒的间隔

00:22:23.066 --> 00:22:24.376 A:middle
那么 20 毫秒

00:22:24.376 --> 00:22:26.076 A:middle
将会呈现出整个工作的大约 1%

00:22:26.076 --> 00:22:27.036 A:middle
而就包含了

00:22:27.036 --> 00:22:29.846 A:middle
在默认情况下 我想进行工作的粒度

00:22:31.336 --> 00:22:32.926 A:middle
因此将 Call Tree 约束条件

00:22:33.986 --> 00:22:37.206 A:middle
设置为一个最小值 20

00:22:37.206 --> 00:22:39.516 A:middle
我就能更有效地聚焦在这里

00:22:40.456 --> 00:22:41.346 A:middle
那么 我在这里提到过

00:22:41.346 --> 00:22:43.296 A:middle
我们在扩展我的视图项目

00:22:43.336 --> 00:22:45.026 A:middle
我看到在这里

00:22:45.026 --> 00:22:46.446 A:middle
我们其实在调用 NS 大纲视图

00:22:46.446 --> 00:22:47.836 A:middle
扩展项目 扩展子项

00:22:48.436 --> 00:22:51.816 A:middle
在这里 很多人都会将调用图

00:22:51.876 --> 00:22:52.146 A:middle
停在这里

00:22:52.556 --> 00:22:55.226 A:middle
我们会看到 我正在调用一个系统框架

00:22:55.226 --> 00:22:56.346 A:middle
我在那里花了很多时间

00:22:56.706 --> 00:22:58.086 A:middle
这不是我的错 对吗

00:22:58.086 --> 00:22:58.926 A:middle
那么我能做什么呢

00:22:58.926 --> 00:23:00.486 A:middle
我不能优化 NS 大纲视图

