WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.456 --> 00:25:00.806 A:middle
它会说我要开始进行更改

00:25:01.046 --> 00:25:01.716 A:middle
然后就做了一系列的变化

00:25:01.716 --> 00:25:02.996 A:middle
然后你说你完成了

00:25:02.996 --> 00:25:05.856 A:middle
之后它会对你变化的全程 

00:25:05.856 --> 00:25:07.356 A:middle
进行计算

00:25:07.356 --> 00:25:08.656 A:middle
这比它自己独自完成这些

00:25:08.656 --> 00:25:10.116 A:middle
要更有效率

00:25:11.126 --> 00:25:12.306 A:middle
那么这时候 我会前往

00:25:12.306 --> 00:25:14.336 A:middle
NS 大纲视图或者

00:25:14.336 --> 00:25:15.996 A:middle
NS 表格视图 API

00:25:15.996 --> 00:25:17.296 A:middle
我会找一些这样的方法

00:25:17.686 --> 00:25:19.646 A:middle
那里确实有一个

00:25:19.646 --> 00:25:20.936 A:middle
在 NS 表格视图里

00:25:20.936 --> 00:25:22.176 A:middle
有一些开始和结束更新

00:25:22.176 --> 00:25:23.546 A:middle
所使用的方法

00:25:23.546 --> 00:25:25.096 A:middle
它们允许合并表格视图

00:25:25.096 --> 00:25:26.666 A:middle
并能够大大提高这些工作的效率

00:25:27.426 --> 00:25:29.606 A:middle
当然 我们要在 Xcode 10 中使用它

00:25:30.246 --> 00:25:32.966 A:middle
让我来给你演示

00:25:33.046 --> 00:25:34.376 A:middle
我要启动 Xcode 10

00:25:38.056 --> 00:25:39.136 A:middle
我要把 Source

00:25:39.136 --> 00:25:43.086 A:middle
作为一个 App 打开

00:25:43.086 --> 00:25:44.056 A:middle
然后我来创建一些标记

00:25:44.586 --> 00:25:46.116 A:middle
你可以看到

00:25:46.116 --> 00:25:47.666 A:middle
这里屏幕没有出现闪黑

00:25:47.666 --> 00:25:48.626 A:middle
标记也打开得更快了

00:25:49.506 --> 00:25:52.686 A:middle
现在 我想让标记打开的速度

00:25:52.876 --> 00:25:54.846 A:middle
比这个更快 对吗

00:25:54.846 --> 00:25:55.916 A:middle
那么我接下来应该怎么做呢

00:25:56.596 --> 00:25:57.586 A:middle
我很幸运

00:25:58.536 --> 00:25:59.496 A:middle
因为你不是每天

00:25:59.496 --> 00:26:00.956 A:middle
都需要进入轨迹中去寻找

