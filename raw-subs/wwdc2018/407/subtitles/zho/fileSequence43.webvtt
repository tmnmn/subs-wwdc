WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:59.066 --> 00:43:00.376 A:middle
我们花费了好几秒的时间

00:43:00.376 --> 00:43:02.536 A:middle
来加载这个图像 我们就意识到

00:43:02.586 --> 00:43:04.686 A:middle
我们做了太多的工作

00:43:05.086 --> 00:43:06.296 A:middle
所以我们所做的第一件事

00:43:06.296 --> 00:43:08.686 A:middle
就是估计我们在启动时

00:43:08.686 --> 00:43:10.246 A:middle
需要用到多少张图像

00:43:10.246 --> 00:43:12.556 A:middle
然后在第一个事务中

00:43:12.556 --> 00:43:14.566 A:middle
我们只加载那些图像

00:43:15.286 --> 00:43:17.216 A:middle
这种情况下 这一数量

00:43:17.216 --> 00:43:19.436 A:middle
可以达到 60 张

00:43:19.436 --> 00:43:19.876 A:middle
包括上下堆起的

00:43:20.576 --> 00:43:23.386 A:middle
接下来 为了先加载那些图像

00:43:23.386 --> 00:43:25.036 A:middle
我们需要确保

00:43:25.036 --> 00:43:26.676 A:middle
我们只加载

00:43:26.676 --> 00:43:28.046 A:middle
低分辨率的图像

00:43:28.806 --> 00:43:29.956 A:middle
这样我们加载在

00:43:29.956 --> 00:43:32.026 A:middle
内存里的像素就越少

00:43:32.026 --> 00:43:32.546 A:middle
这样就能更高效

00:43:35.316 --> 00:43:36.566 A:middle
呈现出这个数据块

00:43:36.566 --> 00:43:37.486 A:middle
现在需要 200 毫秒

00:43:39.316 --> 00:43:40.846 A:middle
这是目前为止

00:43:40.846 --> 00:43:41.566 A:middle
我们提速最多的部分

00:43:42.296 --> 00:43:43.466 A:middle
我要它成为一个常数时间

00:43:43.466 --> 00:43:46.966 A:middle
真的很不错

00:43:47.786 --> 00:43:49.346 A:middle
那么 有时候你禁不住

00:43:49.346 --> 00:43:50.806 A:middle
问问自己这个问题

00:43:50.806 --> 00:43:52.056 A:middle
这在启动的时候真的需要吗

00:43:52.286 --> 00:43:54.116 A:middle
我们这里的一个例子

00:43:54.116 --> 00:43:54.896 A:middle
是页脚视图

00:43:55.486 --> 00:43:57.256 A:middle
它通过网络或数据库

00:43:57.256 --> 00:44:00.316 A:middle
来搜集信息

