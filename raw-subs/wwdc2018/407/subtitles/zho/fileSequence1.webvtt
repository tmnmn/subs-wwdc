WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.326 --> 00:01:00.296 A:middle
我所使用的方法

00:01:00.296 --> 00:01:01.376 A:middle
其中包括我十分熟悉的代码

00:01:01.376 --> 00:01:03.136 A:middle
也包括我

00:01:03.136 --> 00:01:04.596 A:middle
第一次接触到的代码

00:01:05.936 --> 00:01:07.716 A:middle
那么 如果各位想从今天的演讲中有所收获

00:01:07.716 --> 00:01:09.496 A:middle
我希望各位至少能

00:01:09.496 --> 00:01:11.886 A:middle
记住一点 那就是

00:01:11.946 --> 00:01:13.276 A:middle
你们所有提高性能的工作

00:01:13.276 --> 00:01:14.716 A:middle
都要基于测量的结果

00:01:15.696 --> 00:01:17.096 A:middle
在开始解决一个性能问题时

00:01:17.096 --> 00:01:18.816 A:middle
你需要进行测量

00:01:18.816 --> 00:01:21.126 A:middle
来建立一个基线

00:01:21.366 --> 00:01:22.536 A:middle
让你知道自己所处的位置

00:01:23.666 --> 00:01:25.196 A:middle
当你重复解决

00:01:25.196 --> 00:01:26.716 A:middle
同一个性能问题时

00:01:26.716 --> 00:01:28.146 A:middle
你应该测量每一步所使用的方法

00:01:28.576 --> 00:01:29.826 A:middle
以确保性能的改变

00:01:29.826 --> 00:01:32.026 A:middle
能够带来你所期待的效果

00:01:33.336 --> 00:01:34.346 A:middle
当你解决了一个性能问题

00:01:34.346 --> 00:01:35.916 A:middle
你还需要再测量一遍

00:01:35.916 --> 00:01:37.656 A:middle
这样你可以与原先的基线

00:01:37.656 --> 00:01:38.846 A:middle
进行对比

00:01:38.846 --> 00:01:41.046 A:middle
从而给出一个量化的结果

00:01:41.046 --> 00:01:43.166 A:middle
关于你将 App 的性能

00:01:43.166 --> 00:01:44.746 A:middle
真正提高了多少

00:01:45.196 --> 00:01:46.766 A:middle
你想要将成果报告给你的老板

00:01:46.766 --> 00:01:49.506 A:middle
分享给你的同事和用户

00:01:50.566 --> 00:01:52.966 A:middle
那么 当你想要为你的用户提高性能时

00:01:52.966 --> 00:01:55.166 A:middle
你需要考虑这一点

00:01:55.166 --> 00:01:56.826 A:middle
我喜欢称它为

00:01:56.826 --> 00:01:57.786 A:middle
总体性能影响

00:01:58.656 --> 00:02:01.246 A:middle
如果你将 App 的

