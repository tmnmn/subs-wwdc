WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:57.256 --> 00:44:00.316 A:middle
来搜集信息

00:44:00.316 --> 00:44:01.666 A:middle
而其实我们最先的设计

00:44:01.666 --> 00:44:03.616 A:middle
是不要在启动时显示它

00:44:04.086 --> 00:44:05.806 A:middle
以优先所有我们

00:44:05.806 --> 00:44:06.636 A:middle
在这里看到的图像

00:44:06.906 --> 00:44:08.946 A:middle
我们想要显示尽可能多的图像

00:44:09.366 --> 00:44:10.356 A:middle
那这样可能就更简单了

00:44:11.456 --> 00:44:12.936 A:middle
我们现在只要安排

00:44:12.996 --> 00:44:14.596 A:middle
启动后的工作

00:44:14.596 --> 00:44:16.216 A:middle
我们缓存并加工之后要

00:44:16.216 --> 00:44:18.756 A:middle
显示的信息

00:44:20.686 --> 00:44:21.716 A:middle
现在 如果我们已经需要

00:44:21.716 --> 00:44:22.936 A:middle
显示这个信息

00:44:22.936 --> 00:44:24.606 A:middle
有一个方法可以办到

00:44:24.606 --> 00:44:25.786 A:middle
利用后台来

00:44:25.786 --> 00:44:27.176 A:middle
从 UA 工具包中

00:44:27.176 --> 00:44:29.506 A:middle
刷新 API

00:44:29.506 --> 00:44:31.036 A:middle
它便会主动清除你的 App

00:44:31.086 --> 00:44:32.376 A:middle
这样当用户要启动 App 的时候

00:44:32.376 --> 00:44:33.856 A:middle
你就可以开始

00:44:33.856 --> 00:44:35.446 A:middle
准备一些内容了

00:44:37.156 --> 00:44:38.836 A:middle
所以现在 这个部分已经从启动中删除了

00:44:38.836 --> 00:44:40.726 A:middle
为我们节省了 400 秒的

00:44:40.726 --> 00:44:42.066 A:middle
CPU 时间

00:44:43.486 --> 00:44:45.276 A:middle
现在我们看这里的

00:44:45.276 --> 00:44:47.046 A:middle
更新后的分解图

00:44:47.046 --> 00:44:48.866 A:middle
可以看到这些工作

00:44:48.866 --> 00:44:50.216 A:middle
只值得花费 450 毫秒

00:44:50.896 --> 00:44:53.776 A:middle
而我们现在在这个 500 毫秒

00:44:53.836 --> 00:44:55.866 A:middle
窗口之中

00:44:55.866 --> 00:44:58.006 A:middle
而且不论如何

00:44:58.006 --> 00:44:59.486 A:middle
将其同时呈现出来

00:44:59.486 --> 00:45:00.816 A:middle
最重要的是

