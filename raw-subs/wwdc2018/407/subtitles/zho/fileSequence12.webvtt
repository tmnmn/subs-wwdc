WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:59.626 --> 00:12:01.116 A:middle
这肯定达不到

00:12:01.116 --> 00:12:02.216 A:middle
我对性能的预期

00:12:02.216 --> 00:12:04.596 A:middle
我们需要来对它进行修复

00:12:04.956 --> 00:12:06.376 A:middle
那么我们来看看

00:12:06.376 --> 00:12:06.826 A:middle
如何进行修复

00:12:08.266 --> 00:12:09.566 A:middle
首先 我将启动 Instruments

00:12:09.606 --> 00:12:10.716 A:middle
这是我们的分析工具

00:12:11.436 --> 00:12:12.686 A:middle
你可以从 Xcode 菜单中打开它

00:12:12.686 --> 00:12:14.586 A:middle
在 Instruments 中的

00:12:14.886 --> 00:12:15.506 A:middle
Open Developer Tool 里面

00:12:15.976 --> 00:12:17.766 A:middle
现在 我在 Xcode 9 里面

00:12:18.106 --> 00:12:19.146 A:middle
所以如果我选择这个选项

00:12:19.146 --> 00:12:20.036 A:middle
那我启动的是

00:12:20.036 --> 00:12:21.476 A:middle
Xcode 9 中的 Instruments

00:12:21.476 --> 00:12:22.606 A:middle
当然我想要从 Xcode 10 中启动 Instruments

00:12:22.706 --> 00:12:23.766 A:middle
我已经把我的文件放在这里了

00:12:24.066 --> 00:12:26.066 A:middle
我将隐藏 Xcode

00:12:26.066 --> 00:12:28.956 A:middle
打开 Instruments

00:12:29.146 --> 00:12:30.366 A:middle
当 Instruments 启动时

00:12:31.796 --> 00:12:33.026 A:middle
就会出现一系列的分析工具

00:12:33.026 --> 00:12:34.226 A:middle
我们可以用它们

00:12:34.226 --> 00:12:35.546 A:middle
测量我们的 App

00:12:36.356 --> 00:12:37.426 A:middle
这里是各种各样的工具

00:12:37.786 --> 00:12:38.736 A:middle
它们能够测量

00:12:38.736 --> 00:12:41.186 A:middle
图形的利用率 内存消耗

00:12:41.836 --> 00:12:44.006 A:middle
IO 以及整体的时间

00:12:45.726 --> 00:12:47.096 A:middle
你们也许会对从哪个工具

00:12:47.096 --> 00:12:48.406 A:middle
先开始学习

00:12:48.406 --> 00:12:49.676 A:middle
而感到不安

00:12:51.236 --> 00:12:53.936 A:middle
那么我对你们的建议是

00:12:53.936 --> 00:12:55.596 A:middle
如果只学习其中的一个工具

00:12:55.596 --> 00:12:56.976 A:middle
那么你们应该学习

00:12:56.976 --> 00:12:57.516 A:middle
Time Profiler

00:12:58.296 --> 00:13:00.426 A:middle
在我的性能工作中

