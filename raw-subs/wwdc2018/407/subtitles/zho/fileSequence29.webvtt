WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:59.306 --> 00:29:01.066 A:middle
现在 这是一条双向道

00:29:01.336 --> 00:29:02.776 A:middle
因为更小的视图通常会

00:29:02.776 --> 00:29:04.086 A:middle
让你有更多精密的捕捉

00:29:04.086 --> 00:29:06.156 A:middle
它们也可以提高你的性能

00:29:07.266 --> 00:29:08.896 A:middle
但是一般来说 你可以微调

00:29:08.896 --> 00:29:10.446 A:middle
你拥有的视图的数量

00:29:10.446 --> 00:29:11.606 A:middle
以对性能产生

00:29:11.606 --> 00:29:12.666 A:middle
显著的影响

00:29:12.786 --> 00:29:14.596 A:middle
但视图更少的话

00:29:14.596 --> 00:29:16.556 A:middle
也并不都是最好的

00:29:16.556 --> 00:29:17.606 A:middle
否则我们所有的 App

00:29:17.686 --> 00:29:18.866 A:middle
都会只有一个包括所有内容的

00:29:18.866 --> 00:29:19.116 A:middle
巨大视图了

00:29:21.266 --> 00:29:22.396 A:middle
另一个经常

00:29:22.396 --> 00:29:24.806 A:middle
用到的方法就是直接观察

00:29:25.356 --> 00:29:26.916 A:middle
我们的源代码中通常

00:29:26.916 --> 00:29:30.136 A:middle
有两个松散耦合的方面

00:29:30.286 --> 00:29:31.466 A:middle
也许它们彼此知道对方

00:29:31.466 --> 00:29:33.296 A:middle
而它们是通过一些

00:29:33.296 --> 00:29:34.996 A:middle
间接的机制

00:29:34.996 --> 00:29:36.016 A:middle
进行交流的

00:29:36.456 --> 00:29:37.796 A:middle
也许它们用

00:29:37.796 --> 00:29:39.916 A:middle
NS Notification Center

00:29:39.966 --> 00:29:41.316 A:middle
一些基于代码块的回调

00:29:41.516 --> 00:29:43.606 A:middle
授权或者关键值观察

00:29:45.006 --> 00:29:46.156 A:middle
我常常见到

00:29:46.216 --> 00:29:47.326 A:middle
我们会有一些模型代码

00:29:47.326 --> 00:29:49.076 A:middle
它们在一个循环中

00:29:49.076 --> 00:29:50.946 A:middle
被不断地改变

00:29:50.946 --> 00:29:51.856 A:middle
而每次它走向循环

00:29:52.206 --> 00:29:55.136 A:middle
就会引起许多 KVO 通告机制

00:29:55.386 --> 00:29:56.286 A:middle
当然 你其实并不能

00:29:56.286 --> 00:29:57.876 A:middle
在模块代码中看到它

00:29:57.956 --> 00:29:59.236 A:middle
但是在一些其他的控件里

00:29:59.526 --> 00:30:00.946 A:middle
它会十分活跃地作出回应

