WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.676 --> 00:31:00.096 A:middle
如果你将词典

00:31:00.096 --> 00:31:01.366 A:middle
作为对象使用

00:31:01.366 --> 00:31:02.636 A:middle
那你或许已经看到这点

00:31:02.926 --> 00:31:04.216 A:middle
如果你有一堆为秘钥准备的

00:31:04.216 --> 00:31:06.166 A:middle
字符串常数

00:31:06.166 --> 00:31:07.466 A:middle
那么你就可以大幅度提高

00:31:07.466 --> 00:31:09.186 A:middle
代码的清晰性

00:31:09.186 --> 00:31:11.396 A:middle
提高代码完成和重构

00:31:11.396 --> 00:31:12.396 A:middle
以及源代码验证

00:31:12.396 --> 00:31:14.966 A:middle
通过使用特定的形式

00:31:15.076 --> 00:31:16.136 A:middle
用它们的 strucks 和 swift

00:31:16.136 --> 00:31:18.066 A:middle
用它们隐含的初始化器和一致性

00:31:18.066 --> 00:31:19.196 A:middle
来平等哈希值

00:31:19.196 --> 00:31:20.816 A:middle
这再简单不过了

00:31:21.336 --> 00:31:23.646 A:middle
而这能轻而易举地

00:31:23.646 --> 00:31:24.586 A:middle
改进你的源代码

00:31:24.586 --> 00:31:26.206 A:middle
如果你在许多小目标上

00:31:26.206 --> 00:31:27.916 A:middle
完成数百万次的

00:31:27.916 --> 00:31:29.546 A:middle
字符串哈希映射

00:31:29.546 --> 00:31:31.126 A:middle
和字符串 equation 的话

00:31:31.126 --> 00:31:32.546 A:middle
你会惊讶于你花费了

00:31:32.546 --> 00:31:33.316 A:middle
多少时间

00:31:34.516 --> 00:31:35.736 A:middle
那么接下来的时间

00:31:35.736 --> 00:31:37.386 A:middle
我想请 Matthew 上台来

00:31:37.386 --> 00:31:38.966 A:middle
谈谈我们如何将这些方法

00:31:39.056 --> 00:31:40.686 A:middle
应用到“照片”中去

00:31:42.516 --> 00:31:47.866 A:middle
［ 掌声 ］

00:31:48.366 --> 00:31:48.806 A:middle
&gt;&gt; 谢谢 Jim

00:31:49.966 --> 00:31:50.656 A:middle
大家好

00:31:50.826 --> 00:31:52.746 A:middle
我是 Matthew Lucas

00:31:52.806 --> 00:31:56.076 A:middle
一名“照片”团队的工程师

00:31:56.076 --> 00:31:57.536 A:middle
今天我想给你们一些

00:31:57.536 --> 00:31:59.316 A:middle
直接从“照片”中来的

00:31:59.316 --> 00:32:00.296 A:middle
实用的性能的例子

