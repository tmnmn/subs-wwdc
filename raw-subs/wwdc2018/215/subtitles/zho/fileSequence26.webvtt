WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:02.129 --> 00:26:04.932 align:middle line:-1
这是我们的发布上下文函数

00:26:05.232 --> 00:26:07.401 align:middle line:-1
而我们现在要做的是

00:26:07.467 --> 00:26:09.570 align:middle line:-2
实例化一个
CLSContext实例

00:26:10.304 --> 00:26:13.106 align:middle line:-1
传递该上下文的类型

00:26:14.374 --> 00:26:19.379 align:middle line:-2
给它一个唯一的标识符
然后是一个清晰简洁的标题

00:26:20.113 --> 00:26:22.282 align:middle line:-2
确保设置了
displayOrder属性

00:26:22.349 --> 00:26:26.954 align:middle line:-2
因为我们希望加法测验
显示在乘法测验之上

00:26:27.821 --> 00:26:30.591 align:middle line:-2
然后 我们将为乘法测验
做同样的事情

00:26:30.824 --> 00:26:34.127 align:middle line:-2
实例化一个上下文
并确保设置显示顺序

00:26:34.962 --> 00:26:38.899 align:middle line:-1
接着 我们创建一个

00:26:38.966 --> 00:26:40.534 align:middle line:-1
必须要创建的上下文字典

00:26:41.835 --> 00:26:43.971 align:middle line:-1
然后我们要获取我们希望

00:26:44.037 --> 00:26:45.806 align:middle line:-1
将这些添加到其中的父上下文

00:26:46.240 --> 00:26:49.810 align:middle line:-2
由于我们的上下文结构比较简单
我们知道我们的父上下文

00:26:50.043 --> 00:26:52.813 align:middle line:-1
永远是主app上下文

00:26:53.780 --> 00:26:57.951 align:middle line:-2
现在让我们运行一个查询来查看
这些上下文是否已经存在

00:26:58.519 --> 00:27:00.187 align:middle line:-2
所以我们需要创建
一个predicate

