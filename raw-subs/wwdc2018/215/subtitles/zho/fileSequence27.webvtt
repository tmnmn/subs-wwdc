WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.519 --> 00:27:00.187 align:middle line:-2
所以我们需要创建
一个predicate

00:27:00.888 --> 00:27:02.289 align:middle line:-1
寻找所有父节点是

00:27:02.356 --> 00:27:05.025 align:middle line:-1
我们刚刚定义的父节点的上下文

00:27:05.826 --> 00:27:10.264 align:middle line:-2
然后 我们将向CLSDataStore的
共享实例发出该查询

00:27:11.198 --> 00:27:16.703 align:middle line:-2
以找出所有与我们刚定义的
predicate相匹配的上下文

00:27:17.704 --> 00:27:20.174 align:middle line:-1
这将返回一个上下文数组

00:27:21.141 --> 00:27:23.677 align:middle line:-1
我们只要遍历所有

00:27:23.744 --> 00:27:25.579 align:middle line:-1
我们知道其存在的上下文

00:27:26.680 --> 00:27:29.683 align:middle line:-1
然后 对于已经存在的每个上下文

00:27:30.050 --> 00:27:32.486 align:middle line:-1
我们将从需要创建的

00:27:32.553 --> 00:27:33.887 align:middle line:-1
上下文字典中删除它

00:27:35.656 --> 00:27:38.392 align:middle line:-2
接着我们将遍历剩余的
尚不存在的上下文

00:27:38.458 --> 00:27:42.062 align:middle line:-1
并且对于这些上下文中的每一个

00:27:42.696 --> 00:27:46.900 align:middle line:-2
我们将它作为一个子上下文
添加到我们的父上下文中

00:27:48.001 --> 00:27:50.070 align:middle line:-1
然后我们调用save函数保存更改

00:27:51.004 --> 00:27:53.507 align:middle line:-1
现在我们需要做的就是在app启动时

00:27:53.574 --> 00:27:54.808 align:middle line:-1
调用这个函数

00:27:57.945 --> 00:27:59.847 align:middle line:-1
让我们运行此代码

00:27:59.913 --> 00:28:02.149 align:middle line:-2
以测试我们的上下文
是否真的被创建了

