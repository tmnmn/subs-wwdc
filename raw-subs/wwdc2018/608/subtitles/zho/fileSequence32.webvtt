WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.256 --> 00:32:00.456 A:middle
即使在内联函数中

00:32:00.456 --> 00:32:02.386 A:middle
也引入了每行定时信息

00:32:02.386 --> 00:32:03.326 A:middle
和指令类型

00:32:03.966 --> 00:32:05.546 A:middle
我是 Max 我将

00:32:05.546 --> 00:32:07.686 A:middle
帮助你获得最优的着色器

00:32:09.796 --> 00:32:12.500 A:middle
性能 [ 掌声 ]

00:32:13.776 --> 00:32:15.846 A:middle
所以我再次捕捉了同样的

00:32:15.846 --> 00:32:17.946 A:middle
水模拟 但这次

00:32:18.206 --> 00:32:19.636 A:middle
是在我的 iPhone 上

00:32:20.636 --> 00:32:23.736 A:middle
让我们来通过性能

00:32:23.736 --> 00:32:25.046 A:middle
看看帧的变化

00:32:25.566 --> 00:32:28.216 A:middle
现在我们看到按时间排序的帧使用的

00:32:28.216 --> 00:32:30.066 A:middle
一列管线

00:32:30.106 --> 00:32:32.546 A:middle
我们可以很容易看到

00:32:32.866 --> 00:32:34.066 A:middle
噪声管线

00:32:34.116 --> 00:32:35.876 A:middle
正在消耗大量时间

00:32:37.046 --> 00:32:39.716 A:middle
发现了这一点 我们看到

00:32:39.716 --> 00:32:41.226 A:middle
几乎所有时间都被用在

00:32:41.226 --> 00:32:42.176 A:middle
片元着色器上

00:32:42.736 --> 00:32:44.456 A:middle
但是今年我们更进一步

00:32:45.096 --> 00:32:48.896 A:middle
我们能看到在

00:32:48.896 --> 00:32:51.046 A:middle
着色器调用的

00:32:51.046 --> 00:32:53.306 A:middle
里面的每个函数花费的时间

00:32:53.816 --> 00:32:56.766 A:middle
只要点击这儿前往

00:32:56.766 --> 00:32:58.126 A:middle
源代码文件 就能直接

00:32:58.126 --> 00:32:59.256 A:middle
跳转到正确的那一行

00:32:59.506 --> 00:33:01.536 A:middle
这就是我们检查的第一步

