WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:59.426 --> 00:01:02.126 A:middle
and workflows to help you debug

00:01:02.296 --> 00:01:04.105 A:middle
and profile Metal shaders.

00:01:04.626 --> 00:01:07.526 A:middle
Let's talk about Metal first.

00:01:08.836 --> 00:01:10.426 A:middle
Metal is not just about the

00:01:10.426 --> 00:01:12.206 A:middle
framework and the language.

00:01:12.626 --> 00:01:15.556 A:middle
We have Metal kits, Metal

00:01:15.556 --> 00:01:17.956 A:middle
Performance shaders, and we have

00:01:17.956 --> 00:01:19.166 A:middle
great tools to make your

00:01:19.166 --> 00:01:20.946 A:middle
development process efficient

00:01:20.946 --> 00:01:21.376 A:middle
and easy.

00:01:22.426 --> 00:01:24.956 A:middle
With Metal system trace, fully

00:01:24.956 --> 00:01:26.776 A:middle
integrated into instruments, you

00:01:26.776 --> 00:01:29.306 A:middle
get visibility into how your CPU

00:01:29.306 --> 00:01:31.646 A:middle
and GPU work in parallel and the

00:01:31.646 --> 00:01:33.066 A:middle
runtime performance of your app.

00:01:34.496 --> 00:01:36.346 A:middle
It's a great first tool to start

00:01:36.346 --> 00:01:37.696 A:middle
profiling your apps, and seeing

00:01:37.696 --> 00:01:38.436 A:middle
your bottlenecks.

00:01:38.986 --> 00:01:42.196 A:middle
But today, my focus is going to

00:01:42.196 --> 00:01:44.106 A:middle
be on Metal frame debugger.

00:01:46.596 --> 00:01:48.516 A:middle
Metal frame debugger lets you

00:01:48.516 --> 00:01:51.116 A:middle
capture Metal work with a frame

00:01:51.116 --> 00:01:53.096 A:middle
of a game, or computer upload,

00:01:53.636 --> 00:01:55.366 A:middle
and step through your course.

00:01:56.996 --> 00:01:59.556 A:middle
Inspect state and resources.

