WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:58.306 --> 00:27:01.356 A:middle
and start editing, and read out

00:27:01.476 --> 00:27:02.916 A:middle
to quickly iterate all your

00:27:02.916 --> 00:27:03.426 A:middle
results.

00:27:03.916 --> 00:27:07.486 A:middle
Shader Debugger supports iOS,

00:27:07.806 --> 00:27:10.336 A:middle
Mac, OS and tvOS with the recent

00:27:10.336 --> 00:27:10.726 A:middle
hardware.

00:27:12.066 --> 00:27:14.456 A:middle
And it is yours to enjoy with

00:27:14.956 --> 00:27:15.660 A:middle
Xcode 10.

00:27:17.516 --> 00:27:21.546 A:middle
[ Applause ]

00:27:22.046 --> 00:27:23.286 A:middle
&gt;&gt; And now that we've seen how

00:27:23.286 --> 00:27:24.866 A:middle
you can use geometric viewer and

00:27:24.866 --> 00:27:26.726 A:middle
the Shader Debugger to debug

00:27:26.726 --> 00:27:28.896 A:middle
your shader problems, now let's

00:27:28.896 --> 00:27:30.836 A:middle
focus on how we can make your

00:27:30.836 --> 00:27:32.426 A:middle
shaders run faster.

00:27:36.276 --> 00:27:39.796 A:middle
So optimizing your use of GPU is

00:27:39.796 --> 00:27:42.266 A:middle
important, because you want your

00:27:42.406 --> 00:27:44.196 A:middle
apps to run fast, and consume

00:27:44.196 --> 00:27:46.166 A:middle
less battery for a great user

00:27:46.166 --> 00:27:46.866 A:middle
experience.

00:27:47.416 --> 00:27:49.556 A:middle
But before starting to optimize,

00:27:50.016 --> 00:27:52.836 A:middle
it is important to know what to

00:27:53.406 --> 00:27:53.876 A:middle
optimize.

00:27:54.236 --> 00:27:56.366 A:middle
If you are GPU bound, typical

00:27:56.366 --> 00:27:57.576 A:middle
Metal workload has many

00:27:57.576 --> 00:27:58.406 A:middle
different passes.

00:27:59.106 --> 00:28:01.236 A:middle
And knowing which pass to focus

