WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.133 --> 00:10:04.071 align:start position:21% line:-2
UIに影響を与えるすべての状態の
特定と追跡です

00:10:05.372 --> 00:10:08.041 align:start position:36% line:-2
次は その状態が
変わるたびに―

00:10:08.141 --> 00:10:11.678 align:start position:16% line:-2
setNeedsLayoutを呼び出し
レイアウトを無効にします

00:10:12.813 --> 00:10:18.318 align:start position:18% line:-2
最後にlayoutSubviewsで
UIを更新しましょう

00:10:19.186 --> 00:10:20.154 align:start position:43% line:-1
以上です

00:10:20.587 --> 00:10:24.291 align:start position:32% line:-2
このレシピは
簡単さがたまりません

00:10:25.425 --> 00:10:29.463 align:start position:30% line:-2
レイアウト駆動型UIを
全体に適用すると？

00:10:30.564 --> 00:10:33.934 align:start position:29% line:-2
iOSアプリケーションの
３つのコア構成要素は―

00:10:34.034 --> 00:10:37.137 align:start position:27% line:-2
レイアウト アニメーション
ジェスチャです

00:10:37.671 --> 00:10:40.874 align:start position:29% line:-1
この３つ 全部の実装が―

00:10:40.974 --> 00:10:44.845 align:start position:34% line:-2
実に見事に調和して
機能するのです

00:10:45.812 --> 00:10:47.781 align:start position:32% line:-1
まずはレイアウトから

00:10:49.650 --> 00:10:54.688 align:start position:23% line:-2
アプリケーションのコンテンツを
画面に配置するプロセスですが

00:10:55.422 --> 00:11:00.427 align:start position:21% line:-2
他のUI更新もすべて
レイアウトで行うのをお勧めします

