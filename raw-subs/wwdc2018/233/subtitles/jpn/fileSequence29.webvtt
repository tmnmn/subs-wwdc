WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:58.605 --> 00:29:03.177 align:start position:4% line:-2
InstrumentsのTime Profilerが
究極のツールです

00:29:03.844 --> 00:29:09.583 align:start position:23% line:-2
コードの使用CPU時間を計測し
行ごとに知らせてくれます

00:29:10.017 --> 00:29:13.220 align:start position:30% line:-2
実に有効なツールなので
WWDC 2016の―

00:29:13.320 --> 00:29:17.825 align:start position:4% line:-2
Using the Time Profiler in
Instrumentsをご参照ください

00:29:18.759 --> 00:29:23.130 align:start position:25% line:-2
Time Profilerで
ホットスポットを特定したら―

00:29:23.230 --> 00:29:26.099 align:start position:27% line:-2
最適化する
すばらしいヒントがあります

00:29:27.100 --> 00:29:31.672 align:start position:12% line:-2
１つはUICollectionViewと
UITableViewを使ったプリフェッチ

00:29:32.139 --> 00:29:34.308 align:start position:32% line:-2
ユーザが
特定のセルに向かい―

00:29:34.408 --> 00:29:37.678 align:start position:30% line:-2
スクロールしている間に
知らせるAPIです

00:29:38.011 --> 00:29:40.948 align:start position:27% line:-2
そのデータを
先読みする機会を得られます

00:29:41.515 --> 00:29:45.419 align:start position:27% line:-2
これに関しては2016年の
２人のイケメンによる―

00:29:45.519 --> 00:29:47.855 align:start position:36% line:-2
セッションを
ぜひご覧ください

00:29:49.356 --> 00:29:51.492 align:start position:29% line:-1
次にお教えするヒントは―

00:29:51.592 --> 00:29:55.095 align:start position:32% line:-2
メインキューの作業を
できるだけ減らし―

00:29:55.195 --> 00:29:56.964 align:start position:29% line:-1
バックグラウンドキューへ

00:29:57.064 --> 00:30:01.768 align:start position:21% line:-2
メインキューを解放し UI更新と
ユーザ入力の処理をさせます

