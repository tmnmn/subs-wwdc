WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:57.478 --> 00:18:02.249 align:start position:9% line:-2
UIPanGestureRecognizerは
我々の好む連続ジェスチャの１つで

00:18:02.649 --> 00:18:06.987 align:start position:29% line:-2
これを最大限に活用できる
優れた機能が２つあります

00:18:07.921 --> 00:18:13.126 align:start position:18% line:-2
translationInViewは
ジェスチャの移動位置を知らせ―

00:18:14.228 --> 00:18:17.998 align:start position:21% line:-2
velocityInViewは
ジェスチャの移動速度を知らせます

00:18:18.232 --> 00:18:22.069 align:start position:25% line:-2
ジェスチャと
続くアニメーションとの間で―

00:18:22.169 --> 00:18:23.904 align:start position:30% line:-1
速度を引き継げるのです

00:18:25.372 --> 00:18:29.610 align:start position:23% line:-2
こうしたジェスチャ操作の生成の
詳細はWWDC 2014の―

00:18:29.710 --> 00:18:35.082 align:start position:4% line:-2
Building Interruptible and
Responsive Interactionsで

00:18:36.150 --> 00:18:39.486 align:start position:9% line:-2
UIPanGestureRecognizerは
私も大好きで

00:18:39.586 --> 00:18:43.791 align:start position:30% line:-2
カードのドラッグ操作の
生成にも使いました

00:18:44.258 --> 00:18:47.261 align:start position:25% line:-2
ではレイアウト駆動型UIでの
やり方を

00:18:48.996 --> 00:18:52.032 align:start position:27% line:-2
やはりローカル変数が
このジェスチャを適用した―

00:18:52.633 --> 00:18:56.770 align:start position:30% line:-2
各カードのオフセットを
追跡します

00:18:57.271 --> 00:19:00.240 align:start position:29% line:-2
そして やはり
この変数が変わるたびに―

