WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.400 --> 00:20:04.137 align:start position:23% line:-2
以上がレイアウト駆動型UIです
レシピのおさらいを

00:20:04.538 --> 00:20:07.975 align:start position:29% line:-2
UIに影響する
すべての状態の特定と追跡

00:20:08.075 --> 00:20:09.943 align:start position:29% line:-2
Swiftの
プロパティオブザーバで―

00:20:10.043 --> 00:20:13.781 align:start position:16% line:-2
状態が変わるたび
setNeedsLayoutを呼び出す

00:20:14.581 --> 00:20:17.751 align:start position:16% line:-2
最後に
layoutSubviewsの実装で―

00:20:17.851 --> 00:20:23.056 align:start position:29% line:-2
追跡した状態を基盤に
ビューの状態を更新します

00:20:23.190 --> 00:20:24.024 align:start position:43% line:-1
以上です

00:20:24.758 --> 00:20:28.829 align:start position:43% line:-1
(拍手)

00:20:29.029 --> 00:20:32.900 align:start position:27% line:-2
iOS体験とは
レスポンシブであることです

00:20:33.867 --> 00:20:39.740 align:start position:29% line:-2
また 顧客に楽しい経験を
可能な限り早く提供したい

00:20:40.908 --> 00:20:46.113 align:start position:21% line:-2
アイコンをタップして楽しむまでに
ステップが１つ 挟まります

00:20:46.847 --> 00:20:50.150 align:start position:36% line:-2
そのステップとは
起動時間です

00:20:52.519 --> 00:20:55.823 align:start position:32% line:-2
これを最適化するのに
役立つ―

00:20:55.923 --> 00:21:01.094 align:start position:23% line:-2
起動を構成する ５つの
高レベル構成要素をご説明します

