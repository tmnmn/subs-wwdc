WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:57.264 --> 00:15:00.234 align:middle line:-2
在播放动画时
获取视图的当前屏幕位置

00:15:00.300 --> 00:15:03.670 align:middle line:-1
即使是在动画运行中期

00:15:04.238 --> 00:15:05.772 align:middle line:-1
所以这让我们实现了

00:15:05.839 --> 00:15:09.243 align:middle line:-1
这些非常精彩的和可中断的互动动画

00:15:09.810 --> 00:15:13.881 align:middle line:-2
让我们来看看macOS上的
《万智牌》卡牌游戏app中的例子

00:15:15.382 --> 00:15:19.553 align:middle line:-2
这里有一个变量来跟踪
我们卡堆中的牌

00:15:19.853 --> 00:15:23.023 align:middle line:-2
通过使用我们之前讨论过的
Swift属性观察器

00:15:23.390 --> 00:15:26.360 align:middle line:-2
每当其发生变化时 我们可以调用
setNeedsLayout()

00:15:26.426 --> 00:15:28.061 align:middle line:-1
来脏化布局系统

00:15:29.997 --> 00:15:34.168 align:middle line:-2
然后当我们想要在卡堆中放一张牌时
我们所要做的就是

00:15:34.434 --> 00:15:37.838 align:middle line:-2
将该卡添加到此数组中
这将脏化我们的布局

00:15:38.438 --> 00:15:40.874 align:middle line:-1
然后在动画块内

00:15:40.941 --> 00:15:45.379 align:middle line:-2
设置这个beginFromCurrentState选项
并调用layoutIfNeeded

00:15:46.146 --> 00:15:49.316 align:middle line:-2
这将触发对layoutSubviews
中的代码调用

00:15:49.383 --> 00:15:51.318 align:middle line:-1
它会移动我们的视图

00:15:51.385 --> 00:15:54.188 align:middle line:-1
播放适当的动画以及进行状态转换

00:15:54.655 --> 00:15:58.025 align:middle line:-2
我想在这里特别强调的
关于这其中最棒的一点是

00:15:58.091 --> 00:16:01.495 align:middle line:-2
我们没有为这些动画
添加任何特殊情况

