WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:57.724 --> 00:06:01.929 align:middle line:-2
我们在这里将一个局部变量
设为屏幕数组中的最后一个屏幕

00:06:02.429 --> 00:06:04.565 align:middle line:-1
我们知道这是外部屏幕

00:06:04.631 --> 00:06:07.734 align:middle line:-2
因为我们当前在
didConnectNotification回调中

00:06:08.569 --> 00:06:12.773 align:middle line:-2
接下来我们将创建一个新的UIWindow
用来显示在此外部显示器上

00:06:13.240 --> 00:06:16.910 align:middle line:-2
并且我们将其screen属性
设置为该屏幕

00:06:17.177 --> 00:06:20.047 align:middle line:-1
接下来我们要确保配置此窗口

00:06:20.347 --> 00:06:23.283 align:middle line:-2
我们将其归因到一个函数中
但我们在这里所做的是

00:06:23.350 --> 00:06:26.286 align:middle line:-2
创建一个根视图控制器
并将其绑定到窗口上

00:06:26.653 --> 00:06:29.256 align:middle line:-1
这和我们为板载显示器所做的一样

00:06:29.923 --> 00:06:33.493 align:middle line:-1
最后我们要将此窗口标记为非隐藏

00:06:33.560 --> 00:06:35.295 align:middle line:-1
来将其显示在外部屏幕上

00:06:36.196 --> 00:06:37.397 align:middle line:-1
所以这就是连接

00:06:37.764 --> 00:06:40.534 align:middle line:-2
现在我们来看看断开连接
这甚至更简单

00:06:41.335 --> 00:06:46.106 align:middle line:-2
这里我们位于UIScreen.didDisconnect
Notification处理程序中

00:06:46.173 --> 00:06:48.609 align:middle line:-1
我们在这里要做的只是隐藏窗口

00:06:48.942 --> 00:06:52.279 align:middle line:-2
并将其局部引用设为nil
以释放任何资源

00:06:52.346 --> 00:06:53.247 align:middle line:-1
就这么多

00:06:53.313 --> 00:06:56.650 align:middle line:-2
我们已经在app中实现了
屏幕连接和断开连接

00:06:57.384 --> 00:06:58.785 align:middle line:-1
哇 Peter 这真容易

