WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.313 --> 00:13:03.083 align:middle line:-2
覆盖layoutSubviews
并基于feelingCool值

00:13:03.150 --> 00:13:06.620 align:middle line:-2
更新酷家伙视图的
isHidden属性

00:13:07.120 --> 00:13:11.191 align:middle line:-2
就是这样 这就是为你的app添加
布局驱动UI所需要做的全部工作

00:13:11.592 --> 00:13:15.529 align:middle line:-1
这不仅对这个简单的例子非常有效

00:13:15.596 --> 00:13:17.531 align:middle line:-2
它也适用于一些更早
且更复杂的app

00:13:18.298 --> 00:13:22.402 align:middle line:-2
Ben和我昨晚熬夜玩了
这个新的macOS

00:13:22.469 --> 00:13:25.839 align:middle line:-2
《万智牌》卡牌游戏
它席卷了整个Apple园区

00:13:27.307 --> 00:13:30.177 align:middle line:-2
我们写了有趣的卡堆生成器app
来帮助我们赢得

00:13:30.244 --> 00:13:32.045 align:middle line:-1
下周末的比赛 我们真打算这么干

00:13:32.880 --> 00:13:35.215 align:middle line:-1
它允许你拿起并拖动这些卡片

00:13:35.282 --> 00:13:37.384 align:middle line:-1
并且你可以将它们扔进这个卡堆区域

00:13:37.718 --> 00:13:41.955 align:middle line:-2
它非常迅速、有趣和流畅
我们可以同时拿两张卡

00:13:42.422 --> 00:13:46.593 align:middle line:-2
我认为我们可以通过该app
真正向你展示布局驱动UI如何工作

00:13:47.060 --> 00:13:50.664 align:middle line:-2
而且很重要的是
我们可以在下周末击败Ben的同事

00:13:51.431 --> 00:13:54.301 align:middle line:-1
所以让我们来看看iOS app的

00:13:54.368 --> 00:13:55.469 align:middle line:-1
另外两个核心组件

00:13:55.536 --> 00:13:58.138 align:middle line:-2
以及我们如何将布局驱动UI
应用于它们

00:13:58.205 --> 00:14:00.207 align:middle line:-1
先从动画开始

