WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:58.438 --> 00:09:00.307 align:middle line:-1
并且更容易调试

00:09:01.441 --> 00:09:05.445 align:middle line:-2
布局驱动UI有助于我们解决iOS
app中大部分问题的首要原因

00:09:05.512 --> 00:09:09.917 align:middle line:-1
即管理UI复杂性

00:09:10.851 --> 00:09:13.787 align:middle line:-2
我确信你曾遇到过这些问题
我知道我遇到过

00:09:14.454 --> 00:09:16.757 align:middle line:-1
你添加了一些代码和手势回调

00:09:17.191 --> 00:09:20.627 align:middle line:-2
你甚至在通知回调中
添加了更多UI更新代码

00:09:20.694 --> 00:09:24.498 align:middle line:-2
当UI控件被触发并获取值时
甚至更多

00:09:24.965 --> 00:09:29.369 align:middle line:-2
突然间 你的app处于这种
奇怪且难以理解的状态

00:09:30.003 --> 00:09:32.005 align:middle line:-1
你必须沿着这些奇怪的顺序

00:09:32.072 --> 00:09:34.007 align:middle line:-1
才能重现这些不寻常的漏洞

00:09:34.675 --> 00:09:38.912 align:middle line:-2
当你向app添加更多功能时
问题会越来越严重

00:09:40.214 --> 00:09:46.553 align:middle line:-2
如果我们改为遵循一个简单的配方
并将这些UI更新放到布局中

00:09:47.120 --> 00:09:50.624 align:middle line:-2
我们就可以摆脱这些漏洞
并使添加功能更容易

00:09:51.391 --> 00:09:55.662 align:middle line:-2
让我们来看看为你的app
添加布局驱动UI的方法

00:09:57.497 --> 00:09:58.999 align:middle line:-1
你需要做的第一件事是

00:09:59.066 --> 00:10:03.904 align:middle line:-2
你需要识别并跟踪
影响UI的所有状态

