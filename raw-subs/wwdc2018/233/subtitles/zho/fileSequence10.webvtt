WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.066 --> 00:10:03.904 align:middle line:-2
你需要识别并跟踪
影响UI的所有状态

00:10:05.506 --> 00:10:07.908 align:middle line:-1
然后 每当状态发生变化时

00:10:08.242 --> 00:10:11.445 align:middle line:-2
你应该通过调用setNeedsLayout
来脏化布局系统

00:10:12.846 --> 00:10:13.847 align:middle line:-1
最后

00:10:14.515 --> 00:10:18.151 align:middle line:-2
你需要在layoutSubviews中
使用此状态来更新UI

00:10:19.253 --> 00:10:20.153 align:middle line:-1
就是这样

00:10:20.687 --> 00:10:24.024 align:middle line:-1
我喜欢这个配方就是因为它的易用性

00:10:25.492 --> 00:10:29.296 align:middle line:-2
如果我们将布局驱动UI
全面应用于我们的app

00:10:30.531 --> 00:10:33.700 align:middle line:-2
同时考虑iOS app的
三个核心组件

00:10:34.168 --> 00:10:39.273 align:middle line:-2
即布局、动画和手势
你会发现我们对这三者的实现

00:10:39.339 --> 00:10:44.645 align:middle line:-1
能以一种非常棒的方式和谐地工作

00:10:45.879 --> 00:10:47.681 align:middle line:-1
让我们从布局开始

00:10:49.783 --> 00:10:52.052 align:middle line:-1
布局是你在屏幕上定位

00:10:52.119 --> 00:10:54.521 align:middle line:-1
app内容的过程

00:10:55.522 --> 00:11:00.294 align:middle line:-2
但我们也建议你在布局中
执行所有其它UI更新

