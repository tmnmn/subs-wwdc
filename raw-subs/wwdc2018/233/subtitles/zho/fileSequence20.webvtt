WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:00.601 --> 00:20:03.971 align:middle line:-2
这就是布局驱动UI
请记住该配方

00:20:04.638 --> 00:20:07.875 align:middle line:-1
查找并跟踪影响UI的所有状态

00:20:08.175 --> 00:20:10.143 align:middle line:-1
并使用Swift属性观察器

00:20:10.210 --> 00:20:13.647 align:middle line:-2
来在此状态发生变化时
触发setNeedsLayout

00:20:14.681 --> 00:20:17.651 align:middle line:-1
最后 在layoutSubviews的实现中

00:20:17.918 --> 00:20:22.890 align:middle line:-2
确保根据你所跟踪的状态
来更新你的视图状态

00:20:23.290 --> 00:20:24.191 align:middle line:-1
谢谢

00:20:29.062 --> 00:20:32.833 align:middle line:-1
iOS体验的核心就是强响应性

00:20:34.034 --> 00:20:37.671 align:middle line:-1
你希望你的用户可以尽可能快地

00:20:38.071 --> 00:20:39.673 align:middle line:-1
获得愉悦的体验

00:20:40.974 --> 00:20:46.079 align:middle line:-2
在点击你的图标并获得这种
愉悦体验之间还差一步

00:20:46.947 --> 00:20:50.083 align:middle line:-1
而这一步就是你的启动时间

00:20:52.486 --> 00:20:55.956 align:middle line:-2
为了帮助你优化这点
我们将向你展示

00:20:56.023 --> 00:21:00.928 align:middle line:-1
构成启动内部过程的五个高级组件

