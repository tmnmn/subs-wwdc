WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.976 --> 00:08:00.836 A:middle
credentials when a user logs

00:08:00.836 --> 00:08:01.946 A:middle
into your app with a new

00:08:01.946 --> 00:08:02.396 A:middle
account.

00:08:03.556 --> 00:08:05.166 A:middle
This way, users can then use

00:08:05.166 --> 00:08:06.726 A:middle
these credentials in your app

00:08:06.726 --> 00:08:08.426 A:middle
and website on all of their

00:08:08.426 --> 00:08:09.066 A:middle
devices.

00:08:10.206 --> 00:08:11.576 A:middle
Let's talk about how to ensure

00:08:11.576 --> 00:08:13.186 A:middle
users are prompted to save and

00:08:13.186 --> 00:08:15.226 A:middle
update passwords in your app.

00:08:16.136 --> 00:08:17.646 A:middle
Here's how saving works.

00:08:18.386 --> 00:08:19.996 A:middle
First, Autofill infers that

00:08:19.996 --> 00:08:21.346 A:middle
we're in a login scenario.

00:08:22.646 --> 00:08:24.086 A:middle
Then, Autofill checks the

00:08:24.086 --> 00:08:26.106 A:middle
eligibility of your app based on

00:08:26.106 --> 00:08:27.286 A:middle
if there's an association

00:08:27.286 --> 00:08:28.626 A:middle
between your app and the domain

00:08:28.626 --> 00:08:29.086 A:middle
on the Web.

00:08:29.856 --> 00:08:32.046 A:middle
Without this association saving

00:08:32.046 --> 00:08:33.416 A:middle
passwords will not be offered.

00:08:33.866 --> 00:08:37.015 A:middle
Next, it finds the username and

00:08:37.015 --> 00:08:38.566 A:middle
password fields so that it knows

00:08:38.566 --> 00:08:39.856 A:middle
which data to save in the new

00:08:39.856 --> 00:08:40.476 A:middle
credential.

00:08:41.866 --> 00:08:43.246 A:middle
Then, it detects that a sign in

00:08:43.326 --> 00:08:44.166 A:middle
action has occurred.

00:08:45.266 --> 00:08:47.276 A:middle
And finally, Autofill decided

00:08:47.426 --> 00:08:49.246 A:middle
whether to prompt to save or

00:08:49.246 --> 00:08:51.346 A:middle
update the password based on if

00:08:51.536 --> 00:08:52.846 A:middle
this is as brand new credential

00:08:52.846 --> 00:08:54.146 A:middle
that's not yet in the Keychain.

00:08:54.496 --> 00:08:56.126 A:middle
Or if the user is updating an

00:08:56.126 --> 00:08:57.136 A:middle
existing credential.

00:08:57.706 --> 00:09:00.776 A:middle
Now, this may work with no

