WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:58.986 --> 00:31:00.486 A:middle
ASWebAuthenticationSession

00:31:00.486 --> 00:31:01.846 A:middle
提供了一个直接的

00:31:01.846 --> 00:31:03.906 A:middle
Block-based API

00:31:03.906 --> 00:31:05.216 A:middle
以使得采用过程非常简单

00:31:06.246 --> 00:31:08.566 A:middle
让我们看看

00:31:08.796 --> 00:31:10.596 A:middle
现在 让我们看看

00:31:10.656 --> 00:31:11.756 A:middle
使用 ASWebAuthenticationSession 来

00:31:11.756 --> 00:31:13.116 A:middle
执行联合身份验证

00:31:13.116 --> 00:31:14.706 A:middle
有多容易

00:31:16.146 --> 00:31:17.496 A:middle
首先你要

00:31:17.496 --> 00:31:18.546 A:middle
导入全新的

00:31:18.546 --> 00:31:20.046 A:middle
AuthenticationServices 框架

00:31:20.556 --> 00:31:23.536 A:middle
然后 你只需根据

00:31:23.536 --> 00:31:25.646 A:middle
第三方联合验证供应程序的描述

00:31:25.646 --> 00:31:27.896 A:middle
对 oauthURL 进行定义

00:31:29.366 --> 00:31:31.096 A:middle
现在 这样做之后你将

00:31:31.096 --> 00:31:31.926 A:middle
创建一个

00:31:31.926 --> 00:31:33.786 A:middle
ASWebAuthenticationSession 对象

00:31:34.176 --> 00:31:36.126 A:middle
你在传递 oauthURL

00:31:36.126 --> 00:31:37.386 A:middle
然后一个 callback handler

00:31:37.386 --> 00:31:38.386 A:middle
将在身份验证会话的最后

00:31:38.386 --> 00:31:39.396 A:middle
介入进来

00:31:40.126 --> 00:31:42.466 A:middle
现在 很重要的是你要

00:31:42.466 --> 00:31:43.936 A:middle
保持住一个对

00:31:43.936 --> 00:31:45.296 A:middle
身份验证会话的强引用

00:31:45.476 --> 00:31:46.896 A:middle
当这个会话是 InFlight 时

00:31:47.376 --> 00:31:49.056 A:middle
这样做 当你选择

00:31:49.056 --> 00:31:50.636 A:middle
去取消一个正在发生的会话时

00:31:50.636 --> 00:31:53.826 A:middle
你就可以完成

00:31:54.006 --> 00:31:55.366 A:middle
最后 你要调用

00:31:55.366 --> 00:31:56.736 A:middle
Non-blocking 启动方法

00:31:57.486 --> 00:31:59.956 A:middle
这样做后 首先 iOS 将

00:31:59.956 --> 00:32:01.606 A:middle
请求与 Safari 共享

