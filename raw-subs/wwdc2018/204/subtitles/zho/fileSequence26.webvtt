WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:59.736 --> 00:26:01.026 A:middle
在你的服务中良好运作的步骤是

00:26:01.026 --> 00:26:03.896 A:middle
相应地设计你的信息

00:26:04.906 --> 00:26:07.506 A:middle
iOS 和 macOS 使用

00:26:07.506 --> 00:26:09.026 A:middle
数据探测程序来推断

00:26:09.026 --> 00:26:11.506 A:middle
一个进来的信息携带了一个安全码

00:26:12.266 --> 00:26:14.346 A:middle
特别是 我们的探测程序是会

00:26:14.346 --> 00:26:16.256 A:middle
寻找像验证码或者

00:26:16.256 --> 00:26:19.106 A:middle
接近真正代码串的密码

00:26:19.716 --> 00:26:21.266 A:middle
你们可以在我身后的

00:26:21.266 --> 00:26:22.946 A:middle
幻灯片中看到一些

00:26:22.946 --> 00:26:24.316 A:middle
不同语言的消息

00:26:25.616 --> 00:26:27.976 A:middle
现在 验证

00:26:28.146 --> 00:26:29.456 A:middle
你精心制作的信息否能

00:26:29.536 --> 00:26:30.986 A:middle
正确地触发 iOS 以及 macOS

00:26:30.986 --> 00:26:32.706 A:middle
的探试程序是非常容易的

00:26:33.476 --> 00:26:34.906 A:middle
你可以自己独立完成

00:26:35.026 --> 00:26:36.266 A:middle
直接给自己发送信息

00:26:36.916 --> 00:26:38.116 A:middle
然后 当你去到

00:26:38.116 --> 00:26:39.916 A:middle
消息副本你会看到

00:26:39.916 --> 00:26:41.586 A:middle
安全码被加了下划线 然后

00:26:41.586 --> 00:26:42.926 A:middle
轻点它 它向你提供了一个

00:26:42.926 --> 00:26:44.876 A:middle
复制验证码选项

00:26:45.066 --> 00:26:47.946 A:middle
你知道你做对了

00:26:48.146 --> 00:26:49.816 A:middle
安全码自动填充

00:26:49.816 --> 00:26:51.256 A:middle
在所有 iOS 和 macOS 受支持的地区

00:26:51.256 --> 00:26:53.136 A:middle
都可以使用

00:26:53.586 --> 00:26:55.706 A:middle
如果在跟随这些

00:26:55.706 --> 00:26:57.226 A:middle
最佳实践后你发现

00:26:57.226 --> 00:26:58.566 A:middle
你不能使安全码

00:26:58.566 --> 00:26:59.466 A:middle
在你的 App 或者网页上

00:26:59.466 --> 00:27:01.016 A:middle
正确地触发

