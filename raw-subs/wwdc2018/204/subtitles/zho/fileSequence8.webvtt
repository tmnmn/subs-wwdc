WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.976 --> 00:08:00.836 A:middle
新的账户登录时

00:08:00.836 --> 00:08:02.396 A:middle
我么现在可以提供存储凭证的功能

00:08:03.556 --> 00:08:05.166 A:middle
这样 用户可以

00:08:05.166 --> 00:08:06.726 A:middle
在你的 App 和网页中使用这些凭证

00:08:06.726 --> 00:08:09.066 A:middle
也可以在其他所有设备上

00:08:10.206 --> 00:08:11.576 A:middle
让我们来聊聊如何确保

00:08:11.576 --> 00:08:13.186 A:middle
用户获得在你的 App 中存储以及更新

00:08:13.186 --> 00:08:15.226 A:middle
密码的提示

00:08:16.136 --> 00:08:17.646 A:middle
这就是存储运行的原理

00:08:18.386 --> 00:08:19.996 A:middle
首先 自动填充意味着

00:08:19.996 --> 00:08:21.346 A:middle
我们处在登录场景

00:08:22.646 --> 00:08:24.086 A:middle
然后 自动填充

00:08:24.086 --> 00:08:26.106 A:middle
通过检查你的 App 和网页域名之间

00:08:26.106 --> 00:08:27.286 A:middle
是否有关联来确认

00:08:27.286 --> 00:08:29.086 A:middle
你的 App 的合格性

00:08:29.856 --> 00:08:32.046 A:middle
没有这层关联

00:08:32.046 --> 00:08:33.416 A:middle
密码存储服务将无法提供

00:08:33.866 --> 00:08:37.015 A:middle
接着 它将找到用户名和密码字段

00:08:37.015 --> 00:08:38.566 A:middle
然后才可以确定哪些数据是需要

00:08:38.566 --> 00:08:40.476 A:middle
储存在新凭证里

00:08:41.866 --> 00:08:43.246 A:middle
之后 它能探测到登录

00:08:43.326 --> 00:08:44.166 A:middle
行为的发生

00:08:45.266 --> 00:08:47.276 A:middle
最后 自动填充将决定

00:08:47.426 --> 00:08:49.246 A:middle
是否存储或者更新这个密码

00:08:49.246 --> 00:08:51.346 A:middle
依据是判断这是否是一个

00:08:51.536 --> 00:08:52.846 A:middle
尚未存在在钥匙串里的

00:08:52.846 --> 00:08:54.146 A:middle
全新凭证

00:08:54.496 --> 00:08:56.126 A:middle
或者用户是否正在更新

00:08:56.126 --> 00:08:57.136 A:middle
现有的凭证

00:08:57.706 --> 00:09:00.776 A:middle
现在 这项功能在 iOS 12 环境下

