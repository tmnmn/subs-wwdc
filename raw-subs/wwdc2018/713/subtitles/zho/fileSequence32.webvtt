WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:58.151 --> 00:32:00.721 align:middle line:0
但你不必关心分词 特征提取

00:32:00.787 --> 00:32:04.024 align:middle line:0
或其他任何东西
事实上你不必编写一行代码

00:32:04.091 --> 00:32:07.060 align:middle line:0
因为Natural Language
为你做了所有这些事

00:32:07.361 --> 00:32:11.298 align:middle line:-2
你只需专注于你的app和任务
并简单地拖放模型即可

00:32:13.834 --> 00:32:17.304 align:middle line:-2
正如我之前提到的
Natural Language的另一特性是

00:32:17.371 --> 00:32:19.540 align:middle line:-2
它针对Apple硬件
和模型大小做了优化

00:32:20.007 --> 00:32:22.676 align:middle line:-1
我们来看几个例子

00:32:23.810 --> 00:32:26.547 align:middle line:0
Doug谈到了命名实体识别和分块

00:32:27.114 --> 00:32:28.615 align:middle line:0
这里有两个不同的基准

00:32:28.682 --> 00:32:32.920 align:middle line:0
这些分别是我们使用
CRFSuite开源工具包

00:32:32.986 --> 00:32:35.389 align:middle line:0
和Natural Language建立的模型

00:32:35.689 --> 00:32:38.559 align:middle line:0
模型由相同的训练数据训练而成

00:32:38.625 --> 00:32:40.394 align:middle line:0
并在相同的测试数据上进行测试

00:32:40.827 --> 00:32:42.429 align:middle line:0
它们实现了相同的功能

00:32:42.496 --> 00:32:45.132 align:middle line:0
这两个模型所获得的准确度是相同的

00:32:45.732 --> 00:32:49.002 align:middle line:0
但是你看看Natural Language
所产生的模型大小

00:32:49.403 --> 00:32:53.307 align:middle line:0
它的命名实体识别模型
只有大约1.4兆字节

00:32:53.373 --> 00:32:56.143 align:middle line:0
分块只用了1.8兆字节

00:32:56.543 --> 00:33:00.113 align:middle line:0
这为你的app节省了大量的空间
以用来做一些其他事情

