WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.059 --> 00:06:01.261 align:middle line:-2
让我们看看另一种
不同类型的API 我的意思是

00:06:01.328 --> 00:06:05.065 align:middle line:-2
语言识别和分词都很好
但我们也想使用

00:06:05.132 --> 00:06:07.501 align:middle line:-1
自动语音标记 命名实体识别等功能

00:06:08.035 --> 00:06:11.238 align:middle line:-2
我来演示一下
如何在我们的假想app中

00:06:11.305 --> 00:06:12.806 align:middle line:-1
使用命名实体识别API

00:06:14.341 --> 00:06:17.110 align:middle line:-2
这里有一个app
它是一个新闻推荐app

00:06:17.644 --> 00:06:20.514 align:middle line:-2
在你的app中
你的用户一直在阅读

00:06:20.581 --> 00:06:23.383 align:middle line:-2
很多关于皇室婚礼的事情
这是一个非常好奇的用户

00:06:23.450 --> 00:06:25.085 align:middle line:-1
他们想了解有关皇室婚礼的一切

00:06:25.752 --> 00:06:27.955 align:middle line:-2
他们已经在你的app中
浏览了很多页面

00:06:28.488 --> 00:06:31.592 align:middle line:-2
然后他们进入搜索栏
并输入“Harry”

00:06:32.326 --> 00:06:35.662 align:middle line:-1
然而却看到与他们一直在寻找的

00:06:35.729 --> 00:06:37.231 align:middle line:-1
完全不相关的东西

00:06:37.297 --> 00:06:39.199 align:middle line:-1
比如哈利波特等等

00:06:39.566 --> 00:06:44.705 align:middle line:-2
你想看到的是
与皇室婚礼有关的哈里王子

00:06:45.372 --> 00:06:47.674 align:middle line:-1
现在你可以在app中

00:06:47.741 --> 00:06:50.310 align:middle line:-2
通过使用命名实体识别API
来解决这个问题

00:06:51.378 --> 00:06:54.348 align:middle line:-2
正如我所提到的
这里的语法非常相似

00:06:54.414 --> 00:06:57.684 align:middle line:-2
你们中那些习惯使用
NSLinguisticTagger的人

00:06:57.751 --> 00:07:00.487 align:middle line:-2
应该觉得这看起来感觉很熟悉
但是它更容易

