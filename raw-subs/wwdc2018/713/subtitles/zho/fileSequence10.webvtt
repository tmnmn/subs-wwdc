WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:59.333 --> 00:10:00.767 align:middle line:-1
那么 如果是这样的话

00:10:00.934 --> 00:10:04.605 align:middle line:-1
你就有一定可能

00:10:05.572 --> 00:10:07.274 align:middle line:-1
通过设计一个机器学习模型

00:10:07.774 --> 00:10:13.347 align:middle line:-1
给它一些例子以便训练和学习

00:10:13.780 --> 00:10:17.150 align:middle line:-2
来在你的app中自动为你
进行这种分析 并最终训练出一个

00:10:17.684 --> 00:10:19.219 align:middle line:-1
能够进行这类分析的模型

00:10:19.920 --> 00:10:25.559 align:middle line:-2
当前NLP有很多种类的
机器学习模型

00:10:25.626 --> 00:10:27.194 align:middle line:-1
并且有许多不同的方式来训练它

00:10:27.261 --> 00:10:30.030 align:middle line:-2
你们中许多人可能已经
在训练机器学习模型

00:10:30.330 --> 00:10:34.468 align:middle line:-1
但我们这里的任务是寻找一种

00:10:34.535 --> 00:10:37.671 align:middle line:-1
让这种训练变得极其简单

00:10:38.372 --> 00:10:40.340 align:middle line:-1
并能够与Natural Language框架和API

00:10:40.641 --> 00:10:43.210 align:middle line:-1
整合得非常好的方法

00:10:43.510 --> 00:10:48.081 align:middle line:-2
考虑到这一点
我们现在支持两种类型的模型

00:10:48.282 --> 00:10:52.119 align:middle line:-2
我们认为这些模型能够
支持各种各样的功能

00:10:52.486 --> 00:10:54.955 align:middle line:-2
且能与NLTagger中的范式
很好地协同工作

00:10:55.022 --> 00:10:58.492 align:middle line:-1
即将标签app于文本片段

00:10:58.759 --> 00:11:02.429 align:middle line:-1
我们支持的第一个模型是文本分类器

