WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:01.455 --> 00:17:02.589 align:middle line:-1
一旦训练完成

00:17:02.656 --> 00:17:05.291 align:middle line:-2
你就可以用一行代码
将该模型写入磁盘

00:17:07.261 --> 00:17:09.630 align:middle line:-1
训练一个单词标记器的方法与这类似

00:17:09.963 --> 00:17:12.199 align:middle line:-1
只是数据稍微复杂一些

00:17:12.266 --> 00:17:15.068 align:middle line:-1
因为每个示例不是一块单独的文本

00:17:15.301 --> 00:17:17.838 align:middle line:-1
而是一个token序列

00:17:18.704 --> 00:17:21.375 align:middle line:-1
并且标签也是一个

00:17:21.441 --> 00:17:24.611 align:middle line:-2
与token序列具有相同数量标签
的序列 每个标签对应一token

00:17:24.944 --> 00:17:29.883 align:middle line:-2
例如 这是训练
一个单词标记器的数据

00:17:29.950 --> 00:17:35.722 align:middle line:-2
它可以进行命名实体识别每个单词
即每个token 都有一个标签

00:17:36.023 --> 00:17:42.095 align:middle line:-2
若是“NONE”则不是一个名称
若是“ORG”则是一个组织名称

00:17:42.162 --> 00:17:45.532 align:middle line:-1
若是“PROD”则是产品名称

00:17:45.599 --> 00:17:47.901 align:middle line:-1
以及还有许多你想要识别的其他标签

00:17:48.268 --> 00:17:49.937 align:middle line:-1
每个token都有一个标签

00:17:50.737 --> 00:17:55.475 align:middle line:-1
每个样本由一个token序列

00:17:55.542 --> 00:17:57.044 align:middle line:-1
和它所对应的标签组成

00:17:58.579 --> 00:18:02.983 align:middle line:-2
用来训练它的Create ML
几乎是完全一样的

