WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:57.664 --> 00:35:01.835 align:middle line:-2
你必须对模型进行评估才能找出
适合你的app的模型

00:35:02.169 --> 00:35:05.305 align:middle line:-1
因此工作流程中的下一步就是评估

00:35:07.207 --> 00:35:10.477 align:middle line:-1
机器学习的传统评估方法是这样

00:35:10.544 --> 00:35:14.548 align:middle line:-2
当你获得训练数据时
你将数据分成一个训练集

00:35:14.915 --> 00:35:17.317 align:middle line:-1
一个验证集和一个测试集

00:35:17.751 --> 00:35:19.987 align:middle line:-1
你通常会使用验证集调整算法的参数

00:35:20.053 --> 00:35:22.723 align:middle line:-1
然后在测试集上对其进行测试

00:35:23.090 --> 00:35:26.093 align:middle line:-1
我们鼓励你做同样的事情 即app

00:35:26.159 --> 00:35:29.096 align:middle line:-2
这种长期以来一直被使用的
机器学习指导方针

00:35:29.997 --> 00:35:33.867 align:middle line:-2
我们鼓励你做的另一件事是
测试域外数据

00:35:34.134 --> 00:35:35.102 align:middle line:-1
这是什么意思

00:35:35.502 --> 00:35:38.939 align:middle line:-2
当你有一个app想法时
你会想到某种类型的数据

00:35:39.006 --> 00:35:41.608 align:middle line:-1
将被你的机器学习模型摄入

00:35:42.276 --> 00:35:45.612 align:middle line:-2
现在假设你正在构建一个
酒店评论app

00:35:45.679 --> 00:35:50.517 align:middle line:-1
你想将酒店评论分为不同的等级

00:35:51.485 --> 00:35:54.888 align:middle line:-2
这时用户抛出一个
完全在此领域外的数据

00:35:54.955 --> 00:35:57.624 align:middle line:-1
也许这是一条餐厅评论

00:35:57.691 --> 00:36:00.727 align:middle line:-2
或电影评论
你的模型能够强大到应付它吗

