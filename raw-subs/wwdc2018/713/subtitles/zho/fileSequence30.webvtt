WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:58.765 --> 00:30:02.169 align:middle line:-1
现在我想再次转移话题并谈论性能

00:30:03.103 --> 00:30:07.508 align:middle line:-2
正如我之前提到的 Natural Language
可以在所有Apple平台上使用

00:30:08.108 --> 00:30:12.379 align:middle line:-2
它也能为你提供我们称之为
“标准化文本处理”的特性

00:30:13.146 --> 00:30:15.682 align:middle line:-2
所以让我们再花点时间
来理解这其中的含义

00:30:16.383 --> 00:30:19.319 align:middle line:-2
若你看看不使用Create ML
的传统机器学习管道

00:30:19.386 --> 00:30:22.222 align:middle line:-1
你会从哪里开始呢？

00:30:22.289 --> 00:30:24.458 align:middle line:-1
你会从一些训练数据开始

00:30:25.292 --> 00:30:27.694 align:middle line:-2
你会获取训练数据
对其进行分词

00:30:27.761 --> 00:30:29.263 align:middle line:-1
还可能会提取一些特征

00:30:29.630 --> 00:30:32.799 align:middle line:-1
这对中文和日文等语言非常重要

00:30:32.866 --> 00:30:34.434 align:middle line:-1
它们的分词效果对训练结果至关重要

00:30:35.369 --> 00:30:37.704 align:middle line:-2
你会把这些东西丢到
你最喜欢的机器学习工具包中

00:30:38.472 --> 00:30:41.141 align:middle line:-1
然后你会得到一个机器学习模型

00:30:41.975 --> 00:30:43.577 align:middle line:-1
现在 为了在Apple设备上

00:30:43.644 --> 00:30:44.945 align:middle line:-1
使用该机器学习模型

00:30:45.012 --> 00:30:47.147 align:middle line:-2
你必须将其转换为
Core ML模型

00:30:47.981 --> 00:30:50.817 align:middle line:-2
你会怎么做？你会使用
Core ML转换器来做到这点

00:30:51.585 --> 00:30:56.523 align:middle line:-2
这是从数据到模型
并将其部署到Apple设备上的

00:30:56.590 --> 00:30:58.225 align:middle line:-1
整个训练过程

00:30:59.893 --> 00:31:00.727 align:middle line:-1
现在

