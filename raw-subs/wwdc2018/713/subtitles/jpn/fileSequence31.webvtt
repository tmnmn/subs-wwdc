WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:59.827 --> 00:31:02.696 align:start position:36% line:-1
推論の段階では―

00:31:02.796 --> 00:31:06.567 align:start position:32% line:-2
アプリケーションに
モデルを組み込みます

00:31:07.134 --> 00:31:11.004 align:start position:38% line:-2
さらにモデルを
トークン化し―

00:31:11.104 --> 00:31:14.942 align:start position:36% line:-2
訓練と同じように
特徴を抽出します

00:31:16.510 --> 00:31:20.647 align:start position:34% line:-2
訓練と同じ環境で
使うことが大事です

00:31:20.747 --> 00:31:24.651 align:start position:30% line:-2
抽出した特徴を
トークン化する過程は―

00:31:24.751 --> 00:31:27.254 align:start position:27% line:-1
訓練と推論で統一すべきです

00:31:27.821 --> 00:31:31.492 align:start position:14% line:-2
Natural Languageを使えば
問題ありません

00:31:31.725 --> 00:31:36.196 align:start position:30% line:-2
訓練の時には
訓練データを入力します

00:31:37.197 --> 00:31:40.500 align:start position:23% line:-1
Create MLが処理します

00:31:41.068 --> 00:31:43.437 align:start position:11% line:-1
Natural Languageが呼び出され

00:31:43.537 --> 00:31:46.140 align:start position:27% line:-1
特徴を抽出しトークン化する

00:31:46.306 --> 00:31:49.009 align:start position:27% line:-1
機械学習ライブラリが選ばれ

00:31:49.143 --> 00:31:52.212 align:start position:23% line:-1
Core MLモデルを返します

00:31:53.046 --> 00:31:57.217 align:start position:27% line:-2
推論ではアプリケーションに
モデルを組み込みます

00:31:58.151 --> 00:32:01.522 align:start position:30% line:-2
特徴抽出と
トークン化については―

