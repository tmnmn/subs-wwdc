WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:00.316 --> 00:34:01.496 A:middle
So when you have an idea for an

00:34:01.496 --> 00:34:02.836 A:middle
app, you go through a

00:34:02.836 --> 00:34:04.136 A:middle
development cycle, right.

00:34:04.226 --> 00:34:05.676 A:middle
So you can think of machine

00:34:05.676 --> 00:34:07.196 A:middle
learning to be a very similar

00:34:07.246 --> 00:34:08.136 A:middle
sort of a work flow.

00:34:08.235 --> 00:34:10.166 A:middle
Where do you start, you start

00:34:10.166 --> 00:34:12.416 A:middle
with data, and then you have

00:34:12.416 --> 00:34:14.196 A:middle
data, you have to ask a couple

00:34:14.196 --> 00:34:14.876 A:middle
of questions.

00:34:14.876 --> 00:34:16.565 A:middle
You have to validate your

00:34:16.565 --> 00:34:17.186 A:middle
training data.

00:34:17.315 --> 00:34:18.735 A:middle
You have to make sure that there

00:34:18.735 --> 00:34:20.166 A:middle
are no spurious examples in your

00:34:20.166 --> 00:34:21.315 A:middle
data, and it's not tainted.

00:34:22.275 --> 00:34:23.666 A:middle
Once you do that, you can

00:34:23.666 --> 00:34:24.896 A:middle
inspect the number of training

00:34:24.966 --> 00:34:26.315 A:middle
instances per class.

00:34:26.626 --> 00:34:27.735 A:middle
Let's say that your training a

00:34:27.735 --> 00:34:29.206 A:middle
sentiment classification model,

00:34:29.416 --> 00:34:30.646 A:middle
and you have a thousand examples

00:34:30.646 --> 00:34:31.775 A:middle
for positive sentiment, you have

00:34:31.856 --> 00:34:32.926 A:middle
five examples for negative

00:34:32.926 --> 00:34:33.406 A:middle
sentiment.

00:34:33.916 --> 00:34:36.606 A:middle
You can't train a robust model

00:34:36.606 --> 00:34:37.556 A:middle
that can determine or

00:34:37.556 --> 00:34:38.616 A:middle
distinguish between those two

00:34:38.616 --> 00:34:39.196 A:middle
classes.

00:34:39.565 --> 00:34:40.896 A:middle
You have to make sure that the

00:34:40.896 --> 00:34:42.146 A:middle
training samples for each of

00:34:42.146 --> 00:34:43.226 A:middle
those classes are reasonably

00:34:43.226 --> 00:34:43.775 A:middle
balanced.

00:34:44.585 --> 00:34:46.436 A:middle
So once you do that with data,

00:34:46.706 --> 00:34:48.226 A:middle
the next step is training.

00:34:48.536 --> 00:34:50.025 A:middle
As I mentioned before, our

00:34:50.025 --> 00:34:51.446 A:middle
recommendation is that you run

00:34:51.446 --> 00:34:52.396 A:middle
the different options that are

00:34:52.396 --> 00:34:54.525 A:middle
available and figure out what is

00:34:54.525 --> 00:34:56.866 A:middle
good, but how do you define what

00:34:56.866 --> 00:34:57.246 A:middle
is good?

00:34:57.686 --> 00:34:59.566 A:middle
You have to evaluate the model

00:34:59.766 --> 00:35:00.776 A:middle
in order to figure out what

