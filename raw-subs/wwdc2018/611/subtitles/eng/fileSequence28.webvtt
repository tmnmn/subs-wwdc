WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:59.146 --> 00:28:00.826 A:middle
and if you add to that four

00:28:00.826 --> 00:28:02.976 A:middle
times multi-sampling [inaudible]

00:28:03.206 --> 00:28:05.186 A:middle
or bigger scaling rate, this

00:28:05.186 --> 00:28:06.486 A:middle
number will grow even more.

00:28:06.486 --> 00:28:09.786 A:middle
That is why reducing fill rate

00:28:09.786 --> 00:28:11.206 A:middle
is so important.

00:28:12.146 --> 00:28:13.406 A:middle
There are multiple techniques

00:28:13.406 --> 00:28:14.956 A:middle
there and new techniques are

00:28:14.956 --> 00:28:15.826 A:middle
made every day.

00:28:16.316 --> 00:28:19.046 A:middle
So I encourage you to try them

00:28:19.046 --> 00:28:22.106 A:middle
all, but today we will focus

00:28:22.106 --> 00:28:24.506 A:middle
only on a few still as they are

00:28:24.506 --> 00:28:27.746 A:middle
the simplest to implement and

00:28:27.746 --> 00:28:29.836 A:middle
bring nice performance gains.

00:28:30.356 --> 00:28:31.986 A:middle
So we will start with clipping

00:28:31.986 --> 00:28:33.056 A:middle
invisible pixels.

00:28:33.946 --> 00:28:36.186 A:middle
Here, you can see image rendered

00:28:36.186 --> 00:28:37.076 A:middle
for left eye.

00:28:38.526 --> 00:28:40.566 A:middle
But due to the nature of the

00:28:40.566 --> 00:28:44.766 A:middle
lens work, about 20% of those

00:28:44.896 --> 00:28:47.646 A:middle
pixels are lost after compositor

00:28:47.726 --> 00:28:49.506 A:middle
performs its distortion

00:28:49.506 --> 00:28:50.156 A:middle
correction.

00:28:50.786 --> 00:28:52.166 A:middle
So on the right, you can see

00:28:52.216 --> 00:28:53.796 A:middle
image that will be displayed on

00:28:53.796 --> 00:28:55.746 A:middle
a panel in a headset before it

00:28:55.746 --> 00:28:56.706 A:middle
goes through the lens.

00:28:58.746 --> 00:29:00.896 A:middle
So, the simplest way to reduce

