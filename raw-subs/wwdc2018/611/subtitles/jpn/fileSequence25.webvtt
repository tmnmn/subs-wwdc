WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:59.466 --> 00:25:02.603 align:start position:36% line:-2
このような処理の
一例を挙げると

00:25:02.736 --> 00:25:07.541 align:start position:30% line:-2
物理ベースの
正確なシミュレーション

00:25:07.641 --> 00:25:11.745 align:start position:29% line:-2
その他 更新に
時間を要するものなどです

00:25:13.213 --> 00:25:16.717 align:start position:34% line:-2
このような処理は
バックグラウンドで

00:25:16.817 --> 00:25:21.355 align:start position:30% line:-2
フレームとは非同期的に
その都度 発生し

00:25:21.889 --> 00:25:24.858 align:start position:20% line:-1
結果はプライマリGPUに送られます

00:25:25.492 --> 00:25:31.331 align:start position:23% line:-2
特定のフレームと無関係の処理を
グレーで示しました

00:25:32.399 --> 00:25:37.704 align:start position:29% line:-2
もちろん性能特性の異なる
さまざまなGPUがあり

00:25:37.805 --> 00:25:40.641 align:start position:29% line:-1
接続の帯域幅も異なります

00:25:41.442 --> 00:25:45.546 align:start position:32% line:-2
アプリケーションでは
１フレームの中に

00:25:45.646 --> 00:25:48.182 align:start position:32% line:-2
さまざまに関連し合う
処理があります

00:25:48.882 --> 00:25:54.121 align:start position:29% line:-2
この処理をどう配分するか
考える必要があります

00:25:54.855 --> 00:25:57.591 align:start position:30% line:-1
そこで まず重要なのは

00:25:57.691 --> 00:26:00.928 align:start position:32% line:-2
GPUの処理の配分を
考えることです

