WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:30:57.026 --> 00:31:00.306 A:middle
我们会将分辨率降至

00:31:00.306 --> 00:31:01.066 A:middle
四分之一

00:31:03.076 --> 00:31:05.166 A:middle
当我们完成昂贵的

00:31:05.246 --> 00:31:06.976 A:middle
渲染通道之后 我们会

00:31:06.976 --> 00:31:09.606 A:middle
执行廉价的放大通道

00:31:09.606 --> 00:31:11.416 A:middle
让这些区域

00:31:11.646 --> 00:31:13.276 A:middle
拉伸至

00:31:13.276 --> 00:31:15.356 A:middle
需要提交给生成器的分辨率

00:31:16.386 --> 00:31:18.186 A:middle
那么你可能会好奇

00:31:18.226 --> 00:31:20.166 A:middle
这样我们可以获得多少提升

00:31:21.316 --> 00:31:23.576 A:middle
对于 80x80 度

00:31:23.576 --> 00:31:25.546 A:middle
的中央区域 我们将我们的

00:31:25.546 --> 00:31:27.556 A:middle
填充率一下子降到了

00:31:27.556 --> 00:31:30.586 A:middle
每秒 4.91 亿像素

00:31:31.736 --> 00:31:32.936 A:middle
但是你应该记得我们刚刚

00:31:32.996 --> 00:31:34.666 A:middle
提到了裁剪不可见像素

00:31:34.666 --> 00:31:36.866 A:middle
所以让我们

00:31:36.946 --> 00:31:38.036 A:middle
将这两个技术结合起来

00:31:40.016 --> 00:31:42.456 A:middle
通过将像素裁剪

00:31:42.456 --> 00:31:44.016 A:middle
和多分辨率变化结合起来

00:31:44.016 --> 00:31:45.696 A:middle
你甚至可以进一步将填充率

00:31:45.696 --> 00:31:48.796 A:middle
降至每秒 4.56 亿像素

00:31:48.796 --> 00:31:50.996 A:middle
这并不是一个随机数字

00:31:51.696 --> 00:31:54.196 A:middle
事实上这是

00:31:54.196 --> 00:31:57.456 A:middle
Vive 头戴式设备的默认填充率

00:31:57.456 --> 00:31:59.176 A:middle
所以仅仅通过使用这两项优化技术

00:31:59.176 --> 00:32:01.246 A:middle
你的 App 就可以

