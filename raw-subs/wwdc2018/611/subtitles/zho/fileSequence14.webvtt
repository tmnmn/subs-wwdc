WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:59.906 --> 00:14:01.426 A:middle
进行我们在前几张幻灯片中所讲的

00:14:01.516 --> 00:14:02.706 A:middle
最终后期处理

00:14:02.706 --> 00:14:07.316 A:middle
然后再从存储器中

00:14:07.646 --> 00:14:09.466 A:middle
将各帧图像扫描到 头戴式设备的面板中

00:14:09.596 --> 00:14:12.266 A:middle
这一传输需要额外的帧

00:14:12.266 --> 00:14:15.226 A:middle
因为在呈现图像之前

00:14:15.376 --> 00:14:17.986 A:middle
所有像素必须完成更新

00:14:19.296 --> 00:14:23.436 A:middle
一旦所有像素完成更新

00:14:23.566 --> 00:14:25.686 A:middle
头戴式设备的面板中和用户 可以看到

00:14:25.686 --> 00:14:26.106 A:middle
一帧图像

00:14:27.246 --> 00:14:28.346 A:middle
所以你可以看到

00:14:28.346 --> 00:14:29.846 A:middle
从 App 收到停顿的那一刻起

00:14:29.926 --> 00:14:32.036 A:middle
到图像真正投射出来

00:14:32.036 --> 00:14:35.896 A:middle
的那一刻为止 一共历时 25 毫秒

00:14:35.976 --> 00:14:39.556 A:middle
这就是为什么 App 要接收

00:14:39.686 --> 00:14:41.346 A:middle
已经预测到

00:14:41.346 --> 00:14:43.296 A:middle
会在未来发生的停顿

00:14:43.546 --> 00:14:45.116 A:middle
到了发射光子的那一刻

00:14:45.116 --> 00:14:47.806 A:middle
就可以使被渲染的

00:14:47.896 --> 00:14:49.946 A:middle
图像可以和用户的停顿相匹配

00:14:50.066 --> 00:14:54.336 A:middle
而这一连串

00:14:54.416 --> 00:14:56.046 A:middle
与上一帧以及下一帧

00:14:56.046 --> 00:14:58.486 A:middle
重叠的事件创建了我们的

00:14:58.516 --> 00:14:59.436 A:middle
帧基础图

00:14:59.436 --> 00:15:02.096 A:middle
如你所见

