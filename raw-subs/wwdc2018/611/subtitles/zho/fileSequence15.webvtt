WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.436 --> 00:15:02.096 A:middle
如你所见

00:15:02.096 --> 00:15:04.966 A:middle
在单线程 App 中 图形处理器

00:15:04.966 --> 00:15:06.446 A:middle
在大部分时间中都是空闲的

00:15:07.826 --> 00:15:08.816 A:middle
那就让我们来看看

00:15:08.816 --> 00:15:10.346 A:middle
是否可以对此做些什么

00:15:11.776 --> 00:15:13.606 A:middle
我们现在切换到了

00:15:13.606 --> 00:15:15.216 A:middle
多线程 App

00:15:15.716 --> 00:15:17.746 A:middle
它将视觉环境的模拟

00:15:17.776 --> 00:15:20.416 A:middle
和针对图形处理器的编码操作

00:15:20.446 --> 00:15:22.656 A:middle
分离开来

00:15:23.496 --> 00:15:24.996 A:middle
对于这些操作的编码

00:15:24.996 --> 00:15:26.596 A:middle
现在会在独立的

00:15:26.596 --> 00:15:27.356 A:middle
渲染线程中进行

00:15:28.796 --> 00:15:29.766 A:middle
因为我们已将模拟

00:15:29.866 --> 00:15:31.216 A:middle
和编码分离开来

00:15:31.766 --> 00:15:33.596 A:middle
所以对于帧的模拟

00:15:33.696 --> 00:15:36.786 A:middle
可与图形处理器操作

00:15:36.786 --> 00:15:38.636 A:middle
的上一帧编码

00:15:38.636 --> 00:15:39.336 A:middle
同时进行

00:15:40.636 --> 00:15:43.316 A:middle
这意味着编码现在

00:15:43.316 --> 00:15:45.746 A:middle
已经在时间上发生了变化

00:15:45.796 --> 00:15:47.596 A:middle
在我们收到预测的停顿之后

00:15:47.706 --> 00:15:48.656 A:middle
编码会立即开始

00:15:49.216 --> 00:15:50.846 A:middle
这意味着你的 App

00:15:50.846 --> 00:15:52.436 A:middle
现在可以有更多时间

00:15:52.436 --> 00:15:54.736 A:middle
对图形处理器进行编码

00:15:54.736 --> 00:15:56.666 A:middle
并且图形处理器也可以有更多时间

00:15:56.746 --> 00:15:57.406 A:middle
来处理它

00:15:57.406 --> 00:16:00.436 A:middle
这样一来 你的 App 可以拥有更好的

