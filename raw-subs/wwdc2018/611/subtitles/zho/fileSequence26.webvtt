WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:58.166 --> 00:26:00.076 A:middle
这一图形处理器工作负荷的分配

00:26:00.116 --> 00:26:02.106 A:middle
非常重要

00:26:02.106 --> 00:26:04.026 A:middle
因为多图形处理器配置如今

00:26:04.136 --> 00:26:05.956 A:middle
在 Apple 应用平台上十分常见

00:26:07.956 --> 00:26:10.266 A:middle
那么让我们来总结一下

00:26:10.266 --> 00:26:11.326 A:middle
我们在这一节中学到的

00:26:11.416 --> 00:26:11.866 A:middle
所有内容

00:26:12.496 --> 00:26:13.426 A:middle
我们展示了多线程 App

00:26:13.426 --> 00:26:15.986 A:middle
来充分利用

00:26:16.076 --> 00:26:17.396 A:middle
所有的中央处理器代码

00:26:17.466 --> 00:26:20.556 A:middle
并分离了命令缓冲区

00:26:20.786 --> 00:26:22.666 A:middle
确保图形处理器没有处于空闲状态

00:26:23.756 --> 00:26:25.776 A:middle
在这一过程中 在可能的条件下

00:26:26.066 --> 00:26:26.916 A:middle
我们尽量将

00:26:27.046 --> 00:26:28.396 A:middle
非停顿依赖性工作负荷

00:26:28.466 --> 00:26:31.036 A:middle
与停顿依赖性工作负荷划分开来

00:26:31.036 --> 00:26:32.946 A:middle
从而尽快对这一工作进行编码

00:26:32.946 --> 00:26:35.746 A:middle
除此之外

00:26:36.206 --> 00:26:38.086 A:middle
我们还根据更新频率划分工作负荷

00:26:38.086 --> 00:26:41.126 A:middle
所以如果你的 App

00:26:41.126 --> 00:26:42.586 A:middle
会在多图形处理器配置下执行

00:26:42.586 --> 00:26:44.486 A:middle
你可以轻松地

00:26:44.486 --> 00:26:47.576 A:middle
在那些图形处理器中对其进行分配

00:26:48.126 --> 00:26:50.726 A:middle
而且在这一过程中

00:26:51.136 --> 00:26:53.296 A:middle
确保你驱动各个图形处理器时

00:26:53.296 --> 00:26:55.566 A:middle
使用了独立的渲染线程

00:26:55.566 --> 00:26:57.446 A:middle
从而确保它们在执行时

00:26:57.446 --> 00:26:58.206 A:middle
是不同步的

00:26:59.116 --> 00:27:01.766 A:middle
现在 你来到了降低填充率的部分

