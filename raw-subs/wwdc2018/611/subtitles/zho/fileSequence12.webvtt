WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:01.776 --> 00:12:03.266 A:middle
我们刚刚描述了两种新的

00:12:03.266 --> 00:12:04.236 A:middle
Metal 纹理

00:12:04.576 --> 00:12:07.846 A:middle
可共享 Metal 纹理以及

00:12:07.846 --> 00:12:09.746 A:middle
2D 多样本阵列纹理

00:12:09.746 --> 00:12:12.356 A:middle
以及用他们来

00:12:12.406 --> 00:12:14.246 A:middle
进一步优化你的渲染管线

00:12:14.326 --> 00:12:14.856 A:middle
的方式

00:12:16.026 --> 00:12:17.406 A:middle
这两种纹理马上就会

00:12:17.406 --> 00:12:19.326 A:middle
在即将推出的 SteamVR

00:12:19.326 --> 00:12:20.836 A:middle
Runtime 更新中获得支持

00:12:22.016 --> 00:12:23.686 A:middle
那么现在让我们把注意力集中在

00:12:23.686 --> 00:12:25.166 A:middle
那些可以将你 App 的

00:12:25.166 --> 00:12:27.376 A:middle
中央处理器和图形处理器的使用

00:12:27.376 --> 00:12:28.736 A:middle
最大化的技术之上

00:12:29.796 --> 00:12:32.276 A:middle
这一部分我们会分为

00:12:32.366 --> 00:12:34.696 A:middle
两个小节 先进的帧同步技术

00:12:34.696 --> 00:12:36.656 A:middle
以及不断降低的空闲率

00:12:38.386 --> 00:12:40.436 A:middle
我们先来讲讲帧同步技术

00:12:41.276 --> 00:12:43.426 A:middle
在这一小节中

00:12:43.426 --> 00:12:45.446 A:middle
我们将分析 App 的帧同步技术

00:12:45.536 --> 00:12:47.266 A:middle
以及如何为了 VR 优化帧同步技术

00:12:48.306 --> 00:12:49.936 A:middle
那么我们先从简单的

00:12:50.146 --> 00:12:52.096 A:middle
单线程 App 入手

00:12:52.096 --> 00:12:53.646 A:middle
它们在执行所有操作时都会

00:12:53.646 --> 00:12:54.476 A:middle
采取串口监视的方式

00:12:55.406 --> 00:12:57.336 A:middle
这样的 App 会通过调用 WaitGet 停顿

00:12:57.336 --> 00:12:59.816 A:middle
开始处理其中的画面

