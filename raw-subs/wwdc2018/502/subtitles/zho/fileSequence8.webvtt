WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:58.296 --> 00:08:00.056 A:middle
我们建议你使用

00:08:00.296 --> 00:08:01.996 A:middle
总观看时长

00:08:01.996 --> 00:08:04.636 A:middle
并计算卡顿率

00:08:04.636 --> 00:08:09.326 A:middle
以单位观看时间内的卡顿次数为单位 例如卡顿/小时

00:08:09.926 --> 00:08:13.976 A:middle
对用户来说

00:08:13.976 --> 00:08:16.296 A:middle
30 秒的卡顿

00:08:16.296 --> 00:08:17.206 A:middle
比 1 秒的卡顿更糟糕

00:08:17.436 --> 00:08:19.296 A:middle
这就是为什么我们也关心

00:08:19.506 --> 00:08:21.356 A:middle
再缓冲时间或卡顿时长

00:08:22.276 --> 00:08:23.716 A:middle
通过测量

00:08:23.716 --> 00:08:25.026 A:middle
播放卡顿的通知

00:08:25.026 --> 00:08:26.956 A:middle
以及当 PlayerItem.timebase 变为 1 时

00:08:26.956 --> 00:08:28.566 A:middle
之间的时间间隔

00:08:28.566 --> 00:08:31.306 A:middle
你就可以计算出

00:08:31.306 --> 00:08:32.206 A:middle
准确的卡顿时长

00:08:32.936 --> 00:08:34.956 A:middle
此外 通过使用

00:08:34.956 --> 00:08:37.206 A:middle
会话的播放时长

00:08:37.206 --> 00:08:38.746 A:middle
你也可以对总时长进行正常化

00:08:39.025 --> 00:08:40.106 A:middle
那么 你可能想知道

00:08:40.106 --> 00:08:41.356 A:middle
我是如何计算

00:08:41.356 --> 00:08:43.006 A:middle
一个会话的播放时长的

00:08:43.395 --> 00:08:45.636 A:middle
答案是通过访问日志

00:08:45.636 --> 00:08:46.596 A:middle
让我们来看看怎么做

00:08:47.686 --> 00:08:49.866 A:middle
这是一段代码

00:08:50.806 --> 00:08:52.396 A:middle
首先 我们从 PlayerItem 中

00:08:52.396 --> 00:08:54.126 A:middle
获得对访问日志的引用

00:08:55.096 --> 00:08:57.386 A:middle
我们迭代访问日志中的事件

00:08:57.386 --> 00:08:59.316 A:middle
并简单地

00:08:59.316 --> 00:09:02.156 A:middle
计算每个

