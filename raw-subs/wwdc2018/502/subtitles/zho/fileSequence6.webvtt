WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:59.156 --> 00:06:00.936 A:middle
但也许更重要的是

00:06:00.936 --> 00:06:02.646 A:middle
从卡顿中恢复

00:06:02.676 --> 00:06:04.126 A:middle
需要多长时间

00:06:05.126 --> 00:06:09.126 A:middle
然而 在不了解未来的情况下

00:06:09.126 --> 00:06:11.136 A:middle
最好的策略是

00:06:11.136 --> 00:06:12.666 A:middle
以最低的可用比特率交付内容

00:06:13.106 --> 00:06:14.666 A:middle
但那当然不是我们想要的

00:06:14.666 --> 00:06:16.076 A:middle
我们希望提供

00:06:16.076 --> 00:06:18.206 A:middle
最好的音频和视频质量

00:06:18.206 --> 00:06:19.356 A:middle
同时仍不卡顿

00:06:19.686 --> 00:06:21.116 A:middle
所以 在卡顿的风险

00:06:21.116 --> 00:06:23.136 A:middle
以及媒体质量之间

00:06:23.136 --> 00:06:24.526 A:middle
有一个明显的权衡

00:06:24.626 --> 00:06:28.566 A:middle
为此 我们需要另一个

00:06:28.566 --> 00:06:29.776 A:middle
可以衡量整体媒体质量的会话

00:06:30.736 --> 00:06:32.976 A:middle
最后 播放错误

00:06:32.976 --> 00:06:33.806 A:middle
我已经讨论过这点

00:06:34.166 --> 00:06:36.166 A:middle
它们比卡顿更具破坏性

00:06:36.826 --> 00:06:39.806 A:middle
我们如何跟踪

00:06:39.806 --> 00:06:40.276 A:middle
播放错误呢

00:06:41.196 --> 00:06:42.866 A:middle
好的 让我们从启动时间开始讲起

00:06:43.676 --> 00:06:45.526 A:middle
有很多种 API 

00:06:45.526 --> 00:06:48.296 A:middle
你可以用来获取或计算启动时间

00:06:48.666 --> 00:06:50.786 A:middle
首先 不要使用将 AVPlayer.status 更改为

00:06:51.046 --> 00:06:52.836 A:middle
.readyToPlay 这种方法

00:06:52.836 --> 00:06:53.796 A:middle
这并没有告诉你

00:06:53.836 --> 00:06:56.256 A:middle
播放将要开始

00:06:56.446 --> 00:06:58.086 A:middle
然而 如果你正在使用自动播放

00:06:58.086 --> 00:06:59.346 A:middle
那么你可以预先设置

00:06:59.346 --> 00:07:00.726 A:middle
播放器的速率

