WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.276 --> 00:05:01.566 A:middle
AVPlayer 没有选择

00:05:01.566 --> 00:05:03.006 A:middle
它需要停止播放

00:05:03.006 --> 00:05:04.926 A:middle
我们将这种事件称为卡顿

00:05:05.816 --> 00:05:07.246 A:middle
播放器将保持这种状态

00:05:07.246 --> 00:05:09.196 A:middle
不仅直到数据

00:05:09.196 --> 00:05:10.776 A:middle
再次开始流动

00:05:10.776 --> 00:05:11.996 A:middle
而且直到有足够的缓冲区

00:05:11.996 --> 00:05:13.796 A:middle
为 PlayItem 触发

00:05:13.796 --> 00:05:15.346 A:middle
另一个积极的

00:05:15.416 --> 00:05:18.596 A:middle
播放性能预测之后

00:05:18.596 --> 00:05:19.576 A:middle
播放将正常继续

00:05:20.666 --> 00:05:22.166 A:middle
现在让我们讨论一下

00:05:22.456 --> 00:05:24.176 A:middle
如何量化这种会话中的

00:05:24.176 --> 00:05:25.116 A:middle
用户体验

00:05:26.216 --> 00:05:27.926 A:middle
我们通过定义一组

00:05:27.926 --> 00:05:29.526 A:middle
关键性能指标 也就是 KPI

00:05:29.526 --> 00:05:30.396 A:middle
来实现这一点

00:05:31.056 --> 00:05:32.596 A:middle
我们选择了其中 5 个

00:05:32.596 --> 00:05:34.166 A:middle
我们认为是 HLS 中

00:05:34.196 --> 00:05:35.556 A:middle
最具代表性的 KPI

00:05:36.946 --> 00:05:38.776 A:middle
你们可能会问

00:05:38.776 --> 00:05:40.436 A:middle
我的用户需要花多少时间

00:05:40.836 --> 00:05:42.996 A:middle
等待播放

00:05:42.996 --> 00:05:47.166 A:middle
1 秒吗 还是 5 秒或30 秒

00:05:47.486 --> 00:05:49.036 A:middle
这是用户体验的

00:05:49.036 --> 00:05:50.486 A:middle
一个重要方面

00:05:51.336 --> 00:05:53.906 A:middle
此外 播放卡顿

00:05:53.906 --> 00:05:55.616 A:middle
就像我们刚才看到的那样

00:05:55.616 --> 00:05:56.966 A:middle
也会对用户造成干扰

00:05:57.076 --> 00:05:59.156 A:middle
我们关心这两者发生的频率

00:05:59.156 --> 00:06:00.936 A:middle
但也许更重要的是

