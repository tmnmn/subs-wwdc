WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.806 --> 00:21:01.456 A:middle
AVPlayer 也是如此

00:21:02.006 --> 00:21:03.946 A:middle
一旦用户点按播放键

00:21:05.106 --> 00:21:07.336 A:middle
在为 AVPlayerItem

00:21:07.336 --> 00:21:11.406 A:middle
开始下载之前设置速率

00:21:12.086 --> 00:21:13.496 A:middle
因此 只要 PlayerItem

00:21:13.496 --> 00:21:16.586 A:middle
有足够的内容播放

00:21:16.586 --> 00:21:18.176 A:middle
播放就会自动开始

00:21:19.016 --> 00:21:22.386 A:middle
总而言之

00:21:22.646 --> 00:21:23.366 A:middle
即在缓冲之前设置 AVPlayer

00:21:24.486 --> 00:21:27.476 A:middle
在将 PlayerItem 设置到播放器之前

00:21:28.366 --> 00:21:31.646 A:middle
设置 AVPlayer速率

00:21:31.696 --> 00:21:36.096 A:middle
很多 App 都提供了一个特性

00:21:36.096 --> 00:21:38.626 A:middle
即允许用户

00:21:39.176 --> 00:21:41.696 A:middle
选择多个视频

00:21:41.746 --> 00:21:43.936 A:middle
然后一个接一个地播放

00:21:43.936 --> 00:21:45.576 A:middle
比如狂热地观看电视节目

00:21:46.756 --> 00:21:48.636 A:middle
我们已经看到了

00:21:48.636 --> 00:21:50.986 A:middle
例如每个视频分配一个播放器和一个 PlayerItem

00:21:50.986 --> 00:21:52.266 A:middle
的这种实现

00:21:52.846 --> 00:21:54.616 A:middle
每个新视频都

00:21:54.746 --> 00:21:57.036 A:middle
需要一个启动缓冲时间

00:21:57.706 --> 00:21:59.686 A:middle
你可以使用 AVQueuePlayer

