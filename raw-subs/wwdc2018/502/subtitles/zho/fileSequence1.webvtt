WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:58.046 --> 00:01:01.526 A:middle
但是这时发生了这样的事

00:01:02.916 --> 00:01:05.336 A:middle
面对这种神秘且永无止境的动画

00:01:05.336 --> 00:01:07.376 A:middle
你们会问自己

00:01:07.376 --> 00:01:09.096 A:middle
还有什么比这更糟糕的呢

00:01:10.506 --> 00:01:12.296 A:middle
让我们面对它 你们知道吗

00:01:12.296 --> 00:01:13.136 A:middle
它其实是一个播放错误

00:01:13.706 --> 00:01:17.846 A:middle
但是客户真正期望

00:01:17.906 --> 00:01:20.306 A:middle
HLS 会提供什么样的体验呢

00:01:21.016 --> 00:01:22.126 A:middle
他们期待清晰的图像

00:01:22.256 --> 00:01:24.176 A:middle
高保真的音质

00:01:24.176 --> 00:01:26.506 A:middle
以及轻点播放键时

00:01:26.506 --> 00:01:28.686 A:middle
即时的媒体反应

00:01:29.466 --> 00:01:31.096 A:middle
然而 互联网上流媒体 App

00:01:31.096 --> 00:01:32.836 A:middle
的性能表现总是受网络的影响

00:01:32.836 --> 00:01:35.616 A:middle
那么我们该如何调和呢

00:01:36.696 --> 00:01:38.656 A:middle
HLS 的设计

00:01:38.656 --> 00:01:40.176 A:middle
就是为了解决这个问题

00:01:40.176 --> 00:01:42.246 A:middle
即在不可预知的

00:01:42.516 --> 00:01:43.786 A:middle
网络环境中

00:01:43.786 --> 00:01:46.166 A:middle
提供最好的

00:01:46.166 --> 00:01:47.156 A:middle
不间断的流媒体体验

00:01:47.156 --> 00:01:48.406 A:middle
所以我们为什么今天在这里

00:01:48.666 --> 00:01:49.576 A:middle
还有很多理由

00:01:50.006 --> 00:01:52.696 A:middle
如今 HLS 已经发展成一个

00:01:52.696 --> 00:01:54.336 A:middle
更动态的生态系统

00:01:54.546 --> 00:01:56.566 A:middle
它支持新的功能

00:01:56.566 --> 00:01:58.376 A:middle
如 I-frame 播放

00:01:58.376 --> 00:02:00.896 A:middle
新媒体格式 当然还有新的编解码器

