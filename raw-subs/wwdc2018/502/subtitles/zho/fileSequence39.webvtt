WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:58.696 --> 00:39:02.836 A:middle
并且 I-frame 不需要

00:39:02.836 --> 00:39:03.826 A:middle
以固定间隔排列

00:39:05.676 --> 00:39:07.366 A:middle
I-frame 播放列表

00:39:07.366 --> 00:39:09.036 A:middle
是一个只指向 I-frame 内容的

00:39:09.036 --> 00:39:10.806 A:middle
播放列表

00:39:10.806 --> 00:39:12.926 A:middle
也就是说 它只下载 I-frame 数据

00:39:13.236 --> 00:39:14.786 A:middle
当我们讨论

00:39:14.786 --> 00:39:16.016 A:middle
一个 I-frame 的时长时

00:39:16.016 --> 00:39:17.536 A:middle
我们指的是从这个 I-frame

00:39:17.536 --> 00:39:19.626 A:middle
到下一个 I-frame 的时间

00:39:20.456 --> 00:39:21.596 A:middle
我已经将这个特殊的 I-frame 组

00:39:21.596 --> 00:39:23.956 A:middle
从正常的内容中

00:39:23.956 --> 00:39:24.976 A:middle
提取出来了

00:39:24.976 --> 00:39:26.986 A:middle
但是你也可以制作一个

00:39:26.986 --> 00:39:28.156 A:middle
所谓高密度的

00:39:28.156 --> 00:39:29.066 A:middle
I-frame 播放列表

00:39:29.996 --> 00:39:31.376 A:middle
你不能仅仅从

00:39:31.376 --> 00:39:32.886 A:middle
正常内容中将它提取出来

00:39:32.886 --> 00:39:33.696 A:middle
相反 你需要刻意地

00:39:33.946 --> 00:39:35.696 A:middle
用间隔更加均匀的

00:39:35.696 --> 00:39:36.846 A:middle
I-frame 来制作

00:39:37.516 --> 00:39:38.756 A:middle
这样会更有效

00:39:38.756 --> 00:39:40.716 A:middle
它允许我们在快进的时候

00:39:40.716 --> 00:39:42.736 A:middle
为你提供一个更加平滑的体验

00:39:44.376 --> 00:39:45.576 A:middle
现在 我给你们看一个

00:39:45.576 --> 00:39:47.866 A:middle
没有添加 I-frame 的主播放列表

00:39:49.236 --> 00:39:51.956 A:middle
请注意 I-frame 播放列表

00:39:51.956 --> 00:39:53.816 A:middle
与普通播放列表的标签

00:39:53.816 --> 00:39:56.336 A:middle
几乎完全相同

00:39:56.946 --> 00:39:58.656 A:middle
唯一的区别是

00:39:58.656 --> 00:39:59.906 A:middle
I-frame 播放列表不支持

00:39:59.906 --> 00:40:01.786 A:middle
帧速率这个属性

