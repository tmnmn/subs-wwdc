WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:59.296 --> 00:19:00.886 A:middle
那么我们将这些操作

00:19:00.886 --> 00:19:01.866 A:middle
移到哪里呢

00:19:03.916 --> 00:19:06.156 A:middle
当你的用户正在查看

00:19:06.156 --> 00:19:09.286 A:middle
视频目录或视频信息时

00:19:09.776 --> 00:19:11.336 A:middle
在用户决定播放之前

00:19:12.356 --> 00:19:15.026 A:middle
就可以提前

00:19:15.026 --> 00:19:17.696 A:middle
创建并检查 AV 资源了

00:19:17.916 --> 00:19:19.926 A:middle
去年我们引入了

00:19:19.926 --> 00:19:21.446 A:middle
AVContentKeySession 的 API

00:19:22.346 --> 00:19:25.646 A:middle
这个新的 API 将媒体负载

00:19:25.646 --> 00:19:27.056 A:middle
与密钥获取分离开来

00:19:27.596 --> 00:19:29.836 A:middle
它为 App 提供了

00:19:29.836 --> 00:19:31.326 A:middle
对密钥管理的全面控制

00:19:31.926 --> 00:19:35.336 A:middle
它提供了优化密钥获取的方法

00:19:35.336 --> 00:19:39.316 A:middle
例如将多个密钥请求打包回

00:19:39.816 --> 00:19:40.686 A:middle
密钥服务器

00:19:41.566 --> 00:19:43.346 A:middle
如果你碰巧采用

00:19:43.346 --> 00:19:45.906 A:middle
AVContentKeySession

00:19:45.906 --> 00:19:47.686 A:middle
并花费几个小时的工程时间

00:19:48.566 --> 00:19:50.886 A:middle
你的用户将会注意到

00:19:50.886 --> 00:19:52.356 A:middle
启动时间变得更快

00:19:53.476 --> 00:19:56.136 A:middle
现在我们已经将创建 AV 资源

00:19:56.186 --> 00:19:58.436 A:middle
和密钥获取的工作

00:19:58.436 --> 00:19:59.316 A:middle
从启动时间中移出

00:19:59.896 --> 00:20:03.256 A:middle
那么剩下的主要是

