WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.416 --> 00:34:01.176 A:middle
Organizer, which is a new tool

00:34:01.176 --> 00:34:02.536 A:middle
for viewing Energy Logs.

00:34:03.026 --> 00:34:06.116 A:middle
With these tools, for the first

00:34:06.116 --> 00:34:07.916 A:middle
time ever, you'll have the data

00:34:07.916 --> 00:34:11.835 A:middle
that you need to find and to fix

00:34:12.065 --> 00:34:12.896 A:middle
energy issues.

00:34:13.516 --> 00:34:14.266 A:middle
So, let's get started.

00:34:15.896 --> 00:34:18.096 A:middle
Xcode Energy Logs are a new way

00:34:18.096 --> 00:34:19.806 A:middle
of reporting issues from device.

00:34:20.456 --> 00:34:23.896 A:middle
We start with high CPU energy

00:34:23.896 --> 00:34:25.295 A:middle
events, which is when your app

00:34:25.295 --> 00:34:26.966 A:middle
is using lots of CPU.

00:34:28.036 --> 00:34:29.775 A:middle
Each Energy Log will have a

00:34:29.775 --> 00:34:31.616 A:middle
weighted call graph, which will

00:34:31.616 --> 00:34:33.076 A:middle
point out the energy hotspots

00:34:33.076 --> 00:34:33.755 A:middle
within your code.

00:34:35.106 --> 00:34:36.196 A:middle
These logs will be made

00:34:36.196 --> 00:34:38.156 A:middle
available from TestFlight and

00:34:38.156 --> 00:34:39.876 A:middle
the App Store, so you'll have

00:34:39.876 --> 00:34:41.496 A:middle
real world data, what's actually

00:34:41.496 --> 00:34:43.286 A:middle
happening with your customers.

00:34:44.096 --> 00:34:45.295 A:middle
And with these logs, you'll be

00:34:45.295 --> 00:34:46.606 A:middle
able to begin improving the

00:34:46.606 --> 00:34:47.846 A:middle
battery life experience.

00:34:48.366 --> 00:34:51.866 A:middle
Let's talk about when an Xcode

00:34:51.866 --> 00:34:53.436 A:middle
Energy Log is generated.

00:34:54.735 --> 00:34:56.106 A:middle
Let's say your customer is using

00:34:56.106 --> 00:34:57.886 A:middle
your app, which starts to put a

00:34:57.886 --> 00:34:59.656 A:middle
really heavy load on the CPU.

