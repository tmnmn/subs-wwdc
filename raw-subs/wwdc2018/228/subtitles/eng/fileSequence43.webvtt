WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:58.966 --> 00:43:03.406 A:middle
We see that a lot of time is

00:43:03.406 --> 00:43:05.136 A:middle
being spent in this dispatch

00:43:05.136 --> 00:43:07.066 A:middle
call block calling into this app

00:43:07.266 --> 00:43:09.046 A:middle
delegate computation function.

00:43:09.146 --> 00:43:12.446 A:middle
Now, I can use this button here

00:43:13.456 --> 00:43:16.386 A:middle
to jump us directly into our

00:43:16.386 --> 00:43:21.786 A:middle
code base.

00:43:21.986 --> 00:43:23.686 A:middle
So, we are back directly into

00:43:23.686 --> 00:43:24.106 A:middle
our code.

00:43:25.096 --> 00:43:27.196 A:middle
On the left here is one of the

00:43:27.196 --> 00:43:28.826 A:middle
sample backtraces from our

00:43:28.826 --> 00:43:29.766 A:middle
weighted call graph.

00:43:30.296 --> 00:43:33.716 A:middle
We can see that we're spending a

00:43:33.716 --> 00:43:35.326 A:middle
lot of time in this computation

00:43:35.326 --> 00:43:35.726 A:middle
function.

00:43:36.216 --> 00:43:39.386 A:middle
Now, this is the very function

00:43:40.006 --> 00:43:41.056 A:middle
that Phil was talking about

00:43:41.056 --> 00:43:43.000 A:middle
earlier on his demo.

00:43:49.126 --> 00:43:52.586 A:middle
And we can see that he's already

00:43:52.586 --> 00:43:53.666 A:middle
commented this part of the code

00:43:53.666 --> 00:43:54.486 A:middle
out, so he's already addressed

00:43:54.486 --> 00:43:55.086 A:middle
this energy issue.

00:43:55.086 --> 00:43:55.736 A:middle
So, let's jump back to the

00:43:55.766 --> 00:43:56.000 A:middle
organizer.

