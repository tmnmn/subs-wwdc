WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:59.153 --> 00:37:01.688 align:start position:21% line:-1
iPhoneなのかiPadなのか

00:37:02.022 --> 00:37:04.491 align:start position:27% line:-1
ビルドナンバーも分かります

00:37:05.492 --> 00:37:08.028 align:start position:29% line:-1
最も重要な３つ目の機能は

00:37:08.128 --> 00:37:12.199 align:start position:29% line:-2
問題箇所を示す
重み付きコールグラフです

00:37:13.100 --> 00:37:15.569 align:start position:29% line:-1
このグラフはどう生成され

00:37:16.036 --> 00:37:20.073 align:start position:32% line:-2
問題のデバッグに
どう役立つのでしょう

00:37:23.477 --> 00:37:26.547 align:start position:32% line:-2
main関数から成る
プログラムを考えます

00:37:26.647 --> 00:37:31.084 align:start position:9% line:-2
method1やmethod2 method3
method4も含まれます

00:37:33.620 --> 00:37:38.125 align:start position:29% line:-2
高消費のイベント発生まで
コードが実行されます

00:37:40.594 --> 00:37:44.298 align:start position:34% line:-2
バックトレースは
１秒に１回の間隔で

00:37:44.465 --> 00:37:47.167 align:start position:25% line:-1
継続的にサンプリングされます

00:37:47.734 --> 00:37:49.403 align:start position:34% line:-1
各バックトレースは

00:37:49.670 --> 00:37:54.375 align:start position:30% line:-2
実行時にアクティブな
フレームのサンプルです

00:37:55.809 --> 00:37:57.778 align:start position:29% line:-1
１つ目のバックトレースは

00:37:57.945 --> 00:38:01.548 align:start position:21% line:-2
method1とmethod2が
アクティブだったことを示します

