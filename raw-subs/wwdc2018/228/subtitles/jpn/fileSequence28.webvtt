WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.013 --> 00:28:01.849 align:start position:30% line:-1
次に ゲージを使う際に

00:28:01.949 --> 00:28:06.386 align:start position:25% line:-2
注入したバグが
どう見えるかを確認しましょう

00:28:07.221 --> 00:28:10.157 align:start position:30% line:-1
バグ１はシンプルですが

00:28:10.257 --> 00:28:13.126 align:start position:25% line:-1
CPUスピンの原因になります

00:28:13.293 --> 00:28:16.797 align:start position:32% line:-2
開発の現場でも
日常的に起こり得ます

00:28:17.464 --> 00:28:19.266 align:start position:32% line:-1
このバグを注入します

00:28:20.968 --> 00:28:23.637 align:start position:29% line:-2
Energy Gameの
バックグラウンドに入ると

00:28:24.238 --> 00:28:27.775 align:start position:20% line:-1
ゲージのUIにもそれが表れています

00:28:28.442 --> 00:28:32.146 align:start position:25% line:-2
要求が移動し
ネットワーキングが行われます

00:28:32.613 --> 00:28:35.816 align:start position:25% line:-1
CPUが激しく動いていますね

00:28:36.884 --> 00:28:38.819 align:start position:32% line:-1
これがゲージの力です

00:28:38.919 --> 00:28:43.123 align:start position:30% line:-2
注入したバグを
ゲージで見られるのです

00:28:43.957 --> 00:28:47.361 align:start position:21% line:-2
根本原因を探るため
Time Profilerに入り

00:28:47.461 --> 00:28:50.230 align:start position:25% line:-1
デバッグセッションを移します

00:28:53.901 --> 00:28:57.704 align:start position:34% line:-2
移行後は
自動で実行されます

00:28:59.940 --> 00:29:03.944 align:start position:30% line:-2
重み付きコールグラフが
入力されます

