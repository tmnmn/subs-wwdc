WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:07:57.077 --> 00:08:01.048 align:start position:23% line:-1
効率的に使うことが重要なのです

00:08:02.649 --> 00:08:07.287 align:start position:27% line:-2
この点を踏まえ
実際の例を見ていきましょう

00:08:07.387 --> 00:08:11.592 align:start position:29% line:-2
エネルギー効率の
プロセスを実戦してみます

00:08:12.593 --> 00:08:14.628 align:start position:27% line:-1
フォアグラウンドの場合です

00:08:15.529 --> 00:08:19.600 align:start position:32% line:-2
フォアグラウンドでの
ユーザ体験は

00:08:19.700 --> 00:08:23.070 align:start position:34% line:-2
アプリケーションの
最も重要な要素です

00:08:23.437 --> 00:08:24.638 align:start position:38% line:-1
そう考えると―

00:08:25.572 --> 00:08:29.843 align:start position:32% line:-2
フォアグラウンドでは
提供する価値に着目し

00:08:30.143 --> 00:08:35.148 align:start position:30% line:-2
ユーザ体験に
即時に影響するべきです

00:08:35.816 --> 00:08:39.385 align:start position:34% line:-2
実行するのは
求められた処理だけ

00:08:40.053 --> 00:08:41.587 align:start position:38% line:-1
シンプルですね

00:08:42.054 --> 00:08:46.126 align:start position:32% line:-2
実際に その重要性を
見ていきましょう

00:08:47.294 --> 00:08:49.363 align:start position:23% line:-1
メディアアプリケーションの場合

00:08:49.563 --> 00:08:54.968 align:start position:25% line:-2
目的は 一定のペースで
コンテンツを配信することです

00:08:55.469 --> 00:08:58.639 align:start position:30% line:-2
タイマーベースの手法を
取り入れ

00:08:58.739 --> 00:09:01.742 align:start position:21% line:-1
フィードのリフレッシュも可能です

