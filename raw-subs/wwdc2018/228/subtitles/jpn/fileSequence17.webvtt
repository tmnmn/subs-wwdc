WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:16:58.085 --> 00:17:01.021 align:start position:29% line:-1
エネルギーを消費しますが

00:17:01.255 --> 00:17:03.190 align:start position:29% line:-1
他には何も起きていません

00:17:03.557 --> 00:17:08.328 align:start position:29% line:-2
システムの稼働が続くので
オーバーヘッドも長く続き

00:17:08.428 --> 00:17:10.063 align:start position:36% line:-1
サブシステムは―

00:17:10.164 --> 00:17:13.634 align:start position:27% line:-1
タスクの完了を待っています

00:17:15.335 --> 00:17:16.869 align:start position:39% line:-1
解決するには

00:17:17.204 --> 00:17:21.608 align:start position:27% line:-2
利用可能な時は
完了ハンドラを呼び出します

00:17:22.675 --> 00:17:25.779 align:start position:20% line:-2
代表例は
UIBackgroundTaskで

00:17:25.878 --> 00:17:30.250 align:start position:18% line:-1
このAPIとUIKitを呼び出せます

00:17:30.717 --> 00:17:35.489 align:start position:27% line:-2
実行すべき処理がないことを
システムに伝えれば

00:17:35.589 --> 00:17:37.458 align:start position:34% line:-1
エネルギーを節約し

00:17:37.558 --> 00:17:40.794 align:start position:30% line:-2
ハードウェアを
アイドル状態にできます

00:17:41.428 --> 00:17:44.198 align:start position:30% line:-1
グラフで見てみましょう

00:17:44.898 --> 00:17:48.635 align:start position:27% line:-1
アクティブな時間が短くなり

00:17:48.735 --> 00:17:51.705 align:start position:36% line:-2
オーバーヘッドも
大幅に減りました

00:17:52.973 --> 00:17:57.110 align:start position:25% line:-2
シンプルですが
エネルギーへの影響は絶大です

