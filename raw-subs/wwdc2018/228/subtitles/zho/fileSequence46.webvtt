WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:59.126 --> 00:46:00.661 align:middle line:-1
我们再看一个漏洞

00:46:13.607 --> 00:46:16.076 align:middle line:-1
我看见大量时间花费在

00:46:16.143 --> 00:46:19.112 align:middle line:-1
设置下一个定时器和添加新动画

00:46:19.713 --> 00:46:20.747 align:middle line:-1
其作用是什么？

00:46:21.481 --> 00:46:22.449 align:middle line:-1
我们深入看看

00:46:25.652 --> 00:46:27.221 align:middle line:-1
我直接前往代码

00:46:37.197 --> 00:46:39.533 align:middle line:-1
看到大量时间花费在

00:46:39.600 --> 00:46:41.702 align:middle line:-1
添加新动画的函数里

00:46:42.636 --> 00:46:44.738 align:middle line:-1
好吧 添加新动画开销很大

00:46:46.073 --> 00:46:48.408 align:middle line:-1
但要问我们自己一个问题

00:46:48.475 --> 00:46:50.177 align:middle line:-1
这是预期的工作量吗？

00:46:51.178 --> 00:46:53.847 align:middle line:-1
这种情况下 答案并非如此

00:46:54.414 --> 00:46:57.284 align:middle line:-1
因为预期每隔几秒

00:46:57.518 --> 00:46:58.919 align:middle line:-1
才添加一次动画

00:46:59.586 --> 00:47:00.921 align:middle line:-1
所以耗费

