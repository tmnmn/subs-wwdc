WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:58.045 --> 00:38:01.348 align:middle line:0
显示主函数、方法1
方法2被激活

00:38:04.084 --> 00:38:07.855 align:middle line:0
第二个调用堆栈显示

00:38:07.921 --> 00:38:11.158 align:middle line:0
主函数、方法3
方法4被激活等等

00:38:17.464 --> 00:38:20.467 align:middle line:0
现在试着把调用堆栈结合起来

00:38:20.534 --> 00:38:22.202 align:middle line:0
组成全局图

00:38:23.370 --> 00:38:25.439 align:middle line:0
这里看到的是权重调用图

00:38:26.106 --> 00:38:28.442 align:middle line:0
这个非常有用

00:38:29.443 --> 00:38:31.378 align:middle line:0
主函数在收集到的

00:38:31.445 --> 00:38:33.847 align:middle line:0
六个采样中都能看见

00:38:35.015 --> 00:38:37.451 align:middle line:0
意味着主函数全部时间都在运行

00:38:38.886 --> 00:38:42.189 align:middle line:0
其中方法1有五个采样

00:38:43.290 --> 00:38:45.559 align:middle line:0
而方法3只有一个

00:38:46.994 --> 00:38:50.297 align:middle line:0
方法1中看到方法2和方法3

00:38:50.364 --> 00:38:53.367 align:middle line:0
分别有三个和一个采样

00:38:54.501 --> 00:38:56.870 align:middle line:0
这给我们一个整体图

00:38:56.937 --> 00:38:59.406 align:middle line:0
关于哪儿的代码在执行

00:38:59.473 --> 00:39:01.341 align:middle line:0
花费多少时间

