WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:57.704 --> 00:34:00.107 align:middle line:-2
然后我将介绍Xcode
能耗分析器

00:34:00.174 --> 00:34:02.543 align:middle line:-1
其是查看能耗日志的新工具

00:34:04.344 --> 00:34:06.847 align:middle line:-1
第一次用这些工具

00:34:06.914 --> 00:34:08.614 align:middle line:-1
你将获得找到

00:34:10.050 --> 00:34:12.753 align:middle line:-1
并解决能耗问题的数据

00:34:13.487 --> 00:34:14.388 align:middle line:-1
我们开始

00:34:16.023 --> 00:34:18.091 align:middle line:-1
Xcode能耗日志是

00:34:18.158 --> 00:34:19.793 align:middle line:-1
从设备报告问题的新方法

00:34:19.860 --> 00:34:22.029 align:middle line:-1
（Xcode能耗日志）

00:34:22.094 --> 00:34:24.264 align:middle line:-1
我们从CPU高能耗事件开始

00:34:24.331 --> 00:34:26.967 align:middle line:-1
此时app占用大量CPU

00:34:27.967 --> 00:34:30.871 align:middle line:-1
每个能耗日志有权重调用图

00:34:31.170 --> 00:34:33.806 align:middle line:-1
其将指出代码中集中耗能点

00:34:34.975 --> 00:34:36.710 align:middle line:-1
这些日志将在

00:34:36.777 --> 00:34:38.846 align:middle line:-2
TestFlight
和App Store中可用

00:34:39.112 --> 00:34:40.647 align:middle line:-1
你将获取真实世界

00:34:40.714 --> 00:34:43.250 align:middle line:-1
用户的实际数据

00:34:43.984 --> 00:34:45.052 align:middle line:-1
用这些日志

00:34:45.118 --> 00:34:47.688 align:middle line:-1
你能够开始改进电池待机时间

00:34:50.123 --> 00:34:53.427 align:middle line:-2
让我们讲讲Xcode
能耗日志产生时

00:34:54.661 --> 00:34:56.463 align:middle line:-1
例如用户正在使用app

00:34:56.897 --> 00:34:59.533 align:middle line:-1
其给CPU带来沉重负荷

00:34:59.600 --> 00:35:00.801 align:middle line:-1
（Xcode能耗日志何时产生？）

