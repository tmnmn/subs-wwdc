WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:59.473 --> 00:39:01.341 align:middle line:0
花费多少时间

00:39:03.644 --> 00:39:04.978 align:middle line:-1
（权重调用图）

00:39:05.045 --> 00:39:06.747 align:middle line:-1
能耗日志创建时

00:39:07.481 --> 00:39:09.716 align:middle line:-1
每秒有周期性

00:39:10.250 --> 00:39:11.585 align:middle line:-1
采样调用堆栈

00:39:12.186 --> 00:39:13.554 align:middle line:-1
每个调用堆栈

00:39:15.189 --> 00:39:18.592 align:middle line:-1
包含CPU执行的活动帧

00:39:19.726 --> 00:39:22.196 align:middle line:-1
这些调用堆栈按

00:39:23.197 --> 00:39:25.899 align:middle line:-1
采样数聚合成树形图

00:39:26.733 --> 00:39:29.369 align:middle line:-1
越多采样意味着越多代码执行次数

00:39:30.437 --> 00:39:32.139 align:middle line:-1
能使用权重调用图

00:39:32.206 --> 00:39:35.175 align:middle line:-1
识别app意外的工作负荷

00:39:37.578 --> 00:39:39.513 align:middle line:-1
现在知道了能耗日志是什么

00:39:39.980 --> 00:39:41.114 align:middle line:-1
怎么访问它们呢？

00:39:42.783 --> 00:39:45.285 align:middle line:-1
首先能耗日志在设备上创建

00:39:46.687 --> 00:39:49.189 align:middle line:-1
然后测试人员

00:39:49.256 --> 00:39:50.357 align:middle line:-1
和下载app的客户

00:39:50.924 --> 00:39:53.360 align:middle line:-1
将上传日志到Apple

00:39:54.628 --> 00:39:55.762 align:middle line:-1
可能有成百

00:39:55.829 --> 00:39:57.564 align:middle line:-1
甚至上千的日志

00:39:58.699 --> 00:40:01.401 align:middle line:-1
我们把日志聚合起来

