WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:09:58.799 --> 00:10:01.902 align:middle line:0
用户交互或者某类服务器通知

00:10:02.402 --> 00:10:05.606 align:middle line:0
会提供新内容并显示给用户

00:10:07.574 --> 00:10:08.942 align:middle line:0
这个方案区别不大

00:10:09.009 --> 00:10:10.777 align:middle line:0
但是个低耗能的方案

00:10:11.011 --> 00:10:13.847 align:middle line:0
在耗能方面有巨大的不同

00:10:14.314 --> 00:10:15.482 align:middle line:-1
我们看看为什么

00:10:16.483 --> 00:10:18.952 align:middle line:-1
设想app在前台运行

00:10:19.019 --> 00:10:20.254 align:middle line:-1
现在发生用户交互

00:10:20.587 --> 00:10:23.790 align:middle line:-1
我们会刷新内容并向用户显示

00:10:24.358 --> 00:10:27.895 align:middle line:-1
然后app进入空闲

00:10:28.729 --> 00:10:31.164 align:middle line:-1
此时用户滚动并阅读刚显示的内容

00:10:32.132 --> 00:10:34.468 align:middle line:-1
会注意到这里的开销还是有点高

00:10:34.535 --> 00:10:36.336 align:middle line:-1
但已经降低不少

00:10:36.970 --> 00:10:40.174 align:middle line:-1
窍门在于让不再需要的子系统

00:10:40.240 --> 00:10:42.309 align:middle line:-1
进入睡眠并空闲下来

00:10:45.546 --> 00:10:47.147 align:middle line:-1
另一个降低

00:10:47.447 --> 00:10:49.683 align:middle line:-1
前台能耗的原则是

00:10:50.517 --> 00:10:52.286 align:middle line:-1
将用户界面的复杂度最小化

00:10:53.353 --> 00:10:55.322 align:middle line:-1
我提到过绘图能耗

00:10:55.722 --> 00:10:58.725 align:middle line:-1
高度取决于复杂度

00:10:59.760 --> 00:11:02.296 align:middle line:-1
而我们想让app看起来尽可能好

