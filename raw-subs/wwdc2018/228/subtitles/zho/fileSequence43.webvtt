WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:01.815 --> 00:43:04.017 align:middle line:-1
看到有大量时间

00:43:04.351 --> 00:43:05.586 align:middle line:-1
花费在调用

00:43:06.053 --> 00:43:09.022 align:middle line:-1
这个app代理计算函数里

00:43:10.691 --> 00:43:12.459 align:middle line:-1
现在用这个按钮

00:43:13.327 --> 00:43:15.863 align:middle line:-1
直接前往代码库

00:43:22.002 --> 00:43:24.104 align:middle line:-1
直接回到代码

00:43:24.972 --> 00:43:28.375 align:middle line:-1
左边是权重调用图里的

00:43:28.442 --> 00:43:29.843 align:middle line:-1
调用堆栈采样之一

00:43:32.079 --> 00:43:34.448 align:middle line:-1
能看到我们花费大量时间

00:43:34.515 --> 00:43:35.883 align:middle line:-1
在这个计算函数里

00:43:37.351 --> 00:43:39.386 align:middle line:-1
这就是Phil之前

00:43:39.887 --> 00:43:42.155 align:middle line:-1
在演示里提到的函数

00:43:49.296 --> 00:43:50.197 align:middle line:-1
我们能看到

00:43:51.999 --> 00:43:53.934 align:middle line:-1
他已将代码注释掉

00:43:54.001 --> 00:43:55.903 align:middle line:-1
已经解决了耗能问题

00:43:56.270 --> 00:43:57.771 align:middle line:-1
我们回到分析器

