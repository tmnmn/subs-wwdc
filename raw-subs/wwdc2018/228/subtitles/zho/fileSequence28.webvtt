WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:00.047 --> 00:28:01.915 align:middle line:-1
现在我要注入一个漏洞

00:28:01.982 --> 00:28:03.584 align:middle line:-1
看看使用Xcode能耗表时

00:28:04.284 --> 00:28:06.019 align:middle line:-1
怎样发现漏洞

00:28:07.254 --> 00:28:09.823 align:middle line:-2
漏洞1是个简单漏洞
在屏幕左下角

00:28:10.257 --> 00:28:12.793 align:middle line:-1
其导致CPU在后台运转

00:28:13.260 --> 00:28:16.530 align:middle line:-1
这是很多人在实际开发中会遇到的

00:28:17.464 --> 00:28:18.999 align:middle line:-1
我将注入这个漏洞

00:28:20.968 --> 00:28:23.337 align:middle line:-2
现在已经注入
我将进入后台能耗游戏

00:28:24.304 --> 00:28:26.273 align:middle line:-1
能在能耗表的用户界面中看见

00:28:26.340 --> 00:28:27.541 align:middle line:-1
我们切换到后台

00:28:28.542 --> 00:28:29.643 align:middle line:-1
进行少量网络传输

00:28:29.710 --> 00:28:31.879 align:middle line:-1
因为将网络调用移到后台

00:28:32.613 --> 00:28:35.516 align:middle line:-1
现在也能看见CPU在疯狂运转

00:28:36.950 --> 00:28:38.819 align:middle line:-1
这就是能耗表的作用

00:28:38.886 --> 00:28:40.754 align:middle line:-1
我们知道其中注入了一个漏洞

00:28:40.821 --> 00:28:42.756 align:middle line:-2
但能在能耗表中
直接发现这个漏洞

00:28:44.024 --> 00:28:45.125 align:middle line:-1
现在为了找到根因

00:28:45.192 --> 00:28:47.494 align:middle line:-1
我要前往时间分析器

00:28:47.561 --> 00:28:49.897 align:middle line:-1
如前所述 转换调试会话

00:28:54.034 --> 00:28:57.204 align:middle line:-2
现在转换了调试会话
其会自动运行

00:28:59.940 --> 00:29:03.677 align:middle line:-2
如你所见
权重调用图稍候开始增加

