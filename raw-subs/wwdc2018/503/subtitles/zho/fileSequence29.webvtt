WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:59.556 --> 00:29:01.446 A:middle
那么我们就不需要第二次放大

00:29:01.446 --> 00:29:02.926 A:middle
并且以低分辨率完成混合

00:29:02.926 --> 00:29:04.886 A:middle
这会产生很大的差异

00:29:06.276 --> 00:29:07.716 A:middle
所以让我们深入

00:29:07.716 --> 00:29:08.086 A:middle
这些深度数据

00:29:08.626 --> 00:29:10.606 A:middle
首先我们需要找到

00:29:10.606 --> 00:29:11.856 A:middle
脸部的中心

00:29:12.366 --> 00:29:14.406 A:middle
在 iOS 中 有很多方法

00:29:14.646 --> 00:29:16.386 A:middle
可以获得

00:29:16.386 --> 00:29:17.316 A:middle
脸部元素组

00:29:18.296 --> 00:29:19.246 A:middle
你可以使用 Core Image

00:29:19.246 --> 00:29:20.706 A:middle
的探测器 或者 Vision

00:29:20.706 --> 00:29:22.796 A:middle
Framework 但是在此情况下

00:29:22.976 --> 00:29:25.226 A:middle
因为我们只需要

00:29:25.226 --> 00:29:26.366 A:middle
脸部中间的像素

00:29:26.366 --> 00:29:29.056 A:middle
我们可以使用 AV 元数据对象 类型为脸

00:29:30.426 --> 00:29:32.896 A:middle
但它使我们成为 RGB 图像

00:29:32.896 --> 00:29:34.236 A:middle
编码系统的中心

00:29:34.236 --> 00:29:36.086 A:middle
我们需要将它

00:29:36.086 --> 00:29:38.196 A:middle
映射到可能不是一样分辨率的

00:29:38.196 --> 00:29:39.106 A:middle
深度图中

00:29:41.356 --> 00:29:43.316 A:middle
一旦我们获得了

00:29:43.316 --> 00:29:45.886 A:middle
人脸深度的值

00:29:45.886 --> 00:29:47.566 A:middle
我们就可以使用它加上 25 厘米特征的边距

00:29:47.566 --> 00:29:50.656 A:middle
来确定深度图的阈值

00:29:50.656 --> 00:29:52.306 A:middle
并创造一个二进制

00:29:52.306 --> 00:29:54.076 A:middle
掩码 前景为 1

00:29:54.476 --> 00:29:55.296 A:middle
背景为 0

00:29:56.556 --> 00:29:58.456 A:middle
事实上 我们可以在这里停下来

00:29:58.456 --> 00:30:00.956 A:middle
我们可以使用这个二进制掩码并创建效果

