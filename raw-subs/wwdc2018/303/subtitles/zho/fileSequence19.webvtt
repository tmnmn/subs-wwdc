WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:58.038 --> 00:19:00.307 align:middle line:0
如果你查看一下第一个小组中
beta测试人员的关系

00:19:00.374 --> 00:19:03.610 align:middle line:0
你就会看到一个叫做数据的新部分

00:19:04.611 --> 00:19:08.549 align:middle line:0
包含这个小组中
所有测试人员的类型和ID对

00:19:08.615 --> 00:19:10.217 align:middle line:0
现在如果你可以看到这里的整个响应

00:19:10.284 --> 00:19:14.087 align:middle line:0
你会在每一个beta测试人员
关系内部看到一个这样的数据部分

00:19:14.354 --> 00:19:17.624 align:middle line:0
在这个数组中的每个小组的内部
对吧

00:19:18.192 --> 00:19:19.726 align:middle line:-1
这只是包含类型和ID

00:19:19.793 --> 00:19:22.095 align:middle line:-2
我相信你一定在想
实际的测试人员信息在哪儿

00:19:22.362 --> 00:19:25.232 align:middle line:0
如果我们一直向下
滚动到这个响应的最后

00:19:25.499 --> 00:19:27.568 align:middle line:0
我们还会看到一个叫做包含的新部分

00:19:28.135 --> 00:19:31.705 align:middle line:0
这是一个beta测试人员的数组
附带完整的测试人员信息

00:19:32.072 --> 00:19:36.610 align:middle line:0
再通俗一点说
包含部分拥有完整的源呈现

00:19:36.677 --> 00:19:40.514 align:middle line:0
你通过关系所包含的
每一个源的完整呈现

00:19:41.081 --> 00:19:43.183 align:middle line:0
然后我们按照类型和ID进行匹配

00:19:43.417 --> 00:19:46.186 align:middle line:0
从而了解哪个测试人员
属于哪个小组

00:19:48.021 --> 00:19:49.523 align:middle line:-1
你可能在想我们为何要这么做

00:19:49.590 --> 00:19:52.025 align:middle line:-2
我们有数据部分
其中包括我们的全部小组

00:19:52.092 --> 00:19:54.895 align:middle line:-2
我们还有包含部分
其中包括包含在内的全部测试人员

00:19:55.162 --> 00:19:57.464 align:middle line:-2
这么做是出于很重要的原因
屏幕上有这个测试人员

00:19:57.531 --> 00:20:01.134 align:middle line:-2
John Appleseed
可能属于多个小组 对吧

