WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:59.146 --> 00:33:03.951 align:middle line:-2
第一个是令牌的观众
永远是App Store Connect

00:33:05.419 --> 00:33:11.058 align:middle line:-1
最后 你需要分配或添加算法

00:33:11.124 --> 00:33:12.793 align:middle line:-1
用于签署令牌

00:33:13.126 --> 00:33:16.563 align:middle line:-1
为此我们选择使用ES256

00:33:17.431 --> 00:33:21.301 align:middle line:-2
现在这个算法相对应的是一个
由JWT支持的算法

00:33:21.602 --> 00:33:23.604 align:middle line:-1
这是我们选择让你们使用的一个算法

00:33:23.904 --> 00:33:27.508 align:middle line:-1
但不用担心 你不需要实施这个算法

00:33:28.242 --> 00:33:31.945 align:middle line:-1
很幸运的是 JWT提供多个函数库

00:33:32.012 --> 00:33:34.281 align:middle line:-1
事实上涵盖了任何一种语言

00:33:34.348 --> 00:33:37.885 align:middle line:-2
使得创建和签署这些令牌
变得尽可能简单

00:33:39.319 --> 00:33:44.057 align:middle line:-2
我后面的这个例子是用Ruby写的
正如你所看到的

00:33:44.124 --> 00:33:48.662 align:middle line:-2
我要做的就是传递私人密钥的同时
也传递这些信息

00:33:48.729 --> 00:33:52.533 align:middle line:-2
这个编码方法会返回给我
一个完整的、已签署的令牌

00:33:53.967 --> 00:33:57.504 align:middle line:-2
然后你就可以把那个令牌
添加到我的请求中

00:33:57.571 --> 00:34:01.074 align:middle line:-1
只需要把它放在一个验证标题内即可

