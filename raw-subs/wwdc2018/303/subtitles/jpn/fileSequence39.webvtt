WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:38:59.640 --> 00:39:04.177 align:start position:29% line:-2
レスポンスにあるリンクで
次のプロセスに進みます

00:39:04.278 --> 00:39:10.250 align:start position:25% line:-2
これならAPIの別の部分でも
コードが使えます

00:39:10.350 --> 00:39:13.454 align:start position:30% line:-2
APIが
バージョンアップしても

00:39:13.554 --> 00:39:17.357 align:start position:32% line:-2
変更に対応するための
作業量が軽減されます

00:39:18.425 --> 00:39:20.794 align:start position:27% line:-1
最後にドキュメントの話です

00:39:22.029 --> 00:39:25.866 align:start position:30% line:-2
我々はAPIの一貫性に
注目しています

00:39:25.966 --> 00:39:31.305 align:start position:29% line:-2
リソースが何かできる場合
他と同じ方法を採用します

00:39:31.505 --> 00:39:36.310 align:start position:27% line:-2
リソースが万能ではないのは
もうお分かりですね

00:39:36.410 --> 00:39:39.646 align:start position:34% line:-2
APIは招待なしに
ユーザを作れない

00:39:39.813 --> 00:39:44.084 align:start position:30% line:-2
ドキュメントは
リソースができることや

00:39:44.184 --> 00:39:47.988 align:start position:29% line:-2
使えるオペレーションや
パラメータなどを教えます

00:39:49.256 --> 00:39:53.927 align:start position:12% line:-2
それが一貫した標準REST API
App Store Connect API

00:39:54.027 --> 00:39:55.396 align:start position:39% line:-1
感動ものです

00:39:55.496 --> 00:40:00.200 align:start position:29% line:-2
このAPIは非常に柔軟に
設計されています

