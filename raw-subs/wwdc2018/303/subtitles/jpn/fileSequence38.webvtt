WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:57.644 --> 00:38:00.414 align:start position:27% line:-2
コードもApple側も
パフォーマンスが上がります

00:38:00.514 --> 00:38:04.551 align:start position:32% line:-2
スクリプトに基づいて
トークンを生成し

00:38:04.751 --> 00:38:07.121 align:start position:32% line:-1
リクエストと共に送る

00:38:07.354 --> 00:38:12.492 align:start position:29% line:-2
皆さんは使用期限を
しっかり把握しているから

00:38:12.593 --> 00:38:16.663 align:start position:34% line:-2
プロセスを
完了させられますね

00:38:17.898 --> 00:38:21.935 align:start position:27% line:-2
プロセスが20分を超えたり
継続する場合は

00:38:22.035 --> 00:38:24.938 align:start position:30% line:-1
構成を変えて対応します

00:38:25.239 --> 00:38:28.642 align:start position:29% line:-2
20分のトークンを生成し
必要に応じて使い

00:38:28.976 --> 00:38:33.447 align:start position:27% line:-2
例えば18分ごとに
新たなトークンを発行します

00:38:33.547 --> 00:38:38.952 align:start position:27% line:-2
トークンを最大限に利用でき
期限切れにならずに済みます

00:38:40.721 --> 00:38:43.957 align:start position:30% line:-2
次の話題はレスポンスに
含まれるリンクです

00:38:44.191 --> 00:38:48.062 align:start position:29% line:-2
今日取り上げたのは一種の
セルフドキュメントで

00:38:48.162 --> 00:38:51.198 align:start position:27% line:-2
データから他に使えるものを
見極める方法です

00:38:51.298 --> 00:38:55.869 align:start position:27% line:-2
しかし本来は
自分のコードで使うものです

00:38:56.303 --> 00:38:59.540 align:start position:32% line:-2
複数のステップがある
プロセスでは

00:38:59.640 --> 00:39:04.177 align:start position:29% line:-2
レスポンスにあるリンクで
次のプロセスに進みます

