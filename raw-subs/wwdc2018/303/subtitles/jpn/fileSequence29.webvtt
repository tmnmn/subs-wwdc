WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:54.334 --> 00:29:00.307 align:start position:27% line:-2
利用できるエンドポイントの
さまざまな例を見てきました

00:29:00.741 --> 00:29:04.111 align:start position:27% line:-1
新機能のテストを始めたい時

00:29:04.344 --> 00:29:08.348 align:start position:25% line:-1
GETリクエストを送りますね

00:29:08.849 --> 00:29:12.586 align:start position:27% line:-2
単純にこのエンドポイントを
入力すると

00:29:12.686 --> 00:29:17.424 align:start position:29% line:-2
このようなレスポンスが
返ってくることになります

00:29:18.258 --> 00:29:23.063 align:start position:30% line:-2
ジェフが言ったように
重要なステップである―

00:29:23.163 --> 00:29:26.133 align:start position:30% line:-1
認証情報が抜けています

00:29:27.568 --> 00:29:31.038 align:start position:30% line:-2
このステップは
２つの理由から必要です

00:29:31.472 --> 00:29:36.076 align:start position:29% line:-2
第１にリクエストに
コンテキストを与えるから

00:29:36.176 --> 00:29:40.347 align:start position:27% line:-2
すべてのアプリケーションが
必要なわけじゃない

00:29:40.514 --> 00:29:44.952 align:start position:32% line:-2
重要なのは認証情報が
APIの安全を守り

00:29:45.185 --> 00:29:49.089 align:start position:29% line:-2
データへの不正アクセスを
防ぐこと

00:29:50.791 --> 00:29:54.094 align:start position:32% line:-2
だからリクエストに
認証情報を加えるため

00:29:54.194 --> 00:29:57.431 align:start position:27% line:-1
まずAPIキーを作成します

00:29:57.798 --> 00:30:01.535 align:start position:34% line:-2
そのキーを使って
生成したトークンが

