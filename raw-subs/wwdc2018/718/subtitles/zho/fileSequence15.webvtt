WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.716 --> 00:15:00.946 A:middle
没有目标字符串的数据

00:15:00.946 --> 00:15:02.916 A:middle
便会发现你的 App 开始崩溃

00:15:04.356 --> 00:15:06.216 A:middle
这是向用户提供

00:15:06.216 --> 00:15:07.306 A:middle
透明度的一种方式

00:15:07.306 --> 00:15:08.686 A:middle
当然这不是唯一的方法

00:15:09.546 --> 00:15:10.746 A:middle
这里我并不是说让用户

00:15:10.746 --> 00:15:12.256 A:middle
在点击真实内容之前去

00:15:12.256 --> 00:15:13.156 A:middle
点开一个假提示符

00:15:13.816 --> 00:15:14.596 A:middle
我的意思是 这应该是

00:15:14.596 --> 00:15:16.236 A:middle
通知用户你的 App 中的

00:15:16.236 --> 00:15:18.846 A:middle
数据流这一总体计划的一部分

00:15:19.496 --> 00:15:21.876 A:middle
此处的目标是

00:15:21.876 --> 00:15:24.906 A:middle
解释请求的原因

00:15:24.906 --> 00:15:26.526 A:middle
以便用户可以根据

00:15:26.526 --> 00:15:28.716 A:middle
其优先级做出知情的

00:15:28.716 --> 00:15:29.716 A:middle
有效的决定

00:15:30.226 --> 00:15:32.946 A:middle
我说解释请求的原因

00:15:33.676 --> 00:15:35.546 A:middle
其实并不是这个意思

00:15:36.566 --> 00:15:37.996 A:middle
过去我们已经看到了

00:15:37.996 --> 00:15:38.936 A:middle
类似这样的目标字符串

00:15:38.936 --> 00:15:40.526 A:middle
不过这还是会在

00:15:40.526 --> 00:15:41.996 A:middle
App 审核中被拒绝

00:15:43.246 --> 00:15:44.876 A:middle
我们通过自动验证

00:15:45.156 --> 00:15:47.086 A:middle
和人工审核

00:15:47.086 --> 00:15:48.596 A:middle
强制执行质量目标

00:15:48.596 --> 00:15:49.396 A:middle
字符串的情况越来越多

00:15:50.766 --> 00:15:53.026 A:middle
光有占位符或空白字符串

00:15:53.026 --> 00:15:54.286 A:middle
是不够的

00:15:54.676 --> 00:15:56.316 A:middle
正如说广告不会告诉

00:15:56.316 --> 00:15:57.016 A:middle
用户太多内容

00:15:57.056 --> 00:15:58.796 A:middle
只告诉用户需要位置信息

00:15:58.796 --> 00:15:59.696 A:middle
无法让他们了其中解缘由

